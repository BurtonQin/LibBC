; ModuleID = 'lwm2mserver.0.0.preopt.bc'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.command_desc_t = type { i8*, i8*, i8*, void (i8*, i8*)*, i8* }
%struct.coap_packet_t = type { i8*, i8, i32, i8, i16, [5 x i8], i32, i32, i64, i8*, i8, [8 x i8], i64, i8*, %struct._multi_option_t*, i16, i64, i8*, %struct._multi_option_t*, i32, i8, [8 x i8], i8, [2 x i16], i8, [8 x i8], i32, i8, i16, i32, i32, i8, i16, i32, i32, %struct._multi_option_t*, i8, i16, i8* }
%struct._multi_option_t = type { %struct._multi_option_t*, i8, i8, i8* }
%struct.fd_set = type { [16 x i64] }
%struct.timeval = type { i64, i64 }
%struct.lwm2m_context_t = type { %struct._lwm2m_client_*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, i8*, i16, %struct._lwm2m_transaction_*, i8* }
%struct._lwm2m_client_ = type { %struct._lwm2m_client_*, i16, i8*, i32, i8*, i8*, i8, i32, i64, i8*, %struct._lwm2m_client_object_*, %struct._lwm2m_observation_* }
%struct._lwm2m_client_object_ = type { %struct._lwm2m_client_object_*, i16, %struct._lwm2m_list_t* }
%struct._lwm2m_list_t = type { %struct._lwm2m_list_t*, i16 }
%struct._lwm2m_observation_ = type { %struct._lwm2m_observation_*, i16, %struct._lwm2m_client_*, %struct.lwm2m_uri_t, i32, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, i8* }
%struct.lwm2m_uri_t = type { i8, i16, i16, i16 }
%struct._lwm2m_transaction_ = type { %struct._lwm2m_transaction_*, i16, i8*, i8, i64, i8, i64, i8*, i16, i8*, void (%struct._lwm2m_transaction_*, i8*)*, i8* }
%struct._connection_t = type { %struct._connection_t*, i32, %struct.sockaddr_in6, i64 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.lwm2m_attributes_t = type { i8, i8, i32, i32, double, double, double }
%struct._lwm2m_data_t = type { i32, i16, %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i64, i8* }
%struct._lwm2m_server_ = type { %struct._lwm2m_server_*, i16, i16, i64, i64, i32, i8*, i32, i8*, i8, %struct._lwm2m_block1_data_* }
%struct._lwm2m_block1_data_ = type { i8*, i64, i16 }
%struct.anon.0 = type { i64, %struct._lwm2m_data_t* }
%struct.anon.1 = type { i16, i16 }
%struct.dm_data_t = type { i16, %struct.lwm2m_uri_t, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, i8* }
%struct.cancellation_data_t = type { %struct._lwm2m_observation_*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, i8* }
%struct._record_t = type { [4 x i16], i32, i8*, i64 }
%struct.timezone = type { i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }

@g_quit = internal global i32 0, align 4, !dbg !0
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [30 x i8] c"Usage: lwm2mserver [OPTION]\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Launch a LWM2M server on localhost.\0D\0A\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"Options:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"  -4\09\09Use IPv4 connection. Default: IPv6 connection\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"  -l PORT\09Set the local UDP port of the Server. Default: 5683\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"5683\00", align 1
@main.commands = private unnamed_addr constant [14 x %struct.command_desc_t] [%struct.command_desc_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i32 0, i32 0), i8* null, void (i8*, i8*)* @prv_output_clients, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([178 x i8], [178 x i8]* @.str.11, i32 0, i32 0), void (i8*, i8*)* @prv_read_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @.str.14, i32 0, i32 0), void (i8*, i8*)* @prv_discover_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.17, i32 0, i32 0), void (i8*, i8*)* @prv_write_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([253 x i8], [253 x i8]* @.str.20, i32 0, i32 0), void (i8*, i8*)* @prv_time_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([284 x i8], [284 x i8]* @.str.23, i32 0, i32 0), void (i8*, i8*)* @prv_attr_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([194 x i8], [194 x i8]* @.str.26, i32 0, i32 0), void (i8*, i8*)* @prv_clear_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.29, i32 0, i32 0), void (i8*, i8*)* @prv_exec_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.32, i32 0, i32 0), void (i8*, i8*)* @prv_delete_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([277 x i8], [277 x i8]* @.str.35, i32 0, i32 0), void (i8*, i8*)* @prv_create_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.38, i32 0, i32 0), void (i8*, i8*)* @prv_observe_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([191 x i8], [191 x i8]* @.str.41, i32 0, i32 0), void (i8*, i8*)* @prv_cancel_client, i8* null }, %struct.command_desc_t { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), i8* null, void (i8*, i8*)* @prv_quit, i8* null }, %struct.command_desc_t zeroinitializer], align 16
@.str.44 = private unnamed_addr constant [27 x i8] c"Error opening socket: %d\0D\0A\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"lwm2m_init() failed\0D\0A\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"lwm2m_step() failed: 0x%X\0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"Error in select(): %d\0D\0A\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"Error in recvfrom(): %d\0D\0A\00", align 1
@.str.50 = private unnamed_addr constant [34 x i8] c"%d bytes received from [%s]:%hu\0D\0A\00", align 1
@.str.84 = private unnamed_addr constant [31 x i8] c"\0D\0ANew client #%d registered.\0D\0A\00", align 1
@.str.85 = private unnamed_addr constant [29 x i8] c"\0D\0AClient #%d unregistered.\0D\0A\00", align 1
@.str.86 = private unnamed_addr constant [24 x i8] c"\0D\0AClient #%d updated.\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [56 x i8] c"\0D\0AMonitor callback called with an unknown status: %d.\0D\0A\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"\0D\0A> \00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"Client #%d:\0D\0A\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"\09name: \22%s\22\0D\0A\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"\09binding: \22%s\22\0D\0A\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"\09msisdn: \22%s\22\0D\0A\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"\09alternative path: \22%s\22\0D\0A\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"\09lifetime: %d sec\0D\0A\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"\09objects: \00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"/%d, \00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"/%d/%d, \00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"Not specified\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"UDP queue mode\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"SMS\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"SMS queue mode\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"UDP plus SMS\00", align 1
@.str.67 = private unnamed_addr constant [24 x i8] c"UDP queue mode plus SMS\00", align 1
@.str.68 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"List registered clients.\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"Read from a client.\00", align 1
@.str.11 = private unnamed_addr constant [178 x i8] c" read CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to read such as /3, /3/0/2, /1024/11, /1024/0/1\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"disc\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"Discover resources of a client.\00", align 1
@.str.14 = private unnamed_addr constant [182 x i8] c" disc CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to discover such as /3, /3/0/2, /1024/11, /1024/0/1\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Write to a client.\00", align 1
@.str.17 = private unnamed_addr constant [212 x i8] c" write CLIENT# URI DATA\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to write to such as /3, /3/0/2, /1024/11, /1024/0/1\0D\0A   DATA: data to write\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.19 = private unnamed_addr constant [43 x i8] c"Write time-related attributes to a client.\00", align 1
@.str.20 = private unnamed_addr constant [253 x i8] c" time CLIENT# URI PMIN PMAX\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to write attributes to such as /3, /3/0/2, /1024/11, /1024/0/1\0D\0A   PMIN: Minimum period\0D\0A   PMAX: Maximum period\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"attr\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"Write value-related attributes to a client.\00", align 1
@.str.23 = private unnamed_addr constant [284 x i8] c" attr CLIENT# URI LT GT [STEP]\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to write attributes to such as /3, /3/0/2, /1024/11, /1024/0/1\0D\0A   LT: \22Less than\22 value\0D\0A   GT: \22Greater than\22 value\0D\0A   STEP: \22Step\22 value\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"Clear attributes of a client.\00", align 1
@.str.26 = private unnamed_addr constant [194 x i8] c" clear CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to clear attributes of such as /3, /3/0/2, /1024/11, /1024/0/1\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"Execute a client resource.\00", align 1
@.str.29 = private unnamed_addr constant [172 x i8] c" exec CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri of the resource to execute such as /3/0/2\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"Delete a client Object instance.\00", align 1
@.str.32 = private unnamed_addr constant [172 x i8] c" del CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri of the instance to delete such as /1024/11\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.34 = private unnamed_addr constant [27 x i8] c"create an Object instance.\00", align 1
@.str.35 = private unnamed_addr constant [277 x i8] c" create CLIENT# URI DATA\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to which create the Object Instance such as /1024, /1024/45 \0D\0A   DATA: data to initialize the new Object Instance (0-255 for object 31024) \0D\0AResult will be displayed asynchronously.\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"observe\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"Observe from a client.\00", align 1
@.str.38 = private unnamed_addr constant [173 x i8] c" observe CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri to observe such as /3, /3/0/2, /1024/11\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"cancel\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"Cancel an observe.\00", align 1
@.str.41 = private unnamed_addr constant [191 x i8] c" cancel CLIENT# URI\0D\0A   CLIENT#: client number as returned by command 'list'\0D\0A   URI: uri on which to cancel an observe such as /3, /3/0/2, /1024/11\0D\0AResult will be displayed asynchronously.\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"Quit the server.\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"Syntax error !\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"\0D\0AClient #%d /%d\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"/%d\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"\0D\0ANotify from client #%d /%d\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c" number %d\0D\0A\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"Invalid value !\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c"Allocation error !\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"No client.\0D\0A\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c"rd\00", align 1
@.str.1.89 = private unnamed_addr constant [3 x i8] c"bs\00", align 1
@b64Alphabet = internal global [64 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", align 16, !dbg !214
@lwm2m_handle_packet.message = internal global [1 x %struct.coap_packet_t] zeroinitializer, align 16, !dbg !259
@lwm2m_handle_packet.response = internal global [1 x %struct.coap_packet_t] zeroinitializer, align 16, !dbg !418
@.str.108 = private unnamed_addr constant [16 x i8] c"BlockOutOfScope\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.10.120 = private unnamed_addr constant [5 x i8] c"/rd/\00", align 1
@.str.6.121 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@.str.7.122 = private unnamed_addr constant [12 x i8] c"\22oma.lwm2m\22\00", align 1
@.str.8.123 = private unnamed_addr constant [3 x i8] c"ct\00", align 1
@.str.9.124 = private unnamed_addr constant [6 x i8] c"11543\00", align 1
@.str.1.125 = private unnamed_addr constant [4 x i8] c"ep=\00", align 1
@.str.2.126 = private unnamed_addr constant [5 x i8] c"sms=\00", align 1
@.str.3.127 = private unnamed_addr constant [4 x i8] c"lt=\00", align 1
@.str.4.128 = private unnamed_addr constant [7 x i8] c"lwm2m=\00", align 1
@.str.5.129 = private unnamed_addr constant [3 x i8] c"b=\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"pmin=\00", align 1
@.str.1.147 = private unnamed_addr constant [6 x i8] c"pmax=\00", align 1
@.str.2.148 = private unnamed_addr constant [4 x i8] c"gt=\00", align 1
@.str.3.149 = private unnamed_addr constant [4 x i8] c"lt=\00", align 1
@.str.4.150 = private unnamed_addr constant [4 x i8] c"st=\00", align 1
@.str.5.163 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.6.164 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"{\22n\22:\22\00", align 1
@.str.7.166 = private unnamed_addr constant [9 x i8] c"\22,\22sv\22:\22\00", align 1
@.str.8.167 = private unnamed_addr constant [4 x i8] c"\22},\00", align 1
@.str.9.168 = private unnamed_addr constant [7 x i8] c"\22,\22v\22:\00", align 1
@.str.10.169 = private unnamed_addr constant [3 x i8] c"},\00", align 1
@.str.11.170 = private unnamed_addr constant [14 x i8] c"\22,\22bv\22:true},\00", align 1
@.str.12.171 = private unnamed_addr constant [15 x i8] c"\22,\22bv\22:false},\00", align 1
@.str.1.174 = private unnamed_addr constant [8 x i8] c"{\22bn\22:\22\00", align 1
@.str.2.175 = private unnamed_addr constant [8 x i8] c"\22,\22e\22:[\00", align 1
@.str.3.176 = private unnamed_addr constant [7 x i8] c"{\22e\22:[\00", align 1
@.str.4.177 = private unnamed_addr constant [3 x i8] c"]}\00", align 1
@current_mid = internal global i16 0, align 2, !dbg !489
@.str.1.194 = private unnamed_addr constant [23 x i8] c"CoAP version must be 1\00", align 1
@coap_error_message = global i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.199, i32 0, i32 0), align 8, !dbg !554
@.str.2.197 = private unnamed_addr constant [39 x i8] c"This is a constrained server (Contiki)\00", align 1
@.str.3.198 = private unnamed_addr constant [28 x i8] c"Unsupported critical option\00", align 1
@.str.199 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@coap_error_code = global i32 0, align 4, !dbg !551
@.str.226 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.1.227 = private unnamed_addr constant [41 x i8] c"Unknown command. Type 'help' for help.\0D\0A\00", align 1
@.str.48.228 = private unnamed_addr constant [60 x i8] c"help\09Type 'help [COMMAND]' for more details on a command.\0D\0A\00", align 1
@.str.49.229 = private unnamed_addr constant [8 x i8] c"%s\09%s\0D\0A\00", align 1
@.str.50.230 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.2.237 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3.238 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.4.239 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5.240 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.6.241 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.7.242 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.51.243 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.8.244 = private unnamed_addr constant [4 x i8] c"{\0D\0A\00", align 1
@.str.9.245 = private unnamed_addr constant [7 x i8] c"ID: %d\00", align 1
@.str.10.246 = private unnamed_addr constant [8 x i8] c" type: \00", align 1
@.str.11.247 = private unnamed_addr constant [16 x i8] c"Object Instance\00", align 1
@.str.12.248 = private unnamed_addr constant [19 x i8] c"Multiple Instances\00", align 1
@.str.13.249 = private unnamed_addr constant [15 x i8] c"Resource Value\00", align 1
@.str.14.250 = private unnamed_addr constant [13 x i8] c"unknown (%d)\00", align 1
@.str.15.251 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.16.252 = private unnamed_addr constant [20 x i8] c"data (%ld bytes):\0D\0A\00", align 1
@.str.17.253 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.18.254 = private unnamed_addr constant [23 x i8] c"data as Integer: %ld\0D\0A\00", align 1
@.str.19.255 = private unnamed_addr constant [4 x i8] c"%lg\00", align 1
@.str.20.256 = private unnamed_addr constant [23 x i8] c"data as Float: %.16g\0D\0A\00", align 1
@.str.21.257 = private unnamed_addr constant [4 x i8] c"}\0D\0A\00", align 1
@.str.22.260 = private unnamed_addr constant [27 x i8] c"%d bytes received of type \00", align 1
@.str.23.261 = private unnamed_addr constant [14 x i8] c"text/plain:\0D\0A\00", align 1
@.str.24.262 = private unnamed_addr constant [28 x i8] c"application/octet-stream:\0D\0A\00", align 1
@.str.25.263 = private unnamed_addr constant [33 x i8] c"application/vnd.oma.lwm2m+tlv:\0D\0A\00", align 1
@.str.26.264 = private unnamed_addr constant [34 x i8] c"application/vnd.oma.lwm2m+json:\0D\0A\00", align 1
@.str.27.265 = private unnamed_addr constant [27 x i8] c"application/link-format:\0D\0A\00", align 1
@.str.28.266 = private unnamed_addr constant [16 x i8] c"Unknown (%d):\0D\0A\00", align 1
@.str.29.267 = private unnamed_addr constant [9 x i8] c"id: %d\0D\0A\00", align 1
@.str.30.268 = private unnamed_addr constant [7 x i8] c"type: \00", align 1
@.str.31.269 = private unnamed_addr constant [20 x i8] c"LWM2M_TYPE_OBJECT\0D\0A\00", align 1
@.str.32.270 = private unnamed_addr constant [29 x i8] c"LWM2M_TYPE_OBJECT_INSTANCE\0D\0A\00", align 1
@.str.33.271 = private unnamed_addr constant [31 x i8] c"LWM2M_TYPE_MULTIPLE_RESOURCE\0D\0A\00", align 1
@.str.34.272 = private unnamed_addr constant [23 x i8] c"LWM2M_TYPE_UNDEFINED\0D\0A\00", align 1
@.str.35.273 = private unnamed_addr constant [20 x i8] c"LWM2M_TYPE_STRING\0D\0A\00", align 1
@.str.36.274 = private unnamed_addr constant [9 x i8] c"\22%.*s\22\0D\0A\00", align 1
@.str.37.275 = private unnamed_addr constant [20 x i8] c"LWM2M_TYPE_OPAQUE\0D\0A\00", align 1
@.str.38.276 = private unnamed_addr constant [21 x i8] c"LWM2M_TYPE_INTEGER: \00", align 1
@.str.39.277 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.40.278 = private unnamed_addr constant [19 x i8] c"LWM2M_TYPE_FLOAT: \00", align 1
@.str.41.279 = private unnamed_addr constant [21 x i8] c"LWM2M_TYPE_BOOLEAN: \00", align 1
@.str.43.280 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.44.281 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.42.282 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.45.283 = private unnamed_addr constant [25 x i8] c"LWM2M_TYPE_OBJECT_LINK\0D\0A\00", align 1
@.str.46.284 = private unnamed_addr constant [15 x i8] c"unknown (%d)\0D\0A\00", align 1
@.str.47.287 = private unnamed_addr constant [13 x i8] c"%d.%02d (%s)\00", align 1
@.str.52.288 = private unnamed_addr constant [14 x i8] c"COAP_NO_ERROR\00", align 1
@.str.53.289 = private unnamed_addr constant [12 x i8] c"COAP_IGNORE\00", align 1
@.str.54.290 = private unnamed_addr constant [17 x i8] c"COAP_201_CREATED\00", align 1
@.str.55.291 = private unnamed_addr constant [17 x i8] c"COAP_202_DELETED\00", align 1
@.str.56.292 = private unnamed_addr constant [17 x i8] c"COAP_204_CHANGED\00", align 1
@.str.57.293 = private unnamed_addr constant [17 x i8] c"COAP_205_CONTENT\00", align 1
@.str.58.294 = private unnamed_addr constant [21 x i8] c"COAP_400_BAD_REQUEST\00", align 1
@.str.59.295 = private unnamed_addr constant [22 x i8] c"COAP_401_UNAUTHORIZED\00", align 1
@.str.60.296 = private unnamed_addr constant [19 x i8] c"COAP_404_NOT_FOUND\00", align 1
@.str.61.297 = private unnamed_addr constant [28 x i8] c"COAP_405_METHOD_NOT_ALLOWED\00", align 1
@.str.62.298 = private unnamed_addr constant [24 x i8] c"COAP_406_NOT_ACCEPTABLE\00", align 1
@.str.63.299 = private unnamed_addr constant [31 x i8] c"COAP_500_INTERNAL_SERVER_ERROR\00", align 1
@.str.64.300 = private unnamed_addr constant [25 x i8] c"COAP_501_NOT_IMPLEMENTED\00", align 1
@.str.65.301 = private unnamed_addr constant [29 x i8] c"COAP_503_SERVICE_UNAVAILABLE\00", align 1
@.str.66.302 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.321 = private unnamed_addr constant [50 x i8] c"#> failed sending %lu bytes, missing connection\0D\0A\00", align 1
@.str.1.322 = private unnamed_addr constant [30 x i8] c"#> failed sending %lu bytes\0D\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @handle_sigint(i32 %signum) #0 !dbg !1186 {
entry:
  %signum.addr = alloca i32, align 4
  store i32 %signum, i32* %signum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %signum.addr, metadata !1189, metadata !1190), !dbg !1191
  store i32 2, i32* @g_quit, align 4, !dbg !1192
  ret void, !dbg !1193
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define void @print_usage() #0 !dbg !1194 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1197
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0)), !dbg !1198
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1199
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0)), !dbg !1200
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1201
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0)), !dbg !1202
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1203
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i32 0, i32 0)), !dbg !1204
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1205
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i32 0, i32 0)), !dbg !1206
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1207
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !1208
  ret void, !dbg !1209
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !1210 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %sock = alloca i32, align 4
  %readfds = alloca %struct.fd_set, align 8
  %tv = alloca %struct.timeval, align 8
  %result = alloca i32, align 4
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %i = alloca i32, align 4
  %connList = alloca %struct._connection_t*, align 8
  %addressFamily = alloca i32, align 4
  %opt = alloca i32, align 4
  %localPort = alloca i8*, align 8
  %commands = alloca [14 x %struct.command_desc_t], align 16
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %buffer = alloca [1024 x i8], align 16
  %numBytes = alloca i32, align 4
  %addr = alloca %struct.sockaddr_storage, align 8
  %addrLen = alloca i32, align 4
  %s = alloca [46 x i8], align 16
  %port = alloca i16, align 2
  %connP = alloca %struct._connection_t*, align 8
  %saddr = alloca %struct.sockaddr_in*, align 8
  %saddr112 = alloca %struct.sockaddr_in6*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1214, metadata !1190), !dbg !1215
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1216, metadata !1190), !dbg !1217
  call void @llvm.dbg.declare(metadata i32* %sock, metadata !1218, metadata !1190), !dbg !1219
  call void @llvm.dbg.declare(metadata %struct.fd_set* %readfds, metadata !1220, metadata !1190), !dbg !1226
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !1227, metadata !1190), !dbg !1234
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1235, metadata !1190), !dbg !1236
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !1237, metadata !1190), !dbg !1238
  store %struct.lwm2m_context_t* null, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1239, metadata !1190), !dbg !1240
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connList, metadata !1241, metadata !1190), !dbg !1251
  store %struct._connection_t* null, %struct._connection_t** %connList, align 8, !dbg !1251
  call void @llvm.dbg.declare(metadata i32* %addressFamily, metadata !1252, metadata !1190), !dbg !1253
  store i32 10, i32* %addressFamily, align 4, !dbg !1253
  call void @llvm.dbg.declare(metadata i32* %opt, metadata !1254, metadata !1190), !dbg !1255
  call void @llvm.dbg.declare(metadata i8** %localPort, metadata !1256, metadata !1190), !dbg !1257
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8** %localPort, align 8, !dbg !1257
  call void @llvm.dbg.declare(metadata [14 x %struct.command_desc_t]* %commands, metadata !1258, metadata !1190), !dbg !1273
  %0 = bitcast [14 x %struct.command_desc_t]* %commands to i8*, !dbg !1273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([14 x %struct.command_desc_t]* @main.commands to i8*), i64 560, i32 16, i1 false), !dbg !1273
  store i32 1, i32* %opt, align 4, !dbg !1274
  br label %while.cond, !dbg !1275

while.cond:                                       ; preds = %sw.epilog, %entry
  %1 = load i32, i32* %opt, align 4, !dbg !1276
  %2 = load i32, i32* %argc.addr, align 4, !dbg !1277
  %cmp = icmp slt i32 %1, %2, !dbg !1278
  br i1 %cmp, label %while.body, label %while.end, !dbg !1275

while.body:                                       ; preds = %while.cond
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !1279
  %4 = load i32, i32* %opt, align 4, !dbg !1282
  %idxprom = sext i32 %4 to i64, !dbg !1279
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !1279
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !1279
  %cmp1 = icmp eq i8* %5, null, !dbg !1283
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !1284

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !1285
  %7 = load i32, i32* %opt, align 4, !dbg !1286
  %idxprom2 = sext i32 %7 to i64, !dbg !1285
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom2, !dbg !1285
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !1285
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !1285
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !1285
  %conv = sext i8 %9 to i32, !dbg !1285
  %cmp5 = icmp ne i32 %conv, 45, !dbg !1287
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !1288

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %10 = load i8**, i8*** %argv.addr, align 8, !dbg !1289
  %11 = load i32, i32* %opt, align 4, !dbg !1290
  %idxprom8 = sext i32 %11 to i64, !dbg !1289
  %arrayidx9 = getelementptr inbounds i8*, i8** %10, i64 %idxprom8, !dbg !1289
  %12 = load i8*, i8** %arrayidx9, align 8, !dbg !1289
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !1289
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !1289
  %conv11 = sext i8 %13 to i32, !dbg !1289
  %cmp12 = icmp ne i32 %conv11, 0, !dbg !1291
  br i1 %cmp12, label %if.then, label %if.end, !dbg !1292

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %while.body
  call void @print_usage(), !dbg !1293
  store i32 0, i32* %retval, align 4, !dbg !1295
  br label %return, !dbg !1295

if.end:                                           ; preds = %lor.lhs.false7
  %14 = load i8**, i8*** %argv.addr, align 8, !dbg !1296
  %15 = load i32, i32* %opt, align 4, !dbg !1297
  %idxprom14 = sext i32 %15 to i64, !dbg !1296
  %arrayidx15 = getelementptr inbounds i8*, i8** %14, i64 %idxprom14, !dbg !1296
  %16 = load i8*, i8** %arrayidx15, align 8, !dbg !1296
  %arrayidx16 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !1296
  %17 = load i8, i8* %arrayidx16, align 1, !dbg !1296
  %conv17 = sext i8 %17 to i32, !dbg !1296
  switch i32 %conv17, label %sw.default [
    i32 52, label %sw.bb
    i32 108, label %sw.bb18
  ], !dbg !1298

sw.bb:                                            ; preds = %if.end
  store i32 2, i32* %addressFamily, align 4, !dbg !1299
  br label %sw.epilog, !dbg !1301

sw.bb18:                                          ; preds = %if.end
  %18 = load i32, i32* %opt, align 4, !dbg !1302
  %inc = add nsw i32 %18, 1, !dbg !1302
  store i32 %inc, i32* %opt, align 4, !dbg !1302
  %19 = load i32, i32* %opt, align 4, !dbg !1303
  %20 = load i32, i32* %argc.addr, align 4, !dbg !1305
  %cmp19 = icmp sge i32 %19, %20, !dbg !1306
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !1307

if.then21:                                        ; preds = %sw.bb18
  call void @print_usage(), !dbg !1308
  store i32 0, i32* %retval, align 4, !dbg !1310
  br label %return, !dbg !1310

if.end22:                                         ; preds = %sw.bb18
  %21 = load i8**, i8*** %argv.addr, align 8, !dbg !1311
  %22 = load i32, i32* %opt, align 4, !dbg !1312
  %idxprom23 = sext i32 %22 to i64, !dbg !1311
  %arrayidx24 = getelementptr inbounds i8*, i8** %21, i64 %idxprom23, !dbg !1311
  %23 = load i8*, i8** %arrayidx24, align 8, !dbg !1311
  store i8* %23, i8** %localPort, align 8, !dbg !1313
  br label %sw.epilog, !dbg !1314

sw.default:                                       ; preds = %if.end
  call void @print_usage(), !dbg !1315
  store i32 0, i32* %retval, align 4, !dbg !1316
  br label %return, !dbg !1316

sw.epilog:                                        ; preds = %if.end22, %sw.bb
  %24 = load i32, i32* %opt, align 4, !dbg !1317
  %add = add nsw i32 %24, 1, !dbg !1317
  store i32 %add, i32* %opt, align 4, !dbg !1317
  br label %while.cond, !dbg !1275, !llvm.loop !1318

while.end:                                        ; preds = %while.cond
  %25 = load i8*, i8** %localPort, align 8, !dbg !1320
  %26 = load i32, i32* %addressFamily, align 4, !dbg !1321
  %call = call i32 @create_socket(i8* %25, i32 %26), !dbg !1322
  store i32 %call, i32* %sock, align 4, !dbg !1323
  %27 = load i32, i32* %sock, align 4, !dbg !1324
  %cmp25 = icmp slt i32 %27, 0, !dbg !1326
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !1327

if.then27:                                        ; preds = %while.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1328
  %call28 = call i32* @__errno_location() #8, !dbg !1330
  %29 = load i32, i32* %call28, align 4, !dbg !1330
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i32 0, i32 0), i32 %29), !dbg !1331
  store i32 -1, i32* %retval, align 4, !dbg !1332
  br label %return, !dbg !1332

if.end30:                                         ; preds = %while.end
  %call31 = call %struct.lwm2m_context_t* @lwm2m_init(i8* null), !dbg !1333
  store %struct.lwm2m_context_t* %call31, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1334
  %30 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1335
  %cmp32 = icmp eq %struct.lwm2m_context_t* null, %30, !dbg !1337
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !1338

if.then34:                                        ; preds = %if.end30
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1339
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i32 0, i32 0)), !dbg !1341
  store i32 -1, i32* %retval, align 4, !dbg !1342
  br label %return, !dbg !1342

if.end36:                                         ; preds = %if.end30
  %call37 = call void (i32)* @signal(i32 2, void (i32)* @handle_sigint) #7, !dbg !1343
  store i32 0, i32* %i, align 4, !dbg !1344
  br label %for.cond, !dbg !1346

for.cond:                                         ; preds = %for.inc, %if.end36
  %32 = load i32, i32* %i, align 4, !dbg !1347
  %idxprom38 = sext i32 %32 to i64, !dbg !1349
  %arrayidx39 = getelementptr inbounds [14 x %struct.command_desc_t], [14 x %struct.command_desc_t]* %commands, i64 0, i64 %idxprom38, !dbg !1349
  %name = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx39, i32 0, i32 0, !dbg !1350
  %33 = load i8*, i8** %name, align 8, !dbg !1350
  %cmp40 = icmp ne i8* %33, null, !dbg !1351
  br i1 %cmp40, label %for.body, label %for.end, !dbg !1352

for.body:                                         ; preds = %for.cond
  %34 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1353
  %35 = bitcast %struct.lwm2m_context_t* %34 to i8*, !dbg !1355
  %36 = load i32, i32* %i, align 4, !dbg !1356
  %idxprom42 = sext i32 %36 to i64, !dbg !1357
  %arrayidx43 = getelementptr inbounds [14 x %struct.command_desc_t], [14 x %struct.command_desc_t]* %commands, i64 0, i64 %idxprom42, !dbg !1357
  %userData = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx43, i32 0, i32 4, !dbg !1358
  store i8* %35, i8** %userData, align 8, !dbg !1359
  br label %for.inc, !dbg !1360

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !1361
  %inc44 = add nsw i32 %37, 1, !dbg !1361
  store i32 %inc44, i32* %i, align 4, !dbg !1361
  br label %for.cond, !dbg !1362, !llvm.loop !1363

for.end:                                          ; preds = %for.cond
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1365
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0)), !dbg !1366
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1367
  %call46 = call i32 @fflush(%struct._IO_FILE* %39), !dbg !1368
  %40 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1369
  %41 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1370
  %42 = bitcast %struct.lwm2m_context_t* %41 to i8*, !dbg !1370
  call void @lwm2m_set_monitoring_callback(%struct.lwm2m_context_t* %40, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_monitor_callback, i8* %42), !dbg !1371
  br label %while.cond47, !dbg !1372

while.cond47:                                     ; preds = %if.end171, %for.end
  %43 = load i32, i32* @g_quit, align 4, !dbg !1373
  %cmp48 = icmp eq i32 0, %43, !dbg !1374
  br i1 %cmp48, label %while.body50, label %while.end172, !dbg !1372

while.body50:                                     ; preds = %while.cond47
  br label %do.body, !dbg !1375, !llvm.loop !1377

do.body:                                          ; preds = %while.body50
  call void @llvm.dbg.declare(metadata i32* %__d0, metadata !1378, metadata !1190), !dbg !1380
  call void @llvm.dbg.declare(metadata i32* %__d1, metadata !1381, metadata !1190), !dbg !1380
  %__fds_bits = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !1380
  %arrayidx51 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 0, !dbg !1380
  %44 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx51) #7, !dbg !1380, !srcloc !1382
  %asmresult = extractvalue { i64, i64* } %44, 0, !dbg !1380
  %asmresult52 = extractvalue { i64, i64* } %44, 1, !dbg !1380
  %45 = trunc i64 %asmresult to i32, !dbg !1380
  store i32 %45, i32* %__d0, align 4, !dbg !1380
  %46 = ptrtoint i64* %asmresult52 to i64, !dbg !1380
  %47 = trunc i64 %46 to i32, !dbg !1380
  store i32 %47, i32* %__d1, align 4, !dbg !1380
  br label %do.end, !dbg !1380

do.end:                                           ; preds = %do.body
  %48 = load i32, i32* %sock, align 4, !dbg !1383
  %rem = srem i32 %48, 64, !dbg !1383
  %sh_prom = zext i32 %rem to i64, !dbg !1383
  %shl = shl i64 1, %sh_prom, !dbg !1383
  %__fds_bits53 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !1383
  %49 = load i32, i32* %sock, align 4, !dbg !1383
  %div = sdiv i32 %49, 64, !dbg !1383
  %idxprom54 = sext i32 %div to i64, !dbg !1383
  %arrayidx55 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits53, i64 0, i64 %idxprom54, !dbg !1383
  %50 = load i64, i64* %arrayidx55, align 8, !dbg !1383
  %or = or i64 %50, %shl, !dbg !1383
  store i64 %or, i64* %arrayidx55, align 8, !dbg !1383
  %__fds_bits56 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !1384
  %arrayidx57 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits56, i64 0, i64 0, !dbg !1384
  %51 = load i64, i64* %arrayidx57, align 8, !dbg !1384
  %or58 = or i64 %51, 1, !dbg !1384
  store i64 %or58, i64* %arrayidx57, align 8, !dbg !1384
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0, !dbg !1385
  store i64 60, i64* %tv_sec, align 8, !dbg !1386
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 1, !dbg !1387
  store i64 0, i64* %tv_usec, align 8, !dbg !1388
  %52 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1389
  %tv_sec59 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0, !dbg !1390
  %call60 = call i32 @lwm2m_step(%struct.lwm2m_context_t* %52, i64* %tv_sec59), !dbg !1391
  store i32 %call60, i32* %result, align 4, !dbg !1392
  %53 = load i32, i32* %result, align 4, !dbg !1393
  %cmp61 = icmp ne i32 %53, 0, !dbg !1395
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !1396

if.then63:                                        ; preds = %do.end
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1397
  %55 = load i32, i32* %result, align 4, !dbg !1399
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i32 0, i32 0), i32 %55), !dbg !1400
  store i32 -1, i32* %retval, align 4, !dbg !1401
  br label %return, !dbg !1401

if.end65:                                         ; preds = %do.end
  %call66 = call i32 @select(i32 1024, %struct.fd_set* %readfds, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %tv), !dbg !1402
  store i32 %call66, i32* %result, align 4, !dbg !1403
  %56 = load i32, i32* %result, align 4, !dbg !1404
  %cmp67 = icmp slt i32 %56, 0, !dbg !1406
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !1407

if.then69:                                        ; preds = %if.end65
  %call70 = call i32* @__errno_location() #8, !dbg !1408
  %57 = load i32, i32* %call70, align 4, !dbg !1408
  %cmp71 = icmp ne i32 %57, 4, !dbg !1411
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !1412

if.then73:                                        ; preds = %if.then69
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1413
  %call74 = call i32* @__errno_location() #8, !dbg !1415
  %59 = load i32, i32* %call74, align 4, !dbg !1415
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i32 %59), !dbg !1416
  br label %if.end76, !dbg !1417

if.end76:                                         ; preds = %if.then73, %if.then69
  br label %if.end171, !dbg !1418

if.else:                                          ; preds = %if.end65
  %60 = load i32, i32* %result, align 4, !dbg !1419
  %cmp77 = icmp sgt i32 %60, 0, !dbg !1421
  br i1 %cmp77, label %if.then79, label %if.end170, !dbg !1422

if.then79:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buffer, metadata !1423, metadata !1190), !dbg !1428
  call void @llvm.dbg.declare(metadata i32* %numBytes, metadata !1429, metadata !1190), !dbg !1430
  %__fds_bits80 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !1431
  %61 = load i32, i32* %sock, align 4, !dbg !1431
  %div81 = sdiv i32 %61, 64, !dbg !1431
  %idxprom82 = sext i32 %div81 to i64, !dbg !1431
  %arrayidx83 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits80, i64 0, i64 %idxprom82, !dbg !1431
  %62 = load i64, i64* %arrayidx83, align 8, !dbg !1431
  %63 = load i32, i32* %sock, align 4, !dbg !1431
  %rem84 = srem i32 %63, 64, !dbg !1431
  %sh_prom85 = zext i32 %rem84 to i64, !dbg !1431
  %shl86 = shl i64 1, %sh_prom85, !dbg !1431
  %and = and i64 %62, %shl86, !dbg !1431
  %cmp87 = icmp ne i64 %and, 0, !dbg !1431
  br i1 %cmp87, label %if.then89, label %if.else141, !dbg !1433

if.then89:                                        ; preds = %if.then79
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %addr, metadata !1434, metadata !1190), !dbg !1444
  call void @llvm.dbg.declare(metadata i32* %addrLen, metadata !1445, metadata !1190), !dbg !1449
  store i32 128, i32* %addrLen, align 4, !dbg !1450
  %64 = load i32, i32* %sock, align 4, !dbg !1451
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0, !dbg !1452
  %65 = bitcast %struct.sockaddr_storage* %addr to %struct.sockaddr*, !dbg !1453
  %call90 = call i64 @recvfrom(i32 %64, i8* %arraydecay, i64 1024, i32 0, %struct.sockaddr* %65, i32* %addrLen), !dbg !1454
  %conv91 = trunc i64 %call90 to i32, !dbg !1454
  store i32 %conv91, i32* %numBytes, align 4, !dbg !1455
  %66 = load i32, i32* %numBytes, align 4, !dbg !1456
  %cmp92 = icmp eq i32 %66, -1, !dbg !1458
  br i1 %cmp92, label %if.then94, label %if.else97, !dbg !1459

if.then94:                                        ; preds = %if.then89
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1460
  %call95 = call i32* @__errno_location() #8, !dbg !1462
  %68 = load i32, i32* %call95, align 4, !dbg !1462
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), i32 %68), !dbg !1463
  br label %if.end140, !dbg !1464

if.else97:                                        ; preds = %if.then89
  call void @llvm.dbg.declare(metadata [46 x i8]* %s, metadata !1465, metadata !1190), !dbg !1470
  call void @llvm.dbg.declare(metadata i16* %port, metadata !1471, metadata !1190), !dbg !1472
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connP, metadata !1473, metadata !1190), !dbg !1474
  %arrayidx98 = getelementptr inbounds [46 x i8], [46 x i8]* %s, i64 0, i64 0, !dbg !1475
  store i8 0, i8* %arrayidx98, align 16, !dbg !1476
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %addr, i32 0, i32 0, !dbg !1477
  %69 = load i16, i16* %ss_family, align 8, !dbg !1477
  %conv99 = zext i16 %69 to i32, !dbg !1479
  %cmp100 = icmp eq i32 2, %conv99, !dbg !1480
  br i1 %cmp100, label %if.then102, label %if.else106, !dbg !1481

if.then102:                                       ; preds = %if.else97
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %saddr, metadata !1482, metadata !1190), !dbg !1484
  %70 = bitcast %struct.sockaddr_storage* %addr to %struct.sockaddr_in*, !dbg !1485
  store %struct.sockaddr_in* %70, %struct.sockaddr_in** %saddr, align 8, !dbg !1484
  %71 = load %struct.sockaddr_in*, %struct.sockaddr_in** %saddr, align 8, !dbg !1486
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %71, i32 0, i32 0, !dbg !1487
  %72 = load i16, i16* %sin_family, align 4, !dbg !1487
  %conv103 = zext i16 %72 to i32, !dbg !1486
  %73 = load %struct.sockaddr_in*, %struct.sockaddr_in** %saddr, align 8, !dbg !1488
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %73, i32 0, i32 2, !dbg !1489
  %74 = bitcast %struct.in_addr* %sin_addr to i8*, !dbg !1490
  %arraydecay104 = getelementptr inbounds [46 x i8], [46 x i8]* %s, i32 0, i32 0, !dbg !1491
  %call105 = call i8* @inet_ntop(i32 %conv103, i8* %74, i8* %arraydecay104, i32 46) #7, !dbg !1492
  %75 = load %struct.sockaddr_in*, %struct.sockaddr_in** %saddr, align 8, !dbg !1493
  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %75, i32 0, i32 1, !dbg !1494
  %76 = load i16, i16* %sin_port, align 2, !dbg !1494
  store i16 %76, i16* %port, align 2, !dbg !1495
  br label %if.end117, !dbg !1496

if.else106:                                       ; preds = %if.else97
  %ss_family107 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %addr, i32 0, i32 0, !dbg !1497
  %77 = load i16, i16* %ss_family107, align 8, !dbg !1497
  %conv108 = zext i16 %77 to i32, !dbg !1499
  %cmp109 = icmp eq i32 10, %conv108, !dbg !1500
  br i1 %cmp109, label %if.then111, label %if.end116, !dbg !1501

if.then111:                                       ; preds = %if.else106
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %saddr112, metadata !1502, metadata !1190), !dbg !1504
  %78 = bitcast %struct.sockaddr_storage* %addr to %struct.sockaddr_in6*, !dbg !1505
  store %struct.sockaddr_in6* %78, %struct.sockaddr_in6** %saddr112, align 8, !dbg !1504
  %79 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %saddr112, align 8, !dbg !1506
  %sin6_family = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %79, i32 0, i32 0, !dbg !1507
  %80 = load i16, i16* %sin6_family, align 4, !dbg !1507
  %conv113 = zext i16 %80 to i32, !dbg !1506
  %81 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %saddr112, align 8, !dbg !1508
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %81, i32 0, i32 3, !dbg !1509
  %82 = bitcast %struct.in6_addr* %sin6_addr to i8*, !dbg !1510
  %arraydecay114 = getelementptr inbounds [46 x i8], [46 x i8]* %s, i32 0, i32 0, !dbg !1511
  %call115 = call i8* @inet_ntop(i32 %conv113, i8* %82, i8* %arraydecay114, i32 46) #7, !dbg !1512
  %83 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %saddr112, align 8, !dbg !1513
  %sin6_port = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %83, i32 0, i32 1, !dbg !1514
  %84 = load i16, i16* %sin6_port, align 2, !dbg !1514
  store i16 %84, i16* %port, align 2, !dbg !1515
  br label %if.end116, !dbg !1516

if.end116:                                        ; preds = %if.then111, %if.else106
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then102
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1517
  %86 = load i32, i32* %numBytes, align 4, !dbg !1518
  %arraydecay118 = getelementptr inbounds [46 x i8], [46 x i8]* %s, i32 0, i32 0, !dbg !1519
  %87 = load i16, i16* %port, align 2, !dbg !1520
  %call119 = call zeroext i16 @ntohs(i16 zeroext %87) #8, !dbg !1521
  %conv120 = zext i16 %call119 to i32, !dbg !1521
  %call121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i32 0, i32 0), i32 %86, i8* %arraydecay118, i32 %conv120), !dbg !1522
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1523
  %arraydecay122 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0, !dbg !1524
  %89 = load i32, i32* %numBytes, align 4, !dbg !1525
  call void @output_buffer(%struct._IO_FILE* %88, i8* %arraydecay122, i32 %89, i32 0), !dbg !1526
  %90 = load %struct._connection_t*, %struct._connection_t** %connList, align 8, !dbg !1527
  %91 = load i32, i32* %addrLen, align 4, !dbg !1528
  %conv123 = zext i32 %91 to i64, !dbg !1528
  %call124 = call %struct._connection_t* @connection_find(%struct._connection_t* %90, %struct.sockaddr_storage* %addr, i64 %conv123), !dbg !1529
  store %struct._connection_t* %call124, %struct._connection_t** %connP, align 8, !dbg !1530
  %92 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !1531
  %cmp125 = icmp eq %struct._connection_t* %92, null, !dbg !1533
  br i1 %cmp125, label %if.then127, label %if.end134, !dbg !1534

if.then127:                                       ; preds = %if.end117
  %93 = load %struct._connection_t*, %struct._connection_t** %connList, align 8, !dbg !1535
  %94 = load i32, i32* %sock, align 4, !dbg !1537
  %95 = bitcast %struct.sockaddr_storage* %addr to %struct.sockaddr*, !dbg !1538
  %96 = load i32, i32* %addrLen, align 4, !dbg !1539
  %conv128 = zext i32 %96 to i64, !dbg !1539
  %call129 = call %struct._connection_t* @connection_new_incoming(%struct._connection_t* %93, i32 %94, %struct.sockaddr* %95, i64 %conv128), !dbg !1540
  store %struct._connection_t* %call129, %struct._connection_t** %connP, align 8, !dbg !1541
  %97 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !1542
  %cmp130 = icmp ne %struct._connection_t* %97, null, !dbg !1544
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !1545

if.then132:                                       ; preds = %if.then127
  %98 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !1546
  store %struct._connection_t* %98, %struct._connection_t** %connList, align 8, !dbg !1548
  br label %if.end133, !dbg !1549

if.end133:                                        ; preds = %if.then132, %if.then127
  br label %if.end134, !dbg !1550

if.end134:                                        ; preds = %if.end133, %if.end117
  %99 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !1551
  %cmp135 = icmp ne %struct._connection_t* %99, null, !dbg !1553
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !1554

if.then137:                                       ; preds = %if.end134
  %100 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1555
  %arraydecay138 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0, !dbg !1557
  %101 = load i32, i32* %numBytes, align 4, !dbg !1558
  %102 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !1559
  %103 = bitcast %struct._connection_t* %102 to i8*, !dbg !1559
  call void @lwm2m_handle_packet(%struct.lwm2m_context_t* %100, i8* %arraydecay138, i32 %101, i8* %103), !dbg !1560
  br label %if.end139, !dbg !1561

if.end139:                                        ; preds = %if.then137, %if.end134
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then94
  br label %if.end169, !dbg !1562

if.else141:                                       ; preds = %if.then79
  %__fds_bits142 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !1563
  %arrayidx143 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits142, i64 0, i64 0, !dbg !1563
  %104 = load i64, i64* %arrayidx143, align 8, !dbg !1563
  %and144 = and i64 %104, 1, !dbg !1563
  %cmp145 = icmp ne i64 %and144, 0, !dbg !1563
  br i1 %cmp145, label %if.then147, label %if.end168, !dbg !1565

if.then147:                                       ; preds = %if.else141
  %arraydecay148 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0, !dbg !1566
  %call149 = call i64 @read(i32 0, i8* %arraydecay148, i64 1023), !dbg !1568
  %conv150 = trunc i64 %call149 to i32, !dbg !1568
  store i32 %conv150, i32* %numBytes, align 4, !dbg !1569
  %105 = load i32, i32* %numBytes, align 4, !dbg !1570
  %cmp151 = icmp sgt i32 %105, 1, !dbg !1572
  br i1 %cmp151, label %if.then153, label %if.end159, !dbg !1573

if.then153:                                       ; preds = %if.then147
  %106 = load i32, i32* %numBytes, align 4, !dbg !1574
  %idxprom154 = sext i32 %106 to i64, !dbg !1576
  %arrayidx155 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i64 0, i64 %idxprom154, !dbg !1576
  store i8 0, i8* %arrayidx155, align 1, !dbg !1577
  %arraydecay156 = getelementptr inbounds [14 x %struct.command_desc_t], [14 x %struct.command_desc_t]* %commands, i32 0, i32 0, !dbg !1578
  %arraydecay157 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0, !dbg !1579
  call void @handle_command(%struct.command_desc_t* %arraydecay156, i8* %arraydecay157), !dbg !1580
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1581
  %call158 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !1582
  br label %if.end159, !dbg !1583

if.end159:                                        ; preds = %if.then153, %if.then147
  %108 = load i32, i32* @g_quit, align 4, !dbg !1584
  %cmp160 = icmp eq i32 %108, 0, !dbg !1586
  br i1 %cmp160, label %if.then162, label %if.else165, !dbg !1587

if.then162:                                       ; preds = %if.end159
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1588
  %call163 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0)), !dbg !1590
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1591
  %call164 = call i32 @fflush(%struct._IO_FILE* %110), !dbg !1592
  br label %if.end167, !dbg !1593

if.else165:                                       ; preds = %if.end159
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1594
  %call166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !1596
  br label %if.end167

if.end167:                                        ; preds = %if.else165, %if.then162
  br label %if.end168, !dbg !1597

if.end168:                                        ; preds = %if.end167, %if.else141
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end140
  br label %if.end170, !dbg !1598

if.end170:                                        ; preds = %if.end169, %if.else
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.end76
  br label %while.cond47, !dbg !1372, !llvm.loop !1599

while.end172:                                     ; preds = %while.cond47
  %112 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1601
  call void @lwm2m_close(%struct.lwm2m_context_t* %112), !dbg !1602
  %113 = load i32, i32* %sock, align 4, !dbg !1603
  %call173 = call i32 @close(i32 %113), !dbg !1604
  %114 = load %struct._connection_t*, %struct._connection_t** %connList, align 8, !dbg !1605
  call void @connection_free(%struct._connection_t* %114), !dbg !1606
  store i32 0, i32* %retval, align 4, !dbg !1607
  br label %return, !dbg !1607

return:                                           ; preds = %while.end172, %if.then63, %if.then34, %if.then27, %sw.default, %if.then21, %if.then
  %115 = load i32, i32* %retval, align 4, !dbg !1608
  ret i32 %115, !dbg !1608
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #4

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #5

declare i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @prv_monitor_callback(i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %status, i32 %format, i8* %data, i32 %dataLength, i8* %userData) #0 !dbg !1609 {
entry:
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %status.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dataLength.addr = alloca i32, align 4
  %userData.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %targetP = alloca %struct._lwm2m_client_*, align 8
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !1610, metadata !1190), !dbg !1611
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !1612, metadata !1190), !dbg !1613
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !1614, metadata !1190), !dbg !1615
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !1616, metadata !1190), !dbg !1617
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1618, metadata !1190), !dbg !1619
  store i32 %dataLength, i32* %dataLength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataLength.addr, metadata !1620, metadata !1190), !dbg !1621
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !1622, metadata !1190), !dbg !1623
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !1624, metadata !1190), !dbg !1625
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !1626
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !1627
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1625
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %targetP, metadata !1628, metadata !1190), !dbg !1629
  %2 = load i32, i32* %status.addr, align 4, !dbg !1630
  switch i32 %2, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb2
    i32 68, label %sw.bb5
  ], !dbg !1631

sw.bb:                                            ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1632
  %4 = load i16, i16* %clientID.addr, align 2, !dbg !1634
  %conv = zext i16 %4 to i32, !dbg !1634
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.84, i32 0, i32 0), i32 %conv), !dbg !1635
  %5 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1636
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %5, i32 0, i32 0, !dbg !1637
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !1637
  %7 = bitcast %struct._lwm2m_client_* %6 to %struct._lwm2m_list_t*, !dbg !1638
  %8 = load i16, i16* %clientID.addr, align 2, !dbg !1639
  %call1 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %7, i16 zeroext %8), !dbg !1640
  %9 = bitcast %struct._lwm2m_list_t* %call1 to %struct._lwm2m_client_*, !dbg !1641
  store %struct._lwm2m_client_* %9, %struct._lwm2m_client_** %targetP, align 8, !dbg !1642
  %10 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !1643
  call void @prv_dump_client(%struct._lwm2m_client_* %10), !dbg !1644
  br label %sw.epilog, !dbg !1645

sw.bb2:                                           ; preds = %entry
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1646
  %12 = load i16, i16* %clientID.addr, align 2, !dbg !1647
  %conv3 = zext i16 %12 to i32, !dbg !1647
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i32 %conv3), !dbg !1648
  br label %sw.epilog, !dbg !1649

sw.bb5:                                           ; preds = %entry
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1650
  %14 = load i16, i16* %clientID.addr, align 2, !dbg !1651
  %conv6 = zext i16 %14 to i32, !dbg !1651
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.86, i32 0, i32 0), i32 %conv6), !dbg !1652
  %15 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1653
  %clientList8 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %15, i32 0, i32 0, !dbg !1654
  %16 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList8, align 8, !dbg !1654
  %17 = bitcast %struct._lwm2m_client_* %16 to %struct._lwm2m_list_t*, !dbg !1655
  %18 = load i16, i16* %clientID.addr, align 2, !dbg !1656
  %call9 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %17, i16 zeroext %18), !dbg !1657
  %19 = bitcast %struct._lwm2m_list_t* %call9 to %struct._lwm2m_client_*, !dbg !1658
  store %struct._lwm2m_client_* %19, %struct._lwm2m_client_** %targetP, align 8, !dbg !1659
  %20 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !1660
  call void @prv_dump_client(%struct._lwm2m_client_* %20), !dbg !1661
  br label %sw.epilog, !dbg !1662

sw.default:                                       ; preds = %entry
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1663
  %22 = load i32, i32* %status.addr, align 4, !dbg !1664
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.87, i32 0, i32 0), i32 %22), !dbg !1665
  br label %sw.epilog, !dbg !1666

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb2, %sw.bb
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1667
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0)), !dbg !1668
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1669
  %call12 = call i32 @fflush(%struct._IO_FILE* %24), !dbg !1670
  ret void, !dbg !1671
}

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

declare i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) #2

; Function Attrs: nounwind
declare i8* @inet_ntop(i32, i8*, i8*, i32) #5

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #4

declare i64 @read(i32, i8*, i64) #2

declare i32 @close(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @prv_dump_client(%struct._lwm2m_client_* %targetP) #0 !dbg !1672 {
entry:
  %targetP.addr = alloca %struct._lwm2m_client_*, align 8
  %objectP = alloca %struct._lwm2m_client_object_*, align 8
  %instanceP = alloca %struct._lwm2m_list_t*, align 8
  store %struct._lwm2m_client_* %targetP, %struct._lwm2m_client_** %targetP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %targetP.addr, metadata !1675, metadata !1190), !dbg !1676
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objectP, metadata !1677, metadata !1190), !dbg !1678
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1679
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1680
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %1, i32 0, i32 1, !dbg !1681
  %2 = load i16, i16* %internalID, align 8, !dbg !1681
  %conv = zext i16 %2 to i32, !dbg !1680
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i32 %conv), !dbg !1682
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1683
  %4 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1684
  %name = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %4, i32 0, i32 2, !dbg !1685
  %5 = load i8*, i8** %name, align 8, !dbg !1685
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* %5), !dbg !1686
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1687
  %7 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1688
  %binding = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %7, i32 0, i32 3, !dbg !1689
  %8 = load i32, i32* %binding, align 8, !dbg !1689
  %call2 = call i8* @prv_dump_binding(i32 %8), !dbg !1690
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i8* %call2), !dbg !1691
  %9 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1692
  %msisdn = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %9, i32 0, i32 4, !dbg !1694
  %10 = load i8*, i8** %msisdn, align 8, !dbg !1694
  %tobool = icmp ne i8* %10, null, !dbg !1692
  br i1 %tobool, label %if.then, label %if.end, !dbg !1695

if.then:                                          ; preds = %entry
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1696
  %12 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1697
  %msisdn4 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %12, i32 0, i32 4, !dbg !1698
  %13 = load i8*, i8** %msisdn4, align 8, !dbg !1698
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* %13), !dbg !1699
  br label %if.end, !dbg !1699

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1700
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %14, i32 0, i32 5, !dbg !1702
  %15 = load i8*, i8** %altPath, align 8, !dbg !1702
  %tobool6 = icmp ne i8* %15, null, !dbg !1700
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !1703

if.then7:                                         ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1704
  %17 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1705
  %altPath8 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %17, i32 0, i32 5, !dbg !1706
  %18 = load i8*, i8** %altPath8, align 8, !dbg !1706
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i32 0, i32 0), i8* %18), !dbg !1707
  br label %if.end10, !dbg !1707

if.end10:                                         ; preds = %if.then7, %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1708
  %20 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1709
  %lifetime = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %20, i32 0, i32 7, !dbg !1710
  %21 = load i32, i32* %lifetime, align 4, !dbg !1710
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i32 0, i32 0), i32 %21), !dbg !1711
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1712
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0)), !dbg !1713
  %23 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP.addr, align 8, !dbg !1714
  %objectList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %23, i32 0, i32 10, !dbg !1716
  %24 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectList, align 8, !dbg !1716
  store %struct._lwm2m_client_object_* %24, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1717
  br label %for.cond, !dbg !1718

for.cond:                                         ; preds = %for.inc30, %if.end10
  %25 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1719
  %cmp = icmp ne %struct._lwm2m_client_object_* %25, null, !dbg !1721
  br i1 %cmp, label %for.body, label %for.end32, !dbg !1722

for.body:                                         ; preds = %for.cond
  %26 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1723
  %instanceList = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %26, i32 0, i32 2, !dbg !1726
  %27 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList, align 8, !dbg !1726
  %cmp14 = icmp eq %struct._lwm2m_list_t* %27, null, !dbg !1727
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !1728

if.then16:                                        ; preds = %for.body
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1729
  %29 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1731
  %id = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %29, i32 0, i32 1, !dbg !1732
  %30 = load i16, i16* %id, align 8, !dbg !1732
  %conv17 = zext i16 %30 to i32, !dbg !1731
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i32 %conv17), !dbg !1733
  br label %if.end29, !dbg !1734

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %instanceP, metadata !1735, metadata !1190), !dbg !1737
  %31 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1738
  %instanceList19 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %31, i32 0, i32 2, !dbg !1740
  %32 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList19, align 8, !dbg !1740
  store %struct._lwm2m_list_t* %32, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !1741
  br label %for.cond20, !dbg !1742

for.cond20:                                       ; preds = %for.inc, %if.else
  %33 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !1743
  %cmp21 = icmp ne %struct._lwm2m_list_t* %33, null, !dbg !1745
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !1746

for.body23:                                       ; preds = %for.cond20
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1747
  %35 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1749
  %id24 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %35, i32 0, i32 1, !dbg !1750
  %36 = load i16, i16* %id24, align 8, !dbg !1750
  %conv25 = zext i16 %36 to i32, !dbg !1749
  %37 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !1751
  %id26 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %37, i32 0, i32 1, !dbg !1752
  %38 = load i16, i16* %id26, align 8, !dbg !1752
  %conv27 = zext i16 %38 to i32, !dbg !1751
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0), i32 %conv25, i32 %conv27), !dbg !1753
  br label %for.inc, !dbg !1754

for.inc:                                          ; preds = %for.body23
  %39 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !1755
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %39, i32 0, i32 0, !dbg !1756
  %40 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next, align 8, !dbg !1756
  store %struct._lwm2m_list_t* %40, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !1757
  br label %for.cond20, !dbg !1758, !llvm.loop !1759

for.end:                                          ; preds = %for.cond20
  br label %if.end29

if.end29:                                         ; preds = %for.end, %if.then16
  br label %for.inc30, !dbg !1761

for.inc30:                                        ; preds = %if.end29
  %41 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1762
  %next31 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %41, i32 0, i32 0, !dbg !1763
  %42 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %next31, align 8, !dbg !1763
  store %struct._lwm2m_client_object_* %42, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !1764
  br label %for.cond, !dbg !1765, !llvm.loop !1766

for.end32:                                        ; preds = %for.cond
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1768
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !1769
  ret void, !dbg !1770
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @prv_dump_binding(i32 %binding) #0 !dbg !1771 {
entry:
  %retval = alloca i8*, align 8
  %binding.addr = alloca i32, align 4
  store i32 %binding, i32* %binding.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %binding.addr, metadata !1774, metadata !1190), !dbg !1775
  %0 = load i32, i32* %binding.addr, align 4, !dbg !1776
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
  ], !dbg !1777

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0), i8** %retval, align 8, !dbg !1778
  br label %return, !dbg !1778

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i32 0, i32 0), i8** %retval, align 8, !dbg !1780
  br label %return, !dbg !1780

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i8** %retval, align 8, !dbg !1781
  br label %return, !dbg !1781

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8** %retval, align 8, !dbg !1782
  br label %return, !dbg !1782

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i8** %retval, align 8, !dbg !1783
  br label %return, !dbg !1783

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0), i8** %retval, align 8, !dbg !1784
  br label %return, !dbg !1784

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.67, i32 0, i32 0), i8** %retval, align 8, !dbg !1785
  br label %return, !dbg !1785

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.68, i32 0, i32 0), i8** %retval, align 8, !dbg !1786
  br label %return, !dbg !1786

return:                                           ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !1787
  ret i8* %1, !dbg !1787
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_output_clients(i8* %buffer, i8* %user_data) #0 !dbg !1788 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %targetP = alloca %struct._lwm2m_client_*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1789, metadata !1190), !dbg !1790
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !1791, metadata !1190), !dbg !1792
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !1793, metadata !1190), !dbg !1794
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !1795
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !1796
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1794
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %targetP, metadata !1797, metadata !1190), !dbg !1798
  %2 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1799
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %2, i32 0, i32 0, !dbg !1800
  %3 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !1800
  store %struct._lwm2m_client_* %3, %struct._lwm2m_client_** %targetP, align 8, !dbg !1801
  %4 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !1802
  %cmp = icmp eq %struct._lwm2m_client_* %4, null, !dbg !1804
  br i1 %cmp, label %if.then, label %if.end, !dbg !1805

if.then:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1806
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0)), !dbg !1808
  br label %for.end, !dbg !1809

if.end:                                           ; preds = %entry
  %6 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1810
  %clientList1 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %6, i32 0, i32 0, !dbg !1812
  %7 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList1, align 8, !dbg !1812
  store %struct._lwm2m_client_* %7, %struct._lwm2m_client_** %targetP, align 8, !dbg !1813
  br label %for.cond, !dbg !1814

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !1815
  %cmp2 = icmp ne %struct._lwm2m_client_* %8, null, !dbg !1817
  br i1 %cmp2, label %for.body, label %for.end, !dbg !1818

for.body:                                         ; preds = %for.cond
  %9 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !1819
  call void @prv_dump_client(%struct._lwm2m_client_* %9), !dbg !1821
  br label %for.inc, !dbg !1822

for.inc:                                          ; preds = %for.body
  %10 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !1823
  %next = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %10, i32 0, i32 0, !dbg !1824
  %11 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %next, align 8, !dbg !1824
  store %struct._lwm2m_client_* %11, %struct._lwm2m_client_** %targetP, align 8, !dbg !1825
  br label %for.cond, !dbg !1826, !llvm.loop !1827

for.end:                                          ; preds = %for.cond, %if.then
  ret void, !dbg !1829
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_read_client(i8* %buffer, i8* %user_data) #0 !dbg !1830 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1831, metadata !1190), !dbg !1832
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !1833, metadata !1190), !dbg !1834
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !1835, metadata !1190), !dbg !1836
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !1837
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !1838
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1836
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !1839, metadata !1190), !dbg !1840
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !1841, metadata !1190), !dbg !1842
  call void @llvm.dbg.declare(metadata i8** %end, metadata !1843, metadata !1190), !dbg !1844
  store i8* null, i8** %end, align 8, !dbg !1844
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1845, metadata !1190), !dbg !1846
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !1847
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !1848
  store i32 %call, i32* %result, align 4, !dbg !1849
  %3 = load i32, i32* %result, align 4, !dbg !1850
  %cmp = icmp ne i32 %3, 1, !dbg !1852
  br i1 %cmp, label %if.then, label %if.end, !dbg !1853

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !1854

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !1855
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !1856
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !1857
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !1858
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !1858
  %6 = load i8, i8* %arrayidx, align 1, !dbg !1858
  %conv = sext i8 %6 to i32, !dbg !1858
  %cmp2 = icmp eq i32 %conv, 0, !dbg !1860
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !1861

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !1862

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !1863
  %8 = load i8*, i8** %end, align 8, !dbg !1864
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !1865
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !1866
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !1866
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1866
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !1867
  store i32 %call6, i32* %result, align 4, !dbg !1868
  %10 = load i32, i32* %result, align 4, !dbg !1869
  %cmp7 = icmp eq i32 %10, 0, !dbg !1871
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1872

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !1873

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !1874
  %call11 = call i32 @check_end_of_args(i8* %11), !dbg !1876
  %tobool = icmp ne i32 %call11, 0, !dbg !1876
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !1877

if.then12:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !1878

if.end13:                                         ; preds = %if.end10
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1879
  %13 = load i16, i16* %clientId, align 2, !dbg !1880
  %call14 = call i32 @lwm2m_dm_read(%struct.lwm2m_context_t* %12, i16 zeroext %13, %struct.lwm2m_uri_t* %uri, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !1881
  store i32 %call14, i32* %result, align 4, !dbg !1882
  %14 = load i32, i32* %result, align 4, !dbg !1883
  %cmp15 = icmp eq i32 %14, 0, !dbg !1885
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !1886

if.then17:                                        ; preds = %if.end13
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1887
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !1889
  br label %if.end20, !dbg !1890

if.else:                                          ; preds = %if.end13
  %16 = load i32, i32* %result, align 4, !dbg !1891
  %conv19 = trunc i32 %16 to i8, !dbg !1891
  call void @prv_print_error(i8 zeroext %conv19), !dbg !1893
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %return, !dbg !1894

syntax_error:                                     ; preds = %if.then12, %if.then9, %if.then4, %if.then
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1895
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !1896
  br label %return, !dbg !1897

return:                                           ; preds = %syntax_error, %if.end20
  ret void, !dbg !1897
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_discover_client(i8* %buffer, i8* %user_data) #0 !dbg !1898 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1899, metadata !1190), !dbg !1900
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !1901, metadata !1190), !dbg !1902
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !1903, metadata !1190), !dbg !1904
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !1905
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !1906
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1904
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !1907, metadata !1190), !dbg !1908
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !1909, metadata !1190), !dbg !1910
  call void @llvm.dbg.declare(metadata i8** %end, metadata !1911, metadata !1190), !dbg !1912
  store i8* null, i8** %end, align 8, !dbg !1912
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1913, metadata !1190), !dbg !1914
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !1915
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !1916
  store i32 %call, i32* %result, align 4, !dbg !1917
  %3 = load i32, i32* %result, align 4, !dbg !1918
  %cmp = icmp ne i32 %3, 1, !dbg !1920
  br i1 %cmp, label %if.then, label %if.end, !dbg !1921

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !1922

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !1923
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !1924
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !1925
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !1926
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !1926
  %6 = load i8, i8* %arrayidx, align 1, !dbg !1926
  %conv = sext i8 %6 to i32, !dbg !1926
  %cmp2 = icmp eq i32 %conv, 0, !dbg !1928
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !1929

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !1930

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !1931
  %8 = load i8*, i8** %end, align 8, !dbg !1932
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !1933
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !1934
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !1934
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1934
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !1935
  store i32 %call6, i32* %result, align 4, !dbg !1936
  %10 = load i32, i32* %result, align 4, !dbg !1937
  %cmp7 = icmp eq i32 %10, 0, !dbg !1939
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1940

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !1941

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !1942
  %call11 = call i32 @check_end_of_args(i8* %11), !dbg !1944
  %tobool = icmp ne i32 %call11, 0, !dbg !1944
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !1945

if.then12:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !1946

if.end13:                                         ; preds = %if.end10
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1947
  %13 = load i16, i16* %clientId, align 2, !dbg !1948
  %call14 = call i32 @lwm2m_dm_discover(%struct.lwm2m_context_t* %12, i16 zeroext %13, %struct.lwm2m_uri_t* %uri, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !1949
  store i32 %call14, i32* %result, align 4, !dbg !1950
  %14 = load i32, i32* %result, align 4, !dbg !1951
  %cmp15 = icmp eq i32 %14, 0, !dbg !1953
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !1954

if.then17:                                        ; preds = %if.end13
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1955
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !1957
  br label %if.end20, !dbg !1958

if.else:                                          ; preds = %if.end13
  %16 = load i32, i32* %result, align 4, !dbg !1959
  %conv19 = trunc i32 %16 to i8, !dbg !1959
  call void @prv_print_error(i8 zeroext %conv19), !dbg !1961
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %return, !dbg !1962

syntax_error:                                     ; preds = %if.then12, %if.then9, %if.then4, %if.then
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1963
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !1964
  br label %return, !dbg !1965

return:                                           ; preds = %syntax_error, %if.end20
  ret void, !dbg !1965
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_write_client(i8* %buffer, i8* %user_data) #0 !dbg !1966 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1967, metadata !1190), !dbg !1968
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !1969, metadata !1190), !dbg !1970
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !1971, metadata !1190), !dbg !1972
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !1973
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !1974
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !1972
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !1975, metadata !1190), !dbg !1976
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !1977, metadata !1190), !dbg !1978
  call void @llvm.dbg.declare(metadata i8** %end, metadata !1979, metadata !1190), !dbg !1980
  store i8* null, i8** %end, align 8, !dbg !1980
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1981, metadata !1190), !dbg !1982
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !1983
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !1984
  store i32 %call, i32* %result, align 4, !dbg !1985
  %3 = load i32, i32* %result, align 4, !dbg !1986
  %cmp = icmp ne i32 %3, 1, !dbg !1988
  br i1 %cmp, label %if.then, label %if.end, !dbg !1989

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !1990

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !1991
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !1992
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !1993
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !1994
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !1994
  %6 = load i8, i8* %arrayidx, align 1, !dbg !1994
  %conv = sext i8 %6 to i32, !dbg !1994
  %cmp2 = icmp eq i32 %conv, 0, !dbg !1996
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !1997

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !1998

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !1999
  %8 = load i8*, i8** %end, align 8, !dbg !2000
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2001
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2002
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2002
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2002
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2003
  store i32 %call6, i32* %result, align 4, !dbg !2004
  %10 = load i32, i32* %result, align 4, !dbg !2005
  %cmp7 = icmp eq i32 %10, 0, !dbg !2007
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2008

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2009

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !2010
  %call11 = call i8* @get_next_arg(i8* %11, i8** %end), !dbg !2011
  store i8* %call11, i8** %buffer.addr, align 8, !dbg !2012
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !2013
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !2013
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !2013
  %conv13 = sext i8 %13 to i32, !dbg !2013
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !2015
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2016

if.then16:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2017

if.end17:                                         ; preds = %if.end10
  %14 = load i8*, i8** %end, align 8, !dbg !2018
  %call18 = call i32 @check_end_of_args(i8* %14), !dbg !2020
  %tobool = icmp ne i32 %call18, 0, !dbg !2020
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !2021

if.then19:                                        ; preds = %if.end17
  br label %syntax_error, !dbg !2022

if.end20:                                         ; preds = %if.end17
  %15 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2023
  %16 = load i16, i16* %clientId, align 2, !dbg !2024
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !2025
  %18 = load i8*, i8** %end, align 8, !dbg !2026
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !2027
  %sub.ptr.lhs.cast21 = ptrtoint i8* %18 to i64, !dbg !2028
  %sub.ptr.rhs.cast22 = ptrtoint i8* %19 to i64, !dbg !2028
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !2028
  %conv24 = trunc i64 %sub.ptr.sub23 to i32, !dbg !2026
  %call25 = call i32 @lwm2m_dm_write(%struct.lwm2m_context_t* %15, i16 zeroext %16, %struct.lwm2m_uri_t* %uri, i32 0, i8* %17, i32 %conv24, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2029
  store i32 %call25, i32* %result, align 4, !dbg !2030
  %20 = load i32, i32* %result, align 4, !dbg !2031
  %cmp26 = icmp eq i32 %20, 0, !dbg !2033
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !2034

if.then28:                                        ; preds = %if.end20
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2035
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2037
  br label %if.end31, !dbg !2038

if.else:                                          ; preds = %if.end20
  %22 = load i32, i32* %result, align 4, !dbg !2039
  %conv30 = trunc i32 %22 to i8, !dbg !2039
  call void @prv_print_error(i8 zeroext %conv30), !dbg !2041
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then28
  br label %return, !dbg !2042

syntax_error:                                     ; preds = %if.then19, %if.then16, %if.then9, %if.then4, %if.then
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2043
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2044
  br label %return, !dbg !2045

return:                                           ; preds = %syntax_error, %if.end31
  ret void, !dbg !2045
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_time_client(i8* %buffer, i8* %user_data) #0 !dbg !2046 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  %attr = alloca %struct.lwm2m_attributes_t, align 8
  %nb = alloca i32, align 4
  %value = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2047, metadata !1190), !dbg !2048
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2049, metadata !1190), !dbg !2050
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2051, metadata !1190), !dbg !2052
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2053
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2054
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2052
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2055, metadata !1190), !dbg !2056
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2057, metadata !1190), !dbg !2058
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2059, metadata !1190), !dbg !2060
  store i8* null, i8** %end, align 8, !dbg !2060
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2061, metadata !1190), !dbg !2062
  call void @llvm.dbg.declare(metadata %struct.lwm2m_attributes_t* %attr, metadata !2063, metadata !1190), !dbg !2074
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !2075, metadata !1190), !dbg !2076
  call void @llvm.dbg.declare(metadata i32* %value, metadata !2077, metadata !1190), !dbg !2078
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2079
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2080
  store i32 %call, i32* %result, align 4, !dbg !2081
  %3 = load i32, i32* %result, align 4, !dbg !2082
  %cmp = icmp ne i32 %3, 1, !dbg !2084
  br i1 %cmp, label %if.then, label %if.end, !dbg !2085

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2086

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2087
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2088
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2089
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2090
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2090
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2090
  %conv = sext i8 %6 to i32, !dbg !2090
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2092
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2093

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2094

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2095
  %8 = load i8*, i8** %end, align 8, !dbg !2096
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2097
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2098
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2098
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2098
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2099
  store i32 %call6, i32* %result, align 4, !dbg !2100
  %10 = load i32, i32* %result, align 4, !dbg !2101
  %cmp7 = icmp eq i32 %10, 0, !dbg !2103
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2104

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2105

if.end10:                                         ; preds = %if.end5
  %11 = bitcast %struct.lwm2m_attributes_t* %attr to i8*, !dbg !2106
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 40, i32 8, i1 false), !dbg !2106
  %toSet = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 0, !dbg !2107
  store i8 3, i8* %toSet, align 8, !dbg !2108
  %12 = load i8*, i8** %end, align 8, !dbg !2109
  %call11 = call i8* @get_next_arg(i8* %12, i8** %end), !dbg !2110
  store i8* %call11, i8** %buffer.addr, align 8, !dbg !2111
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !2112
  %arrayidx12 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !2112
  %14 = load i8, i8* %arrayidx12, align 1, !dbg !2112
  %conv13 = sext i8 %14 to i32, !dbg !2112
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !2114
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2115

if.then16:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2116

if.end17:                                         ; preds = %if.end10
  %15 = load i8*, i8** %buffer.addr, align 8, !dbg !2117
  %call18 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i32* %value) #7, !dbg !2118
  store i32 %call18, i32* %nb, align 4, !dbg !2119
  %16 = load i32, i32* %nb, align 4, !dbg !2120
  %cmp19 = icmp ne i32 %16, 1, !dbg !2122
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2123

if.then21:                                        ; preds = %if.end17
  br label %syntax_error, !dbg !2124

if.end22:                                         ; preds = %if.end17
  %17 = load i32, i32* %value, align 4, !dbg !2125
  %cmp23 = icmp slt i32 %17, 0, !dbg !2127
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2128

if.then25:                                        ; preds = %if.end22
  br label %syntax_error, !dbg !2129

if.end26:                                         ; preds = %if.end22
  %18 = load i32, i32* %value, align 4, !dbg !2130
  %minPeriod = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 2, !dbg !2131
  store i32 %18, i32* %minPeriod, align 4, !dbg !2132
  %19 = load i8*, i8** %end, align 8, !dbg !2133
  %call27 = call i8* @get_next_arg(i8* %19, i8** %end), !dbg !2134
  store i8* %call27, i8** %buffer.addr, align 8, !dbg !2135
  %20 = load i8*, i8** %buffer.addr, align 8, !dbg !2136
  %arrayidx28 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !2136
  %21 = load i8, i8* %arrayidx28, align 1, !dbg !2136
  %conv29 = sext i8 %21 to i32, !dbg !2136
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !2138
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !2139

if.then32:                                        ; preds = %if.end26
  br label %syntax_error, !dbg !2140

if.end33:                                         ; preds = %if.end26
  %22 = load i8*, i8** %buffer.addr, align 8, !dbg !2141
  %call34 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i32* %value) #7, !dbg !2142
  store i32 %call34, i32* %nb, align 4, !dbg !2143
  %23 = load i32, i32* %nb, align 4, !dbg !2144
  %cmp35 = icmp ne i32 %23, 1, !dbg !2146
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !2147

if.then37:                                        ; preds = %if.end33
  br label %syntax_error, !dbg !2148

if.end38:                                         ; preds = %if.end33
  %24 = load i32, i32* %value, align 4, !dbg !2149
  %cmp39 = icmp slt i32 %24, 0, !dbg !2151
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !2152

if.then41:                                        ; preds = %if.end38
  br label %syntax_error, !dbg !2153

if.end42:                                         ; preds = %if.end38
  %25 = load i32, i32* %value, align 4, !dbg !2154
  %maxPeriod = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 3, !dbg !2155
  store i32 %25, i32* %maxPeriod, align 8, !dbg !2156
  %26 = load i8*, i8** %end, align 8, !dbg !2157
  %call43 = call i32 @check_end_of_args(i8* %26), !dbg !2159
  %tobool = icmp ne i32 %call43, 0, !dbg !2159
  br i1 %tobool, label %if.end45, label %if.then44, !dbg !2160

if.then44:                                        ; preds = %if.end42
  br label %syntax_error, !dbg !2161

if.end45:                                         ; preds = %if.end42
  %27 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2162
  %28 = load i16, i16* %clientId, align 2, !dbg !2163
  %call46 = call i32 @lwm2m_dm_write_attributes(%struct.lwm2m_context_t* %27, i16 zeroext %28, %struct.lwm2m_uri_t* %uri, %struct.lwm2m_attributes_t* %attr, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2164
  store i32 %call46, i32* %result, align 4, !dbg !2165
  %29 = load i32, i32* %result, align 4, !dbg !2166
  %cmp47 = icmp eq i32 %29, 0, !dbg !2168
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !2169

if.then49:                                        ; preds = %if.end45
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2170
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2172
  br label %if.end52, !dbg !2173

if.else:                                          ; preds = %if.end45
  %31 = load i32, i32* %result, align 4, !dbg !2174
  %conv51 = trunc i32 %31 to i8, !dbg !2174
  call void @prv_print_error(i8 zeroext %conv51), !dbg !2176
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then49
  br label %return, !dbg !2177

syntax_error:                                     ; preds = %if.then44, %if.then41, %if.then37, %if.then32, %if.then25, %if.then21, %if.then16, %if.then9, %if.then4, %if.then
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2178
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2179
  br label %return, !dbg !2180

return:                                           ; preds = %syntax_error, %if.end52
  ret void, !dbg !2180
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_attr_client(i8* %buffer, i8* %user_data) #0 !dbg !2181 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  %attr = alloca %struct.lwm2m_attributes_t, align 8
  %nb = alloca i32, align 4
  %value = alloca float, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2182, metadata !1190), !dbg !2183
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2184, metadata !1190), !dbg !2185
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2186, metadata !1190), !dbg !2187
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2188
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2189
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2187
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2190, metadata !1190), !dbg !2191
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2192, metadata !1190), !dbg !2193
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2194, metadata !1190), !dbg !2195
  store i8* null, i8** %end, align 8, !dbg !2195
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2196, metadata !1190), !dbg !2197
  call void @llvm.dbg.declare(metadata %struct.lwm2m_attributes_t* %attr, metadata !2198, metadata !1190), !dbg !2199
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !2200, metadata !1190), !dbg !2201
  call void @llvm.dbg.declare(metadata float* %value, metadata !2202, metadata !1190), !dbg !2203
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2204
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2205
  store i32 %call, i32* %result, align 4, !dbg !2206
  %3 = load i32, i32* %result, align 4, !dbg !2207
  %cmp = icmp ne i32 %3, 1, !dbg !2209
  br i1 %cmp, label %if.then, label %if.end, !dbg !2210

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2211

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2212
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2213
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2214
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2215
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2215
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2215
  %conv = sext i8 %6 to i32, !dbg !2215
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2217
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2218

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2219

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2220
  %8 = load i8*, i8** %end, align 8, !dbg !2221
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2222
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2223
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2223
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2223
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2224
  store i32 %call6, i32* %result, align 4, !dbg !2225
  %10 = load i32, i32* %result, align 4, !dbg !2226
  %cmp7 = icmp eq i32 %10, 0, !dbg !2228
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2229

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2230

if.end10:                                         ; preds = %if.end5
  %11 = bitcast %struct.lwm2m_attributes_t* %attr to i8*, !dbg !2231
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 40, i32 8, i1 false), !dbg !2231
  %toSet = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 0, !dbg !2232
  store i8 12, i8* %toSet, align 8, !dbg !2233
  %12 = load i8*, i8** %end, align 8, !dbg !2234
  %call11 = call i8* @get_next_arg(i8* %12, i8** %end), !dbg !2235
  store i8* %call11, i8** %buffer.addr, align 8, !dbg !2236
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !2237
  %arrayidx12 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !2237
  %14 = load i8, i8* %arrayidx12, align 1, !dbg !2237
  %conv13 = sext i8 %14 to i32, !dbg !2237
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !2239
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2240

if.then16:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2241

if.end17:                                         ; preds = %if.end10
  %15 = load i8*, i8** %buffer.addr, align 8, !dbg !2242
  %call18 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i32 0, i32 0), float* %value) #7, !dbg !2243
  store i32 %call18, i32* %nb, align 4, !dbg !2244
  %16 = load i32, i32* %nb, align 4, !dbg !2245
  %cmp19 = icmp ne i32 %16, 1, !dbg !2247
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2248

if.then21:                                        ; preds = %if.end17
  br label %syntax_error, !dbg !2249

if.end22:                                         ; preds = %if.end17
  %17 = load float, float* %value, align 4, !dbg !2250
  %conv23 = fpext float %17 to double, !dbg !2250
  %lessThan = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 5, !dbg !2251
  store double %conv23, double* %lessThan, align 8, !dbg !2252
  %18 = load i8*, i8** %end, align 8, !dbg !2253
  %call24 = call i8* @get_next_arg(i8* %18, i8** %end), !dbg !2254
  store i8* %call24, i8** %buffer.addr, align 8, !dbg !2255
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !2256
  %arrayidx25 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !2256
  %20 = load i8, i8* %arrayidx25, align 1, !dbg !2256
  %conv26 = sext i8 %20 to i32, !dbg !2256
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !2258
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !2259

if.then29:                                        ; preds = %if.end22
  br label %syntax_error, !dbg !2260

if.end30:                                         ; preds = %if.end22
  %21 = load i8*, i8** %buffer.addr, align 8, !dbg !2261
  %call31 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i32 0, i32 0), float* %value) #7, !dbg !2262
  store i32 %call31, i32* %nb, align 4, !dbg !2263
  %22 = load i32, i32* %nb, align 4, !dbg !2264
  %cmp32 = icmp ne i32 %22, 1, !dbg !2266
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !2267

if.then34:                                        ; preds = %if.end30
  br label %syntax_error, !dbg !2268

if.end35:                                         ; preds = %if.end30
  %23 = load float, float* %value, align 4, !dbg !2269
  %conv36 = fpext float %23 to double, !dbg !2269
  %greaterThan = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 4, !dbg !2270
  store double %conv36, double* %greaterThan, align 8, !dbg !2271
  %24 = load i8*, i8** %end, align 8, !dbg !2272
  %call37 = call i8* @get_next_arg(i8* %24, i8** %end), !dbg !2273
  store i8* %call37, i8** %buffer.addr, align 8, !dbg !2274
  %25 = load i8*, i8** %buffer.addr, align 8, !dbg !2275
  %arrayidx38 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !2275
  %26 = load i8, i8* %arrayidx38, align 1, !dbg !2275
  %conv39 = sext i8 %26 to i32, !dbg !2275
  %cmp40 = icmp ne i32 %conv39, 0, !dbg !2277
  br i1 %cmp40, label %if.then42, label %if.end52, !dbg !2278

if.then42:                                        ; preds = %if.end35
  %27 = load i8*, i8** %buffer.addr, align 8, !dbg !2279
  %call43 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i32 0, i32 0), float* %value) #7, !dbg !2281
  store i32 %call43, i32* %nb, align 4, !dbg !2282
  %28 = load i32, i32* %nb, align 4, !dbg !2283
  %cmp44 = icmp ne i32 %28, 1, !dbg !2285
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !2286

if.then46:                                        ; preds = %if.then42
  br label %syntax_error, !dbg !2287

if.end47:                                         ; preds = %if.then42
  %29 = load float, float* %value, align 4, !dbg !2288
  %conv48 = fpext float %29 to double, !dbg !2288
  %step = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 6, !dbg !2289
  store double %conv48, double* %step, align 8, !dbg !2290
  %toSet49 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 0, !dbg !2291
  %30 = load i8, i8* %toSet49, align 8, !dbg !2292
  %conv50 = zext i8 %30 to i32, !dbg !2292
  %or = or i32 %conv50, 16, !dbg !2292
  %conv51 = trunc i32 %or to i8, !dbg !2292
  store i8 %conv51, i8* %toSet49, align 8, !dbg !2292
  br label %if.end52, !dbg !2293

if.end52:                                         ; preds = %if.end47, %if.end35
  %31 = load i8*, i8** %end, align 8, !dbg !2294
  %call53 = call i32 @check_end_of_args(i8* %31), !dbg !2296
  %tobool = icmp ne i32 %call53, 0, !dbg !2296
  br i1 %tobool, label %if.end55, label %if.then54, !dbg !2297

if.then54:                                        ; preds = %if.end52
  br label %syntax_error, !dbg !2298

if.end55:                                         ; preds = %if.end52
  %32 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2299
  %33 = load i16, i16* %clientId, align 2, !dbg !2300
  %call56 = call i32 @lwm2m_dm_write_attributes(%struct.lwm2m_context_t* %32, i16 zeroext %33, %struct.lwm2m_uri_t* %uri, %struct.lwm2m_attributes_t* %attr, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2301
  store i32 %call56, i32* %result, align 4, !dbg !2302
  %34 = load i32, i32* %result, align 4, !dbg !2303
  %cmp57 = icmp eq i32 %34, 0, !dbg !2305
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !2306

if.then59:                                        ; preds = %if.end55
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2307
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2309
  br label %if.end62, !dbg !2310

if.else:                                          ; preds = %if.end55
  %36 = load i32, i32* %result, align 4, !dbg !2311
  %conv61 = trunc i32 %36 to i8, !dbg !2311
  call void @prv_print_error(i8 zeroext %conv61), !dbg !2313
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then59
  br label %return, !dbg !2314

syntax_error:                                     ; preds = %if.then54, %if.then46, %if.then34, %if.then29, %if.then21, %if.then16, %if.then9, %if.then4, %if.then
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2315
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2316
  br label %return, !dbg !2317

return:                                           ; preds = %syntax_error, %if.end62
  ret void, !dbg !2317
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_clear_client(i8* %buffer, i8* %user_data) #0 !dbg !2318 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  %attr = alloca %struct.lwm2m_attributes_t, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2319, metadata !1190), !dbg !2320
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2321, metadata !1190), !dbg !2322
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2323, metadata !1190), !dbg !2324
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2325
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2326
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2324
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2327, metadata !1190), !dbg !2328
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2329, metadata !1190), !dbg !2330
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2331, metadata !1190), !dbg !2332
  store i8* null, i8** %end, align 8, !dbg !2332
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2333, metadata !1190), !dbg !2334
  call void @llvm.dbg.declare(metadata %struct.lwm2m_attributes_t* %attr, metadata !2335, metadata !1190), !dbg !2336
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2337
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2338
  store i32 %call, i32* %result, align 4, !dbg !2339
  %3 = load i32, i32* %result, align 4, !dbg !2340
  %cmp = icmp ne i32 %3, 1, !dbg !2342
  br i1 %cmp, label %if.then, label %if.end, !dbg !2343

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2344

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2345
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2346
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2347
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2348
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2348
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2348
  %conv = sext i8 %6 to i32, !dbg !2348
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2350
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2351

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2352

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2353
  %8 = load i8*, i8** %end, align 8, !dbg !2354
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2356
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2356
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2356
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2357
  store i32 %call6, i32* %result, align 4, !dbg !2358
  %10 = load i32, i32* %result, align 4, !dbg !2359
  %cmp7 = icmp eq i32 %10, 0, !dbg !2361
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2362

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2363

if.end10:                                         ; preds = %if.end5
  %11 = bitcast %struct.lwm2m_attributes_t* %attr to i8*, !dbg !2364
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 40, i32 8, i1 false), !dbg !2364
  %toClear = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %attr, i32 0, i32 1, !dbg !2365
  store i8 31, i8* %toClear, align 1, !dbg !2366
  %12 = load i8*, i8** %end, align 8, !dbg !2367
  %call11 = call i8* @get_next_arg(i8* %12, i8** %end), !dbg !2368
  store i8* %call11, i8** %buffer.addr, align 8, !dbg !2369
  %13 = load i8*, i8** %end, align 8, !dbg !2370
  %call12 = call i32 @check_end_of_args(i8* %13), !dbg !2372
  %tobool = icmp ne i32 %call12, 0, !dbg !2372
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !2373

if.then13:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2374

if.end14:                                         ; preds = %if.end10
  %14 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2375
  %15 = load i16, i16* %clientId, align 2, !dbg !2376
  %call15 = call i32 @lwm2m_dm_write_attributes(%struct.lwm2m_context_t* %14, i16 zeroext %15, %struct.lwm2m_uri_t* %uri, %struct.lwm2m_attributes_t* %attr, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2377
  store i32 %call15, i32* %result, align 4, !dbg !2378
  %16 = load i32, i32* %result, align 4, !dbg !2379
  %cmp16 = icmp eq i32 %16, 0, !dbg !2381
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !2382

if.then18:                                        ; preds = %if.end14
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2383
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2385
  br label %if.end21, !dbg !2386

if.else:                                          ; preds = %if.end14
  %18 = load i32, i32* %result, align 4, !dbg !2387
  %conv20 = trunc i32 %18 to i8, !dbg !2387
  call void @prv_print_error(i8 zeroext %conv20), !dbg !2389
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  br label %return, !dbg !2390

syntax_error:                                     ; preds = %if.then13, %if.then9, %if.then4, %if.then
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2391
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2392
  br label %return, !dbg !2393

return:                                           ; preds = %syntax_error, %if.end21
  ret void, !dbg !2393
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_exec_client(i8* %buffer, i8* %user_data) #0 !dbg !2394 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2395, metadata !1190), !dbg !2396
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2397, metadata !1190), !dbg !2398
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2399, metadata !1190), !dbg !2400
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2401
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2402
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2400
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2403, metadata !1190), !dbg !2404
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2405, metadata !1190), !dbg !2406
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2407, metadata !1190), !dbg !2408
  store i8* null, i8** %end, align 8, !dbg !2408
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2409, metadata !1190), !dbg !2410
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2411
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2412
  store i32 %call, i32* %result, align 4, !dbg !2413
  %3 = load i32, i32* %result, align 4, !dbg !2414
  %cmp = icmp ne i32 %3, 1, !dbg !2416
  br i1 %cmp, label %if.then, label %if.end, !dbg !2417

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2418

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2419
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2420
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2421
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2422
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2422
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2422
  %conv = sext i8 %6 to i32, !dbg !2422
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2424
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2425

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2426

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2427
  %8 = load i8*, i8** %end, align 8, !dbg !2428
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2429
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2430
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2430
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2430
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2431
  store i32 %call6, i32* %result, align 4, !dbg !2432
  %10 = load i32, i32* %result, align 4, !dbg !2433
  %cmp7 = icmp eq i32 %10, 0, !dbg !2435
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2436

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2437

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !2438
  %call11 = call i8* @get_next_arg(i8* %11, i8** %end), !dbg !2439
  store i8* %call11, i8** %buffer.addr, align 8, !dbg !2440
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !2441
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !2441
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !2441
  %conv13 = sext i8 %13 to i32, !dbg !2441
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !2443
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !2444

if.then16:                                        ; preds = %if.end10
  %14 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2445
  %15 = load i16, i16* %clientId, align 2, !dbg !2447
  %call17 = call i32 @lwm2m_dm_execute(%struct.lwm2m_context_t* %14, i16 zeroext %15, %struct.lwm2m_uri_t* %uri, i32 0, i8* null, i32 0, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2448
  store i32 %call17, i32* %result, align 4, !dbg !2449
  br label %if.end26, !dbg !2450

if.else:                                          ; preds = %if.end10
  %16 = load i8*, i8** %end, align 8, !dbg !2451
  %call18 = call i32 @check_end_of_args(i8* %16), !dbg !2454
  %tobool = icmp ne i32 %call18, 0, !dbg !2454
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !2455

if.then19:                                        ; preds = %if.else
  br label %syntax_error, !dbg !2456

if.end20:                                         ; preds = %if.else
  %17 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2457
  %18 = load i16, i16* %clientId, align 2, !dbg !2458
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !2459
  %20 = load i8*, i8** %end, align 8, !dbg !2460
  %21 = load i8*, i8** %buffer.addr, align 8, !dbg !2461
  %sub.ptr.lhs.cast21 = ptrtoint i8* %20 to i64, !dbg !2462
  %sub.ptr.rhs.cast22 = ptrtoint i8* %21 to i64, !dbg !2462
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !2462
  %conv24 = trunc i64 %sub.ptr.sub23 to i32, !dbg !2460
  %call25 = call i32 @lwm2m_dm_execute(%struct.lwm2m_context_t* %17, i16 zeroext %18, %struct.lwm2m_uri_t* %uri, i32 0, i8* %19, i32 %conv24, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2463
  store i32 %call25, i32* %result, align 4, !dbg !2464
  br label %if.end26

if.end26:                                         ; preds = %if.end20, %if.then16
  %22 = load i32, i32* %result, align 4, !dbg !2465
  %cmp27 = icmp eq i32 %22, 0, !dbg !2467
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !2468

if.then29:                                        ; preds = %if.end26
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2469
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2471
  br label %if.end33, !dbg !2472

if.else31:                                        ; preds = %if.end26
  %24 = load i32, i32* %result, align 4, !dbg !2473
  %conv32 = trunc i32 %24 to i8, !dbg !2473
  call void @prv_print_error(i8 zeroext %conv32), !dbg !2475
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %return, !dbg !2476

syntax_error:                                     ; preds = %if.then19, %if.then9, %if.then4, %if.then
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2477
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2478
  br label %return, !dbg !2479

return:                                           ; preds = %syntax_error, %if.end33
  ret void, !dbg !2479
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_delete_client(i8* %buffer, i8* %user_data) #0 !dbg !2480 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2481, metadata !1190), !dbg !2482
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2483, metadata !1190), !dbg !2484
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2485, metadata !1190), !dbg !2486
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2487
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2488
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2486
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2489, metadata !1190), !dbg !2490
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2491, metadata !1190), !dbg !2492
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2493, metadata !1190), !dbg !2494
  store i8* null, i8** %end, align 8, !dbg !2494
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2495, metadata !1190), !dbg !2496
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2497
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2498
  store i32 %call, i32* %result, align 4, !dbg !2499
  %3 = load i32, i32* %result, align 4, !dbg !2500
  %cmp = icmp ne i32 %3, 1, !dbg !2502
  br i1 %cmp, label %if.then, label %if.end, !dbg !2503

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2504

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2505
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2506
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2507
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2508
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2508
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2508
  %conv = sext i8 %6 to i32, !dbg !2508
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2510
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2511

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2512

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2513
  %8 = load i8*, i8** %end, align 8, !dbg !2514
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2515
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2516
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2516
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2516
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2517
  store i32 %call6, i32* %result, align 4, !dbg !2518
  %10 = load i32, i32* %result, align 4, !dbg !2519
  %cmp7 = icmp eq i32 %10, 0, !dbg !2521
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2522

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2523

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !2524
  %call11 = call i32 @check_end_of_args(i8* %11), !dbg !2526
  %tobool = icmp ne i32 %call11, 0, !dbg !2526
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !2527

if.then12:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2528

if.end13:                                         ; preds = %if.end10
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2529
  %13 = load i16, i16* %clientId, align 2, !dbg !2530
  %call14 = call i32 @lwm2m_dm_delete(%struct.lwm2m_context_t* %12, i16 zeroext %13, %struct.lwm2m_uri_t* %uri, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2531
  store i32 %call14, i32* %result, align 4, !dbg !2532
  %14 = load i32, i32* %result, align 4, !dbg !2533
  %cmp15 = icmp eq i32 %14, 0, !dbg !2535
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2536

if.then17:                                        ; preds = %if.end13
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2537
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2539
  br label %if.end20, !dbg !2540

if.else:                                          ; preds = %if.end13
  %16 = load i32, i32* %result, align 4, !dbg !2541
  %conv19 = trunc i32 %16 to i8, !dbg !2541
  call void @prv_print_error(i8 zeroext %conv19), !dbg !2543
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %return, !dbg !2544

syntax_error:                                     ; preds = %if.then12, %if.then9, %if.then4, %if.then
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2545
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2546
  br label %return, !dbg !2547

return:                                           ; preds = %syntax_error, %if.end20
  ret void, !dbg !2547
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_create_client(i8* %buffer, i8* %user_data) #0 !dbg !2548 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  %temp_buffer = alloca i8*, align 8
  %temp_length = alloca i32, align 4
  %format = alloca i32, align 4
  %dataP = alloca %struct._lwm2m_data_t*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2549, metadata !1190), !dbg !2550
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2551, metadata !1190), !dbg !2552
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2553, metadata !1190), !dbg !2554
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2555
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2556
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2554
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2557, metadata !1190), !dbg !2558
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2559, metadata !1190), !dbg !2560
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2561, metadata !1190), !dbg !2562
  store i8* null, i8** %end, align 8, !dbg !2562
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2563, metadata !1190), !dbg !2564
  call void @llvm.dbg.declare(metadata i64* %value, metadata !2565, metadata !1190), !dbg !2566
  call void @llvm.dbg.declare(metadata i8** %temp_buffer, metadata !2567, metadata !1190), !dbg !2568
  store i8* null, i8** %temp_buffer, align 8, !dbg !2568
  call void @llvm.dbg.declare(metadata i32* %temp_length, metadata !2569, metadata !1190), !dbg !2570
  store i32 0, i32* %temp_length, align 4, !dbg !2570
  call void @llvm.dbg.declare(metadata i32* %format, metadata !2571, metadata !1190), !dbg !2572
  store i32 0, i32* %format, align 4, !dbg !2572
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2573
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2574
  store i32 %call, i32* %result, align 4, !dbg !2575
  %3 = load i32, i32* %result, align 4, !dbg !2576
  %cmp = icmp ne i32 %3, 1, !dbg !2578
  br i1 %cmp, label %if.then, label %if.end, !dbg !2579

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2580

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2581
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2582
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2583
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2584
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2584
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2584
  %conv = sext i8 %6 to i32, !dbg !2584
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2586
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2587

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2588

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2589
  %8 = load i8*, i8** %end, align 8, !dbg !2590
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2591
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2592
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2592
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2592
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2593
  store i32 %call6, i32* %result, align 4, !dbg !2594
  %10 = load i32, i32* %result, align 4, !dbg !2595
  %cmp7 = icmp eq i32 %10, 0, !dbg !2597
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2598

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2599

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !2600
  %call11 = call i8* @get_next_arg(i8* %11, i8** %end), !dbg !2601
  store i8* %call11, i8** %buffer.addr, align 8, !dbg !2602
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !2603
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !2603
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !2603
  %conv13 = sext i8 %13 to i32, !dbg !2603
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !2605
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2606

if.then16:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2607

if.end17:                                         ; preds = %if.end10
  %14 = load i8*, i8** %end, align 8, !dbg !2608
  %call18 = call i32 @check_end_of_args(i8* %14), !dbg !2610
  %tobool = icmp ne i32 %call18, 0, !dbg !2610
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !2611

if.then19:                                        ; preds = %if.end17
  br label %syntax_error, !dbg !2612

if.end20:                                         ; preds = %if.end17
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri, i32 0, i32 1, !dbg !2613
  %15 = load i16, i16* %objectId, align 2, !dbg !2613
  %conv21 = zext i16 %15 to i32, !dbg !2615
  %cmp22 = icmp eq i32 %conv21, 31024, !dbg !2616
  br i1 %cmp22, label %if.then24, label %if.end38, !dbg !2617

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP, metadata !2618, metadata !1190), !dbg !2647
  %16 = load i8*, i8** %buffer.addr, align 8, !dbg !2648
  %call25 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i32 0, i32 0), i64* %value) #7, !dbg !2650
  %cmp26 = icmp ne i32 1, %call25, !dbg !2651
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !2652

if.then28:                                        ; preds = %if.then24
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2653
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0)), !dbg !2655
  br label %return, !dbg !2656

if.end30:                                         ; preds = %if.then24
  %call31 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 1), !dbg !2657
  store %struct._lwm2m_data_t* %call31, %struct._lwm2m_data_t** %dataP, align 8, !dbg !2658
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !2659
  %cmp32 = icmp eq %struct._lwm2m_data_t* %18, null, !dbg !2661
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !2662

if.then34:                                        ; preds = %if.end30
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2663
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i32 0, i32 0)), !dbg !2665
  br label %return, !dbg !2666

if.end36:                                         ; preds = %if.end30
  %20 = load i64, i64* %value, align 8, !dbg !2667
  %21 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !2668
  call void @lwm2m_data_encode_int(i64 %20, %struct._lwm2m_data_t* %21), !dbg !2669
  %22 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !2670
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %22, i32 0, i32 1, !dbg !2671
  store i16 1, i16* %id, align 4, !dbg !2672
  store i32 11542, i32* %format, align 4, !dbg !2673
  %23 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !2674
  %call37 = call i32 @lwm2m_data_serialize(%struct.lwm2m_uri_t* null, i32 1, %struct._lwm2m_data_t* %23, i32* %format, i8** %temp_buffer), !dbg !2675
  store i32 %call37, i32* %temp_length, align 4, !dbg !2676
  br label %if.end38, !dbg !2677

if.end38:                                         ; preds = %if.end36, %if.end20
  %24 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2678
  %25 = load i16, i16* %clientId, align 2, !dbg !2679
  %26 = load i32, i32* %format, align 4, !dbg !2680
  %27 = load i8*, i8** %temp_buffer, align 8, !dbg !2681
  %28 = load i32, i32* %temp_length, align 4, !dbg !2682
  %call39 = call i32 @lwm2m_dm_create(%struct.lwm2m_context_t* %24, i16 zeroext %25, %struct.lwm2m_uri_t* %uri, i32 %26, i8* %27, i32 %28, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2683
  store i32 %call39, i32* %result, align 4, !dbg !2684
  %29 = load i32, i32* %result, align 4, !dbg !2685
  %cmp40 = icmp eq i32 %29, 0, !dbg !2687
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !2688

if.then42:                                        ; preds = %if.end38
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2689
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2691
  br label %if.end45, !dbg !2692

if.else:                                          ; preds = %if.end38
  %31 = load i32, i32* %result, align 4, !dbg !2693
  %conv44 = trunc i32 %31 to i8, !dbg !2693
  call void @prv_print_error(i8 zeroext %conv44), !dbg !2695
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then42
  br label %return, !dbg !2696

syntax_error:                                     ; preds = %if.then19, %if.then16, %if.then9, %if.then4, %if.then
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2697
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2698
  br label %return, !dbg !2699

return:                                           ; preds = %syntax_error, %if.end45, %if.then34, %if.then28
  ret void, !dbg !2699
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_observe_client(i8* %buffer, i8* %user_data) #0 !dbg !2700 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2701, metadata !1190), !dbg !2702
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2703, metadata !1190), !dbg !2704
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2705, metadata !1190), !dbg !2706
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2707
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2708
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2706
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2709, metadata !1190), !dbg !2710
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2711, metadata !1190), !dbg !2712
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2713, metadata !1190), !dbg !2714
  store i8* null, i8** %end, align 8, !dbg !2714
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2715, metadata !1190), !dbg !2716
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2717
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2718
  store i32 %call, i32* %result, align 4, !dbg !2719
  %3 = load i32, i32* %result, align 4, !dbg !2720
  %cmp = icmp ne i32 %3, 1, !dbg !2722
  br i1 %cmp, label %if.then, label %if.end, !dbg !2723

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2724

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2725
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2726
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2727
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2728
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2728
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2728
  %conv = sext i8 %6 to i32, !dbg !2728
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2730
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2731

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2732

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2733
  %8 = load i8*, i8** %end, align 8, !dbg !2734
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2735
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2736
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2736
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2736
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2737
  store i32 %call6, i32* %result, align 4, !dbg !2738
  %10 = load i32, i32* %result, align 4, !dbg !2739
  %cmp7 = icmp eq i32 %10, 0, !dbg !2741
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2742

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2743

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !2744
  %call11 = call i32 @check_end_of_args(i8* %11), !dbg !2746
  %tobool = icmp ne i32 %call11, 0, !dbg !2746
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !2747

if.then12:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2748

if.end13:                                         ; preds = %if.end10
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2749
  %13 = load i16, i16* %clientId, align 2, !dbg !2750
  %call14 = call i32 @lwm2m_observe(%struct.lwm2m_context_t* %12, i16 zeroext %13, %struct.lwm2m_uri_t* %uri, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_notify_callback, i8* null), !dbg !2751
  store i32 %call14, i32* %result, align 4, !dbg !2752
  %14 = load i32, i32* %result, align 4, !dbg !2753
  %cmp15 = icmp eq i32 %14, 0, !dbg !2755
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2756

if.then17:                                        ; preds = %if.end13
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2757
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2759
  br label %if.end20, !dbg !2760

if.else:                                          ; preds = %if.end13
  %16 = load i32, i32* %result, align 4, !dbg !2761
  %conv19 = trunc i32 %16 to i8, !dbg !2761
  call void @prv_print_error(i8 zeroext %conv19), !dbg !2763
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %return, !dbg !2764

syntax_error:                                     ; preds = %if.then12, %if.then9, %if.then4, %if.then
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2765
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2766
  br label %return, !dbg !2767

return:                                           ; preds = %syntax_error, %if.end20
  ret void, !dbg !2767
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_cancel_client(i8* %buffer, i8* %user_data) #0 !dbg !2768 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %lwm2mH = alloca %struct.lwm2m_context_t*, align 8
  %clientId = alloca i16, align 2
  %uri = alloca %struct.lwm2m_uri_t, align 2
  %end = alloca i8*, align 8
  %result = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2769, metadata !1190), !dbg !2770
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2771, metadata !1190), !dbg !2772
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %lwm2mH, metadata !2773, metadata !1190), !dbg !2774
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !2775
  %1 = bitcast i8* %0 to %struct.lwm2m_context_t*, !dbg !2776
  store %struct.lwm2m_context_t* %1, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2774
  call void @llvm.dbg.declare(metadata i16* %clientId, metadata !2777, metadata !1190), !dbg !2778
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %uri, metadata !2779, metadata !1190), !dbg !2780
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2781, metadata !1190), !dbg !2782
  store i8* null, i8** %end, align 8, !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2783, metadata !1190), !dbg !2784
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2785
  %call = call i32 @prv_read_id(i8* %2, i16* %clientId), !dbg !2786
  store i32 %call, i32* %result, align 4, !dbg !2787
  %3 = load i32, i32* %result, align 4, !dbg !2788
  %cmp = icmp ne i32 %3, 1, !dbg !2790
  br i1 %cmp, label %if.then, label %if.end, !dbg !2791

if.then:                                          ; preds = %entry
  br label %syntax_error, !dbg !2792

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2793
  %call1 = call i8* @get_next_arg(i8* %4, i8** %end), !dbg !2794
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !2795
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !2796
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !2796
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2796
  %conv = sext i8 %6 to i32, !dbg !2796
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2798
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2799

if.then4:                                         ; preds = %if.end
  br label %syntax_error, !dbg !2800

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !2801
  %8 = load i8*, i8** %end, align 8, !dbg !2802
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !2803
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2804
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2804
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2804
  %call6 = call i32 @lwm2m_stringToUri(i8* %7, i64 %sub.ptr.sub, %struct.lwm2m_uri_t* %uri), !dbg !2805
  store i32 %call6, i32* %result, align 4, !dbg !2806
  %10 = load i32, i32* %result, align 4, !dbg !2807
  %cmp7 = icmp eq i32 %10, 0, !dbg !2809
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2810

if.then9:                                         ; preds = %if.end5
  br label %syntax_error, !dbg !2811

if.end10:                                         ; preds = %if.end5
  %11 = load i8*, i8** %end, align 8, !dbg !2812
  %call11 = call i32 @check_end_of_args(i8* %11), !dbg !2814
  %tobool = icmp ne i32 %call11, 0, !dbg !2814
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !2815

if.then12:                                        ; preds = %if.end10
  br label %syntax_error, !dbg !2816

if.end13:                                         ; preds = %if.end10
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %lwm2mH, align 8, !dbg !2817
  %13 = load i16, i16* %clientId, align 2, !dbg !2818
  %call14 = call i32 @lwm2m_observe_cancel(%struct.lwm2m_context_t* %12, i16 zeroext %13, %struct.lwm2m_uri_t* %uri, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* @prv_result_callback, i8* null), !dbg !2819
  store i32 %call14, i32* %result, align 4, !dbg !2820
  %14 = load i32, i32* %result, align 4, !dbg !2821
  %cmp15 = icmp eq i32 %14, 0, !dbg !2823
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2824

if.then17:                                        ; preds = %if.end13
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2825
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0)), !dbg !2827
  br label %if.end20, !dbg !2828

if.else:                                          ; preds = %if.end13
  %16 = load i32, i32* %result, align 4, !dbg !2829
  %conv19 = trunc i32 %16 to i8, !dbg !2829
  call void @prv_print_error(i8 zeroext %conv19), !dbg !2831
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %return, !dbg !2832

syntax_error:                                     ; preds = %if.then12, %if.then9, %if.then4, %if.then
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2833
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0)), !dbg !2834
  br label %return, !dbg !2835

return:                                           ; preds = %syntax_error, %if.end20
  ret void, !dbg !2835
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_quit(i8* %buffer, i8* %user_data) #0 !dbg !2836 {
entry:
  %buffer.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2837, metadata !1190), !dbg !2838
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !2839, metadata !1190), !dbg !2840
  store i32 1, i32* @g_quit, align 4, !dbg !2841
  ret void, !dbg !2842
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_read_id(i8* %buffer, i16* %idP) #0 !dbg !2843 {
entry:
  %buffer.addr = alloca i8*, align 8
  %idP.addr = alloca i16*, align 8
  %nb = alloca i32, align 4
  %value = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2847, metadata !1190), !dbg !2848
  store i16* %idP, i16** %idP.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %idP.addr, metadata !2849, metadata !1190), !dbg !2850
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !2851, metadata !1190), !dbg !2852
  call void @llvm.dbg.declare(metadata i32* %value, metadata !2853, metadata !1190), !dbg !2854
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !2855
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i32* %value) #7, !dbg !2856
  store i32 %call, i32* %nb, align 4, !dbg !2857
  %1 = load i32, i32* %nb, align 4, !dbg !2858
  %cmp = icmp eq i32 %1, 1, !dbg !2860
  br i1 %cmp, label %if.then, label %if.end4, !dbg !2861

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %value, align 4, !dbg !2862
  %cmp1 = icmp slt i32 %2, 0, !dbg !2865
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !2866

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i32, i32* %value, align 4, !dbg !2867
  %cmp2 = icmp sgt i32 %3, 65535, !dbg !2868
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !2869

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 0, i32* %nb, align 4, !dbg !2870
  br label %if.end, !dbg !2872

if.else:                                          ; preds = %lor.lhs.false
  %4 = load i32, i32* %value, align 4, !dbg !2873
  %conv = trunc i32 %4 to i16, !dbg !2873
  %5 = load i16*, i16** %idP.addr, align 8, !dbg !2875
  store i16 %conv, i16* %5, align 2, !dbg !2876
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end4, !dbg !2877

if.end4:                                          ; preds = %if.end, %entry
  %6 = load i32, i32* %nb, align 4, !dbg !2878
  ret i32 %6, !dbg !2879
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_result_callback(i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %status, i32 %format, i8* %data, i32 %dataLength, i8* %userData) #0 !dbg !2880 {
entry:
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %status.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dataLength.addr = alloca i32, align 4
  %userData.addr = alloca i8*, align 8
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !2881, metadata !1190), !dbg !2882
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !2883, metadata !1190), !dbg !2884
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2885, metadata !1190), !dbg !2886
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !2887, metadata !1190), !dbg !2888
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2889, metadata !1190), !dbg !2890
  store i32 %dataLength, i32* %dataLength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataLength.addr, metadata !2891, metadata !1190), !dbg !2892
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !2893, metadata !1190), !dbg !2894
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2895
  %1 = load i16, i16* %clientID.addr, align 2, !dbg !2896
  %conv = zext i16 %1 to i32, !dbg !2896
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2897
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %2, i32 0, i32 1, !dbg !2898
  %3 = load i16, i16* %objectId, align 2, !dbg !2898
  %conv1 = zext i16 %3 to i32, !dbg !2897
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i32 %conv, i32 %conv1), !dbg !2899
  %4 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2900
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %4, i32 0, i32 0, !dbg !2900
  %5 = load i8, i8* %flag, align 2, !dbg !2900
  %conv2 = zext i8 %5 to i32, !dbg !2900
  %and = and i32 %conv2, 2, !dbg !2900
  %cmp = icmp ne i32 %and, 0, !dbg !2900
  br i1 %cmp, label %if.then, label %if.else, !dbg !2902

if.then:                                          ; preds = %entry
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2903
  %7 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2904
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %7, i32 0, i32 2, !dbg !2905
  %8 = load i16, i16* %instanceId, align 2, !dbg !2905
  %conv4 = zext i16 %8 to i32, !dbg !2904
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0), i32 %conv4), !dbg !2906
  br label %if.end13, !dbg !2906

if.else:                                          ; preds = %entry
  %9 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2907
  %flag6 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %9, i32 0, i32 0, !dbg !2907
  %10 = load i8, i8* %flag6, align 2, !dbg !2907
  %conv7 = zext i8 %10 to i32, !dbg !2907
  %and8 = and i32 %conv7, 1, !dbg !2907
  %cmp9 = icmp ne i32 %and8, 0, !dbg !2907
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !2909

if.then11:                                        ; preds = %if.else
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2910
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0)), !dbg !2911
  br label %if.end, !dbg !2911

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %12 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2912
  %flag14 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %12, i32 0, i32 0, !dbg !2912
  %13 = load i8, i8* %flag14, align 2, !dbg !2912
  %conv15 = zext i8 %13 to i32, !dbg !2912
  %and16 = and i32 %conv15, 1, !dbg !2912
  %cmp17 = icmp ne i32 %and16, 0, !dbg !2912
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !2914

if.then19:                                        ; preds = %if.end13
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2915
  %15 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2916
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %15, i32 0, i32 3, !dbg !2917
  %16 = load i16, i16* %resourceId, align 2, !dbg !2917
  %conv20 = zext i16 %16 to i32, !dbg !2916
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0), i32 %conv20), !dbg !2918
  br label %if.end22, !dbg !2918

if.end22:                                         ; preds = %if.then19, %if.end13
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2919
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0)), !dbg !2920
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2921
  %19 = load i32, i32* %status.addr, align 4, !dbg !2922
  %conv24 = trunc i32 %19 to i8, !dbg !2922
  call void @print_status(%struct._IO_FILE* %18, i8 zeroext %conv24), !dbg !2923
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2924
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !2925
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2926
  %22 = load i32, i32* %format.addr, align 4, !dbg !2927
  %23 = load i8*, i8** %data.addr, align 8, !dbg !2928
  %24 = load i32, i32* %dataLength.addr, align 4, !dbg !2929
  call void @output_data(%struct._IO_FILE* %21, i32 %22, i8* %23, i32 %24, i32 1), !dbg !2930
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2931
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0)), !dbg !2932
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2933
  %call27 = call i32 @fflush(%struct._IO_FILE* %26), !dbg !2934
  ret void, !dbg !2935
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_print_error(i8 zeroext %status) #0 !dbg !2936 {
entry:
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !2939, metadata !1190), !dbg !2940
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2941
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0)), !dbg !2942
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2943
  %2 = load i8, i8* %status.addr, align 1, !dbg !2944
  call void @print_status(%struct._IO_FILE* %1, i8 zeroext %2), !dbg !2945
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2946
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !2947
  ret void, !dbg !2948
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define internal void @prv_notify_callback(i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %count, i32 %format, i8* %data, i32 %dataLength, i8* %userData) #0 !dbg !2949 {
entry:
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %count.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dataLength.addr = alloca i32, align 4
  %userData.addr = alloca i8*, align 8
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !2950, metadata !1190), !dbg !2951
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !2952, metadata !1190), !dbg !2953
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !2954, metadata !1190), !dbg !2955
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !2956, metadata !1190), !dbg !2957
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2958, metadata !1190), !dbg !2959
  store i32 %dataLength, i32* %dataLength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataLength.addr, metadata !2960, metadata !1190), !dbg !2961
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !2962, metadata !1190), !dbg !2963
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2964
  %1 = load i16, i16* %clientID.addr, align 2, !dbg !2965
  %conv = zext i16 %1 to i32, !dbg !2965
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2966
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %2, i32 0, i32 1, !dbg !2967
  %3 = load i16, i16* %objectId, align 2, !dbg !2967
  %conv1 = zext i16 %3 to i32, !dbg !2966
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i32 %conv, i32 %conv1), !dbg !2968
  %4 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2969
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %4, i32 0, i32 0, !dbg !2969
  %5 = load i8, i8* %flag, align 2, !dbg !2969
  %conv2 = zext i8 %5 to i32, !dbg !2969
  %and = and i32 %conv2, 2, !dbg !2969
  %cmp = icmp ne i32 %and, 0, !dbg !2969
  br i1 %cmp, label %if.then, label %if.else, !dbg !2971

if.then:                                          ; preds = %entry
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2972
  %7 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2973
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %7, i32 0, i32 2, !dbg !2974
  %8 = load i16, i16* %instanceId, align 2, !dbg !2974
  %conv4 = zext i16 %8 to i32, !dbg !2973
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0), i32 %conv4), !dbg !2975
  br label %if.end13, !dbg !2975

if.else:                                          ; preds = %entry
  %9 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2976
  %flag6 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %9, i32 0, i32 0, !dbg !2976
  %10 = load i8, i8* %flag6, align 2, !dbg !2976
  %conv7 = zext i8 %10 to i32, !dbg !2976
  %and8 = and i32 %conv7, 1, !dbg !2976
  %cmp9 = icmp ne i32 %and8, 0, !dbg !2976
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !2978

if.then11:                                        ; preds = %if.else
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2979
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0)), !dbg !2980
  br label %if.end, !dbg !2980

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %12 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2981
  %flag14 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %12, i32 0, i32 0, !dbg !2981
  %13 = load i8, i8* %flag14, align 2, !dbg !2981
  %conv15 = zext i8 %13 to i32, !dbg !2981
  %and16 = and i32 %conv15, 1, !dbg !2981
  %cmp17 = icmp ne i32 %and16, 0, !dbg !2981
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !2983

if.then19:                                        ; preds = %if.end13
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2984
  %15 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !2985
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %15, i32 0, i32 3, !dbg !2986
  %16 = load i16, i16* %resourceId, align 2, !dbg !2986
  %conv20 = zext i16 %16 to i32, !dbg !2985
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0), i32 %conv20), !dbg !2987
  br label %if.end22, !dbg !2987

if.end22:                                         ; preds = %if.then19, %if.end13
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2988
  %18 = load i32, i32* %count.addr, align 4, !dbg !2989
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i32 %18), !dbg !2990
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2991
  %20 = load i32, i32* %format.addr, align 4, !dbg !2992
  %21 = load i8*, i8** %data.addr, align 8, !dbg !2993
  %22 = load i32, i32* %dataLength.addr, align 4, !dbg !2994
  call void @output_data(%struct._IO_FILE* %19, i32 %20, i8* %21, i32 %22, i32 1), !dbg !2995
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2996
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0)), !dbg !2997
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2998
  %call25 = call i32 @fflush(%struct._IO_FILE* %24), !dbg !2999
  ret void, !dbg !3000
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: noinline nounwind uwtable
define %struct.lwm2m_context_t* @lwm2m_init(i8* %userData) #0 !dbg !3001 {
entry:
  %userData.addr = alloca i8*, align 8
  %contextP = alloca %struct.lwm2m_context_t*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !3004, metadata !1190), !dbg !3005
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP, metadata !3006, metadata !1190), !dbg !3007
  %call = call i8* @lwm2m_malloc(i64 48), !dbg !3008
  %0 = bitcast i8* %call to %struct.lwm2m_context_t*, !dbg !3009
  store %struct.lwm2m_context_t* %0, %struct.lwm2m_context_t** %contextP, align 8, !dbg !3010
  %1 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP, align 8, !dbg !3011
  %cmp = icmp ne %struct.lwm2m_context_t* null, %1, !dbg !3013
  br i1 %cmp, label %if.then, label %if.end, !dbg !3014

if.then:                                          ; preds = %entry
  %2 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP, align 8, !dbg !3015
  %3 = bitcast %struct.lwm2m_context_t* %2 to i8*, !dbg !3017
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 48, i32 8, i1 false), !dbg !3017
  %4 = load i8*, i8** %userData.addr, align 8, !dbg !3018
  %5 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP, align 8, !dbg !3019
  %userData1 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %5, i32 0, i32 5, !dbg !3020
  store i8* %4, i8** %userData1, align 8, !dbg !3021
  %call2 = call i64 @lwm2m_gettime(), !dbg !3022
  %conv = trunc i64 %call2 to i32, !dbg !3023
  call void @srand(i32 %conv) #7, !dbg !3024
  %call3 = call i32 @rand() #7, !dbg !3025
  %conv4 = trunc i32 %call3 to i16, !dbg !3025
  %6 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP, align 8, !dbg !3026
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %6, i32 0, i32 3, !dbg !3027
  store i16 %conv4, i16* %nextMID, align 8, !dbg !3028
  br label %if.end, !dbg !3029

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP, align 8, !dbg !3030
  ret %struct.lwm2m_context_t* %7, !dbg !3031
}

; Function Attrs: nounwind
declare void @srand(i32) #5

; Function Attrs: nounwind
declare i32 @rand() #5

; Function Attrs: noinline nounwind uwtable
define void @prv_deleteTransactionList(%struct.lwm2m_context_t* %context) #0 !dbg !3032 {
entry:
  %context.addr = alloca %struct.lwm2m_context_t*, align 8
  %transaction = alloca %struct._lwm2m_transaction_*, align 8
  store %struct.lwm2m_context_t* %context, %struct.lwm2m_context_t** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %context.addr, metadata !3035, metadata !1190), !dbg !3036
  br label %while.cond, !dbg !3037

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %context.addr, align 8, !dbg !3038
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 4, !dbg !3039
  %1 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !3039
  %cmp = icmp ne %struct._lwm2m_transaction_* null, %1, !dbg !3040
  br i1 %cmp, label %while.body, label %while.end, !dbg !3037

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transaction, metadata !3041, metadata !1190), !dbg !3043
  %2 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %context.addr, align 8, !dbg !3044
  %transactionList1 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %2, i32 0, i32 4, !dbg !3045
  %3 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList1, align 8, !dbg !3045
  store %struct._lwm2m_transaction_* %3, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !3046
  %4 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %context.addr, align 8, !dbg !3047
  %transactionList2 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %4, i32 0, i32 4, !dbg !3048
  %5 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList2, align 8, !dbg !3048
  %next = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %5, i32 0, i32 0, !dbg !3049
  %6 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %next, align 8, !dbg !3049
  %7 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %context.addr, align 8, !dbg !3050
  %transactionList3 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %7, i32 0, i32 4, !dbg !3051
  store %struct._lwm2m_transaction_* %6, %struct._lwm2m_transaction_** %transactionList3, align 8, !dbg !3052
  %8 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !3053
  call void @transaction_free(%struct._lwm2m_transaction_* %8), !dbg !3054
  br label %while.cond, !dbg !3037, !llvm.loop !3055

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3057
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_close(%struct.lwm2m_context_t* %contextP) #0 !dbg !3058 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !3059, metadata !1190), !dbg !3060
  br label %while.cond, !dbg !3061

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3062
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !3063
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !3063
  %cmp = icmp ne %struct._lwm2m_client_* null, %1, !dbg !3064
  br i1 %cmp, label %while.body, label %while.end, !dbg !3061

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !3065, metadata !1190), !dbg !3067
  %2 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3068
  %clientList1 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %2, i32 0, i32 0, !dbg !3069
  %3 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList1, align 8, !dbg !3069
  store %struct._lwm2m_client_* %3, %struct._lwm2m_client_** %clientP, align 8, !dbg !3070
  %4 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3071
  %clientList2 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %4, i32 0, i32 0, !dbg !3072
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList2, align 8, !dbg !3072
  %next = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %5, i32 0, i32 0, !dbg !3073
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %next, align 8, !dbg !3073
  %7 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3074
  %clientList3 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %7, i32 0, i32 0, !dbg !3075
  store %struct._lwm2m_client_* %6, %struct._lwm2m_client_** %clientList3, align 8, !dbg !3076
  %8 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !3077
  call void @registration_freeClient(%struct._lwm2m_client_* %8), !dbg !3078
  br label %while.cond, !dbg !3061, !llvm.loop !3079

while.end:                                        ; preds = %while.cond
  %9 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3081
  call void @prv_deleteTransactionList(%struct.lwm2m_context_t* %9), !dbg !3082
  %10 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3083
  %11 = bitcast %struct.lwm2m_context_t* %10 to i8*, !dbg !3083
  call void @lwm2m_free(i8* %11), !dbg !3084
  ret void, !dbg !3085
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_step(%struct.lwm2m_context_t* %contextP, i64* %timeoutP) #0 !dbg !3086 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %timeoutP.addr = alloca i64*, align 8
  %tv_sec = alloca i64, align 8
  %result = alloca i32, align 4
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !3090, metadata !1190), !dbg !3091
  store i64* %timeoutP, i64** %timeoutP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %timeoutP.addr, metadata !3092, metadata !1190), !dbg !3093
  call void @llvm.dbg.declare(metadata i64* %tv_sec, metadata !3094, metadata !1190), !dbg !3095
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3096, metadata !1190), !dbg !3097
  %call = call i64 @lwm2m_gettime(), !dbg !3098
  store i64 %call, i64* %tv_sec, align 8, !dbg !3099
  %0 = load i64, i64* %tv_sec, align 8, !dbg !3100
  %cmp = icmp slt i64 %0, 0, !dbg !3102
  br i1 %cmp, label %if.then, label %if.end, !dbg !3103

if.then:                                          ; preds = %entry
  store i32 160, i32* %retval, align 4, !dbg !3104
  br label %return, !dbg !3104

if.end:                                           ; preds = %entry
  %1 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3105
  %2 = load i64, i64* %tv_sec, align 8, !dbg !3106
  %3 = load i64*, i64** %timeoutP.addr, align 8, !dbg !3107
  call void @registration_step(%struct.lwm2m_context_t* %1, i64 %2, i64* %3), !dbg !3108
  %4 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !3109
  %5 = load i64, i64* %tv_sec, align 8, !dbg !3110
  %6 = load i64*, i64** %timeoutP.addr, align 8, !dbg !3111
  call void @transaction_step(%struct.lwm2m_context_t* %4, i64 %5, i64* %6), !dbg !3112
  store i32 0, i32* %retval, align 4, !dbg !3113
  br label %return, !dbg !3113

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !3114
  ret i32 %7, !dbg !3114
}

; Function Attrs: noinline nounwind uwtable
define i32 @uri_getNumber(i8* %uriString, i64 %uriLength) #0 !dbg !3115 {
entry:
  %uriString.addr = alloca i8*, align 8
  %uriLength.addr = alloca i64, align 8
  %index = alloca i64, align 8
  store i8* %uriString, i8** %uriString.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uriString.addr, metadata !3118, metadata !1190), !dbg !3119
  store i64 %uriLength, i64* %uriLength.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %uriLength.addr, metadata !3120, metadata !1190), !dbg !3121
  call void @llvm.dbg.declare(metadata i64* %index, metadata !3122, metadata !1190), !dbg !3123
  store i64 0, i64* %index, align 8, !dbg !3123
  %0 = load i8*, i8** %uriString.addr, align 8, !dbg !3124
  %1 = load i64, i64* %uriLength.addr, align 8, !dbg !3125
  %call = call i32 @prv_parseNumber(i8* %0, i64 %1, i64* %index), !dbg !3126
  ret i32 %call, !dbg !3127
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_parseNumber(i8* %uriString, i64 %uriLength, i64* %headP) #0 !dbg !3128 {
entry:
  %retval = alloca i32, align 4
  %uriString.addr = alloca i8*, align 8
  %uriLength.addr = alloca i64, align 8
  %headP.addr = alloca i64*, align 8
  %result = alloca i32, align 4
  store i8* %uriString, i8** %uriString.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uriString.addr, metadata !3132, metadata !1190), !dbg !3133
  store i64 %uriLength, i64* %uriLength.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %uriLength.addr, metadata !3134, metadata !1190), !dbg !3135
  store i64* %headP, i64** %headP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %headP.addr, metadata !3136, metadata !1190), !dbg !3137
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3138, metadata !1190), !dbg !3139
  store i32 0, i32* %result, align 4, !dbg !3139
  %0 = load i8*, i8** %uriString.addr, align 8, !dbg !3140
  %1 = load i64*, i64** %headP.addr, align 8, !dbg !3142
  %2 = load i64, i64* %1, align 8, !dbg !3143
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %2, !dbg !3140
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3140
  %conv = zext i8 %3 to i32, !dbg !3140
  %cmp = icmp eq i32 %conv, 47, !dbg !3144
  br i1 %cmp, label %if.then, label %if.end, !dbg !3145

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3146
  br label %return, !dbg !3146

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !3148

while.cond:                                       ; preds = %if.end19, %if.end
  %4 = load i64*, i64** %headP.addr, align 8, !dbg !3149
  %5 = load i64, i64* %4, align 8, !dbg !3150
  %6 = load i64, i64* %uriLength.addr, align 8, !dbg !3151
  %cmp2 = icmp ult i64 %5, %6, !dbg !3152
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !3153

land.rhs:                                         ; preds = %while.cond
  %7 = load i8*, i8** %uriString.addr, align 8, !dbg !3154
  %8 = load i64*, i64** %headP.addr, align 8, !dbg !3155
  %9 = load i64, i64* %8, align 8, !dbg !3156
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !3154
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !3154
  %conv5 = zext i8 %10 to i32, !dbg !3154
  %cmp6 = icmp ne i32 %conv5, 47, !dbg !3157
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !3148

while.body:                                       ; preds = %land.end
  %12 = load i8*, i8** %uriString.addr, align 8, !dbg !3158
  %13 = load i64*, i64** %headP.addr, align 8, !dbg !3161
  %14 = load i64, i64* %13, align 8, !dbg !3162
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 %14, !dbg !3158
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !3158
  %conv9 = zext i8 %15 to i32, !dbg !3158
  %cmp10 = icmp sle i32 48, %conv9, !dbg !3163
  br i1 %cmp10, label %land.lhs.true, label %if.else, !dbg !3164

land.lhs.true:                                    ; preds = %while.body
  %16 = load i8*, i8** %uriString.addr, align 8, !dbg !3165
  %17 = load i64*, i64** %headP.addr, align 8, !dbg !3166
  %18 = load i64, i64* %17, align 8, !dbg !3167
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !3165
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !3165
  %conv13 = zext i8 %19 to i32, !dbg !3165
  %cmp14 = icmp sle i32 %conv13, 57, !dbg !3168
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !3169

if.then16:                                        ; preds = %land.lhs.true
  %20 = load i8*, i8** %uriString.addr, align 8, !dbg !3170
  %21 = load i64*, i64** %headP.addr, align 8, !dbg !3172
  %22 = load i64, i64* %21, align 8, !dbg !3173
  %arrayidx17 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !3170
  %23 = load i8, i8* %arrayidx17, align 1, !dbg !3170
  %conv18 = zext i8 %23 to i32, !dbg !3170
  %sub = sub nsw i32 %conv18, 48, !dbg !3174
  %24 = load i32, i32* %result, align 4, !dbg !3175
  %add = add nsw i32 %24, %sub, !dbg !3175
  store i32 %add, i32* %result, align 4, !dbg !3175
  %25 = load i32, i32* %result, align 4, !dbg !3176
  %mul = mul nsw i32 %25, 10, !dbg !3176
  store i32 %mul, i32* %result, align 4, !dbg !3176
  br label %if.end19, !dbg !3177

if.else:                                          ; preds = %land.lhs.true, %while.body
  store i32 -1, i32* %retval, align 4, !dbg !3178
  br label %return, !dbg !3178

if.end19:                                         ; preds = %if.then16
  %26 = load i64*, i64** %headP.addr, align 8, !dbg !3180
  %27 = load i64, i64* %26, align 8, !dbg !3181
  %add20 = add i64 %27, 1, !dbg !3181
  store i64 %add20, i64* %26, align 8, !dbg !3181
  br label %while.cond, !dbg !3148, !llvm.loop !3182

while.end:                                        ; preds = %land.end
  %28 = load i32, i32* %result, align 4, !dbg !3184
  %div = sdiv i32 %28, 10, !dbg !3184
  store i32 %div, i32* %result, align 4, !dbg !3184
  %29 = load i32, i32* %result, align 4, !dbg !3185
  store i32 %29, i32* %retval, align 4, !dbg !3186
  br label %return, !dbg !3186

return:                                           ; preds = %while.end, %if.else, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !3187
  ret i32 %30, !dbg !3187
}

; Function Attrs: noinline nounwind uwtable
define %struct.lwm2m_uri_t* @uri_decode(i8* %altPath, %struct._multi_option_t* %uriPath) #0 !dbg !3188 {
entry:
  %retval = alloca %struct.lwm2m_uri_t*, align 8
  %altPath.addr = alloca i8*, align 8
  %uriPath.addr = alloca %struct._multi_option_t*, align 8
  %uriP = alloca %struct.lwm2m_uri_t*, align 8
  %readNum = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %altPath, i8** %altPath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %altPath.addr, metadata !3200, metadata !1190), !dbg !3201
  store %struct._multi_option_t* %uriPath, %struct._multi_option_t** %uriPath.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %uriPath.addr, metadata !3202, metadata !1190), !dbg !3203
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP, metadata !3204, metadata !1190), !dbg !3205
  call void @llvm.dbg.declare(metadata i32* %readNum, metadata !3206, metadata !1190), !dbg !3207
  %call = call i8* @lwm2m_malloc(i64 8), !dbg !3208
  %0 = bitcast i8* %call to %struct.lwm2m_uri_t*, !dbg !3209
  store %struct.lwm2m_uri_t* %0, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3210
  %1 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3211
  %cmp = icmp eq %struct.lwm2m_uri_t* null, %1, !dbg !3213
  br i1 %cmp, label %if.then, label %if.end, !dbg !3214

if.then:                                          ; preds = %entry
  store %struct.lwm2m_uri_t* null, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3215
  br label %return, !dbg !3215

if.end:                                           ; preds = %entry
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3216
  %3 = bitcast %struct.lwm2m_uri_t* %2 to i8*, !dbg !3217
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 8, i32 2, i1 false), !dbg !3217
  %4 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3218
  %cmp1 = icmp ne %struct._multi_option_t* null, %4, !dbg !3220
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !3221

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3222
  %len = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %5, i32 0, i32 2, !dbg !3223
  %6 = load i8, i8* %len, align 1, !dbg !3223
  %conv = zext i8 %6 to i32, !dbg !3222
  %cmp2 = icmp eq i32 2, %conv, !dbg !3224
  br i1 %cmp2, label %land.lhs.true4, label %if.else, !dbg !3225

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3226
  %data = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %7, i32 0, i32 3, !dbg !3227
  %8 = load i8*, i8** %data, align 8, !dbg !3227
  %9 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3228
  %len5 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %9, i32 0, i32 2, !dbg !3229
  %10 = load i8, i8* %len5, align 1, !dbg !3229
  %conv6 = zext i8 %10 to i64, !dbg !3228
  %call7 = call i32 @strncmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i32 0, i32 0), i8* %8, i64 %conv6) #9, !dbg !3230
  %cmp8 = icmp eq i32 0, %call7, !dbg !3231
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !3232

if.then10:                                        ; preds = %land.lhs.true4
  %11 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3233
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %11, i32 0, i32 0, !dbg !3235
  %12 = load i8, i8* %flag, align 2, !dbg !3236
  %conv11 = zext i8 %12 to i32, !dbg !3236
  %or = or i32 %conv11, 32, !dbg !3236
  %conv12 = trunc i32 %or to i8, !dbg !3236
  store i8 %conv12, i8* %flag, align 2, !dbg !3236
  %13 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3237
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %13, i32 0, i32 0, !dbg !3238
  %14 = load %struct._multi_option_t*, %struct._multi_option_t** %next, align 8, !dbg !3238
  store %struct._multi_option_t* %14, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3239
  %15 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3240
  %cmp13 = icmp eq %struct._multi_option_t* %15, null, !dbg !3242
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3243

if.then15:                                        ; preds = %if.then10
  %16 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3244
  store %struct.lwm2m_uri_t* %16, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3245
  br label %return, !dbg !3245

if.end16:                                         ; preds = %if.then10
  br label %if.end42, !dbg !3246

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.end
  %17 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3247
  %cmp17 = icmp ne %struct._multi_option_t* null, %17, !dbg !3249
  br i1 %cmp17, label %land.lhs.true19, label %if.end41, !dbg !3250

land.lhs.true19:                                  ; preds = %if.else
  %18 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3251
  %len20 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %18, i32 0, i32 2, !dbg !3252
  %19 = load i8, i8* %len20, align 1, !dbg !3252
  %conv21 = zext i8 %19 to i32, !dbg !3251
  %cmp22 = icmp eq i32 2, %conv21, !dbg !3253
  br i1 %cmp22, label %land.lhs.true24, label %if.end41, !dbg !3254

land.lhs.true24:                                  ; preds = %land.lhs.true19
  %20 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3255
  %data25 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %20, i32 0, i32 3, !dbg !3256
  %21 = load i8*, i8** %data25, align 8, !dbg !3256
  %22 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3257
  %len26 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %22, i32 0, i32 2, !dbg !3258
  %23 = load i8, i8* %len26, align 1, !dbg !3258
  %conv27 = zext i8 %23 to i64, !dbg !3257
  %call28 = call i32 @strncmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.89, i32 0, i32 0), i8* %21, i64 %conv27) #9, !dbg !3259
  %cmp29 = icmp eq i32 0, %call28, !dbg !3260
  br i1 %cmp29, label %if.then31, label %if.end41, !dbg !3261

if.then31:                                        ; preds = %land.lhs.true24
  %24 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3262
  %flag32 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %24, i32 0, i32 0, !dbg !3264
  %25 = load i8, i8* %flag32, align 2, !dbg !3265
  %conv33 = zext i8 %25 to i32, !dbg !3265
  %or34 = or i32 %conv33, 64, !dbg !3265
  %conv35 = trunc i32 %or34 to i8, !dbg !3265
  store i8 %conv35, i8* %flag32, align 2, !dbg !3265
  %26 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3266
  %next36 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %26, i32 0, i32 0, !dbg !3267
  %27 = load %struct._multi_option_t*, %struct._multi_option_t** %next36, align 8, !dbg !3267
  store %struct._multi_option_t* %27, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3268
  %28 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3269
  %cmp37 = icmp ne %struct._multi_option_t* %28, null, !dbg !3271
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3272

if.then39:                                        ; preds = %if.then31
  br label %error, !dbg !3273

if.end40:                                         ; preds = %if.then31
  %29 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3274
  store %struct.lwm2m_uri_t* %29, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3275
  br label %return, !dbg !3275

if.end41:                                         ; preds = %land.lhs.true24, %land.lhs.true19, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end16
  %30 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3276
  %flag43 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %30, i32 0, i32 0, !dbg !3278
  %31 = load i8, i8* %flag43, align 2, !dbg !3278
  %conv44 = zext i8 %31 to i32, !dbg !3276
  %and = and i32 %conv44, 112, !dbg !3279
  %cmp45 = icmp ne i32 %and, 32, !dbg !3280
  br i1 %cmp45, label %if.then47, label %if.end82, !dbg !3281

if.then47:                                        ; preds = %if.end42
  %32 = load i8*, i8** %altPath.addr, align 8, !dbg !3282
  %cmp48 = icmp ne i8* %32, null, !dbg !3285
  br i1 %cmp48, label %if.then50, label %if.end69, !dbg !3286

if.then50:                                        ; preds = %if.then47
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3287, metadata !1190), !dbg !3289
  %33 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3290
  %cmp51 = icmp eq %struct._multi_option_t* null, %33, !dbg !3292
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !3293

if.then53:                                        ; preds = %if.then50
  %34 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3294
  %35 = bitcast %struct.lwm2m_uri_t* %34 to i8*, !dbg !3294
  call void @lwm2m_free(i8* %35), !dbg !3296
  store %struct.lwm2m_uri_t* null, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3297
  br label %return, !dbg !3297

if.end54:                                         ; preds = %if.then50
  store i32 0, i32* %i, align 4, !dbg !3298
  br label %for.cond, !dbg !3300

for.cond:                                         ; preds = %for.inc, %if.end54
  %36 = load i32, i32* %i, align 4, !dbg !3301
  %37 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3303
  %len55 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %37, i32 0, i32 2, !dbg !3304
  %38 = load i8, i8* %len55, align 1, !dbg !3304
  %conv56 = zext i8 %38 to i32, !dbg !3303
  %cmp57 = icmp slt i32 %36, %conv56, !dbg !3305
  br i1 %cmp57, label %for.body, label %for.end, !dbg !3306

for.body:                                         ; preds = %for.cond
  %39 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3307
  %data59 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %39, i32 0, i32 3, !dbg !3310
  %40 = load i8*, i8** %data59, align 8, !dbg !3310
  %41 = load i32, i32* %i, align 4, !dbg !3311
  %idxprom = sext i32 %41 to i64, !dbg !3307
  %arrayidx = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !3307
  %42 = load i8, i8* %arrayidx, align 1, !dbg !3307
  %conv60 = zext i8 %42 to i32, !dbg !3307
  %43 = load i8*, i8** %altPath.addr, align 8, !dbg !3312
  %44 = load i32, i32* %i, align 4, !dbg !3313
  %add = add nsw i32 %44, 1, !dbg !3314
  %idxprom61 = sext i32 %add to i64, !dbg !3312
  %arrayidx62 = getelementptr inbounds i8, i8* %43, i64 %idxprom61, !dbg !3312
  %45 = load i8, i8* %arrayidx62, align 1, !dbg !3312
  %conv63 = sext i8 %45 to i32, !dbg !3312
  %cmp64 = icmp ne i32 %conv60, %conv63, !dbg !3315
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !3316

if.then66:                                        ; preds = %for.body
  %46 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3317
  %47 = bitcast %struct.lwm2m_uri_t* %46 to i8*, !dbg !3317
  call void @lwm2m_free(i8* %47), !dbg !3319
  store %struct.lwm2m_uri_t* null, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3320
  br label %return, !dbg !3320

if.end67:                                         ; preds = %for.body
  br label %for.inc, !dbg !3321

for.inc:                                          ; preds = %if.end67
  %48 = load i32, i32* %i, align 4, !dbg !3322
  %inc = add nsw i32 %48, 1, !dbg !3322
  store i32 %inc, i32* %i, align 4, !dbg !3322
  br label %for.cond, !dbg !3323, !llvm.loop !3324

for.end:                                          ; preds = %for.cond
  %49 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3326
  %next68 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %49, i32 0, i32 0, !dbg !3327
  %50 = load %struct._multi_option_t*, %struct._multi_option_t** %next68, align 8, !dbg !3327
  store %struct._multi_option_t* %50, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3328
  br label %if.end69, !dbg !3329

if.end69:                                         ; preds = %for.end, %if.then47
  %51 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3330
  %cmp70 = icmp eq %struct._multi_option_t* null, %51, !dbg !3332
  br i1 %cmp70, label %if.then76, label %lor.lhs.false, !dbg !3333

lor.lhs.false:                                    ; preds = %if.end69
  %52 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3334
  %len72 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %52, i32 0, i32 2, !dbg !3335
  %53 = load i8, i8* %len72, align 1, !dbg !3335
  %conv73 = zext i8 %53 to i32, !dbg !3334
  %cmp74 = icmp eq i32 %conv73, 0, !dbg !3336
  br i1 %cmp74, label %if.then76, label %if.end81, !dbg !3337

if.then76:                                        ; preds = %lor.lhs.false, %if.end69
  %54 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3338
  %flag77 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %54, i32 0, i32 0, !dbg !3340
  %55 = load i8, i8* %flag77, align 2, !dbg !3341
  %conv78 = zext i8 %55 to i32, !dbg !3341
  %or79 = or i32 %conv78, 16, !dbg !3341
  %conv80 = trunc i32 %or79 to i8, !dbg !3341
  store i8 %conv80, i8* %flag77, align 2, !dbg !3341
  %56 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3342
  store %struct.lwm2m_uri_t* %56, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3343
  br label %return, !dbg !3343

if.end81:                                         ; preds = %lor.lhs.false
  br label %if.end82, !dbg !3344

if.end82:                                         ; preds = %if.end81, %if.end42
  %57 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3345
  %data83 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %57, i32 0, i32 3, !dbg !3346
  %58 = load i8*, i8** %data83, align 8, !dbg !3346
  %59 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3347
  %len84 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %59, i32 0, i32 2, !dbg !3348
  %60 = load i8, i8* %len84, align 1, !dbg !3348
  %conv85 = zext i8 %60 to i64, !dbg !3347
  %call86 = call i32 @uri_getNumber(i8* %58, i64 %conv85), !dbg !3349
  store i32 %call86, i32* %readNum, align 4, !dbg !3350
  %61 = load i32, i32* %readNum, align 4, !dbg !3351
  %cmp87 = icmp slt i32 %61, 0, !dbg !3353
  br i1 %cmp87, label %if.then92, label %lor.lhs.false89, !dbg !3354

lor.lhs.false89:                                  ; preds = %if.end82
  %62 = load i32, i32* %readNum, align 4, !dbg !3355
  %cmp90 = icmp sgt i32 %62, 65535, !dbg !3356
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3357

if.then92:                                        ; preds = %lor.lhs.false89, %if.end82
  br label %error, !dbg !3358

if.end93:                                         ; preds = %lor.lhs.false89
  %63 = load i32, i32* %readNum, align 4, !dbg !3359
  %conv94 = trunc i32 %63 to i16, !dbg !3360
  %64 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3361
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %64, i32 0, i32 1, !dbg !3362
  store i16 %conv94, i16* %objectId, align 2, !dbg !3363
  %65 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3364
  %flag95 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %65, i32 0, i32 0, !dbg !3365
  %66 = load i8, i8* %flag95, align 2, !dbg !3366
  %conv96 = zext i8 %66 to i32, !dbg !3366
  %or97 = or i32 %conv96, 4, !dbg !3366
  %conv98 = trunc i32 %or97 to i8, !dbg !3366
  store i8 %conv98, i8* %flag95, align 2, !dbg !3366
  %67 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3367
  %next99 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %67, i32 0, i32 0, !dbg !3368
  %68 = load %struct._multi_option_t*, %struct._multi_option_t** %next99, align 8, !dbg !3368
  store %struct._multi_option_t* %68, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3369
  %69 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3370
  %flag100 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %69, i32 0, i32 0, !dbg !3372
  %70 = load i8, i8* %flag100, align 2, !dbg !3372
  %conv101 = zext i8 %70 to i32, !dbg !3370
  %and102 = and i32 %conv101, 112, !dbg !3373
  %cmp103 = icmp eq i32 %and102, 32, !dbg !3374
  br i1 %cmp103, label %if.then105, label %if.end110, !dbg !3375

if.then105:                                       ; preds = %if.end93
  %71 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3376
  %cmp106 = icmp ne %struct._multi_option_t* %71, null, !dbg !3379
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !3380

if.then108:                                       ; preds = %if.then105
  br label %error, !dbg !3381

if.end109:                                        ; preds = %if.then105
  %72 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3382
  store %struct.lwm2m_uri_t* %72, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3383
  br label %return, !dbg !3383

if.end110:                                        ; preds = %if.end93
  %73 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3384
  %flag111 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %73, i32 0, i32 0, !dbg !3385
  %74 = load i8, i8* %flag111, align 2, !dbg !3386
  %conv112 = zext i8 %74 to i32, !dbg !3386
  %conv113 = trunc i32 %conv112 to i8, !dbg !3386
  store i8 %conv113, i8* %flag111, align 2, !dbg !3386
  %75 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3387
  %cmp114 = icmp eq %struct._multi_option_t* %75, null, !dbg !3389
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !3390

if.then116:                                       ; preds = %if.end110
  %76 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3391
  store %struct.lwm2m_uri_t* %76, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3392
  br label %return, !dbg !3392

if.end117:                                        ; preds = %if.end110
  %77 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3393
  %len118 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %77, i32 0, i32 2, !dbg !3395
  %78 = load i8, i8* %len118, align 1, !dbg !3395
  %conv119 = zext i8 %78 to i32, !dbg !3393
  %cmp120 = icmp ne i32 %conv119, 0, !dbg !3396
  br i1 %cmp120, label %if.then122, label %if.end139, !dbg !3397

if.then122:                                       ; preds = %if.end117
  %79 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3398
  %data123 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %79, i32 0, i32 3, !dbg !3400
  %80 = load i8*, i8** %data123, align 8, !dbg !3400
  %81 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3401
  %len124 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %81, i32 0, i32 2, !dbg !3402
  %82 = load i8, i8* %len124, align 1, !dbg !3402
  %conv125 = zext i8 %82 to i64, !dbg !3401
  %call126 = call i32 @uri_getNumber(i8* %80, i64 %conv125), !dbg !3403
  store i32 %call126, i32* %readNum, align 4, !dbg !3404
  %83 = load i32, i32* %readNum, align 4, !dbg !3405
  %cmp127 = icmp slt i32 %83, 0, !dbg !3407
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129, !dbg !3408

lor.lhs.false129:                                 ; preds = %if.then122
  %84 = load i32, i32* %readNum, align 4, !dbg !3409
  %cmp130 = icmp sge i32 %84, 65535, !dbg !3410
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !3411

if.then132:                                       ; preds = %lor.lhs.false129, %if.then122
  br label %error, !dbg !3412

if.end133:                                        ; preds = %lor.lhs.false129
  %85 = load i32, i32* %readNum, align 4, !dbg !3413
  %conv134 = trunc i32 %85 to i16, !dbg !3414
  %86 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3415
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %86, i32 0, i32 2, !dbg !3416
  store i16 %conv134, i16* %instanceId, align 2, !dbg !3417
  %87 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3418
  %flag135 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %87, i32 0, i32 0, !dbg !3419
  %88 = load i8, i8* %flag135, align 2, !dbg !3420
  %conv136 = zext i8 %88 to i32, !dbg !3420
  %or137 = or i32 %conv136, 2, !dbg !3420
  %conv138 = trunc i32 %or137 to i8, !dbg !3420
  store i8 %conv138, i8* %flag135, align 2, !dbg !3420
  br label %if.end139, !dbg !3421

if.end139:                                        ; preds = %if.end133, %if.end117
  %89 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3422
  %next140 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %89, i32 0, i32 0, !dbg !3423
  %90 = load %struct._multi_option_t*, %struct._multi_option_t** %next140, align 8, !dbg !3423
  store %struct._multi_option_t* %90, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3424
  %91 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3425
  %cmp141 = icmp eq %struct._multi_option_t* %91, null, !dbg !3427
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !3428

if.then143:                                       ; preds = %if.end139
  %92 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3429
  store %struct.lwm2m_uri_t* %92, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3430
  br label %return, !dbg !3430

if.end144:                                        ; preds = %if.end139
  %93 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3431
  %len145 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %93, i32 0, i32 2, !dbg !3433
  %94 = load i8, i8* %len145, align 1, !dbg !3433
  %conv146 = zext i8 %94 to i32, !dbg !3431
  %cmp147 = icmp ne i32 %conv146, 0, !dbg !3434
  br i1 %cmp147, label %if.then149, label %if.end173, !dbg !3435

if.then149:                                       ; preds = %if.end144
  %95 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3436
  %flag150 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %95, i32 0, i32 0, !dbg !3439
  %96 = load i8, i8* %flag150, align 2, !dbg !3439
  %conv151 = zext i8 %96 to i32, !dbg !3436
  %and152 = and i32 %conv151, 2, !dbg !3440
  %cmp153 = icmp eq i32 %and152, 0, !dbg !3441
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !3442

if.then155:                                       ; preds = %if.then149
  br label %error, !dbg !3443

if.end156:                                        ; preds = %if.then149
  %97 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3444
  %data157 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %97, i32 0, i32 3, !dbg !3445
  %98 = load i8*, i8** %data157, align 8, !dbg !3445
  %99 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3446
  %len158 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %99, i32 0, i32 2, !dbg !3447
  %100 = load i8, i8* %len158, align 1, !dbg !3447
  %conv159 = zext i8 %100 to i64, !dbg !3446
  %call160 = call i32 @uri_getNumber(i8* %98, i64 %conv159), !dbg !3448
  store i32 %call160, i32* %readNum, align 4, !dbg !3449
  %101 = load i32, i32* %readNum, align 4, !dbg !3450
  %cmp161 = icmp slt i32 %101, 0, !dbg !3452
  br i1 %cmp161, label %if.then166, label %lor.lhs.false163, !dbg !3453

lor.lhs.false163:                                 ; preds = %if.end156
  %102 = load i32, i32* %readNum, align 4, !dbg !3454
  %cmp164 = icmp sgt i32 %102, 65535, !dbg !3455
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !3456

if.then166:                                       ; preds = %lor.lhs.false163, %if.end156
  br label %error, !dbg !3457

if.end167:                                        ; preds = %lor.lhs.false163
  %103 = load i32, i32* %readNum, align 4, !dbg !3458
  %conv168 = trunc i32 %103 to i16, !dbg !3459
  %104 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3460
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %104, i32 0, i32 3, !dbg !3461
  store i16 %conv168, i16* %resourceId, align 2, !dbg !3462
  %105 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3463
  %flag169 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %105, i32 0, i32 0, !dbg !3464
  %106 = load i8, i8* %flag169, align 2, !dbg !3465
  %conv170 = zext i8 %106 to i32, !dbg !3465
  %or171 = or i32 %conv170, 1, !dbg !3465
  %conv172 = trunc i32 %or171 to i8, !dbg !3465
  store i8 %conv172, i8* %flag169, align 2, !dbg !3465
  br label %if.end173, !dbg !3466

if.end173:                                        ; preds = %if.end167, %if.end144
  %107 = load %struct._multi_option_t*, %struct._multi_option_t** %uriPath.addr, align 8, !dbg !3467
  %next174 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %107, i32 0, i32 0, !dbg !3469
  %108 = load %struct._multi_option_t*, %struct._multi_option_t** %next174, align 8, !dbg !3469
  %cmp175 = icmp eq %struct._multi_option_t* null, %108, !dbg !3470
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !3471

if.then177:                                       ; preds = %if.end173
  %109 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3472
  store %struct.lwm2m_uri_t* %109, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3474
  br label %return, !dbg !3474

if.end178:                                        ; preds = %if.end173
  br label %error, !dbg !3469

error:                                            ; preds = %if.end178, %if.then166, %if.then155, %if.then132, %if.then108, %if.then92, %if.then39
  %110 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !3475
  %111 = bitcast %struct.lwm2m_uri_t* %110 to i8*, !dbg !3475
  call void @lwm2m_free(i8* %111), !dbg !3476
  store %struct.lwm2m_uri_t* null, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3477
  br label %return, !dbg !3477

return:                                           ; preds = %error, %if.then177, %if.then143, %if.then116, %if.end109, %if.then76, %if.then66, %if.then53, %if.end40, %if.then15, %if.then
  %112 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %retval, align 8, !dbg !3478
  ret %struct.lwm2m_uri_t* %112, !dbg !3478
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_stringToUri(i8* %buffer, i64 %buffer_len, %struct.lwm2m_uri_t* %uriP) #0 !dbg !3479 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %buffer_len.addr = alloca i64, align 8
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %head = alloca i64, align 8
  %readNum = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3482, metadata !1190), !dbg !3483
  store i64 %buffer_len, i64* %buffer_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_len.addr, metadata !3484, metadata !1190), !dbg !3485
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !3486, metadata !1190), !dbg !3487
  call void @llvm.dbg.declare(metadata i64* %head, metadata !3488, metadata !1190), !dbg !3489
  call void @llvm.dbg.declare(metadata i32* %readNum, metadata !3490, metadata !1190), !dbg !3491
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !3492
  %cmp = icmp eq i8* %0, null, !dbg !3494
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3495

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %buffer_len.addr, align 8, !dbg !3496
  %cmp1 = icmp eq i64 %1, 0, !dbg !3497
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3498

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3499
  %cmp3 = icmp eq %struct.lwm2m_uri_t* %2, null, !dbg !3500
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3501

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3502
  br label %return, !dbg !3502

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3503
  %4 = bitcast %struct.lwm2m_uri_t* %3 to i8*, !dbg !3504
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 8, i32 2, i1 false), !dbg !3504
  store i64 0, i64* %head, align 8, !dbg !3505
  br label %while.cond, !dbg !3506

while.cond:                                       ; preds = %while.body, %if.end
  %5 = load i64, i64* %head, align 8, !dbg !3507
  %6 = load i64, i64* %buffer_len.addr, align 8, !dbg !3508
  %cmp4 = icmp ult i64 %5, %6, !dbg !3509
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !3510

land.rhs:                                         ; preds = %while.cond
  %call = call i16** @__ctype_b_loc() #8, !dbg !3511
  %7 = load i16*, i16** %call, align 8, !dbg !3511
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !3511
  %9 = load i64, i64* %head, align 8, !dbg !3511
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !3511
  %10 = load i8, i8* %arrayidx, align 1, !dbg !3511
  %conv = sext i8 %10 to i32, !dbg !3511
  %and = and i32 %conv, 255, !dbg !3511
  %idxprom = sext i32 %and to i64, !dbg !3511
  %arrayidx5 = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !3511
  %11 = load i16, i16* %arrayidx5, align 2, !dbg !3511
  %conv6 = zext i16 %11 to i32, !dbg !3511
  %and7 = and i32 %conv6, 8192, !dbg !3511
  %tobool = icmp ne i32 %and7, 0, !dbg !3510
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %12, label %while.body, label %while.end, !dbg !3506

while.body:                                       ; preds = %land.end
  %13 = load i64, i64* %head, align 8, !dbg !3512
  %inc = add i64 %13, 1, !dbg !3512
  store i64 %inc, i64* %head, align 8, !dbg !3512
  br label %while.cond, !dbg !3506, !llvm.loop !3514

while.end:                                        ; preds = %land.end
  %14 = load i64, i64* %head, align 8, !dbg !3516
  %15 = load i64, i64* %buffer_len.addr, align 8, !dbg !3518
  %cmp8 = icmp eq i64 %14, %15, !dbg !3519
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3520

if.then10:                                        ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !3521
  br label %return, !dbg !3521

if.end11:                                         ; preds = %while.end
  %16 = load i8*, i8** %buffer.addr, align 8, !dbg !3522
  %17 = load i64, i64* %head, align 8, !dbg !3524
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !3522
  %18 = load i8, i8* %arrayidx12, align 1, !dbg !3522
  %conv13 = sext i8 %18 to i32, !dbg !3522
  %cmp14 = icmp ne i32 %conv13, 47, !dbg !3525
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !3526

if.then16:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !3527
  br label %return, !dbg !3527

if.end17:                                         ; preds = %if.end11
  %19 = load i64, i64* %head, align 8, !dbg !3528
  %inc18 = add i64 %19, 1, !dbg !3528
  store i64 %inc18, i64* %head, align 8, !dbg !3528
  %20 = load i64, i64* %head, align 8, !dbg !3529
  %21 = load i64, i64* %buffer_len.addr, align 8, !dbg !3531
  %cmp19 = icmp eq i64 %20, %21, !dbg !3532
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !3533

if.then21:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !3534
  br label %return, !dbg !3534

if.end22:                                         ; preds = %if.end17
  %22 = load i8*, i8** %buffer.addr, align 8, !dbg !3535
  %23 = load i64, i64* %buffer_len.addr, align 8, !dbg !3536
  %call23 = call i32 @prv_parseNumber(i8* %22, i64 %23, i64* %head), !dbg !3537
  store i32 %call23, i32* %readNum, align 4, !dbg !3538
  %24 = load i32, i32* %readNum, align 4, !dbg !3539
  %cmp24 = icmp slt i32 %24, 0, !dbg !3541
  br i1 %cmp24, label %if.then29, label %lor.lhs.false26, !dbg !3542

lor.lhs.false26:                                  ; preds = %if.end22
  %25 = load i32, i32* %readNum, align 4, !dbg !3543
  %cmp27 = icmp sgt i32 %25, 65535, !dbg !3544
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !3545

if.then29:                                        ; preds = %lor.lhs.false26, %if.end22
  store i32 0, i32* %retval, align 4, !dbg !3546
  br label %return, !dbg !3546

if.end30:                                         ; preds = %lor.lhs.false26
  %26 = load i32, i32* %readNum, align 4, !dbg !3547
  %conv31 = trunc i32 %26 to i16, !dbg !3548
  %27 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3549
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %27, i32 0, i32 1, !dbg !3550
  store i16 %conv31, i16* %objectId, align 2, !dbg !3551
  %28 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3552
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %28, i32 0, i32 0, !dbg !3553
  %29 = load i8, i8* %flag, align 2, !dbg !3554
  %conv32 = zext i8 %29 to i32, !dbg !3554
  %or = or i32 %conv32, 4, !dbg !3554
  %conv33 = trunc i32 %or to i8, !dbg !3554
  store i8 %conv33, i8* %flag, align 2, !dbg !3554
  %30 = load i8*, i8** %buffer.addr, align 8, !dbg !3555
  %31 = load i64, i64* %head, align 8, !dbg !3557
  %arrayidx34 = getelementptr inbounds i8, i8* %30, i64 %31, !dbg !3555
  %32 = load i8, i8* %arrayidx34, align 1, !dbg !3555
  %conv35 = sext i8 %32 to i32, !dbg !3555
  %cmp36 = icmp eq i32 %conv35, 47, !dbg !3558
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !3559

if.then38:                                        ; preds = %if.end30
  %33 = load i64, i64* %head, align 8, !dbg !3560
  %add = add i64 %33, 1, !dbg !3560
  store i64 %add, i64* %head, align 8, !dbg !3560
  br label %if.end39, !dbg !3561

if.end39:                                         ; preds = %if.then38, %if.end30
  %34 = load i64, i64* %head, align 8, !dbg !3562
  %35 = load i64, i64* %buffer_len.addr, align 8, !dbg !3564
  %cmp40 = icmp uge i64 %34, %35, !dbg !3565
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !3566

if.then42:                                        ; preds = %if.end39
  %36 = load i64, i64* %head, align 8, !dbg !3567
  %conv43 = trunc i64 %36 to i32, !dbg !3567
  store i32 %conv43, i32* %retval, align 4, !dbg !3569
  br label %return, !dbg !3569

if.end44:                                         ; preds = %if.end39
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !3570
  %38 = load i64, i64* %buffer_len.addr, align 8, !dbg !3571
  %call45 = call i32 @prv_parseNumber(i8* %37, i64 %38, i64* %head), !dbg !3572
  store i32 %call45, i32* %readNum, align 4, !dbg !3573
  %39 = load i32, i32* %readNum, align 4, !dbg !3574
  %cmp46 = icmp slt i32 %39, 0, !dbg !3576
  br i1 %cmp46, label %if.then51, label %lor.lhs.false48, !dbg !3577

lor.lhs.false48:                                  ; preds = %if.end44
  %40 = load i32, i32* %readNum, align 4, !dbg !3578
  %cmp49 = icmp sge i32 %40, 65535, !dbg !3579
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3580

if.then51:                                        ; preds = %lor.lhs.false48, %if.end44
  store i32 0, i32* %retval, align 4, !dbg !3581
  br label %return, !dbg !3581

if.end52:                                         ; preds = %lor.lhs.false48
  %41 = load i32, i32* %readNum, align 4, !dbg !3582
  %conv53 = trunc i32 %41 to i16, !dbg !3583
  %42 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3584
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %42, i32 0, i32 2, !dbg !3585
  store i16 %conv53, i16* %instanceId, align 2, !dbg !3586
  %43 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3587
  %flag54 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %43, i32 0, i32 0, !dbg !3588
  %44 = load i8, i8* %flag54, align 2, !dbg !3589
  %conv55 = zext i8 %44 to i32, !dbg !3589
  %or56 = or i32 %conv55, 2, !dbg !3589
  %conv57 = trunc i32 %or56 to i8, !dbg !3589
  store i8 %conv57, i8* %flag54, align 2, !dbg !3589
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !3590
  %46 = load i64, i64* %head, align 8, !dbg !3592
  %arrayidx58 = getelementptr inbounds i8, i8* %45, i64 %46, !dbg !3590
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !3590
  %conv59 = sext i8 %47 to i32, !dbg !3590
  %cmp60 = icmp eq i32 %conv59, 47, !dbg !3593
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !3594

if.then62:                                        ; preds = %if.end52
  %48 = load i64, i64* %head, align 8, !dbg !3595
  %add63 = add i64 %48, 1, !dbg !3595
  store i64 %add63, i64* %head, align 8, !dbg !3595
  br label %if.end64, !dbg !3596

if.end64:                                         ; preds = %if.then62, %if.end52
  %49 = load i64, i64* %head, align 8, !dbg !3597
  %50 = load i64, i64* %buffer_len.addr, align 8, !dbg !3599
  %cmp65 = icmp uge i64 %49, %50, !dbg !3600
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !3601

if.then67:                                        ; preds = %if.end64
  %51 = load i64, i64* %head, align 8, !dbg !3602
  %conv68 = trunc i64 %51 to i32, !dbg !3602
  store i32 %conv68, i32* %retval, align 4, !dbg !3604
  br label %return, !dbg !3604

if.end69:                                         ; preds = %if.end64
  %52 = load i8*, i8** %buffer.addr, align 8, !dbg !3605
  %53 = load i64, i64* %buffer_len.addr, align 8, !dbg !3606
  %call70 = call i32 @prv_parseNumber(i8* %52, i64 %53, i64* %head), !dbg !3607
  store i32 %call70, i32* %readNum, align 4, !dbg !3608
  %54 = load i32, i32* %readNum, align 4, !dbg !3609
  %cmp71 = icmp slt i32 %54, 0, !dbg !3611
  br i1 %cmp71, label %if.then76, label %lor.lhs.false73, !dbg !3612

lor.lhs.false73:                                  ; preds = %if.end69
  %55 = load i32, i32* %readNum, align 4, !dbg !3613
  %cmp74 = icmp sge i32 %55, 65535, !dbg !3614
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !3615

if.then76:                                        ; preds = %lor.lhs.false73, %if.end69
  store i32 0, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

if.end77:                                         ; preds = %lor.lhs.false73
  %56 = load i32, i32* %readNum, align 4, !dbg !3617
  %conv78 = trunc i32 %56 to i16, !dbg !3618
  %57 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3619
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %57, i32 0, i32 3, !dbg !3620
  store i16 %conv78, i16* %resourceId, align 2, !dbg !3621
  %58 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3622
  %flag79 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %58, i32 0, i32 0, !dbg !3623
  %59 = load i8, i8* %flag79, align 2, !dbg !3624
  %conv80 = zext i8 %59 to i32, !dbg !3624
  %or81 = or i32 %conv80, 1, !dbg !3624
  %conv82 = trunc i32 %or81 to i8, !dbg !3624
  store i8 %conv82, i8* %flag79, align 2, !dbg !3624
  %60 = load i64, i64* %head, align 8, !dbg !3625
  %61 = load i64, i64* %buffer_len.addr, align 8, !dbg !3627
  %cmp83 = icmp ne i64 %60, %61, !dbg !3628
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !3629

if.then85:                                        ; preds = %if.end77
  store i32 0, i32* %retval, align 4, !dbg !3630
  br label %return, !dbg !3630

if.end86:                                         ; preds = %if.end77
  %62 = load i64, i64* %head, align 8, !dbg !3631
  %conv87 = trunc i64 %62 to i32, !dbg !3631
  store i32 %conv87, i32* %retval, align 4, !dbg !3632
  br label %return, !dbg !3632

return:                                           ; preds = %if.end86, %if.then85, %if.then76, %if.then67, %if.then51, %if.then42, %if.then29, %if.then21, %if.then16, %if.then10, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !3633
  ret i32 %63, !dbg !3633
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #4

; Function Attrs: noinline nounwind uwtable
define i32 @uri_toString(%struct.lwm2m_uri_t* %uriP, i8* %buffer, i64 %bufferLen, i32* %depthP) #0 !dbg !3634 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %depthP.addr = alloca i32*, align 8
  %head = alloca i64, align 8
  %res = alloca i32, align 4
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !3639, metadata !1190), !dbg !3640
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3641, metadata !1190), !dbg !3642
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !3643, metadata !1190), !dbg !3644
  store i32* %depthP, i32** %depthP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %depthP.addr, metadata !3645, metadata !1190), !dbg !3646
  call void @llvm.dbg.declare(metadata i64* %head, metadata !3647, metadata !1190), !dbg !3648
  call void @llvm.dbg.declare(metadata i32* %res, metadata !3649, metadata !1190), !dbg !3650
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !3651
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3651
  store i8 47, i8* %arrayidx, align 1, !dbg !3652
  %1 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3653
  %cmp = icmp eq %struct.lwm2m_uri_t* %1, null, !dbg !3655
  br i1 %cmp, label %if.then, label %if.end2, !dbg !3656

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %depthP.addr, align 8, !dbg !3657
  %tobool = icmp ne i32* %2, null, !dbg !3657
  br i1 %tobool, label %if.then1, label %if.end, !dbg !3660

if.then1:                                         ; preds = %if.then
  %3 = load i32*, i32** %depthP.addr, align 8, !dbg !3661
  store i32 0, i32* %3, align 4, !dbg !3662
  br label %if.end, !dbg !3663

if.end:                                           ; preds = %if.then1, %if.then
  store i32 1, i32* %retval, align 4, !dbg !3664
  br label %return, !dbg !3664

if.end2:                                          ; preds = %entry
  store i64 1, i64* %head, align 8, !dbg !3665
  %4 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3666
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %4, i32 0, i32 1, !dbg !3667
  %5 = load i16, i16* %objectId, align 2, !dbg !3667
  %conv = zext i16 %5 to i64, !dbg !3666
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !3668
  %7 = load i64, i64* %head, align 8, !dbg !3669
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !3670
  %8 = load i64, i64* %bufferLen.addr, align 8, !dbg !3671
  %9 = load i64, i64* %head, align 8, !dbg !3672
  %sub = sub i64 %8, %9, !dbg !3673
  %call = call i64 @utils_intToText(i64 %conv, i8* %add.ptr, i64 %sub), !dbg !3674
  %conv3 = trunc i64 %call to i32, !dbg !3674
  store i32 %conv3, i32* %res, align 4, !dbg !3675
  %10 = load i32, i32* %res, align 4, !dbg !3676
  %cmp4 = icmp sle i32 %10, 0, !dbg !3678
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !3679

if.then6:                                         ; preds = %if.end2
  store i32 -1, i32* %retval, align 4, !dbg !3680
  br label %return, !dbg !3680

if.end7:                                          ; preds = %if.end2
  %11 = load i32, i32* %res, align 4, !dbg !3681
  %conv8 = sext i32 %11 to i64, !dbg !3681
  %12 = load i64, i64* %head, align 8, !dbg !3682
  %add = add i64 %12, %conv8, !dbg !3682
  store i64 %add, i64* %head, align 8, !dbg !3682
  %13 = load i64, i64* %head, align 8, !dbg !3683
  %14 = load i64, i64* %bufferLen.addr, align 8, !dbg !3685
  %sub9 = sub i64 %14, 1, !dbg !3686
  %cmp10 = icmp uge i64 %13, %sub9, !dbg !3687
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3688

if.then12:                                        ; preds = %if.end7
  store i32 -1, i32* %retval, align 4, !dbg !3689
  br label %return, !dbg !3689

if.end13:                                         ; preds = %if.end7
  %15 = load i32*, i32** %depthP.addr, align 8, !dbg !3690
  %tobool14 = icmp ne i32* %15, null, !dbg !3690
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !3692

if.then15:                                        ; preds = %if.end13
  %16 = load i32*, i32** %depthP.addr, align 8, !dbg !3693
  store i32 1, i32* %16, align 4, !dbg !3694
  br label %if.end16, !dbg !3695

if.end16:                                         ; preds = %if.then15, %if.end13
  %17 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3696
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %17, i32 0, i32 0, !dbg !3696
  %18 = load i8, i8* %flag, align 2, !dbg !3696
  %conv17 = zext i8 %18 to i32, !dbg !3696
  %and = and i32 %conv17, 2, !dbg !3696
  %cmp18 = icmp ne i32 %and, 0, !dbg !3696
  br i1 %cmp18, label %if.then20, label %if.end69, !dbg !3698

if.then20:                                        ; preds = %if.end16
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !3699
  %20 = load i64, i64* %head, align 8, !dbg !3701
  %arrayidx21 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !3699
  store i8 47, i8* %arrayidx21, align 1, !dbg !3702
  %21 = load i64, i64* %head, align 8, !dbg !3703
  %inc = add i64 %21, 1, !dbg !3703
  store i64 %inc, i64* %head, align 8, !dbg !3703
  %22 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3704
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %22, i32 0, i32 2, !dbg !3705
  %23 = load i16, i16* %instanceId, align 2, !dbg !3705
  %conv22 = zext i16 %23 to i64, !dbg !3704
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !3706
  %25 = load i64, i64* %head, align 8, !dbg !3707
  %add.ptr23 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !3708
  %26 = load i64, i64* %bufferLen.addr, align 8, !dbg !3709
  %27 = load i64, i64* %head, align 8, !dbg !3710
  %sub24 = sub i64 %26, %27, !dbg !3711
  %call25 = call i64 @utils_intToText(i64 %conv22, i8* %add.ptr23, i64 %sub24), !dbg !3712
  %conv26 = trunc i64 %call25 to i32, !dbg !3712
  store i32 %conv26, i32* %res, align 4, !dbg !3713
  %28 = load i32, i32* %res, align 4, !dbg !3714
  %cmp27 = icmp sle i32 %28, 0, !dbg !3716
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !3717

if.then29:                                        ; preds = %if.then20
  store i32 -1, i32* %retval, align 4, !dbg !3718
  br label %return, !dbg !3718

if.end30:                                         ; preds = %if.then20
  %29 = load i32, i32* %res, align 4, !dbg !3719
  %conv31 = sext i32 %29 to i64, !dbg !3719
  %30 = load i64, i64* %head, align 8, !dbg !3720
  %add32 = add i64 %30, %conv31, !dbg !3720
  store i64 %add32, i64* %head, align 8, !dbg !3720
  %31 = load i64, i64* %head, align 8, !dbg !3721
  %32 = load i64, i64* %bufferLen.addr, align 8, !dbg !3723
  %sub33 = sub i64 %32, 1, !dbg !3724
  %cmp34 = icmp uge i64 %31, %sub33, !dbg !3725
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3726

if.then36:                                        ; preds = %if.end30
  store i32 -1, i32* %retval, align 4, !dbg !3727
  br label %return, !dbg !3727

if.end37:                                         ; preds = %if.end30
  %33 = load i32*, i32** %depthP.addr, align 8, !dbg !3728
  %tobool38 = icmp ne i32* %33, null, !dbg !3728
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !3730

if.then39:                                        ; preds = %if.end37
  %34 = load i32*, i32** %depthP.addr, align 8, !dbg !3731
  store i32 2, i32* %34, align 4, !dbg !3732
  br label %if.end40, !dbg !3733

if.end40:                                         ; preds = %if.then39, %if.end37
  %35 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3734
  %flag41 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %35, i32 0, i32 0, !dbg !3734
  %36 = load i8, i8* %flag41, align 2, !dbg !3734
  %conv42 = zext i8 %36 to i32, !dbg !3734
  %and43 = and i32 %conv42, 1, !dbg !3734
  %cmp44 = icmp ne i32 %and43, 0, !dbg !3734
  br i1 %cmp44, label %if.then46, label %if.end68, !dbg !3736

if.then46:                                        ; preds = %if.end40
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !3737
  %38 = load i64, i64* %head, align 8, !dbg !3739
  %arrayidx47 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !3737
  store i8 47, i8* %arrayidx47, align 1, !dbg !3740
  %39 = load i64, i64* %head, align 8, !dbg !3741
  %inc48 = add i64 %39, 1, !dbg !3741
  store i64 %inc48, i64* %head, align 8, !dbg !3741
  %40 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !3742
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %40, i32 0, i32 3, !dbg !3743
  %41 = load i16, i16* %resourceId, align 2, !dbg !3743
  %conv49 = zext i16 %41 to i64, !dbg !3742
  %42 = load i8*, i8** %buffer.addr, align 8, !dbg !3744
  %43 = load i64, i64* %head, align 8, !dbg !3745
  %add.ptr50 = getelementptr inbounds i8, i8* %42, i64 %43, !dbg !3746
  %44 = load i64, i64* %bufferLen.addr, align 8, !dbg !3747
  %45 = load i64, i64* %head, align 8, !dbg !3748
  %sub51 = sub i64 %44, %45, !dbg !3749
  %call52 = call i64 @utils_intToText(i64 %conv49, i8* %add.ptr50, i64 %sub51), !dbg !3750
  %conv53 = trunc i64 %call52 to i32, !dbg !3750
  store i32 %conv53, i32* %res, align 4, !dbg !3751
  %46 = load i32, i32* %res, align 4, !dbg !3752
  %cmp54 = icmp sle i32 %46, 0, !dbg !3754
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !3755

if.then56:                                        ; preds = %if.then46
  store i32 -1, i32* %retval, align 4, !dbg !3756
  br label %return, !dbg !3756

if.end57:                                         ; preds = %if.then46
  %47 = load i32, i32* %res, align 4, !dbg !3757
  %conv58 = sext i32 %47 to i64, !dbg !3757
  %48 = load i64, i64* %head, align 8, !dbg !3758
  %add59 = add i64 %48, %conv58, !dbg !3758
  store i64 %add59, i64* %head, align 8, !dbg !3758
  %49 = load i64, i64* %head, align 8, !dbg !3759
  %50 = load i64, i64* %bufferLen.addr, align 8, !dbg !3761
  %sub60 = sub i64 %50, 1, !dbg !3762
  %cmp61 = icmp uge i64 %49, %sub60, !dbg !3763
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !3764

if.then63:                                        ; preds = %if.end57
  store i32 -1, i32* %retval, align 4, !dbg !3765
  br label %return, !dbg !3765

if.end64:                                         ; preds = %if.end57
  %51 = load i32*, i32** %depthP.addr, align 8, !dbg !3766
  %tobool65 = icmp ne i32* %51, null, !dbg !3766
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !3768

if.then66:                                        ; preds = %if.end64
  %52 = load i32*, i32** %depthP.addr, align 8, !dbg !3769
  store i32 3, i32* %52, align 4, !dbg !3770
  br label %if.end67, !dbg !3771

if.end67:                                         ; preds = %if.then66, %if.end64
  br label %if.end68, !dbg !3772

if.end68:                                         ; preds = %if.end67, %if.end40
  br label %if.end69, !dbg !3773

if.end69:                                         ; preds = %if.end68, %if.end16
  %53 = load i8*, i8** %buffer.addr, align 8, !dbg !3774
  %54 = load i64, i64* %head, align 8, !dbg !3775
  %arrayidx70 = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !3774
  store i8 47, i8* %arrayidx70, align 1, !dbg !3776
  %55 = load i64, i64* %head, align 8, !dbg !3777
  %inc71 = add i64 %55, 1, !dbg !3777
  store i64 %inc71, i64* %head, align 8, !dbg !3777
  %56 = load i64, i64* %head, align 8, !dbg !3778
  %conv72 = trunc i64 %56 to i32, !dbg !3778
  store i32 %conv72, i32* %retval, align 4, !dbg !3779
  br label %return, !dbg !3779

return:                                           ; preds = %if.end69, %if.then63, %if.then56, %if.then36, %if.then29, %if.then12, %if.then6, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !3780
  ret i32 %57, !dbg !3780
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_textToInt(i8* %buffer, i32 %length, i64* %dataP) #0 !dbg !3781 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %dataP.addr = alloca i64*, align 8
  %result = alloca i64, align 8
  %sign = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3785, metadata !1190), !dbg !3786
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3787, metadata !1190), !dbg !3788
  store i64* %dataP, i64** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dataP.addr, metadata !3789, metadata !1190), !dbg !3790
  call void @llvm.dbg.declare(metadata i64* %result, metadata !3791, metadata !1190), !dbg !3793
  store i64 0, i64* %result, align 8, !dbg !3793
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !3794, metadata !1190), !dbg !3795
  store i32 1, i32* %sign, align 4, !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3796, metadata !1190), !dbg !3797
  store i32 0, i32* %i, align 4, !dbg !3797
  %0 = load i32, i32* %length.addr, align 4, !dbg !3798
  %cmp = icmp eq i32 0, %0, !dbg !3800
  br i1 %cmp, label %if.then, label %if.end, !dbg !3801

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3802
  br label %return, !dbg !3802

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !3803
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3803
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3803
  %conv = zext i8 %2 to i32, !dbg !3803
  %cmp1 = icmp eq i32 %conv, 45, !dbg !3805
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !3806

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %sign, align 4, !dbg !3807
  store i32 1, i32* %i, align 4, !dbg !3809
  br label %if.end4, !dbg !3810

if.end4:                                          ; preds = %if.then3, %if.end
  br label %while.cond, !dbg !3811

while.cond:                                       ; preds = %if.end25, %if.end4
  %3 = load i32, i32* %i, align 4, !dbg !3812
  %4 = load i32, i32* %length.addr, align 4, !dbg !3813
  %cmp5 = icmp slt i32 %3, %4, !dbg !3814
  br i1 %cmp5, label %while.body, label %while.end, !dbg !3811

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !3815
  %6 = load i32, i32* %i, align 4, !dbg !3818
  %idxprom = sext i32 %6 to i64, !dbg !3815
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !3815
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !3815
  %conv8 = zext i8 %7 to i32, !dbg !3815
  %cmp9 = icmp sle i32 48, %conv8, !dbg !3819
  br i1 %cmp9, label %land.lhs.true, label %if.else, !dbg !3820

land.lhs.true:                                    ; preds = %while.body
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !3821
  %9 = load i32, i32* %i, align 4, !dbg !3822
  %idxprom11 = sext i32 %9 to i64, !dbg !3821
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i64 %idxprom11, !dbg !3821
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !3821
  %conv13 = zext i8 %10 to i32, !dbg !3821
  %cmp14 = icmp sle i32 %conv13, 57, !dbg !3823
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !3824

if.then16:                                        ; preds = %land.lhs.true
  %11 = load i64, i64* %result, align 8, !dbg !3825
  %cmp17 = icmp ugt i64 %11, 1844674407370955161, !dbg !3828
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3829

if.then19:                                        ; preds = %if.then16
  store i32 0, i32* %retval, align 4, !dbg !3830
  br label %return, !dbg !3830

if.end20:                                         ; preds = %if.then16
  %12 = load i64, i64* %result, align 8, !dbg !3831
  %mul = mul i64 %12, 10, !dbg !3831
  store i64 %mul, i64* %result, align 8, !dbg !3831
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !3832
  %14 = load i32, i32* %i, align 4, !dbg !3833
  %idxprom21 = sext i32 %14 to i64, !dbg !3832
  %arrayidx22 = getelementptr inbounds i8, i8* %13, i64 %idxprom21, !dbg !3832
  %15 = load i8, i8* %arrayidx22, align 1, !dbg !3832
  %conv23 = zext i8 %15 to i32, !dbg !3832
  %sub = sub nsw i32 %conv23, 48, !dbg !3834
  %conv24 = sext i32 %sub to i64, !dbg !3832
  %16 = load i64, i64* %result, align 8, !dbg !3835
  %add = add i64 %16, %conv24, !dbg !3835
  store i64 %add, i64* %result, align 8, !dbg !3835
  br label %if.end25, !dbg !3836

if.else:                                          ; preds = %land.lhs.true, %while.body
  store i32 0, i32* %retval, align 4, !dbg !3837
  br label %return, !dbg !3837

if.end25:                                         ; preds = %if.end20
  %17 = load i32, i32* %i, align 4, !dbg !3839
  %inc = add nsw i32 %17, 1, !dbg !3839
  store i32 %inc, i32* %i, align 4, !dbg !3839
  br label %while.cond, !dbg !3811, !llvm.loop !3840

while.end:                                        ; preds = %while.cond
  %18 = load i64, i64* %result, align 8, !dbg !3842
  %cmp26 = icmp ugt i64 %18, 9223372036854775807, !dbg !3844
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !3845

if.then28:                                        ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !3846
  br label %return, !dbg !3846

if.end29:                                         ; preds = %while.end
  %19 = load i32, i32* %sign, align 4, !dbg !3847
  %cmp30 = icmp eq i32 %19, -1, !dbg !3849
  br i1 %cmp30, label %if.then32, label %if.else34, !dbg !3850

if.then32:                                        ; preds = %if.end29
  %20 = load i64, i64* %result, align 8, !dbg !3851
  %sub33 = sub i64 0, %20, !dbg !3853
  %21 = load i64*, i64** %dataP.addr, align 8, !dbg !3854
  store i64 %sub33, i64* %21, align 8, !dbg !3855
  br label %if.end35, !dbg !3856

if.else34:                                        ; preds = %if.end29
  %22 = load i64, i64* %result, align 8, !dbg !3857
  %23 = load i64*, i64** %dataP.addr, align 8, !dbg !3859
  store i64 %22, i64* %23, align 8, !dbg !3860
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then32
  store i32 1, i32* %retval, align 4, !dbg !3861
  br label %return, !dbg !3861

return:                                           ; preds = %if.end35, %if.then28, %if.else, %if.then19, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !3862
  ret i32 %24, !dbg !3862
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_textToFloat(i8* %buffer, i32 %length, double* %dataP) #0 !dbg !3863 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %dataP.addr = alloca double*, align 8
  %result = alloca double, align 8
  %sign = alloca i32, align 4
  %i = alloca i32, align 4
  %dec = alloca double, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3867, metadata !1190), !dbg !3868
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3869, metadata !1190), !dbg !3870
  store double* %dataP, double** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata double** %dataP.addr, metadata !3871, metadata !1190), !dbg !3872
  call void @llvm.dbg.declare(metadata double* %result, metadata !3873, metadata !1190), !dbg !3874
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !3875, metadata !1190), !dbg !3876
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3877, metadata !1190), !dbg !3878
  %0 = load i32, i32* %length.addr, align 4, !dbg !3879
  %cmp = icmp eq i32 0, %0, !dbg !3881
  br i1 %cmp, label %if.then, label %if.end, !dbg !3882

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3883
  br label %return, !dbg !3883

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !3884
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3884
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3884
  %conv = zext i8 %2 to i32, !dbg !3884
  %cmp1 = icmp eq i32 %conv, 45, !dbg !3886
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !3887

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %sign, align 4, !dbg !3888
  store i32 1, i32* %i, align 4, !dbg !3890
  br label %if.end4, !dbg !3891

if.else:                                          ; preds = %if.end
  store i32 1, i32* %sign, align 4, !dbg !3892
  store i32 0, i32* %i, align 4, !dbg !3894
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  store double 0.000000e+00, double* %result, align 8, !dbg !3895
  br label %while.cond, !dbg !3896

while.cond:                                       ; preds = %if.end31, %if.end4
  %3 = load i32, i32* %i, align 4, !dbg !3897
  %4 = load i32, i32* %length.addr, align 4, !dbg !3898
  %cmp5 = icmp slt i32 %3, %4, !dbg !3899
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !3900

land.rhs:                                         ; preds = %while.cond
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !3901
  %6 = load i32, i32* %i, align 4, !dbg !3902
  %idxprom = sext i32 %6 to i64, !dbg !3901
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !3901
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !3901
  %conv8 = zext i8 %7 to i32, !dbg !3901
  %cmp9 = icmp ne i32 %conv8, 46, !dbg !3903
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp9, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !3896

while.body:                                       ; preds = %land.end
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !3904
  %10 = load i32, i32* %i, align 4, !dbg !3907
  %idxprom11 = sext i32 %10 to i64, !dbg !3904
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 %idxprom11, !dbg !3904
  %11 = load i8, i8* %arrayidx12, align 1, !dbg !3904
  %conv13 = zext i8 %11 to i32, !dbg !3904
  %cmp14 = icmp sle i32 48, %conv13, !dbg !3908
  br i1 %cmp14, label %land.lhs.true, label %if.else30, !dbg !3909

land.lhs.true:                                    ; preds = %while.body
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !3910
  %13 = load i32, i32* %i, align 4, !dbg !3911
  %idxprom16 = sext i32 %13 to i64, !dbg !3910
  %arrayidx17 = getelementptr inbounds i8, i8* %12, i64 %idxprom16, !dbg !3910
  %14 = load i8, i8* %arrayidx17, align 1, !dbg !3910
  %conv18 = zext i8 %14 to i32, !dbg !3910
  %cmp19 = icmp sle i32 %conv18, 57, !dbg !3912
  br i1 %cmp19, label %if.then21, label %if.else30, !dbg !3913

if.then21:                                        ; preds = %land.lhs.true
  %15 = load double, double* %result, align 8, !dbg !3914
  %cmp22 = fcmp ogt double %15, 0x7FB9999999999999, !dbg !3917
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !3918

if.then24:                                        ; preds = %if.then21
  store i32 0, i32* %retval, align 4, !dbg !3919
  br label %return, !dbg !3919

if.end25:                                         ; preds = %if.then21
  %16 = load double, double* %result, align 8, !dbg !3920
  %mul = fmul double %16, 1.000000e+01, !dbg !3920
  store double %mul, double* %result, align 8, !dbg !3920
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !3921
  %18 = load i32, i32* %i, align 4, !dbg !3922
  %idxprom26 = sext i32 %18 to i64, !dbg !3921
  %arrayidx27 = getelementptr inbounds i8, i8* %17, i64 %idxprom26, !dbg !3921
  %19 = load i8, i8* %arrayidx27, align 1, !dbg !3921
  %conv28 = zext i8 %19 to i32, !dbg !3921
  %sub = sub nsw i32 %conv28, 48, !dbg !3923
  %conv29 = sitofp i32 %sub to double, !dbg !3924
  %20 = load double, double* %result, align 8, !dbg !3925
  %add = fadd double %20, %conv29, !dbg !3925
  store double %add, double* %result, align 8, !dbg !3925
  br label %if.end31, !dbg !3926

if.else30:                                        ; preds = %land.lhs.true, %while.body
  store i32 0, i32* %retval, align 4, !dbg !3927
  br label %return, !dbg !3927

if.end31:                                         ; preds = %if.end25
  %21 = load i32, i32* %i, align 4, !dbg !3929
  %inc = add nsw i32 %21, 1, !dbg !3929
  store i32 %inc, i32* %i, align 4, !dbg !3929
  br label %while.cond, !dbg !3896, !llvm.loop !3930

while.end:                                        ; preds = %land.end
  %22 = load i8*, i8** %buffer.addr, align 8, !dbg !3932
  %23 = load i32, i32* %i, align 4, !dbg !3934
  %idxprom32 = sext i32 %23 to i64, !dbg !3932
  %arrayidx33 = getelementptr inbounds i8, i8* %22, i64 %idxprom32, !dbg !3932
  %24 = load i8, i8* %arrayidx33, align 1, !dbg !3932
  %conv34 = zext i8 %24 to i32, !dbg !3932
  %cmp35 = icmp eq i32 %conv34, 46, !dbg !3935
  br i1 %cmp35, label %if.then37, label %if.end74, !dbg !3936

if.then37:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata double* %dec, metadata !3937, metadata !1190), !dbg !3939
  %25 = load i32, i32* %i, align 4, !dbg !3940
  %inc38 = add nsw i32 %25, 1, !dbg !3940
  store i32 %inc38, i32* %i, align 4, !dbg !3940
  %26 = load i32, i32* %i, align 4, !dbg !3941
  %27 = load i32, i32* %length.addr, align 4, !dbg !3943
  %cmp39 = icmp eq i32 %26, %27, !dbg !3944
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !3945

if.then41:                                        ; preds = %if.then37
  store i32 0, i32* %retval, align 4, !dbg !3946
  br label %return, !dbg !3946

if.end42:                                         ; preds = %if.then37
  store double 1.000000e-01, double* %dec, align 8, !dbg !3947
  br label %while.cond43, !dbg !3948

while.cond43:                                     ; preds = %if.end71, %if.end42
  %28 = load i32, i32* %i, align 4, !dbg !3949
  %29 = load i32, i32* %length.addr, align 4, !dbg !3950
  %cmp44 = icmp slt i32 %28, %29, !dbg !3951
  br i1 %cmp44, label %while.body46, label %while.end73, !dbg !3948

while.body46:                                     ; preds = %while.cond43
  %30 = load i8*, i8** %buffer.addr, align 8, !dbg !3952
  %31 = load i32, i32* %i, align 4, !dbg !3955
  %idxprom47 = sext i32 %31 to i64, !dbg !3952
  %arrayidx48 = getelementptr inbounds i8, i8* %30, i64 %idxprom47, !dbg !3952
  %32 = load i8, i8* %arrayidx48, align 1, !dbg !3952
  %conv49 = zext i8 %32 to i32, !dbg !3952
  %cmp50 = icmp sle i32 48, %conv49, !dbg !3956
  br i1 %cmp50, label %land.lhs.true52, label %if.else70, !dbg !3957

land.lhs.true52:                                  ; preds = %while.body46
  %33 = load i8*, i8** %buffer.addr, align 8, !dbg !3958
  %34 = load i32, i32* %i, align 4, !dbg !3959
  %idxprom53 = sext i32 %34 to i64, !dbg !3958
  %arrayidx54 = getelementptr inbounds i8, i8* %33, i64 %idxprom53, !dbg !3958
  %35 = load i8, i8* %arrayidx54, align 1, !dbg !3958
  %conv55 = zext i8 %35 to i32, !dbg !3958
  %cmp56 = icmp sle i32 %conv55, 57, !dbg !3960
  br i1 %cmp56, label %if.then58, label %if.else70, !dbg !3961

if.then58:                                        ; preds = %land.lhs.true52
  %36 = load double, double* %result, align 8, !dbg !3962
  %cmp59 = fcmp ogt double %36, 0x7FEFFFFFFFFFFFFF, !dbg !3965
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !3966

if.then61:                                        ; preds = %if.then58
  store i32 0, i32* %retval, align 4, !dbg !3967
  br label %return, !dbg !3967

if.end62:                                         ; preds = %if.then58
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !3968
  %38 = load i32, i32* %i, align 4, !dbg !3969
  %idxprom63 = sext i32 %38 to i64, !dbg !3968
  %arrayidx64 = getelementptr inbounds i8, i8* %37, i64 %idxprom63, !dbg !3968
  %39 = load i8, i8* %arrayidx64, align 1, !dbg !3968
  %conv65 = zext i8 %39 to i32, !dbg !3968
  %sub66 = sub nsw i32 %conv65, 48, !dbg !3970
  %conv67 = sitofp i32 %sub66 to double, !dbg !3971
  %40 = load double, double* %dec, align 8, !dbg !3972
  %mul68 = fmul double %conv67, %40, !dbg !3973
  %41 = load double, double* %result, align 8, !dbg !3974
  %add69 = fadd double %41, %mul68, !dbg !3974
  store double %add69, double* %result, align 8, !dbg !3974
  %42 = load double, double* %dec, align 8, !dbg !3975
  %div = fdiv double %42, 1.000000e+01, !dbg !3975
  store double %div, double* %dec, align 8, !dbg !3975
  br label %if.end71, !dbg !3976

if.else70:                                        ; preds = %land.lhs.true52, %while.body46
  store i32 0, i32* %retval, align 4, !dbg !3977
  br label %return, !dbg !3977

if.end71:                                         ; preds = %if.end62
  %43 = load i32, i32* %i, align 4, !dbg !3979
  %inc72 = add nsw i32 %43, 1, !dbg !3979
  store i32 %inc72, i32* %i, align 4, !dbg !3979
  br label %while.cond43, !dbg !3948, !llvm.loop !3980

while.end73:                                      ; preds = %while.cond43
  br label %if.end74, !dbg !3982

if.end74:                                         ; preds = %while.end73, %while.end
  %44 = load double, double* %result, align 8, !dbg !3983
  %45 = load i32, i32* %sign, align 4, !dbg !3984
  %conv75 = sitofp i32 %45 to double, !dbg !3984
  %mul76 = fmul double %44, %conv75, !dbg !3985
  %46 = load double*, double** %dataP.addr, align 8, !dbg !3986
  store double %mul76, double* %46, align 8, !dbg !3987
  store i32 1, i32* %retval, align 4, !dbg !3988
  br label %return, !dbg !3988

return:                                           ; preds = %if.end74, %if.else70, %if.then61, %if.then41, %if.else30, %if.then24, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !3989
  ret i32 %47, !dbg !3989
}

; Function Attrs: noinline nounwind uwtable
define i64 @utils_intToText(i64 %data, i8* %string, i64 %length) #0 !dbg !3990 {
entry:
  %retval = alloca i64, align 8
  %data.addr = alloca i64, align 8
  %string.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %index = alloca i32, align 4
  %minus = alloca i8, align 1
  %result = alloca i64, align 8
  store i64 %data, i64* %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data.addr, metadata !3993, metadata !1190), !dbg !3994
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3995, metadata !1190), !dbg !3996
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !3997, metadata !1190), !dbg !3998
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3999, metadata !1190), !dbg !4000
  call void @llvm.dbg.declare(metadata i8* %minus, metadata !4001, metadata !1190), !dbg !4002
  call void @llvm.dbg.declare(metadata i64* %result, metadata !4003, metadata !1190), !dbg !4004
  %0 = load i64, i64* %data.addr, align 8, !dbg !4005
  %cmp = icmp slt i64 %0, 0, !dbg !4007
  br i1 %cmp, label %if.then, label %if.else, !dbg !4008

if.then:                                          ; preds = %entry
  store i8 1, i8* %minus, align 1, !dbg !4009
  %1 = load i64, i64* %data.addr, align 8, !dbg !4011
  %sub = sub nsw i64 0, %1, !dbg !4012
  store i64 %sub, i64* %data.addr, align 8, !dbg !4013
  br label %if.end, !dbg !4014

if.else:                                          ; preds = %entry
  store i8 0, i8* %minus, align 1, !dbg !4015
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load i64, i64* %length.addr, align 8, !dbg !4017
  %sub1 = sub i64 %2, 1, !dbg !4018
  %conv = trunc i64 %sub1 to i32, !dbg !4017
  store i32 %conv, i32* %index, align 4, !dbg !4019
  br label %do.body, !dbg !4020, !llvm.loop !4021

do.body:                                          ; preds = %land.end, %if.end
  %3 = load i64, i64* %data.addr, align 8, !dbg !4023
  %rem = srem i64 %3, 10, !dbg !4025
  %add = add nsw i64 48, %rem, !dbg !4026
  %conv2 = trunc i64 %add to i8, !dbg !4027
  %4 = load i8*, i8** %string.addr, align 8, !dbg !4028
  %5 = load i32, i32* %index, align 4, !dbg !4029
  %idxprom = sext i32 %5 to i64, !dbg !4028
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4028
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !4030
  %6 = load i64, i64* %data.addr, align 8, !dbg !4031
  %div = sdiv i64 %6, 10, !dbg !4031
  store i64 %div, i64* %data.addr, align 8, !dbg !4031
  %7 = load i32, i32* %index, align 4, !dbg !4032
  %dec = add nsw i32 %7, -1, !dbg !4032
  store i32 %dec, i32* %index, align 4, !dbg !4032
  br label %do.cond, !dbg !4033

do.cond:                                          ; preds = %do.body
  %8 = load i32, i32* %index, align 4, !dbg !4034
  %cmp3 = icmp sge i32 %8, 0, !dbg !4035
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !4036

land.rhs:                                         ; preds = %do.cond
  %9 = load i64, i64* %data.addr, align 8, !dbg !4037
  %cmp5 = icmp sgt i64 %9, 0, !dbg !4038
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %10 = phi i1 [ false, %do.cond ], [ %cmp5, %land.rhs ]
  br i1 %10, label %do.body, label %do.end, !dbg !4033, !llvm.loop !4021

do.end:                                           ; preds = %land.end
  %11 = load i64, i64* %data.addr, align 8, !dbg !4039
  %cmp7 = icmp sgt i64 %11, 0, !dbg !4041
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !4042

if.then9:                                         ; preds = %do.end
  store i64 0, i64* %retval, align 8, !dbg !4043
  br label %return, !dbg !4043

if.end10:                                         ; preds = %do.end
  %12 = load i8, i8* %minus, align 1, !dbg !4044
  %tobool = trunc i8 %12 to i1, !dbg !4044
  %conv11 = zext i1 %tobool to i32, !dbg !4044
  %cmp12 = icmp eq i32 %conv11, 1, !dbg !4046
  br i1 %cmp12, label %if.then14, label %if.else21, !dbg !4047

if.then14:                                        ; preds = %if.end10
  %13 = load i32, i32* %index, align 4, !dbg !4048
  %cmp15 = icmp eq i32 %13, 0, !dbg !4051
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4052

if.then17:                                        ; preds = %if.then14
  store i64 0, i64* %retval, align 8, !dbg !4053
  br label %return, !dbg !4053

if.end18:                                         ; preds = %if.then14
  %14 = load i8*, i8** %string.addr, align 8, !dbg !4054
  %15 = load i32, i32* %index, align 4, !dbg !4055
  %idxprom19 = sext i32 %15 to i64, !dbg !4054
  %arrayidx20 = getelementptr inbounds i8, i8* %14, i64 %idxprom19, !dbg !4054
  store i8 45, i8* %arrayidx20, align 1, !dbg !4056
  br label %if.end22, !dbg !4057

if.else21:                                        ; preds = %if.end10
  %16 = load i32, i32* %index, align 4, !dbg !4058
  %inc = add nsw i32 %16, 1, !dbg !4058
  store i32 %inc, i32* %index, align 4, !dbg !4058
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.end18
  %17 = load i64, i64* %length.addr, align 8, !dbg !4060
  %18 = load i32, i32* %index, align 4, !dbg !4061
  %conv23 = sext i32 %18 to i64, !dbg !4061
  %sub24 = sub i64 %17, %conv23, !dbg !4062
  store i64 %sub24, i64* %result, align 8, !dbg !4063
  %19 = load i64, i64* %result, align 8, !dbg !4064
  %20 = load i64, i64* %length.addr, align 8, !dbg !4066
  %cmp25 = icmp ult i64 %19, %20, !dbg !4067
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4068

if.then27:                                        ; preds = %if.end22
  %21 = load i8*, i8** %string.addr, align 8, !dbg !4069
  %22 = load i8*, i8** %string.addr, align 8, !dbg !4071
  %23 = load i32, i32* %index, align 4, !dbg !4072
  %idx.ext = sext i32 %23 to i64, !dbg !4073
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !4073
  %24 = load i64, i64* %result, align 8, !dbg !4074
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %21, i8* %add.ptr, i64 %24, i32 1, i1 false), !dbg !4075
  br label %if.end28, !dbg !4076

if.end28:                                         ; preds = %if.then27, %if.end22
  %25 = load i64, i64* %result, align 8, !dbg !4077
  store i64 %25, i64* %retval, align 8, !dbg !4078
  br label %return, !dbg !4078

return:                                           ; preds = %if.end28, %if.then17, %if.then9
  %26 = load i64, i64* %retval, align 8, !dbg !4079
  ret i64 %26, !dbg !4079
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: noinline nounwind uwtable
define i64 @utils_floatToText(double %data, i8* %string, i64 %length) #0 !dbg !4080 {
entry:
  %retval = alloca i64, align 8
  %data.addr = alloca double, align 8
  %string.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %intLength = alloca i64, align 8
  %decLength = alloca i64, align 8
  %intPart = alloca i64, align 8
  %decPart = alloca double, align 8
  %noiseFloor = alloca double, align 8
  store double %data, double* %data.addr, align 8
  call void @llvm.dbg.declare(metadata double* %data.addr, metadata !4083, metadata !1190), !dbg !4084
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !4085, metadata !1190), !dbg !4086
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !4087, metadata !1190), !dbg !4088
  call void @llvm.dbg.declare(metadata i64* %intLength, metadata !4089, metadata !1190), !dbg !4090
  call void @llvm.dbg.declare(metadata i64* %decLength, metadata !4091, metadata !1190), !dbg !4092
  call void @llvm.dbg.declare(metadata i64* %intPart, metadata !4093, metadata !1190), !dbg !4094
  call void @llvm.dbg.declare(metadata double* %decPart, metadata !4095, metadata !1190), !dbg !4096
  %0 = load double, double* %data.addr, align 8, !dbg !4097
  %cmp = fcmp ole double %0, 0xC3E0000000000000, !dbg !4099
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4100

lor.lhs.false:                                    ; preds = %entry
  %1 = load double, double* %data.addr, align 8, !dbg !4101
  %cmp1 = fcmp oge double %1, 0x43E0000000000000, !dbg !4102
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4103

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %retval, align 8, !dbg !4104
  br label %return, !dbg !4104

if.end:                                           ; preds = %lor.lhs.false
  %2 = load double, double* %data.addr, align 8, !dbg !4105
  %conv = fptosi double %2 to i64, !dbg !4106
  store i64 %conv, i64* %intPart, align 8, !dbg !4107
  %3 = load double, double* %data.addr, align 8, !dbg !4108
  %4 = load i64, i64* %intPart, align 8, !dbg !4109
  %conv2 = sitofp i64 %4 to double, !dbg !4109
  %sub = fsub double %3, %conv2, !dbg !4110
  store double %sub, double* %decPart, align 8, !dbg !4111
  %5 = load double, double* %decPart, align 8, !dbg !4112
  %cmp3 = fcmp olt double %5, 0.000000e+00, !dbg !4114
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !4115

if.then5:                                         ; preds = %if.end
  %6 = load double, double* %decPart, align 8, !dbg !4116
  %sub6 = fsub double 1.000000e+00, %6, !dbg !4118
  store double %sub6, double* %decPart, align 8, !dbg !4119
  br label %if.end7, !dbg !4120

if.else:                                          ; preds = %if.end
  %7 = load double, double* %decPart, align 8, !dbg !4121
  %add = fadd double 1.000000e+00, %7, !dbg !4123
  store double %add, double* %decPart, align 8, !dbg !4124
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %8 = load double, double* %decPart, align 8, !dbg !4125
  %cmp8 = fcmp ole double %8, 0x3FF0000020000000, !dbg !4127
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4128

if.then10:                                        ; preds = %if.end7
  store double 0.000000e+00, double* %decPart, align 8, !dbg !4129
  br label %if.end11, !dbg !4131

if.end11:                                         ; preds = %if.then10, %if.end7
  %9 = load i64, i64* %intPart, align 8, !dbg !4132
  %cmp12 = icmp eq i64 %9, 0, !dbg !4134
  br i1 %cmp12, label %land.lhs.true, label %if.else22, !dbg !4135

land.lhs.true:                                    ; preds = %if.end11
  %10 = load double, double* %data.addr, align 8, !dbg !4136
  %cmp14 = fcmp olt double %10, 0.000000e+00, !dbg !4137
  br i1 %cmp14, label %if.then16, label %if.else22, !dbg !4138

if.then16:                                        ; preds = %land.lhs.true
  %11 = load i64, i64* %length.addr, align 8, !dbg !4139
  %cmp17 = icmp ult i64 %11, 4, !dbg !4142
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4143

if.then19:                                        ; preds = %if.then16
  store i64 0, i64* %retval, align 8, !dbg !4144
  br label %return, !dbg !4144

if.end20:                                         ; preds = %if.then16
  %12 = load i8*, i8** %string.addr, align 8, !dbg !4145
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0, !dbg !4145
  store i8 45, i8* %arrayidx, align 1, !dbg !4146
  %13 = load i8*, i8** %string.addr, align 8, !dbg !4147
  %arrayidx21 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !4147
  store i8 48, i8* %arrayidx21, align 1, !dbg !4148
  store i64 2, i64* %intLength, align 8, !dbg !4149
  br label %if.end27, !dbg !4150

if.else22:                                        ; preds = %land.lhs.true, %if.end11
  %14 = load i64, i64* %intPart, align 8, !dbg !4151
  %15 = load i8*, i8** %string.addr, align 8, !dbg !4153
  %16 = load i64, i64* %length.addr, align 8, !dbg !4154
  %call = call i64 @utils_intToText(i64 %14, i8* %15, i64 %16), !dbg !4155
  store i64 %call, i64* %intLength, align 8, !dbg !4156
  %17 = load i64, i64* %intLength, align 8, !dbg !4157
  %cmp23 = icmp eq i64 %17, 0, !dbg !4159
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !4160

if.then25:                                        ; preds = %if.else22
  store i64 0, i64* %retval, align 8, !dbg !4161
  br label %return, !dbg !4161

if.end26:                                         ; preds = %if.else22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end20
  store i64 0, i64* %decLength, align 8, !dbg !4162
  %18 = load double, double* %decPart, align 8, !dbg !4163
  %cmp28 = fcmp oge double %18, 0x3E80000000000000, !dbg !4165
  br i1 %cmp28, label %if.then30, label %if.end50, !dbg !4166

if.then30:                                        ; preds = %if.end27
  call void @llvm.dbg.declare(metadata double* %noiseFloor, metadata !4167, metadata !1190), !dbg !4169
  %19 = load i64, i64* %intLength, align 8, !dbg !4170
  %20 = load i64, i64* %length.addr, align 8, !dbg !4172
  %sub31 = sub i64 %20, 1, !dbg !4173
  %cmp32 = icmp uge i64 %19, %sub31, !dbg !4174
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !4175

if.then34:                                        ; preds = %if.then30
  store i64 0, i64* %retval, align 8, !dbg !4176
  br label %return, !dbg !4176

if.end35:                                         ; preds = %if.then30
  store double 0x3E80000000000000, double* %noiseFloor, align 8, !dbg !4177
  br label %do.body, !dbg !4178, !llvm.loop !4179

do.body:                                          ; preds = %do.cond, %if.end35
  %21 = load double, double* %decPart, align 8, !dbg !4181
  %mul = fmul double %21, 1.000000e+01, !dbg !4181
  store double %mul, double* %decPart, align 8, !dbg !4181
  %22 = load double, double* %noiseFloor, align 8, !dbg !4183
  %mul36 = fmul double %22, 1.000000e+01, !dbg !4183
  store double %mul36, double* %noiseFloor, align 8, !dbg !4183
  br label %do.cond, !dbg !4184

do.cond:                                          ; preds = %do.body
  %23 = load double, double* %decPart, align 8, !dbg !4185
  %24 = load double, double* %decPart, align 8, !dbg !4186
  %conv37 = fptosi double %24 to i64, !dbg !4187
  %conv38 = sitofp i64 %conv37 to double, !dbg !4187
  %sub39 = fsub double %23, %conv38, !dbg !4188
  %25 = load double, double* %noiseFloor, align 8, !dbg !4189
  %cmp40 = fcmp ogt double %sub39, %25, !dbg !4190
  br i1 %cmp40, label %do.body, label %do.end, !dbg !4184, !llvm.loop !4179

do.end:                                           ; preds = %do.cond
  %26 = load double, double* %decPart, align 8, !dbg !4191
  %conv42 = fptosi double %26 to i64, !dbg !4191
  %27 = load i8*, i8** %string.addr, align 8, !dbg !4192
  %28 = load i64, i64* %intLength, align 8, !dbg !4193
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !4194
  %29 = load i64, i64* %length.addr, align 8, !dbg !4195
  %30 = load i64, i64* %intLength, align 8, !dbg !4196
  %sub43 = sub i64 %29, %30, !dbg !4197
  %call44 = call i64 @utils_intToText(i64 %conv42, i8* %add.ptr, i64 %sub43), !dbg !4198
  store i64 %call44, i64* %decLength, align 8, !dbg !4199
  %31 = load i64, i64* %decLength, align 8, !dbg !4200
  %cmp45 = icmp ule i64 %31, 1, !dbg !4202
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !4203

if.then47:                                        ; preds = %do.end
  store i64 0, i64* %retval, align 8, !dbg !4204
  br label %return, !dbg !4204

if.end48:                                         ; preds = %do.end
  %32 = load i8*, i8** %string.addr, align 8, !dbg !4205
  %33 = load i64, i64* %intLength, align 8, !dbg !4206
  %arrayidx49 = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !4205
  store i8 46, i8* %arrayidx49, align 1, !dbg !4207
  br label %if.end50, !dbg !4208

if.end50:                                         ; preds = %if.end48, %if.end27
  %34 = load i64, i64* %intLength, align 8, !dbg !4209
  %35 = load i64, i64* %decLength, align 8, !dbg !4210
  %add51 = add i64 %34, %35, !dbg !4211
  store i64 %add51, i64* %retval, align 8, !dbg !4212
  br label %return, !dbg !4212

return:                                           ; preds = %if.end50, %if.then47, %if.then34, %if.then25, %if.then19, %if.then
  %36 = load i64, i64* %retval, align 8, !dbg !4213
  ret i64 %36, !dbg !4213
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_stringToBinding(i8* %buffer, i64 %length) #0 !dbg !4214 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4217, metadata !1190), !dbg !4218
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !4219, metadata !1190), !dbg !4220
  %0 = load i64, i64* %length.addr, align 8, !dbg !4221
  %cmp = icmp eq i64 %0, 0, !dbg !4223
  br i1 %cmp, label %if.then, label %if.end, !dbg !4224

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4225
  br label %return, !dbg !4225

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !4226
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !4226
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4226
  %conv = zext i8 %2 to i32, !dbg !4226
  switch i32 %conv, label %sw.default31 [
    i32 85, label %sw.bb
    i32 83, label %sw.bb20
  ], !dbg !4227

sw.bb:                                            ; preds = %if.end
  %3 = load i64, i64* %length.addr, align 8, !dbg !4228
  switch i64 %3, label %sw.default18 [
    i64 1, label %sw.bb1
    i64 2, label %sw.bb2
    i64 3, label %sw.bb7
  ], !dbg !4230

sw.bb1:                                           ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !4231
  br label %return, !dbg !4231

sw.bb2:                                           ; preds = %sw.bb
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4233
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !4233
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !4233
  %conv4 = zext i8 %5 to i32, !dbg !4233
  switch i32 %conv4, label %sw.default [
    i32 81, label %sw.bb5
    i32 83, label %sw.bb6
  ], !dbg !4234

sw.bb5:                                           ; preds = %sw.bb2
  store i32 2, i32* %retval, align 4, !dbg !4235
  br label %return, !dbg !4235

sw.bb6:                                           ; preds = %sw.bb2
  store i32 5, i32* %retval, align 4, !dbg !4237
  br label %return, !dbg !4237

sw.default:                                       ; preds = %sw.bb2
  br label %sw.epilog, !dbg !4238

sw.epilog:                                        ; preds = %sw.default
  br label %sw.epilog19, !dbg !4239

sw.bb7:                                           ; preds = %sw.bb
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !4240
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !4240
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !4240
  %conv9 = zext i8 %7 to i32, !dbg !4240
  %cmp10 = icmp eq i32 %conv9, 81, !dbg !4242
  br i1 %cmp10, label %land.lhs.true, label %if.end17, !dbg !4243

land.lhs.true:                                    ; preds = %sw.bb7
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !4244
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !4244
  %9 = load i8, i8* %arrayidx12, align 1, !dbg !4244
  %conv13 = zext i8 %9 to i32, !dbg !4244
  %cmp14 = icmp eq i32 %conv13, 83, !dbg !4245
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !4246

if.then16:                                        ; preds = %land.lhs.true
  store i32 6, i32* %retval, align 4, !dbg !4247
  br label %return, !dbg !4247

if.end17:                                         ; preds = %land.lhs.true, %sw.bb7
  br label %sw.epilog19, !dbg !4249

sw.default18:                                     ; preds = %sw.bb
  br label %sw.epilog19, !dbg !4250

sw.epilog19:                                      ; preds = %sw.default18, %if.end17, %sw.epilog
  br label %sw.epilog32, !dbg !4251

sw.bb20:                                          ; preds = %if.end
  %10 = load i64, i64* %length.addr, align 8, !dbg !4252
  switch i64 %10, label %sw.default29 [
    i64 1, label %sw.bb21
    i64 2, label %sw.bb22
  ], !dbg !4253

sw.bb21:                                          ; preds = %sw.bb20
  store i32 3, i32* %retval, align 4, !dbg !4254
  br label %return, !dbg !4254

sw.bb22:                                          ; preds = %sw.bb20
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !4256
  %arrayidx23 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !4256
  %12 = load i8, i8* %arrayidx23, align 1, !dbg !4256
  %conv24 = zext i8 %12 to i32, !dbg !4256
  %cmp25 = icmp eq i32 %conv24, 81, !dbg !4258
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4259

if.then27:                                        ; preds = %sw.bb22
  store i32 4, i32* %retval, align 4, !dbg !4260
  br label %return, !dbg !4260

if.end28:                                         ; preds = %sw.bb22
  br label %sw.epilog30, !dbg !4262

sw.default29:                                     ; preds = %sw.bb20
  br label %sw.epilog30, !dbg !4263

sw.epilog30:                                      ; preds = %sw.default29, %if.end28
  br label %sw.epilog32, !dbg !4264

sw.default31:                                     ; preds = %if.end
  br label %sw.epilog32, !dbg !4265

sw.epilog32:                                      ; preds = %sw.default31, %sw.epilog30, %sw.epilog19
  store i32 0, i32* %retval, align 4, !dbg !4266
  br label %return, !dbg !4266

return:                                           ; preds = %sw.epilog32, %if.then27, %sw.bb21, %if.then16, %sw.bb6, %sw.bb5, %sw.bb1, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4267
  ret i32 %13, !dbg !4267
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_convertMediaType(i32 %type) #0 !dbg !4268 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4271, metadata !1190), !dbg !4272
  %0 = load i32, i32* %type.addr, align 4, !dbg !4273
  %conv = trunc i32 %0 to i16, !dbg !4274
  %conv1 = zext i16 %conv to i32, !dbg !4274
  switch i32 %conv1, label %sw.default [
    i32 0, label %sw.bb
    i32 42, label %sw.bb2
    i32 1542, label %sw.bb3
    i32 11542, label %sw.bb4
    i32 1543, label %sw.bb5
    i32 11543, label %sw.bb6
    i32 40, label %sw.bb7
  ], !dbg !4275

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4276
  br label %return, !dbg !4276

sw.bb2:                                           ; preds = %entry
  store i32 42, i32* %retval, align 4, !dbg !4278
  br label %return, !dbg !4278

sw.bb3:                                           ; preds = %entry
  store i32 1542, i32* %retval, align 4, !dbg !4279
  br label %return, !dbg !4279

sw.bb4:                                           ; preds = %entry
  store i32 11542, i32* %retval, align 4, !dbg !4280
  br label %return, !dbg !4280

sw.bb5:                                           ; preds = %entry
  store i32 1543, i32* %retval, align 4, !dbg !4281
  br label %return, !dbg !4281

sw.bb6:                                           ; preds = %entry
  store i32 11543, i32* %retval, align 4, !dbg !4282
  br label %return, !dbg !4282

sw.bb7:                                           ; preds = %entry
  store i32 40, i32* %retval, align 4, !dbg !4283
  br label %return, !dbg !4283

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4284
  br label %return, !dbg !4284

return:                                           ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !4285
  ret i32 %1, !dbg !4285
}

; Function Attrs: noinline nounwind uwtable
define %struct._lwm2m_server_* @utils_findBootstrapServer(%struct.lwm2m_context_t* %contextP, i8* %fromSessionH) #0 !dbg !4286 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %fromSessionH.addr = alloca i8*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !4398, metadata !1190), !dbg !4399
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !4400, metadata !1190), !dbg !4401
  ret %struct._lwm2m_server_* null, !dbg !4402
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_isAltPathValid(i8* %altPath) #0 !dbg !4403 {
entry:
  %retval = alloca i32, align 4
  %altPath.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %altPath, i8** %altPath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %altPath.addr, metadata !4406, metadata !1190), !dbg !4407
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4408, metadata !1190), !dbg !4409
  %0 = load i8*, i8** %altPath.addr, align 8, !dbg !4410
  %cmp = icmp eq i8* %0, null, !dbg !4412
  br i1 %cmp, label %if.then, label %if.end, !dbg !4413

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4414
  br label %return, !dbg !4414

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %altPath.addr, align 8, !dbg !4415
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !4415
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4415
  %conv = sext i8 %2 to i32, !dbg !4415
  %cmp1 = icmp ne i32 %conv, 47, !dbg !4417
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !4418

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4419
  br label %return, !dbg !4419

if.end4:                                          ; preds = %if.end
  store i32 1, i32* %i, align 4, !dbg !4420
  br label %for.cond, !dbg !4422

for.cond:                                         ; preds = %for.inc, %if.end4
  %3 = load i8*, i8** %altPath.addr, align 8, !dbg !4423
  %4 = load i32, i32* %i, align 4, !dbg !4425
  %idxprom = sext i32 %4 to i64, !dbg !4423
  %arrayidx5 = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !4423
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !4423
  %conv6 = sext i8 %5 to i32, !dbg !4423
  %cmp7 = icmp ne i32 %conv6, 0, !dbg !4426
  br i1 %cmp7, label %for.body, label %for.end, !dbg !4427

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %altPath.addr, align 8, !dbg !4428
  %7 = load i32, i32* %i, align 4, !dbg !4431
  %idxprom9 = sext i32 %7 to i64, !dbg !4428
  %arrayidx10 = getelementptr inbounds i8, i8* %6, i64 %idxprom9, !dbg !4428
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !4428
  %conv11 = sext i8 %8 to i32, !dbg !4428
  %cmp12 = icmp eq i32 %conv11, 47, !dbg !4432
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !4433

if.then14:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !4434
  br label %return, !dbg !4434

if.end15:                                         ; preds = %for.body
  %9 = load i8*, i8** %altPath.addr, align 8, !dbg !4435
  %10 = load i32, i32* %i, align 4, !dbg !4437
  %idxprom16 = sext i32 %10 to i64, !dbg !4435
  %arrayidx17 = getelementptr inbounds i8, i8* %9, i64 %idxprom16, !dbg !4435
  %11 = load i8, i8* %arrayidx17, align 1, !dbg !4435
  %conv18 = sext i8 %11 to i32, !dbg !4435
  %cmp19 = icmp slt i32 %conv18, 65, !dbg !4438
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false, !dbg !4439

lor.lhs.false:                                    ; preds = %if.end15
  %12 = load i8*, i8** %altPath.addr, align 8, !dbg !4440
  %13 = load i32, i32* %i, align 4, !dbg !4441
  %idxprom21 = sext i32 %13 to i64, !dbg !4440
  %arrayidx22 = getelementptr inbounds i8, i8* %12, i64 %idxprom21, !dbg !4440
  %14 = load i8, i8* %arrayidx22, align 1, !dbg !4440
  %conv23 = sext i8 %14 to i32, !dbg !4440
  %cmp24 = icmp sgt i32 %conv23, 90, !dbg !4442
  br i1 %cmp24, label %land.lhs.true, label %if.end80, !dbg !4443

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end15
  %15 = load i8*, i8** %altPath.addr, align 8, !dbg !4444
  %16 = load i32, i32* %i, align 4, !dbg !4445
  %idxprom26 = sext i32 %16 to i64, !dbg !4444
  %arrayidx27 = getelementptr inbounds i8, i8* %15, i64 %idxprom26, !dbg !4444
  %17 = load i8, i8* %arrayidx27, align 1, !dbg !4444
  %conv28 = sext i8 %17 to i32, !dbg !4444
  %cmp29 = icmp slt i32 %conv28, 97, !dbg !4446
  br i1 %cmp29, label %land.lhs.true37, label %lor.lhs.false31, !dbg !4447

lor.lhs.false31:                                  ; preds = %land.lhs.true
  %18 = load i8*, i8** %altPath.addr, align 8, !dbg !4448
  %19 = load i32, i32* %i, align 4, !dbg !4449
  %idxprom32 = sext i32 %19 to i64, !dbg !4448
  %arrayidx33 = getelementptr inbounds i8, i8* %18, i64 %idxprom32, !dbg !4448
  %20 = load i8, i8* %arrayidx33, align 1, !dbg !4448
  %conv34 = sext i8 %20 to i32, !dbg !4448
  %cmp35 = icmp sgt i32 %conv34, 122, !dbg !4450
  br i1 %cmp35, label %land.lhs.true37, label %if.end80, !dbg !4451

land.lhs.true37:                                  ; preds = %lor.lhs.false31, %land.lhs.true
  %21 = load i8*, i8** %altPath.addr, align 8, !dbg !4452
  %22 = load i32, i32* %i, align 4, !dbg !4453
  %idxprom38 = sext i32 %22 to i64, !dbg !4452
  %arrayidx39 = getelementptr inbounds i8, i8* %21, i64 %idxprom38, !dbg !4452
  %23 = load i8, i8* %arrayidx39, align 1, !dbg !4452
  %conv40 = sext i8 %23 to i32, !dbg !4452
  %cmp41 = icmp slt i32 %conv40, 48, !dbg !4454
  br i1 %cmp41, label %land.lhs.true49, label %lor.lhs.false43, !dbg !4455

lor.lhs.false43:                                  ; preds = %land.lhs.true37
  %24 = load i8*, i8** %altPath.addr, align 8, !dbg !4456
  %25 = load i32, i32* %i, align 4, !dbg !4457
  %idxprom44 = sext i32 %25 to i64, !dbg !4456
  %arrayidx45 = getelementptr inbounds i8, i8* %24, i64 %idxprom44, !dbg !4456
  %26 = load i8, i8* %arrayidx45, align 1, !dbg !4456
  %conv46 = sext i8 %26 to i32, !dbg !4456
  %cmp47 = icmp sgt i32 %conv46, 57, !dbg !4458
  br i1 %cmp47, label %land.lhs.true49, label %if.end80, !dbg !4459

land.lhs.true49:                                  ; preds = %lor.lhs.false43, %land.lhs.true37
  %27 = load i8*, i8** %altPath.addr, align 8, !dbg !4460
  %28 = load i32, i32* %i, align 4, !dbg !4461
  %idxprom50 = sext i32 %28 to i64, !dbg !4460
  %arrayidx51 = getelementptr inbounds i8, i8* %27, i64 %idxprom50, !dbg !4460
  %29 = load i8, i8* %arrayidx51, align 1, !dbg !4460
  %conv52 = sext i8 %29 to i32, !dbg !4460
  %cmp53 = icmp ne i32 %conv52, 45, !dbg !4462
  br i1 %cmp53, label %land.lhs.true55, label %if.end80, !dbg !4463

land.lhs.true55:                                  ; preds = %land.lhs.true49
  %30 = load i8*, i8** %altPath.addr, align 8, !dbg !4464
  %31 = load i32, i32* %i, align 4, !dbg !4465
  %idxprom56 = sext i32 %31 to i64, !dbg !4464
  %arrayidx57 = getelementptr inbounds i8, i8* %30, i64 %idxprom56, !dbg !4464
  %32 = load i8, i8* %arrayidx57, align 1, !dbg !4464
  %conv58 = sext i8 %32 to i32, !dbg !4464
  %cmp59 = icmp ne i32 %conv58, 46, !dbg !4466
  br i1 %cmp59, label %land.lhs.true61, label %if.end80, !dbg !4467

land.lhs.true61:                                  ; preds = %land.lhs.true55
  %33 = load i8*, i8** %altPath.addr, align 8, !dbg !4468
  %34 = load i32, i32* %i, align 4, !dbg !4469
  %idxprom62 = sext i32 %34 to i64, !dbg !4468
  %arrayidx63 = getelementptr inbounds i8, i8* %33, i64 %idxprom62, !dbg !4468
  %35 = load i8, i8* %arrayidx63, align 1, !dbg !4468
  %conv64 = sext i8 %35 to i32, !dbg !4468
  %cmp65 = icmp ne i32 %conv64, 95, !dbg !4470
  br i1 %cmp65, label %land.lhs.true67, label %if.end80, !dbg !4471

land.lhs.true67:                                  ; preds = %land.lhs.true61
  %36 = load i8*, i8** %altPath.addr, align 8, !dbg !4472
  %37 = load i32, i32* %i, align 4, !dbg !4473
  %idxprom68 = sext i32 %37 to i64, !dbg !4472
  %arrayidx69 = getelementptr inbounds i8, i8* %36, i64 %idxprom68, !dbg !4472
  %38 = load i8, i8* %arrayidx69, align 1, !dbg !4472
  %conv70 = sext i8 %38 to i32, !dbg !4472
  %cmp71 = icmp ne i32 %conv70, 126, !dbg !4474
  br i1 %cmp71, label %land.lhs.true73, label %if.end80, !dbg !4475

land.lhs.true73:                                  ; preds = %land.lhs.true67
  %39 = load i8*, i8** %altPath.addr, align 8, !dbg !4476
  %40 = load i32, i32* %i, align 4, !dbg !4477
  %idxprom74 = sext i32 %40 to i64, !dbg !4476
  %arrayidx75 = getelementptr inbounds i8, i8* %39, i64 %idxprom74, !dbg !4476
  %41 = load i8, i8* %arrayidx75, align 1, !dbg !4476
  %conv76 = sext i8 %41 to i32, !dbg !4476
  %cmp77 = icmp ne i32 %conv76, 37, !dbg !4478
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !4479

if.then79:                                        ; preds = %land.lhs.true73
  store i32 0, i32* %retval, align 4, !dbg !4480
  br label %return, !dbg !4480

if.end80:                                         ; preds = %land.lhs.true73, %land.lhs.true67, %land.lhs.true61, %land.lhs.true55, %land.lhs.true49, %lor.lhs.false43, %lor.lhs.false31, %lor.lhs.false
  br label %for.inc, !dbg !4482

for.inc:                                          ; preds = %if.end80
  %42 = load i32, i32* %i, align 4, !dbg !4483
  %inc = add nsw i32 %42, 1, !dbg !4483
  store i32 %inc, i32* %i, align 4, !dbg !4483
  br label %for.cond, !dbg !4484, !llvm.loop !4485

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !4487
  br label %return, !dbg !4487

return:                                           ; preds = %for.end, %if.then79, %if.then14, %if.then3, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !4488
  ret i32 %43, !dbg !4488
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_stringCopy(i8* %buffer, i64 %length, i8* %str) #0 !dbg !4489 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %str.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4492, metadata !1190), !dbg !4493
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !4494, metadata !1190), !dbg !4495
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !4496, metadata !1190), !dbg !4497
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4498, metadata !1190), !dbg !4499
  store i64 0, i64* %i, align 8, !dbg !4500
  br label %for.cond, !dbg !4502

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !4503
  %1 = load i64, i64* %length.addr, align 8, !dbg !4505
  %cmp = icmp ult i64 %0, %1, !dbg !4506
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4507

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !4508
  %3 = load i64, i64* %i, align 8, !dbg !4509
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %3, !dbg !4508
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4508
  %conv = sext i8 %4 to i32, !dbg !4508
  %cmp1 = icmp ne i32 %conv, 0, !dbg !4510
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %5, label %for.body, label %for.end, !dbg !4511

for.body:                                         ; preds = %land.end
  %6 = load i8*, i8** %str.addr, align 8, !dbg !4512
  %7 = load i64, i64* %i, align 8, !dbg !4514
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !4512
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !4512
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !4515
  %10 = load i64, i64* %i, align 8, !dbg !4516
  %arrayidx4 = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !4515
  store i8 %8, i8* %arrayidx4, align 1, !dbg !4517
  br label %for.inc, !dbg !4518

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8, !dbg !4519
  %inc = add i64 %11, 1, !dbg !4519
  store i64 %inc, i64* %i, align 8, !dbg !4519
  br label %for.cond, !dbg !4520, !llvm.loop !4521

for.end:                                          ; preds = %land.end
  %12 = load i64, i64* %i, align 8, !dbg !4523
  %13 = load i64, i64* %length.addr, align 8, !dbg !4525
  %cmp5 = icmp eq i64 %12, %13, !dbg !4526
  br i1 %cmp5, label %if.then, label %if.end, !dbg !4527

if.then:                                          ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !4528
  br label %return, !dbg !4528

if.end:                                           ; preds = %for.end
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !4529
  %15 = load i64, i64* %i, align 8, !dbg !4530
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !4529
  store i8 0, i8* %arrayidx7, align 1, !dbg !4531
  %16 = load i64, i64* %i, align 8, !dbg !4532
  %conv8 = trunc i64 %16 to i32, !dbg !4533
  store i32 %conv8, i32* %retval, align 4, !dbg !4534
  br label %return, !dbg !4534

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !4535
  ret i32 %17, !dbg !4535
}

; Function Attrs: noinline nounwind uwtable
define void @utils_copyValue(i8* %dst, i8* %src, i64 %len) #0 !dbg !4536 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4541, metadata !1190), !dbg !4542
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4543, metadata !1190), !dbg !4544
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4545, metadata !1190), !dbg !4546
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4547, metadata !1190), !dbg !4548
  store i64 0, i64* %i, align 8, !dbg !4549
  br label %for.cond, !dbg !4551

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !4552
  %1 = load i64, i64* %len.addr, align 8, !dbg !4554
  %cmp = icmp ult i64 %0, %1, !dbg !4555
  br i1 %cmp, label %for.body, label %for.end, !dbg !4556

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %src.addr, align 8, !dbg !4557
  %3 = load i64, i64* %len.addr, align 8, !dbg !4559
  %sub = sub i64 %3, 1, !dbg !4560
  %4 = load i64, i64* %i, align 8, !dbg !4561
  %sub1 = sub i64 %sub, %4, !dbg !4562
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub1, !dbg !4563
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4563
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !4564
  %7 = load i64, i64* %i, align 8, !dbg !4565
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !4566
  store i8 %5, i8* %arrayidx2, align 1, !dbg !4567
  br label %for.inc, !dbg !4568

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %i, align 8, !dbg !4569
  %inc = add i64 %8, 1, !dbg !4569
  store i64 %inc, i64* %i, align 8, !dbg !4569
  br label %for.cond, !dbg !4570, !llvm.loop !4571

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4573
}

; Function Attrs: noinline nounwind uwtable
define i64 @utils_base64GetSize(i64 %dataLen) #0 !dbg !4574 {
entry:
  %dataLen.addr = alloca i64, align 8
  %result_len = alloca i64, align 8
  store i64 %dataLen, i64* %dataLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataLen.addr, metadata !4577, metadata !1190), !dbg !4578
  call void @llvm.dbg.declare(metadata i64* %result_len, metadata !4579, metadata !1190), !dbg !4580
  %0 = load i64, i64* %dataLen.addr, align 8, !dbg !4581
  %div = udiv i64 %0, 3, !dbg !4582
  %mul = mul i64 4, %div, !dbg !4583
  store i64 %mul, i64* %result_len, align 8, !dbg !4584
  %1 = load i64, i64* %dataLen.addr, align 8, !dbg !4585
  %rem = urem i64 %1, 3, !dbg !4587
  %tobool = icmp ne i64 %rem, 0, !dbg !4587
  br i1 %tobool, label %if.then, label %if.end, !dbg !4588

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %result_len, align 8, !dbg !4589
  %add = add i64 %2, 4, !dbg !4589
  store i64 %add, i64* %result_len, align 8, !dbg !4589
  br label %if.end, !dbg !4590

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %result_len, align 8, !dbg !4591
  ret i64 %3, !dbg !4592
}

; Function Attrs: noinline nounwind uwtable
define i64 @utils_base64Encode(i8* %dataP, i64 %dataLen, i8* %bufferP, i64 %bufferLen) #0 !dbg !4593 {
entry:
  %retval = alloca i64, align 8
  %dataP.addr = alloca i8*, align 8
  %dataLen.addr = alloca i64, align 8
  %bufferP.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %data_index = alloca i32, align 4
  %result_index = alloca i32, align 4
  %result_len = alloca i64, align 8
  store i8* %dataP, i8** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dataP.addr, metadata !4596, metadata !1190), !dbg !4597
  store i64 %dataLen, i64* %dataLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataLen.addr, metadata !4598, metadata !1190), !dbg !4599
  store i8* %bufferP, i8** %bufferP.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bufferP.addr, metadata !4600, metadata !1190), !dbg !4601
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !4602, metadata !1190), !dbg !4603
  call void @llvm.dbg.declare(metadata i32* %data_index, metadata !4604, metadata !1190), !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %result_index, metadata !4606, metadata !1190), !dbg !4607
  call void @llvm.dbg.declare(metadata i64* %result_len, metadata !4608, metadata !1190), !dbg !4609
  %0 = load i64, i64* %dataLen.addr, align 8, !dbg !4610
  %call = call i64 @utils_base64GetSize(i64 %0), !dbg !4611
  store i64 %call, i64* %result_len, align 8, !dbg !4612
  %1 = load i64, i64* %result_len, align 8, !dbg !4613
  %2 = load i64, i64* %bufferLen.addr, align 8, !dbg !4615
  %cmp = icmp ugt i64 %1, %2, !dbg !4616
  br i1 %cmp, label %if.then, label %if.end, !dbg !4617

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !4618
  br label %return, !dbg !4618

if.end:                                           ; preds = %entry
  store i32 0, i32* %data_index, align 4, !dbg !4619
  store i32 0, i32* %result_index, align 4, !dbg !4620
  br label %while.cond, !dbg !4621

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i32, i32* %data_index, align 4, !dbg !4622
  %conv = zext i32 %3 to i64, !dbg !4622
  %4 = load i64, i64* %dataLen.addr, align 8, !dbg !4623
  %cmp1 = icmp ult i64 %conv, %4, !dbg !4624
  br i1 %cmp1, label %while.body, label %while.end, !dbg !4621

while.body:                                       ; preds = %while.cond
  %5 = load i64, i64* %dataLen.addr, align 8, !dbg !4625
  %6 = load i32, i32* %data_index, align 4, !dbg !4627
  %conv3 = zext i32 %6 to i64, !dbg !4627
  %sub = sub i64 %5, %conv3, !dbg !4628
  switch i64 %sub, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb4
    i64 2, label %sw.bb23
  ], !dbg !4629

sw.bb:                                            ; preds = %while.body
  br label %sw.epilog, !dbg !4630

sw.bb4:                                           ; preds = %while.body
  %7 = load i8*, i8** %dataP.addr, align 8, !dbg !4632
  %8 = load i32, i32* %data_index, align 4, !dbg !4633
  %idxprom = zext i32 %8 to i64, !dbg !4632
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4632
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4632
  %conv5 = zext i8 %9 to i32, !dbg !4632
  %shr = ashr i32 %conv5, 2, !dbg !4634
  %idxprom6 = sext i32 %shr to i64, !dbg !4635
  %arrayidx7 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom6, !dbg !4635
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !4635
  %11 = load i8*, i8** %bufferP.addr, align 8, !dbg !4636
  %12 = load i32, i32* %result_index, align 4, !dbg !4637
  %idxprom8 = zext i32 %12 to i64, !dbg !4636
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 %idxprom8, !dbg !4636
  store i8 %10, i8* %arrayidx9, align 1, !dbg !4638
  %13 = load i8*, i8** %dataP.addr, align 8, !dbg !4639
  %14 = load i32, i32* %data_index, align 4, !dbg !4640
  %idxprom10 = zext i32 %14 to i64, !dbg !4639
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 %idxprom10, !dbg !4639
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !4639
  %conv12 = zext i8 %15 to i32, !dbg !4639
  %and = and i32 %conv12, 3, !dbg !4641
  %shl = shl i32 %and, 4, !dbg !4642
  %idxprom13 = sext i32 %shl to i64, !dbg !4643
  %arrayidx14 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom13, !dbg !4643
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !4643
  %17 = load i8*, i8** %bufferP.addr, align 8, !dbg !4644
  %18 = load i32, i32* %result_index, align 4, !dbg !4645
  %add = add i32 %18, 1, !dbg !4646
  %idxprom15 = zext i32 %add to i64, !dbg !4644
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 %idxprom15, !dbg !4644
  store i8 %16, i8* %arrayidx16, align 1, !dbg !4647
  %19 = load i8*, i8** %bufferP.addr, align 8, !dbg !4648
  %20 = load i32, i32* %result_index, align 4, !dbg !4649
  %add17 = add i32 %20, 2, !dbg !4650
  %idxprom18 = zext i32 %add17 to i64, !dbg !4648
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 %idxprom18, !dbg !4648
  store i8 61, i8* %arrayidx19, align 1, !dbg !4651
  %21 = load i8*, i8** %bufferP.addr, align 8, !dbg !4652
  %22 = load i32, i32* %result_index, align 4, !dbg !4653
  %add20 = add i32 %22, 3, !dbg !4654
  %idxprom21 = zext i32 %add20 to i64, !dbg !4652
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 %idxprom21, !dbg !4652
  store i8 61, i8* %arrayidx22, align 1, !dbg !4655
  br label %sw.epilog, !dbg !4656

sw.bb23:                                          ; preds = %while.body
  %23 = load i8*, i8** %dataP.addr, align 8, !dbg !4657
  %24 = load i32, i32* %data_index, align 4, !dbg !4658
  %idxprom24 = zext i32 %24 to i64, !dbg !4657
  %arrayidx25 = getelementptr inbounds i8, i8* %23, i64 %idxprom24, !dbg !4657
  %25 = load i8, i8* %arrayidx25, align 1, !dbg !4657
  %conv26 = zext i8 %25 to i32, !dbg !4657
  %shr27 = ashr i32 %conv26, 2, !dbg !4659
  %idxprom28 = sext i32 %shr27 to i64, !dbg !4660
  %arrayidx29 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom28, !dbg !4660
  %26 = load i8, i8* %arrayidx29, align 1, !dbg !4660
  %27 = load i8*, i8** %bufferP.addr, align 8, !dbg !4661
  %28 = load i32, i32* %result_index, align 4, !dbg !4662
  %idxprom30 = zext i32 %28 to i64, !dbg !4661
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 %idxprom30, !dbg !4661
  store i8 %26, i8* %arrayidx31, align 1, !dbg !4663
  %29 = load i8*, i8** %dataP.addr, align 8, !dbg !4664
  %30 = load i32, i32* %data_index, align 4, !dbg !4665
  %idxprom32 = zext i32 %30 to i64, !dbg !4664
  %arrayidx33 = getelementptr inbounds i8, i8* %29, i64 %idxprom32, !dbg !4664
  %31 = load i8, i8* %arrayidx33, align 1, !dbg !4664
  %conv34 = zext i8 %31 to i32, !dbg !4664
  %and35 = and i32 %conv34, 3, !dbg !4666
  %shl36 = shl i32 %and35, 4, !dbg !4667
  %32 = load i8*, i8** %dataP.addr, align 8, !dbg !4668
  %33 = load i32, i32* %data_index, align 4, !dbg !4669
  %add37 = add i32 %33, 1, !dbg !4670
  %idxprom38 = zext i32 %add37 to i64, !dbg !4668
  %arrayidx39 = getelementptr inbounds i8, i8* %32, i64 %idxprom38, !dbg !4668
  %34 = load i8, i8* %arrayidx39, align 1, !dbg !4668
  %conv40 = zext i8 %34 to i32, !dbg !4668
  %shr41 = ashr i32 %conv40, 4, !dbg !4671
  %or = or i32 %shl36, %shr41, !dbg !4672
  %idxprom42 = sext i32 %or to i64, !dbg !4673
  %arrayidx43 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom42, !dbg !4673
  %35 = load i8, i8* %arrayidx43, align 1, !dbg !4673
  %36 = load i8*, i8** %bufferP.addr, align 8, !dbg !4674
  %37 = load i32, i32* %result_index, align 4, !dbg !4675
  %add44 = add i32 %37, 1, !dbg !4676
  %idxprom45 = zext i32 %add44 to i64, !dbg !4674
  %arrayidx46 = getelementptr inbounds i8, i8* %36, i64 %idxprom45, !dbg !4674
  store i8 %35, i8* %arrayidx46, align 1, !dbg !4677
  %38 = load i8*, i8** %dataP.addr, align 8, !dbg !4678
  %39 = load i32, i32* %data_index, align 4, !dbg !4679
  %add47 = add i32 %39, 1, !dbg !4680
  %idxprom48 = zext i32 %add47 to i64, !dbg !4678
  %arrayidx49 = getelementptr inbounds i8, i8* %38, i64 %idxprom48, !dbg !4678
  %40 = load i8, i8* %arrayidx49, align 1, !dbg !4678
  %conv50 = zext i8 %40 to i32, !dbg !4678
  %and51 = and i32 %conv50, 15, !dbg !4681
  %shl52 = shl i32 %and51, 2, !dbg !4682
  %idxprom53 = sext i32 %shl52 to i64, !dbg !4683
  %arrayidx54 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom53, !dbg !4683
  %41 = load i8, i8* %arrayidx54, align 1, !dbg !4683
  %42 = load i8*, i8** %bufferP.addr, align 8, !dbg !4684
  %43 = load i32, i32* %result_index, align 4, !dbg !4685
  %add55 = add i32 %43, 2, !dbg !4686
  %idxprom56 = zext i32 %add55 to i64, !dbg !4684
  %arrayidx57 = getelementptr inbounds i8, i8* %42, i64 %idxprom56, !dbg !4684
  store i8 %41, i8* %arrayidx57, align 1, !dbg !4687
  %44 = load i8*, i8** %bufferP.addr, align 8, !dbg !4688
  %45 = load i32, i32* %result_index, align 4, !dbg !4689
  %add58 = add i32 %45, 3, !dbg !4690
  %idxprom59 = zext i32 %add58 to i64, !dbg !4688
  %arrayidx60 = getelementptr inbounds i8, i8* %44, i64 %idxprom59, !dbg !4688
  store i8 61, i8* %arrayidx60, align 1, !dbg !4691
  br label %sw.epilog, !dbg !4692

sw.default:                                       ; preds = %while.body
  %46 = load i8*, i8** %dataP.addr, align 8, !dbg !4693
  %47 = load i32, i32* %data_index, align 4, !dbg !4694
  %idx.ext = zext i32 %47 to i64, !dbg !4695
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %idx.ext, !dbg !4695
  %48 = load i8*, i8** %bufferP.addr, align 8, !dbg !4696
  %49 = load i32, i32* %result_index, align 4, !dbg !4697
  %idx.ext61 = zext i32 %49 to i64, !dbg !4698
  %add.ptr62 = getelementptr inbounds i8, i8* %48, i64 %idx.ext61, !dbg !4698
  call void @prv_encodeBlock(i8* %add.ptr, i8* %add.ptr62), !dbg !4699
  br label %sw.epilog, !dbg !4700

sw.epilog:                                        ; preds = %sw.default, %sw.bb23, %sw.bb4, %sw.bb
  %50 = load i32, i32* %data_index, align 4, !dbg !4701
  %add63 = add i32 %50, 3, !dbg !4701
  store i32 %add63, i32* %data_index, align 4, !dbg !4701
  %51 = load i32, i32* %result_index, align 4, !dbg !4702
  %add64 = add i32 %51, 4, !dbg !4702
  store i32 %add64, i32* %result_index, align 4, !dbg !4702
  br label %while.cond, !dbg !4621, !llvm.loop !4703

while.end:                                        ; preds = %while.cond
  %52 = load i64, i64* %result_len, align 8, !dbg !4705
  store i64 %52, i64* %retval, align 8, !dbg !4706
  br label %return, !dbg !4706

return:                                           ; preds = %while.end, %if.then
  %53 = load i64, i64* %retval, align 8, !dbg !4707
  ret i64 %53, !dbg !4707
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_encodeBlock(i8* %input, i8* %output) #0 !dbg !4708 {
entry:
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  store i8* %input, i8** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %input.addr, metadata !4711, metadata !1190), !dbg !4712
  store i8* %output, i8** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %output.addr, metadata !4713, metadata !1190), !dbg !4714
  %0 = load i8*, i8** %input.addr, align 8, !dbg !4715
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4715
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4715
  %conv = zext i8 %1 to i32, !dbg !4715
  %shr = ashr i32 %conv, 2, !dbg !4716
  %idxprom = sext i32 %shr to i64, !dbg !4717
  %arrayidx1 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom, !dbg !4717
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !4717
  %3 = load i8*, i8** %output.addr, align 8, !dbg !4718
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !4718
  store i8 %2, i8* %arrayidx2, align 1, !dbg !4719
  %4 = load i8*, i8** %input.addr, align 8, !dbg !4720
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4720
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !4720
  %conv4 = zext i8 %5 to i32, !dbg !4720
  %and = and i32 %conv4, 3, !dbg !4721
  %shl = shl i32 %and, 4, !dbg !4722
  %6 = load i8*, i8** %input.addr, align 8, !dbg !4723
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !4723
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !4723
  %conv6 = zext i8 %7 to i32, !dbg !4723
  %shr7 = ashr i32 %conv6, 4, !dbg !4724
  %or = or i32 %shl, %shr7, !dbg !4725
  %idxprom8 = sext i32 %or to i64, !dbg !4726
  %arrayidx9 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom8, !dbg !4726
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !4726
  %9 = load i8*, i8** %output.addr, align 8, !dbg !4727
  %arrayidx10 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4727
  store i8 %8, i8* %arrayidx10, align 1, !dbg !4728
  %10 = load i8*, i8** %input.addr, align 8, !dbg !4729
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !4729
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4729
  %conv12 = zext i8 %11 to i32, !dbg !4729
  %and13 = and i32 %conv12, 15, !dbg !4730
  %shl14 = shl i32 %and13, 2, !dbg !4731
  %12 = load i8*, i8** %input.addr, align 8, !dbg !4732
  %arrayidx15 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !4732
  %13 = load i8, i8* %arrayidx15, align 1, !dbg !4732
  %conv16 = zext i8 %13 to i32, !dbg !4732
  %shr17 = ashr i32 %conv16, 6, !dbg !4733
  %or18 = or i32 %shl14, %shr17, !dbg !4734
  %idxprom19 = sext i32 %or18 to i64, !dbg !4735
  %arrayidx20 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom19, !dbg !4735
  %14 = load i8, i8* %arrayidx20, align 1, !dbg !4735
  %15 = load i8*, i8** %output.addr, align 8, !dbg !4736
  %arrayidx21 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !4736
  store i8 %14, i8* %arrayidx21, align 1, !dbg !4737
  %16 = load i8*, i8** %input.addr, align 8, !dbg !4738
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !4738
  %17 = load i8, i8* %arrayidx22, align 1, !dbg !4738
  %conv23 = zext i8 %17 to i32, !dbg !4738
  %and24 = and i32 %conv23, 63, !dbg !4739
  %idxprom25 = sext i32 %and24 to i64, !dbg !4740
  %arrayidx26 = getelementptr inbounds [64 x i8], [64 x i8]* @b64Alphabet, i64 0, i64 %idxprom25, !dbg !4740
  %18 = load i8, i8* %arrayidx26, align 1, !dbg !4740
  %19 = load i8*, i8** %output.addr, align 8, !dbg !4741
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !4741
  store i8 %18, i8* %arrayidx27, align 1, !dbg !4742
  ret void, !dbg !4743
}

; Function Attrs: noinline nounwind uwtable
define i32 @utils_depthToDatatype(i32 %depth) #0 !dbg !4744 {
entry:
  %retval = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !4747, metadata !1190), !dbg !4748
  %0 = load i32, i32* %depth.addr, align 4, !dbg !4749
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !4750

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4751
  br label %return, !dbg !4751

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4753
  br label %return, !dbg !4753

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !4754

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !4755
  br label %return, !dbg !4755

return:                                           ; preds = %sw.epilog, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !4756
  ret i32 %1, !dbg !4756
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_decode_TLV(i8* %buffer, i64 %buffer_len, i32* %oType, i16* %oID, i64* %oDataIndex, i64* %oDataLen) #0 !dbg !4757 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %buffer_len.addr = alloca i64, align 8
  %oType.addr = alloca i32*, align 8
  %oID.addr = alloca i16*, align 8
  %oDataIndex.addr = alloca i64*, align 8
  %oDataLen.addr = alloca i64*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4761, metadata !1190), !dbg !4762
  store i64 %buffer_len, i64* %buffer_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_len.addr, metadata !4763, metadata !1190), !dbg !4764
  store i32* %oType, i32** %oType.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oType.addr, metadata !4765, metadata !1190), !dbg !4766
  store i16* %oID, i16** %oID.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %oID.addr, metadata !4767, metadata !1190), !dbg !4768
  store i64* %oDataIndex, i64** %oDataIndex.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %oDataIndex.addr, metadata !4769, metadata !1190), !dbg !4770
  store i64* %oDataLen, i64** %oDataLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %oDataLen.addr, metadata !4771, metadata !1190), !dbg !4772
  %0 = load i64, i64* %buffer_len.addr, align 8, !dbg !4773
  %cmp = icmp ult i64 %0, 2, !dbg !4775
  br i1 %cmp, label %if.then, label %if.end, !dbg !4776

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4777
  br label %return, !dbg !4777

if.end:                                           ; preds = %entry
  %1 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4778
  store i64 2, i64* %1, align 8, !dbg !4779
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !4780
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !4780
  %3 = load i8, i8* %arrayidx, align 1, !dbg !4780
  %conv = zext i8 %3 to i32, !dbg !4780
  %and = and i32 %conv, 192, !dbg !4781
  %conv1 = trunc i32 %and to i8, !dbg !4780
  %call = call i32 @prv_getDataType(i8 zeroext %conv1), !dbg !4782
  %4 = load i32*, i32** %oType.addr, align 8, !dbg !4783
  store i32 %call, i32* %4, align 4, !dbg !4784
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !4785
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !4785
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !4785
  %conv3 = zext i8 %6 to i32, !dbg !4785
  %and4 = and i32 %conv3, 32, !dbg !4787
  %cmp5 = icmp eq i32 %and4, 32, !dbg !4788
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !4789

if.then7:                                         ; preds = %if.end
  %7 = load i64, i64* %buffer_len.addr, align 8, !dbg !4790
  %cmp8 = icmp ult i64 %7, 3, !dbg !4793
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4794

if.then10:                                        ; preds = %if.then7
  store i32 0, i32* %retval, align 4, !dbg !4795
  br label %return, !dbg !4795

if.end11:                                         ; preds = %if.then7
  %8 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4796
  %9 = load i64, i64* %8, align 8, !dbg !4797
  %add = add i64 %9, 1, !dbg !4797
  store i64 %add, i64* %8, align 8, !dbg !4797
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4798
  %arrayidx12 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !4798
  %11 = load i8, i8* %arrayidx12, align 1, !dbg !4798
  %conv13 = zext i8 %11 to i32, !dbg !4798
  %shl = shl i32 %conv13, 8, !dbg !4799
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !4800
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !4800
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !4800
  %conv15 = zext i8 %13 to i32, !dbg !4800
  %add16 = add nsw i32 %shl, %conv15, !dbg !4801
  %conv17 = trunc i32 %add16 to i16, !dbg !4802
  %14 = load i16*, i16** %oID.addr, align 8, !dbg !4803
  store i16 %conv17, i16* %14, align 2, !dbg !4804
  br label %if.end20, !dbg !4805

if.else:                                          ; preds = %if.end
  %15 = load i8*, i8** %buffer.addr, align 8, !dbg !4806
  %arrayidx18 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !4806
  %16 = load i8, i8* %arrayidx18, align 1, !dbg !4806
  %conv19 = zext i8 %16 to i16, !dbg !4806
  %17 = load i16*, i16** %oID.addr, align 8, !dbg !4808
  store i16 %conv19, i16* %17, align 2, !dbg !4809
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.end11
  %18 = load i8*, i8** %buffer.addr, align 8, !dbg !4810
  %arrayidx21 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !4810
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !4810
  %conv22 = zext i8 %19 to i32, !dbg !4810
  %and23 = and i32 %conv22, 24, !dbg !4811
  switch i32 %and23, label %sw.default [
    i32 0, label %sw.bb
    i32 8, label %sw.bb28
    i32 16, label %sw.bb37
    i32 24, label %sw.bb52
  ], !dbg !4812

sw.bb:                                            ; preds = %if.end20
  %20 = load i8*, i8** %buffer.addr, align 8, !dbg !4813
  %arrayidx24 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !4813
  %21 = load i8, i8* %arrayidx24, align 1, !dbg !4813
  %conv25 = zext i8 %21 to i32, !dbg !4813
  %and26 = and i32 %conv25, 7, !dbg !4815
  %conv27 = sext i32 %and26 to i64, !dbg !4813
  %22 = load i64*, i64** %oDataLen.addr, align 8, !dbg !4816
  store i64 %conv27, i64* %22, align 8, !dbg !4817
  br label %sw.epilog, !dbg !4818

sw.bb28:                                          ; preds = %if.end20
  %23 = load i64, i64* %buffer_len.addr, align 8, !dbg !4819
  %24 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4821
  %25 = load i64, i64* %24, align 8, !dbg !4822
  %add29 = add i64 %25, 1, !dbg !4823
  %cmp30 = icmp ult i64 %23, %add29, !dbg !4824
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4825

if.then32:                                        ; preds = %sw.bb28
  store i32 0, i32* %retval, align 4, !dbg !4826
  br label %return, !dbg !4826

if.end33:                                         ; preds = %sw.bb28
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !4827
  %27 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4828
  %28 = load i64, i64* %27, align 8, !dbg !4829
  %arrayidx34 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !4827
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !4827
  %conv35 = zext i8 %29 to i64, !dbg !4827
  %30 = load i64*, i64** %oDataLen.addr, align 8, !dbg !4830
  store i64 %conv35, i64* %30, align 8, !dbg !4831
  %31 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4832
  %32 = load i64, i64* %31, align 8, !dbg !4833
  %add36 = add i64 %32, 1, !dbg !4833
  store i64 %add36, i64* %31, align 8, !dbg !4833
  br label %sw.epilog, !dbg !4834

sw.bb37:                                          ; preds = %if.end20
  %33 = load i64, i64* %buffer_len.addr, align 8, !dbg !4835
  %34 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4837
  %35 = load i64, i64* %34, align 8, !dbg !4838
  %add38 = add i64 %35, 2, !dbg !4839
  %cmp39 = icmp ult i64 %33, %add38, !dbg !4840
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !4841

if.then41:                                        ; preds = %sw.bb37
  store i32 0, i32* %retval, align 4, !dbg !4842
  br label %return, !dbg !4842

if.end42:                                         ; preds = %sw.bb37
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !4843
  %37 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4844
  %38 = load i64, i64* %37, align 8, !dbg !4845
  %arrayidx43 = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !4843
  %39 = load i8, i8* %arrayidx43, align 1, !dbg !4843
  %conv44 = zext i8 %39 to i32, !dbg !4843
  %shl45 = shl i32 %conv44, 8, !dbg !4846
  %40 = load i8*, i8** %buffer.addr, align 8, !dbg !4847
  %41 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4848
  %42 = load i64, i64* %41, align 8, !dbg !4849
  %add46 = add i64 %42, 1, !dbg !4850
  %arrayidx47 = getelementptr inbounds i8, i8* %40, i64 %add46, !dbg !4847
  %43 = load i8, i8* %arrayidx47, align 1, !dbg !4847
  %conv48 = zext i8 %43 to i32, !dbg !4847
  %add49 = add nsw i32 %shl45, %conv48, !dbg !4851
  %conv50 = sext i32 %add49 to i64, !dbg !4852
  %44 = load i64*, i64** %oDataLen.addr, align 8, !dbg !4853
  store i64 %conv50, i64* %44, align 8, !dbg !4854
  %45 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4855
  %46 = load i64, i64* %45, align 8, !dbg !4856
  %add51 = add i64 %46, 2, !dbg !4856
  store i64 %add51, i64* %45, align 8, !dbg !4856
  br label %sw.epilog, !dbg !4857

sw.bb52:                                          ; preds = %if.end20
  %47 = load i64, i64* %buffer_len.addr, align 8, !dbg !4858
  %48 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4860
  %49 = load i64, i64* %48, align 8, !dbg !4861
  %add53 = add i64 %49, 3, !dbg !4862
  %cmp54 = icmp ult i64 %47, %add53, !dbg !4863
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !4864

if.then56:                                        ; preds = %sw.bb52
  store i32 0, i32* %retval, align 4, !dbg !4865
  br label %return, !dbg !4865

if.end57:                                         ; preds = %sw.bb52
  %50 = load i8*, i8** %buffer.addr, align 8, !dbg !4866
  %51 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4867
  %52 = load i64, i64* %51, align 8, !dbg !4868
  %arrayidx58 = getelementptr inbounds i8, i8* %50, i64 %52, !dbg !4866
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !4866
  %conv59 = zext i8 %53 to i32, !dbg !4866
  %shl60 = shl i32 %conv59, 16, !dbg !4869
  %54 = load i8*, i8** %buffer.addr, align 8, !dbg !4870
  %55 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4871
  %56 = load i64, i64* %55, align 8, !dbg !4872
  %add61 = add i64 %56, 1, !dbg !4873
  %arrayidx62 = getelementptr inbounds i8, i8* %54, i64 %add61, !dbg !4870
  %57 = load i8, i8* %arrayidx62, align 1, !dbg !4870
  %conv63 = zext i8 %57 to i32, !dbg !4870
  %shl64 = shl i32 %conv63, 8, !dbg !4874
  %add65 = add nsw i32 %shl60, %shl64, !dbg !4875
  %58 = load i8*, i8** %buffer.addr, align 8, !dbg !4876
  %59 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4877
  %60 = load i64, i64* %59, align 8, !dbg !4878
  %add66 = add i64 %60, 2, !dbg !4879
  %arrayidx67 = getelementptr inbounds i8, i8* %58, i64 %add66, !dbg !4876
  %61 = load i8, i8* %arrayidx67, align 1, !dbg !4876
  %conv68 = zext i8 %61 to i32, !dbg !4876
  %add69 = add nsw i32 %add65, %conv68, !dbg !4880
  %conv70 = sext i32 %add69 to i64, !dbg !4881
  %62 = load i64*, i64** %oDataLen.addr, align 8, !dbg !4882
  store i64 %conv70, i64* %62, align 8, !dbg !4883
  %63 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4884
  %64 = load i64, i64* %63, align 8, !dbg !4885
  %add71 = add i64 %64, 3, !dbg !4885
  store i64 %add71, i64* %63, align 8, !dbg !4885
  br label %sw.epilog, !dbg !4886

sw.default:                                       ; preds = %if.end20
  store i32 0, i32* %retval, align 4, !dbg !4887
  br label %return, !dbg !4887

sw.epilog:                                        ; preds = %if.end57, %if.end42, %if.end33, %sw.bb
  %65 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4888
  %66 = load i64, i64* %65, align 8, !dbg !4890
  %67 = load i64*, i64** %oDataLen.addr, align 8, !dbg !4891
  %68 = load i64, i64* %67, align 8, !dbg !4892
  %add72 = add i64 %66, %68, !dbg !4893
  %69 = load i64, i64* %buffer_len.addr, align 8, !dbg !4894
  %cmp73 = icmp ugt i64 %add72, %69, !dbg !4895
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !4896

if.then75:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !4897
  br label %return, !dbg !4897

if.end76:                                         ; preds = %sw.epilog
  %70 = load i64*, i64** %oDataIndex.addr, align 8, !dbg !4898
  %71 = load i64, i64* %70, align 8, !dbg !4899
  %72 = load i64*, i64** %oDataLen.addr, align 8, !dbg !4900
  %73 = load i64, i64* %72, align 8, !dbg !4901
  %add77 = add i64 %71, %73, !dbg !4902
  %conv78 = trunc i64 %add77 to i32, !dbg !4899
  store i32 %conv78, i32* %retval, align 4, !dbg !4903
  br label %return, !dbg !4903

return:                                           ; preds = %if.end76, %if.then75, %sw.default, %if.then56, %if.then41, %if.then32, %if.then10, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !4904
  ret i32 %74, !dbg !4904
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_getDataType(i8 zeroext %type) #0 !dbg !4905 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i8, align 1
  store i8 %type, i8* %type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !4908, metadata !1190), !dbg !4909
  %0 = load i8, i8* %type.addr, align 1, !dbg !4910
  %conv = zext i8 %0 to i32, !dbg !4910
  switch i32 %conv, label %sw.default [
    i32 16, label %sw.bb
    i32 0, label %sw.bb1
    i32 128, label %sw.bb2
    i32 192, label %sw.bb3
    i32 64, label %sw.bb3
  ], !dbg !4911

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4912
  br label %return, !dbg !4912

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4914
  br label %return, !dbg !4914

sw.bb2:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !4915
  br label %return, !dbg !4915

sw.bb3:                                           ; preds = %entry, %entry
  store i32 5, i32* %retval, align 4, !dbg !4916
  br label %return, !dbg !4916

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4917
  br label %return, !dbg !4917

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !4918
  ret i32 %1, !dbg !4918
}

; Function Attrs: noinline nounwind uwtable
define i32 @tlv_parse(i8* %buffer, i64 %bufferLen, %struct._lwm2m_data_t** %dataP) #0 !dbg !4919 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t**, align 8
  %type = alloca i32, align 4
  %id = alloca i16, align 2
  %dataIndex = alloca i64, align 8
  %dataLen = alloca i64, align 8
  %index = alloca i32, align 4
  %result = alloca i32, align 4
  %size = alloca i32, align 4
  %newTlvP = alloca %struct._lwm2m_data_t*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4950, metadata !1190), !dbg !4951
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !4952, metadata !1190), !dbg !4953
  store %struct._lwm2m_data_t** %dataP, %struct._lwm2m_data_t*** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t*** %dataP.addr, metadata !4954, metadata !1190), !dbg !4955
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4956, metadata !1190), !dbg !4957
  call void @llvm.dbg.declare(metadata i16* %id, metadata !4958, metadata !1190), !dbg !4959
  call void @llvm.dbg.declare(metadata i64* %dataIndex, metadata !4960, metadata !1190), !dbg !4961
  call void @llvm.dbg.declare(metadata i64* %dataLen, metadata !4962, metadata !1190), !dbg !4963
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4964, metadata !1190), !dbg !4965
  store i32 0, i32* %index, align 4, !dbg !4965
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4966, metadata !1190), !dbg !4967
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4968, metadata !1190), !dbg !4969
  store i32 0, i32* %size, align 4, !dbg !4969
  %0 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !4970
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %0, align 8, !dbg !4971
  br label %while.cond, !dbg !4972

while.cond:                                       ; preds = %if.end46, %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !4973
  %2 = load i32, i32* %index, align 4, !dbg !4974
  %idx.ext = sext i32 %2 to i64, !dbg !4975
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !4975
  %3 = load i64, i64* %bufferLen.addr, align 8, !dbg !4976
  %4 = load i32, i32* %index, align 4, !dbg !4977
  %conv = sext i32 %4 to i64, !dbg !4977
  %sub = sub i64 %3, %conv, !dbg !4978
  %call = call i32 @lwm2m_decode_TLV(i8* %add.ptr, i64 %sub, i32* %type, i16* %id, i64* %dataIndex, i64* %dataLen), !dbg !4979
  store i32 %call, i32* %result, align 4, !dbg !4980
  %cmp = icmp ne i32 0, %call, !dbg !4981
  br i1 %cmp, label %while.body, label %while.end, !dbg !4972

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %newTlvP, metadata !4982, metadata !1190), !dbg !4984
  %5 = load i32, i32* %size, align 4, !dbg !4985
  %add = add nsw i32 %5, 1, !dbg !4986
  %call2 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 %add), !dbg !4987
  store %struct._lwm2m_data_t* %call2, %struct._lwm2m_data_t** %newTlvP, align 8, !dbg !4988
  %6 = load i32, i32* %size, align 4, !dbg !4989
  %cmp3 = icmp sge i32 %6, 1, !dbg !4991
  br i1 %cmp3, label %if.then, label %if.end9, !dbg !4992

if.then:                                          ; preds = %while.body
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newTlvP, align 8, !dbg !4993
  %cmp5 = icmp eq %struct._lwm2m_data_t* %7, null, !dbg !4996
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !4997

if.then7:                                         ; preds = %if.then
  %8 = load i32, i32* %size, align 4, !dbg !4998
  %9 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5000
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %9, align 8, !dbg !5001
  call void @lwm2m_data_free(i32 %8, %struct._lwm2m_data_t* %10), !dbg !5002
  store i32 0, i32* %retval, align 4, !dbg !5003
  br label %return, !dbg !5003

if.else:                                          ; preds = %if.then
  %11 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newTlvP, align 8, !dbg !5004
  %12 = bitcast %struct._lwm2m_data_t* %11 to i8*, !dbg !5006
  %13 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5007
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %13, align 8, !dbg !5008
  %15 = bitcast %struct._lwm2m_data_t* %14 to i8*, !dbg !5006
  %16 = load i32, i32* %size, align 4, !dbg !5009
  %conv8 = sext i32 %16 to i64, !dbg !5009
  %mul = mul i64 %conv8, 24, !dbg !5010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %15, i64 %mul, i32 8, i1 false), !dbg !5006
  %17 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5011
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %17, align 8, !dbg !5012
  %19 = bitcast %struct._lwm2m_data_t* %18 to i8*, !dbg !5012
  call void @lwm2m_free(i8* %19), !dbg !5013
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end9, !dbg !5014

if.end9:                                          ; preds = %if.end, %while.body
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newTlvP, align 8, !dbg !5015
  %21 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5016
  store %struct._lwm2m_data_t* %20, %struct._lwm2m_data_t** %21, align 8, !dbg !5017
  %22 = load i32, i32* %type, align 4, !dbg !5018
  %23 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5019
  %24 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %23, align 8, !dbg !5020
  %25 = load i32, i32* %size, align 4, !dbg !5021
  %idxprom = sext i32 %25 to i64, !dbg !5022
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %24, i64 %idxprom, !dbg !5022
  %type10 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !5023
  store i32 %22, i32* %type10, align 8, !dbg !5024
  %26 = load i16, i16* %id, align 2, !dbg !5025
  %27 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5026
  %28 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %27, align 8, !dbg !5027
  %29 = load i32, i32* %size, align 4, !dbg !5028
  %idxprom11 = sext i32 %29 to i64, !dbg !5029
  %arrayidx12 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %28, i64 %idxprom11, !dbg !5029
  %id13 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx12, i32 0, i32 1, !dbg !5030
  store i16 %26, i16* %id13, align 4, !dbg !5031
  %30 = load i32, i32* %type, align 4, !dbg !5032
  %cmp14 = icmp eq i32 %30, 2, !dbg !5034
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !5035

lor.lhs.false:                                    ; preds = %if.end9
  %31 = load i32, i32* %type, align 4, !dbg !5036
  %cmp16 = icmp eq i32 %31, 3, !dbg !5037
  br i1 %cmp16, label %if.then18, label %if.else40, !dbg !5038

if.then18:                                        ; preds = %lor.lhs.false, %if.end9
  %32 = load i8*, i8** %buffer.addr, align 8, !dbg !5039
  %33 = load i32, i32* %index, align 4, !dbg !5041
  %idx.ext19 = sext i32 %33 to i64, !dbg !5042
  %add.ptr20 = getelementptr inbounds i8, i8* %32, i64 %idx.ext19, !dbg !5042
  %34 = load i64, i64* %dataIndex, align 8, !dbg !5043
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr20, i64 %34, !dbg !5044
  %35 = load i64, i64* %dataLen, align 8, !dbg !5045
  %36 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5046
  %37 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %36, align 8, !dbg !5047
  %38 = load i32, i32* %size, align 4, !dbg !5048
  %idxprom22 = sext i32 %38 to i64, !dbg !5049
  %arrayidx23 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %37, i64 %idxprom22, !dbg !5049
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx23, i32 0, i32 2, !dbg !5050
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !5051
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 1, !dbg !5052
  %call24 = call i32 @tlv_parse(i8* %add.ptr21, i64 %35, %struct._lwm2m_data_t** %array), !dbg !5053
  %conv25 = sext i32 %call24 to i64, !dbg !5053
  %39 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5054
  %40 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %39, align 8, !dbg !5055
  %41 = load i32, i32* %size, align 4, !dbg !5056
  %idxprom26 = sext i32 %41 to i64, !dbg !5057
  %arrayidx27 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %40, i64 %idxprom26, !dbg !5057
  %value28 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx27, i32 0, i32 2, !dbg !5058
  %asChildren29 = bitcast %union.anon.0* %value28 to %struct.anon.0*, !dbg !5059
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren29, i32 0, i32 0, !dbg !5060
  store i64 %conv25, i64* %count, align 8, !dbg !5061
  %42 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5062
  %43 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %42, align 8, !dbg !5064
  %44 = load i32, i32* %size, align 4, !dbg !5065
  %idxprom30 = sext i32 %44 to i64, !dbg !5066
  %arrayidx31 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %43, i64 %idxprom30, !dbg !5066
  %value32 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx31, i32 0, i32 2, !dbg !5067
  %asChildren33 = bitcast %union.anon.0* %value32 to %struct.anon.0*, !dbg !5068
  %count34 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren33, i32 0, i32 0, !dbg !5069
  %45 = load i64, i64* %count34, align 8, !dbg !5069
  %cmp35 = icmp eq i64 %45, 0, !dbg !5070
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !5071

if.then37:                                        ; preds = %if.then18
  %46 = load i32, i32* %size, align 4, !dbg !5072
  %add38 = add nsw i32 %46, 1, !dbg !5074
  %47 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5075
  %48 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %47, align 8, !dbg !5076
  call void @lwm2m_data_free(i32 %add38, %struct._lwm2m_data_t* %48), !dbg !5077
  store i32 0, i32* %retval, align 4, !dbg !5078
  br label %return, !dbg !5078

if.end39:                                         ; preds = %if.then18
  br label %if.end46, !dbg !5079

if.else40:                                        ; preds = %lor.lhs.false
  %49 = load i8*, i8** %buffer.addr, align 8, !dbg !5080
  %50 = load i32, i32* %index, align 4, !dbg !5082
  %idx.ext41 = sext i32 %50 to i64, !dbg !5083
  %add.ptr42 = getelementptr inbounds i8, i8* %49, i64 %idx.ext41, !dbg !5083
  %51 = load i64, i64* %dataIndex, align 8, !dbg !5084
  %add.ptr43 = getelementptr inbounds i8, i8* %add.ptr42, i64 %51, !dbg !5085
  %52 = load i64, i64* %dataLen, align 8, !dbg !5086
  %53 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !5087
  %54 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %53, align 8, !dbg !5088
  %55 = load i32, i32* %size, align 4, !dbg !5089
  %idx.ext44 = sext i32 %55 to i64, !dbg !5090
  %add.ptr45 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %54, i64 %idx.ext44, !dbg !5090
  call void @lwm2m_data_encode_opaque(i8* %add.ptr43, i64 %52, %struct._lwm2m_data_t* %add.ptr45), !dbg !5091
  br label %if.end46

if.end46:                                         ; preds = %if.else40, %if.end39
  %56 = load i32, i32* %size, align 4, !dbg !5092
  %inc = add nsw i32 %56, 1, !dbg !5092
  store i32 %inc, i32* %size, align 4, !dbg !5092
  %57 = load i32, i32* %result, align 4, !dbg !5093
  %58 = load i32, i32* %index, align 4, !dbg !5094
  %add47 = add nsw i32 %58, %57, !dbg !5094
  store i32 %add47, i32* %index, align 4, !dbg !5094
  br label %while.cond, !dbg !4972, !llvm.loop !5095

while.end:                                        ; preds = %while.cond
  %59 = load i32, i32* %size, align 4, !dbg !5097
  store i32 %59, i32* %retval, align 4, !dbg !5098
  br label %return, !dbg !5098

return:                                           ; preds = %while.end, %if.then37, %if.then7
  %60 = load i32, i32* %retval, align 4, !dbg !5099
  ret i32 %60, !dbg !5099
}

; Function Attrs: noinline nounwind uwtable
define i32 @tlv_serialize(i1 zeroext %isResourceInstance, i32 %size, %struct._lwm2m_data_t* %dataP, i8** %bufferP) #0 !dbg !5100 {
entry:
  %retval = alloca i32, align 4
  %isResourceInstance.addr = alloca i8, align 1
  %size.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %bufferP.addr = alloca i8**, align 8
  %length = alloca i32, align 4
  %index = alloca i32, align 4
  %i = alloca i32, align 4
  %headerLen = alloca i32, align 4
  %isInstance = alloca i8, align 1
  %tmpBuffer = alloca i8*, align 8
  %res = alloca i32, align 4
  %tmpLength = alloca i64, align 8
  %k = alloca i32, align 4
  %buf = alloca [4 x i8], align 1
  %v = alloca i32, align 4
  %data_len = alloca i64, align 8
  %data_buffer = alloca [8 x i8], align 1
  %data_len131 = alloca i64, align 8
  %data_buffer132 = alloca [8 x i8], align 1
  %frombool = zext i1 %isResourceInstance to i8
  store i8 %frombool, i8* %isResourceInstance.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isResourceInstance.addr, metadata !5104, metadata !1190), !dbg !5105
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5106, metadata !1190), !dbg !5107
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !5108, metadata !1190), !dbg !5109
  store i8** %bufferP, i8*** %bufferP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %bufferP.addr, metadata !5110, metadata !1190), !dbg !5111
  call void @llvm.dbg.declare(metadata i32* %length, metadata !5112, metadata !1190), !dbg !5113
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5114, metadata !1190), !dbg !5115
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5116, metadata !1190), !dbg !5117
  %0 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5118
  store i8* null, i8** %0, align 8, !dbg !5119
  %1 = load i32, i32* %size.addr, align 4, !dbg !5120
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5121
  %call = call i32 @prv_getLength(i32 %1, %struct._lwm2m_data_t* %2), !dbg !5122
  store i32 %call, i32* %length, align 4, !dbg !5123
  %3 = load i32, i32* %length, align 4, !dbg !5124
  %cmp = icmp sle i32 %3, 0, !dbg !5126
  br i1 %cmp, label %if.then, label %if.end, !dbg !5127

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %length, align 4, !dbg !5128
  store i32 %4, i32* %retval, align 4, !dbg !5129
  br label %return, !dbg !5129

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %length, align 4, !dbg !5130
  %conv = sext i32 %5 to i64, !dbg !5130
  %call1 = call i8* @lwm2m_malloc(i64 %conv), !dbg !5131
  %6 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5132
  store i8* %call1, i8** %6, align 8, !dbg !5133
  %7 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5134
  %8 = load i8*, i8** %7, align 8, !dbg !5136
  %cmp2 = icmp eq i8* %8, null, !dbg !5137
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !5138

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5139
  br label %return, !dbg !5139

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %index, align 4, !dbg !5140
  store i32 0, i32* %i, align 4, !dbg !5141
  br label %for.cond, !dbg !5143

for.cond:                                         ; preds = %for.inc176, %if.end5
  %9 = load i32, i32* %i, align 4, !dbg !5144
  %10 = load i32, i32* %size.addr, align 4, !dbg !5146
  %cmp6 = icmp slt i32 %9, %10, !dbg !5147
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !5148

land.rhs:                                         ; preds = %for.cond
  %11 = load i32, i32* %length, align 4, !dbg !5149
  %cmp8 = icmp ne i32 %11, 0, !dbg !5150
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %12 = phi i1 [ false, %for.cond ], [ %cmp8, %land.rhs ]
  br i1 %12, label %for.body, label %for.end177, !dbg !5151

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %headerLen, metadata !5152, metadata !1190), !dbg !5154
  call void @llvm.dbg.declare(metadata i8* %isInstance, metadata !5155, metadata !1190), !dbg !5156
  %13 = load i8, i8* %isResourceInstance.addr, align 1, !dbg !5157
  %tobool = trunc i8 %13 to i1, !dbg !5157
  %frombool10 = zext i1 %tobool to i8, !dbg !5158
  store i8 %frombool10, i8* %isInstance, align 1, !dbg !5158
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5159
  %15 = load i32, i32* %i, align 4, !dbg !5160
  %idxprom = sext i32 %15 to i64, !dbg !5159
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %14, i64 %idxprom, !dbg !5159
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !5161
  %16 = load i32, i32* %type, align 8, !dbg !5161
  switch i32 %16, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb11
    i32 9, label %sw.bb41
    i32 4, label %sw.bb72
    i32 5, label %sw.bb72
    i32 6, label %sw.bb107
    i32 7, label %sw.bb130
    i32 8, label %sw.bb155
  ], !dbg !5162

sw.bb:                                            ; preds = %for.body
  store i8 1, i8* %isInstance, align 1, !dbg !5163
  br label %sw.bb11, !dbg !5165

sw.bb11:                                          ; preds = %sw.bb, %for.body
  call void @llvm.dbg.declare(metadata i8** %tmpBuffer, metadata !5166, metadata !1190), !dbg !5168
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5169, metadata !1190), !dbg !5170
  %17 = load i8, i8* %isInstance, align 1, !dbg !5171
  %tobool12 = trunc i8 %17 to i1, !dbg !5171
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5172
  %19 = load i32, i32* %i, align 4, !dbg !5173
  %idxprom13 = sext i32 %19 to i64, !dbg !5172
  %arrayidx14 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %18, i64 %idxprom13, !dbg !5172
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx14, i32 0, i32 2, !dbg !5174
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !5175
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !5176
  %20 = load i64, i64* %count, align 8, !dbg !5176
  %conv15 = trunc i64 %20 to i32, !dbg !5172
  %21 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5177
  %22 = load i32, i32* %i, align 4, !dbg !5178
  %idxprom16 = sext i32 %22 to i64, !dbg !5177
  %arrayidx17 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %21, i64 %idxprom16, !dbg !5177
  %value18 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx17, i32 0, i32 2, !dbg !5179
  %asChildren19 = bitcast %union.anon.0* %value18 to %struct.anon.0*, !dbg !5180
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren19, i32 0, i32 1, !dbg !5181
  %23 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !5181
  %call20 = call i32 @tlv_serialize(i1 zeroext %tobool12, i32 %conv15, %struct._lwm2m_data_t* %23, i8** %tmpBuffer), !dbg !5182
  store i32 %call20, i32* %res, align 4, !dbg !5183
  %24 = load i32, i32* %res, align 4, !dbg !5184
  %cmp21 = icmp slt i32 %24, 0, !dbg !5186
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !5187

if.then23:                                        ; preds = %sw.bb11
  store i32 -1, i32* %length, align 4, !dbg !5188
  br label %if.end40, !dbg !5190

if.else:                                          ; preds = %sw.bb11
  call void @llvm.dbg.declare(metadata i64* %tmpLength, metadata !5191, metadata !1190), !dbg !5193
  %25 = load i32, i32* %res, align 4, !dbg !5194
  %conv24 = sext i32 %25 to i64, !dbg !5195
  store i64 %conv24, i64* %tmpLength, align 8, !dbg !5196
  %26 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5197
  %27 = load i8*, i8** %26, align 8, !dbg !5198
  %28 = load i32, i32* %index, align 4, !dbg !5199
  %idx.ext = sext i32 %28 to i64, !dbg !5200
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !5200
  %29 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5201
  %30 = load i32, i32* %i, align 4, !dbg !5202
  %idxprom25 = sext i32 %30 to i64, !dbg !5201
  %arrayidx26 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %29, i64 %idxprom25, !dbg !5201
  %type27 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx26, i32 0, i32 0, !dbg !5203
  %31 = load i32, i32* %type27, align 8, !dbg !5203
  %32 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5204
  %33 = load i32, i32* %i, align 4, !dbg !5205
  %idxprom28 = sext i32 %33 to i64, !dbg !5204
  %arrayidx29 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %32, i64 %idxprom28, !dbg !5204
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx29, i32 0, i32 1, !dbg !5206
  %34 = load i16, i16* %id, align 4, !dbg !5206
  %35 = load i64, i64* %tmpLength, align 8, !dbg !5207
  %call30 = call i32 @prv_createHeader(i8* %add.ptr, i1 zeroext false, i32 %31, i16 zeroext %34, i64 %35), !dbg !5208
  store i32 %call30, i32* %headerLen, align 4, !dbg !5209
  %36 = load i32, i32* %headerLen, align 4, !dbg !5210
  %37 = load i32, i32* %index, align 4, !dbg !5211
  %add = add nsw i32 %37, %36, !dbg !5211
  store i32 %add, i32* %index, align 4, !dbg !5211
  %38 = load i64, i64* %tmpLength, align 8, !dbg !5212
  %cmp31 = icmp ugt i64 %38, 0, !dbg !5214
  br i1 %cmp31, label %if.then33, label %if.end39, !dbg !5215

if.then33:                                        ; preds = %if.else
  %39 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5216
  %40 = load i8*, i8** %39, align 8, !dbg !5218
  %41 = load i32, i32* %index, align 4, !dbg !5219
  %idx.ext34 = sext i32 %41 to i64, !dbg !5220
  %add.ptr35 = getelementptr inbounds i8, i8* %40, i64 %idx.ext34, !dbg !5220
  %42 = load i8*, i8** %tmpBuffer, align 8, !dbg !5221
  %43 = load i64, i64* %tmpLength, align 8, !dbg !5222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr35, i8* %42, i64 %43, i32 1, i1 false), !dbg !5223
  %44 = load i64, i64* %tmpLength, align 8, !dbg !5224
  %45 = load i32, i32* %index, align 4, !dbg !5225
  %conv36 = sext i32 %45 to i64, !dbg !5225
  %add37 = add i64 %conv36, %44, !dbg !5225
  %conv38 = trunc i64 %add37 to i32, !dbg !5225
  store i32 %conv38, i32* %index, align 4, !dbg !5225
  %46 = load i8*, i8** %tmpBuffer, align 8, !dbg !5226
  call void @lwm2m_free(i8* %46), !dbg !5227
  br label %if.end39, !dbg !5228

if.end39:                                         ; preds = %if.then33, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then23
  br label %sw.epilog, !dbg !5229

sw.bb41:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5230, metadata !1190), !dbg !5232
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !5233, metadata !1190), !dbg !5235
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5236, metadata !1190), !dbg !5237
  %47 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5238
  %48 = load i32, i32* %i, align 4, !dbg !5239
  %idxprom42 = sext i32 %48 to i64, !dbg !5238
  %arrayidx43 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %47, i64 %idxprom42, !dbg !5238
  %value44 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx43, i32 0, i32 2, !dbg !5240
  %asObjLink = bitcast %union.anon.0* %value44 to %struct.anon.1*, !dbg !5241
  %objectId = getelementptr inbounds %struct.anon.1, %struct.anon.1* %asObjLink, i32 0, i32 0, !dbg !5242
  %49 = load i16, i16* %objectId, align 8, !dbg !5242
  %conv45 = zext i16 %49 to i32, !dbg !5238
  store i32 %conv45, i32* %v, align 4, !dbg !5237
  %50 = load i32, i32* %v, align 4, !dbg !5243
  %shl = shl i32 %50, 16, !dbg !5243
  store i32 %shl, i32* %v, align 4, !dbg !5243
  %51 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5244
  %52 = load i32, i32* %i, align 4, !dbg !5245
  %idxprom46 = sext i32 %52 to i64, !dbg !5244
  %arrayidx47 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %51, i64 %idxprom46, !dbg !5244
  %value48 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx47, i32 0, i32 2, !dbg !5246
  %asObjLink49 = bitcast %union.anon.0* %value48 to %struct.anon.1*, !dbg !5247
  %objectInstanceId = getelementptr inbounds %struct.anon.1, %struct.anon.1* %asObjLink49, i32 0, i32 1, !dbg !5248
  %53 = load i16, i16* %objectInstanceId, align 2, !dbg !5248
  %conv50 = zext i16 %53 to i32, !dbg !5244
  %54 = load i32, i32* %v, align 4, !dbg !5249
  %or = or i32 %54, %conv50, !dbg !5249
  store i32 %or, i32* %v, align 4, !dbg !5249
  store i32 3, i32* %k, align 4, !dbg !5250
  br label %for.cond51, !dbg !5252

for.cond51:                                       ; preds = %for.inc, %sw.bb41
  %55 = load i32, i32* %k, align 4, !dbg !5253
  %cmp52 = icmp sge i32 %55, 0, !dbg !5255
  br i1 %cmp52, label %for.body54, label %for.end, !dbg !5256

for.body54:                                       ; preds = %for.cond51
  %56 = load i32, i32* %v, align 4, !dbg !5257
  %and = and i32 %56, 255, !dbg !5259
  %conv55 = trunc i32 %and to i8, !dbg !5260
  %57 = load i32, i32* %k, align 4, !dbg !5261
  %idxprom56 = sext i32 %57 to i64, !dbg !5262
  %arrayidx57 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 %idxprom56, !dbg !5262
  store i8 %conv55, i8* %arrayidx57, align 1, !dbg !5263
  %58 = load i32, i32* %v, align 4, !dbg !5264
  %shr = lshr i32 %58, 8, !dbg !5264
  store i32 %shr, i32* %v, align 4, !dbg !5264
  br label %for.inc, !dbg !5265

for.inc:                                          ; preds = %for.body54
  %59 = load i32, i32* %k, align 4, !dbg !5266
  %dec = add nsw i32 %59, -1, !dbg !5266
  store i32 %dec, i32* %k, align 4, !dbg !5266
  br label %for.cond51, !dbg !5267, !llvm.loop !5268

for.end:                                          ; preds = %for.cond51
  %60 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5270
  %61 = load i8*, i8** %60, align 8, !dbg !5271
  %62 = load i32, i32* %index, align 4, !dbg !5272
  %idx.ext58 = sext i32 %62 to i64, !dbg !5273
  %add.ptr59 = getelementptr inbounds i8, i8* %61, i64 %idx.ext58, !dbg !5273
  %63 = load i8, i8* %isInstance, align 1, !dbg !5274
  %tobool60 = trunc i8 %63 to i1, !dbg !5274
  %64 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5275
  %65 = load i32, i32* %i, align 4, !dbg !5276
  %idxprom61 = sext i32 %65 to i64, !dbg !5275
  %arrayidx62 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %64, i64 %idxprom61, !dbg !5275
  %type63 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx62, i32 0, i32 0, !dbg !5277
  %66 = load i32, i32* %type63, align 8, !dbg !5277
  %67 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5278
  %68 = load i32, i32* %i, align 4, !dbg !5279
  %idxprom64 = sext i32 %68 to i64, !dbg !5278
  %arrayidx65 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %67, i64 %idxprom64, !dbg !5278
  %id66 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx65, i32 0, i32 1, !dbg !5280
  %69 = load i16, i16* %id66, align 4, !dbg !5280
  %call67 = call i32 @prv_createHeader(i8* %add.ptr59, i1 zeroext %tobool60, i32 %66, i16 zeroext %69, i64 4), !dbg !5281
  store i32 %call67, i32* %headerLen, align 4, !dbg !5282
  %70 = load i32, i32* %headerLen, align 4, !dbg !5283
  %71 = load i32, i32* %index, align 4, !dbg !5284
  %add68 = add nsw i32 %71, %70, !dbg !5284
  store i32 %add68, i32* %index, align 4, !dbg !5284
  %72 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5285
  %73 = load i8*, i8** %72, align 8, !dbg !5286
  %74 = load i32, i32* %index, align 4, !dbg !5287
  %idx.ext69 = sext i32 %74 to i64, !dbg !5288
  %add.ptr70 = getelementptr inbounds i8, i8* %73, i64 %idx.ext69, !dbg !5288
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !5289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr70, i8* %arraydecay, i64 4, i32 1, i1 false), !dbg !5289
  %75 = load i32, i32* %index, align 4, !dbg !5290
  %add71 = add nsw i32 %75, 4, !dbg !5290
  store i32 %add71, i32* %index, align 4, !dbg !5290
  br label %sw.epilog, !dbg !5291

sw.bb72:                                          ; preds = %for.body, %for.body
  %76 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5292
  %77 = load i8*, i8** %76, align 8, !dbg !5293
  %78 = load i32, i32* %index, align 4, !dbg !5294
  %idx.ext73 = sext i32 %78 to i64, !dbg !5295
  %add.ptr74 = getelementptr inbounds i8, i8* %77, i64 %idx.ext73, !dbg !5295
  %79 = load i8, i8* %isInstance, align 1, !dbg !5296
  %tobool75 = trunc i8 %79 to i1, !dbg !5296
  %80 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5297
  %81 = load i32, i32* %i, align 4, !dbg !5298
  %idxprom76 = sext i32 %81 to i64, !dbg !5297
  %arrayidx77 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %80, i64 %idxprom76, !dbg !5297
  %type78 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx77, i32 0, i32 0, !dbg !5299
  %82 = load i32, i32* %type78, align 8, !dbg !5299
  %83 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5300
  %84 = load i32, i32* %i, align 4, !dbg !5301
  %idxprom79 = sext i32 %84 to i64, !dbg !5300
  %arrayidx80 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %83, i64 %idxprom79, !dbg !5300
  %id81 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx80, i32 0, i32 1, !dbg !5302
  %85 = load i16, i16* %id81, align 4, !dbg !5302
  %86 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5303
  %87 = load i32, i32* %i, align 4, !dbg !5304
  %idxprom82 = sext i32 %87 to i64, !dbg !5303
  %arrayidx83 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %86, i64 %idxprom82, !dbg !5303
  %value84 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx83, i32 0, i32 2, !dbg !5305
  %asBuffer = bitcast %union.anon.0* %value84 to %struct.anon*, !dbg !5306
  %length85 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !5307
  %88 = load i64, i64* %length85, align 8, !dbg !5307
  %call86 = call i32 @prv_createHeader(i8* %add.ptr74, i1 zeroext %tobool75, i32 %82, i16 zeroext %85, i64 %88), !dbg !5308
  store i32 %call86, i32* %headerLen, align 4, !dbg !5309
  %89 = load i32, i32* %headerLen, align 4, !dbg !5310
  %90 = load i32, i32* %index, align 4, !dbg !5311
  %add87 = add nsw i32 %90, %89, !dbg !5311
  store i32 %add87, i32* %index, align 4, !dbg !5311
  %91 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5312
  %92 = load i8*, i8** %91, align 8, !dbg !5313
  %93 = load i32, i32* %index, align 4, !dbg !5314
  %idx.ext88 = sext i32 %93 to i64, !dbg !5315
  %add.ptr89 = getelementptr inbounds i8, i8* %92, i64 %idx.ext88, !dbg !5315
  %94 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5316
  %95 = load i32, i32* %i, align 4, !dbg !5317
  %idxprom90 = sext i32 %95 to i64, !dbg !5316
  %arrayidx91 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %94, i64 %idxprom90, !dbg !5316
  %value92 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx91, i32 0, i32 2, !dbg !5318
  %asBuffer93 = bitcast %union.anon.0* %value92 to %struct.anon*, !dbg !5319
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer93, i32 0, i32 1, !dbg !5320
  %96 = load i8*, i8** %buffer, align 8, !dbg !5320
  %97 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5321
  %98 = load i32, i32* %i, align 4, !dbg !5322
  %idxprom94 = sext i32 %98 to i64, !dbg !5321
  %arrayidx95 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %97, i64 %idxprom94, !dbg !5321
  %value96 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx95, i32 0, i32 2, !dbg !5323
  %asBuffer97 = bitcast %union.anon.0* %value96 to %struct.anon*, !dbg !5324
  %length98 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer97, i32 0, i32 0, !dbg !5325
  %99 = load i64, i64* %length98, align 8, !dbg !5325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr89, i8* %96, i64 %99, i32 1, i1 false), !dbg !5326
  %100 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5327
  %101 = load i32, i32* %i, align 4, !dbg !5328
  %idxprom99 = sext i32 %101 to i64, !dbg !5327
  %arrayidx100 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %100, i64 %idxprom99, !dbg !5327
  %value101 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx100, i32 0, i32 2, !dbg !5329
  %asBuffer102 = bitcast %union.anon.0* %value101 to %struct.anon*, !dbg !5330
  %length103 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer102, i32 0, i32 0, !dbg !5331
  %102 = load i64, i64* %length103, align 8, !dbg !5331
  %103 = load i32, i32* %index, align 4, !dbg !5332
  %conv104 = sext i32 %103 to i64, !dbg !5332
  %add105 = add i64 %conv104, %102, !dbg !5332
  %conv106 = trunc i64 %add105 to i32, !dbg !5332
  store i32 %conv106, i32* %index, align 4, !dbg !5332
  br label %sw.epilog, !dbg !5333

sw.bb107:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %data_len, metadata !5334, metadata !1190), !dbg !5336
  call void @llvm.dbg.declare(metadata [8 x i8]* %data_buffer, metadata !5337, metadata !1190), !dbg !5338
  %104 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5339
  %105 = load i32, i32* %i, align 4, !dbg !5340
  %idxprom108 = sext i32 %105 to i64, !dbg !5339
  %arrayidx109 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %104, i64 %idxprom108, !dbg !5339
  %value110 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx109, i32 0, i32 2, !dbg !5341
  %asInteger = bitcast %union.anon.0* %value110 to i64*, !dbg !5342
  %106 = load i64, i64* %asInteger, align 8, !dbg !5342
  %arraydecay111 = getelementptr inbounds [8 x i8], [8 x i8]* %data_buffer, i32 0, i32 0, !dbg !5343
  %call112 = call i64 @prv_encodeInt(i64 %106, i8* %arraydecay111), !dbg !5344
  store i64 %call112, i64* %data_len, align 8, !dbg !5345
  %107 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5346
  %108 = load i8*, i8** %107, align 8, !dbg !5347
  %109 = load i32, i32* %index, align 4, !dbg !5348
  %idx.ext113 = sext i32 %109 to i64, !dbg !5349
  %add.ptr114 = getelementptr inbounds i8, i8* %108, i64 %idx.ext113, !dbg !5349
  %110 = load i8, i8* %isInstance, align 1, !dbg !5350
  %tobool115 = trunc i8 %110 to i1, !dbg !5350
  %111 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5351
  %112 = load i32, i32* %i, align 4, !dbg !5352
  %idxprom116 = sext i32 %112 to i64, !dbg !5351
  %arrayidx117 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %111, i64 %idxprom116, !dbg !5351
  %type118 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx117, i32 0, i32 0, !dbg !5353
  %113 = load i32, i32* %type118, align 8, !dbg !5353
  %114 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5354
  %115 = load i32, i32* %i, align 4, !dbg !5355
  %idxprom119 = sext i32 %115 to i64, !dbg !5354
  %arrayidx120 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %114, i64 %idxprom119, !dbg !5354
  %id121 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx120, i32 0, i32 1, !dbg !5356
  %116 = load i16, i16* %id121, align 4, !dbg !5356
  %117 = load i64, i64* %data_len, align 8, !dbg !5357
  %call122 = call i32 @prv_createHeader(i8* %add.ptr114, i1 zeroext %tobool115, i32 %113, i16 zeroext %116, i64 %117), !dbg !5358
  store i32 %call122, i32* %headerLen, align 4, !dbg !5359
  %118 = load i32, i32* %headerLen, align 4, !dbg !5360
  %119 = load i32, i32* %index, align 4, !dbg !5361
  %add123 = add nsw i32 %119, %118, !dbg !5361
  store i32 %add123, i32* %index, align 4, !dbg !5361
  %120 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5362
  %121 = load i8*, i8** %120, align 8, !dbg !5363
  %122 = load i32, i32* %index, align 4, !dbg !5364
  %idx.ext124 = sext i32 %122 to i64, !dbg !5365
  %add.ptr125 = getelementptr inbounds i8, i8* %121, i64 %idx.ext124, !dbg !5365
  %arraydecay126 = getelementptr inbounds [8 x i8], [8 x i8]* %data_buffer, i32 0, i32 0, !dbg !5366
  %123 = load i64, i64* %data_len, align 8, !dbg !5367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr125, i8* %arraydecay126, i64 %123, i32 1, i1 false), !dbg !5366
  %124 = load i64, i64* %data_len, align 8, !dbg !5368
  %125 = load i32, i32* %index, align 4, !dbg !5369
  %conv127 = sext i32 %125 to i64, !dbg !5369
  %add128 = add i64 %conv127, %124, !dbg !5369
  %conv129 = trunc i64 %add128 to i32, !dbg !5369
  store i32 %conv129, i32* %index, align 4, !dbg !5369
  br label %sw.epilog, !dbg !5370

sw.bb130:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %data_len131, metadata !5371, metadata !1190), !dbg !5373
  call void @llvm.dbg.declare(metadata [8 x i8]* %data_buffer132, metadata !5374, metadata !1190), !dbg !5375
  %126 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5376
  %127 = load i32, i32* %i, align 4, !dbg !5377
  %idxprom133 = sext i32 %127 to i64, !dbg !5376
  %arrayidx134 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %126, i64 %idxprom133, !dbg !5376
  %value135 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx134, i32 0, i32 2, !dbg !5378
  %asFloat = bitcast %union.anon.0* %value135 to double*, !dbg !5379
  %128 = load double, double* %asFloat, align 8, !dbg !5379
  %arraydecay136 = getelementptr inbounds [8 x i8], [8 x i8]* %data_buffer132, i32 0, i32 0, !dbg !5380
  %call137 = call i64 @prv_encodeFloat(double %128, i8* %arraydecay136), !dbg !5381
  store i64 %call137, i64* %data_len131, align 8, !dbg !5382
  %129 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5383
  %130 = load i8*, i8** %129, align 8, !dbg !5384
  %131 = load i32, i32* %index, align 4, !dbg !5385
  %idx.ext138 = sext i32 %131 to i64, !dbg !5386
  %add.ptr139 = getelementptr inbounds i8, i8* %130, i64 %idx.ext138, !dbg !5386
  %132 = load i8, i8* %isInstance, align 1, !dbg !5387
  %tobool140 = trunc i8 %132 to i1, !dbg !5387
  %133 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5388
  %134 = load i32, i32* %i, align 4, !dbg !5389
  %idxprom141 = sext i32 %134 to i64, !dbg !5388
  %arrayidx142 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %133, i64 %idxprom141, !dbg !5388
  %type143 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx142, i32 0, i32 0, !dbg !5390
  %135 = load i32, i32* %type143, align 8, !dbg !5390
  %136 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5391
  %137 = load i32, i32* %i, align 4, !dbg !5392
  %idxprom144 = sext i32 %137 to i64, !dbg !5391
  %arrayidx145 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %136, i64 %idxprom144, !dbg !5391
  %id146 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx145, i32 0, i32 1, !dbg !5393
  %138 = load i16, i16* %id146, align 4, !dbg !5393
  %139 = load i64, i64* %data_len131, align 8, !dbg !5394
  %call147 = call i32 @prv_createHeader(i8* %add.ptr139, i1 zeroext %tobool140, i32 %135, i16 zeroext %138, i64 %139), !dbg !5395
  store i32 %call147, i32* %headerLen, align 4, !dbg !5396
  %140 = load i32, i32* %headerLen, align 4, !dbg !5397
  %141 = load i32, i32* %index, align 4, !dbg !5398
  %add148 = add nsw i32 %141, %140, !dbg !5398
  store i32 %add148, i32* %index, align 4, !dbg !5398
  %142 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5399
  %143 = load i8*, i8** %142, align 8, !dbg !5400
  %144 = load i32, i32* %index, align 4, !dbg !5401
  %idx.ext149 = sext i32 %144 to i64, !dbg !5402
  %add.ptr150 = getelementptr inbounds i8, i8* %143, i64 %idx.ext149, !dbg !5402
  %arraydecay151 = getelementptr inbounds [8 x i8], [8 x i8]* %data_buffer132, i32 0, i32 0, !dbg !5403
  %145 = load i64, i64* %data_len131, align 8, !dbg !5404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr150, i8* %arraydecay151, i64 %145, i32 1, i1 false), !dbg !5403
  %146 = load i64, i64* %data_len131, align 8, !dbg !5405
  %147 = load i32, i32* %index, align 4, !dbg !5406
  %conv152 = sext i32 %147 to i64, !dbg !5406
  %add153 = add i64 %conv152, %146, !dbg !5406
  %conv154 = trunc i64 %add153 to i32, !dbg !5406
  store i32 %conv154, i32* %index, align 4, !dbg !5406
  br label %sw.epilog, !dbg !5407

sw.bb155:                                         ; preds = %for.body
  %148 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5408
  %149 = load i8*, i8** %148, align 8, !dbg !5409
  %150 = load i32, i32* %index, align 4, !dbg !5410
  %idx.ext156 = sext i32 %150 to i64, !dbg !5411
  %add.ptr157 = getelementptr inbounds i8, i8* %149, i64 %idx.ext156, !dbg !5411
  %151 = load i8, i8* %isInstance, align 1, !dbg !5412
  %tobool158 = trunc i8 %151 to i1, !dbg !5412
  %152 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5413
  %153 = load i32, i32* %i, align 4, !dbg !5414
  %idxprom159 = sext i32 %153 to i64, !dbg !5413
  %arrayidx160 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %152, i64 %idxprom159, !dbg !5413
  %type161 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx160, i32 0, i32 0, !dbg !5415
  %154 = load i32, i32* %type161, align 8, !dbg !5415
  %155 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5416
  %156 = load i32, i32* %i, align 4, !dbg !5417
  %idxprom162 = sext i32 %156 to i64, !dbg !5416
  %arrayidx163 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %155, i64 %idxprom162, !dbg !5416
  %id164 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx163, i32 0, i32 1, !dbg !5418
  %157 = load i16, i16* %id164, align 4, !dbg !5418
  %call165 = call i32 @prv_createHeader(i8* %add.ptr157, i1 zeroext %tobool158, i32 %154, i16 zeroext %157, i64 1), !dbg !5419
  store i32 %call165, i32* %headerLen, align 4, !dbg !5420
  %158 = load i32, i32* %headerLen, align 4, !dbg !5421
  %159 = load i32, i32* %index, align 4, !dbg !5422
  %add166 = add nsw i32 %159, %158, !dbg !5422
  store i32 %add166, i32* %index, align 4, !dbg !5422
  %160 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5423
  %161 = load i32, i32* %i, align 4, !dbg !5424
  %idxprom167 = sext i32 %161 to i64, !dbg !5423
  %arrayidx168 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %160, i64 %idxprom167, !dbg !5423
  %value169 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx168, i32 0, i32 2, !dbg !5425
  %asBoolean = bitcast %union.anon.0* %value169 to i8*, !dbg !5426
  %162 = load i8, i8* %asBoolean, align 8, !dbg !5426
  %tobool170 = trunc i8 %162 to i1, !dbg !5426
  %163 = zext i1 %tobool170 to i64, !dbg !5423
  %cond = select i1 %tobool170, i32 1, i32 0, !dbg !5423
  %conv172 = trunc i32 %cond to i8, !dbg !5423
  %164 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5427
  %165 = load i8*, i8** %164, align 8, !dbg !5428
  %166 = load i32, i32* %index, align 4, !dbg !5429
  %idxprom173 = sext i32 %166 to i64, !dbg !5430
  %arrayidx174 = getelementptr inbounds i8, i8* %165, i64 %idxprom173, !dbg !5430
  store i8 %conv172, i8* %arrayidx174, align 1, !dbg !5431
  %167 = load i32, i32* %index, align 4, !dbg !5432
  %add175 = add nsw i32 %167, 1, !dbg !5432
  store i32 %add175, i32* %index, align 4, !dbg !5432
  br label %sw.epilog, !dbg !5433

sw.default:                                       ; preds = %for.body
  store i32 -1, i32* %length, align 4, !dbg !5434
  br label %sw.epilog, !dbg !5435

sw.epilog:                                        ; preds = %sw.default, %sw.bb155, %sw.bb130, %sw.bb107, %sw.bb72, %for.end, %if.end40
  br label %for.inc176, !dbg !5436

for.inc176:                                       ; preds = %sw.epilog
  %168 = load i32, i32* %i, align 4, !dbg !5437
  %inc = add nsw i32 %168, 1, !dbg !5437
  store i32 %inc, i32* %i, align 4, !dbg !5437
  br label %for.cond, !dbg !5438, !llvm.loop !5439

for.end177:                                       ; preds = %land.end
  %169 = load i32, i32* %length, align 4, !dbg !5441
  %cmp178 = icmp slt i32 %169, 0, !dbg !5443
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !5444

if.then180:                                       ; preds = %for.end177
  %170 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5445
  %171 = load i8*, i8** %170, align 8, !dbg !5447
  call void @lwm2m_free(i8* %171), !dbg !5448
  %172 = load i8**, i8*** %bufferP.addr, align 8, !dbg !5449
  store i8* null, i8** %172, align 8, !dbg !5450
  br label %if.end181, !dbg !5451

if.end181:                                        ; preds = %if.then180, %for.end177
  %173 = load i32, i32* %length, align 4, !dbg !5452
  store i32 %173, i32* %retval, align 4, !dbg !5453
  br label %return, !dbg !5453

return:                                           ; preds = %if.end181, %if.then4, %if.then
  %174 = load i32, i32* %retval, align 4, !dbg !5454
  ret i32 %174, !dbg !5454
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_getLength(i32 %size, %struct._lwm2m_data_t* %dataP) #0 !dbg !5455 {
entry:
  %size.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  %subLength = alloca i32, align 4
  %data_len = alloca i64, align 8
  %unused_buffer = alloca [8 x i8], align 1
  %data_len49 = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5458, metadata !1190), !dbg !5459
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !5460, metadata !1190), !dbg !5461
  call void @llvm.dbg.declare(metadata i32* %length, metadata !5462, metadata !1190), !dbg !5463
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5464, metadata !1190), !dbg !5465
  store i32 0, i32* %length, align 4, !dbg !5466
  store i32 0, i32* %i, align 4, !dbg !5467
  br label %for.cond, !dbg !5469

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5470
  %1 = load i32, i32* %size.addr, align 4, !dbg !5472
  %cmp = icmp slt i32 %0, %1, !dbg !5473
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5474

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %length, align 4, !dbg !5475
  %cmp1 = icmp ne i32 %2, -1, !dbg !5476
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %for.body, label %for.end, !dbg !5477

for.body:                                         ; preds = %land.end
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5478
  %5 = load i32, i32* %i, align 4, !dbg !5480
  %idxprom = sext i32 %5 to i64, !dbg !5478
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %4, i64 %idxprom, !dbg !5478
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !5481
  %6 = load i32, i32* %type, align 8, !dbg !5481
  switch i32 %6, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb15
    i32 5, label %sw.bb15
    i32 6, label %sw.bb34
    i32 7, label %sw.bb48
    i32 8, label %sw.bb73
    i32 9, label %sw.bb80
  ], !dbg !5482

sw.bb:                                            ; preds = %for.body, %for.body
  call void @llvm.dbg.declare(metadata i32* %subLength, metadata !5483, metadata !1190), !dbg !5486
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5487
  %8 = load i32, i32* %i, align 4, !dbg !5488
  %idxprom2 = sext i32 %8 to i64, !dbg !5487
  %arrayidx3 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i64 %idxprom2, !dbg !5487
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx3, i32 0, i32 2, !dbg !5489
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !5490
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !5491
  %9 = load i64, i64* %count, align 8, !dbg !5491
  %conv = trunc i64 %9 to i32, !dbg !5487
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5492
  %11 = load i32, i32* %i, align 4, !dbg !5493
  %idxprom4 = sext i32 %11 to i64, !dbg !5492
  %arrayidx5 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i64 %idxprom4, !dbg !5492
  %value6 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx5, i32 0, i32 2, !dbg !5494
  %asChildren7 = bitcast %union.anon.0* %value6 to %struct.anon.0*, !dbg !5495
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren7, i32 0, i32 1, !dbg !5496
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !5496
  %call = call i32 @prv_getLength(i32 %conv, %struct._lwm2m_data_t* %12), !dbg !5497
  store i32 %call, i32* %subLength, align 4, !dbg !5498
  %13 = load i32, i32* %subLength, align 4, !dbg !5499
  %cmp8 = icmp eq i32 %13, -1, !dbg !5501
  br i1 %cmp8, label %if.then, label %if.else, !dbg !5502

if.then:                                          ; preds = %sw.bb
  store i32 -1, i32* %length, align 4, !dbg !5503
  br label %if.end, !dbg !5505

if.else:                                          ; preds = %sw.bb
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5506
  %15 = load i32, i32* %i, align 4, !dbg !5508
  %idxprom10 = sext i32 %15 to i64, !dbg !5506
  %arrayidx11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %14, i64 %idxprom10, !dbg !5506
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx11, i32 0, i32 1, !dbg !5509
  %16 = load i16, i16* %id, align 4, !dbg !5509
  %17 = load i32, i32* %subLength, align 4, !dbg !5510
  %conv12 = sext i32 %17 to i64, !dbg !5510
  %call13 = call i32 @prv_getHeaderLength(i16 zeroext %16, i64 %conv12), !dbg !5511
  %18 = load i32, i32* %subLength, align 4, !dbg !5512
  %add = add nsw i32 %call13, %18, !dbg !5513
  %19 = load i32, i32* %length, align 4, !dbg !5514
  %add14 = add nsw i32 %19, %add, !dbg !5514
  store i32 %add14, i32* %length, align 4, !dbg !5514
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !5515

sw.bb15:                                          ; preds = %for.body, %for.body
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5516
  %21 = load i32, i32* %i, align 4, !dbg !5517
  %idxprom16 = sext i32 %21 to i64, !dbg !5516
  %arrayidx17 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %20, i64 %idxprom16, !dbg !5516
  %id18 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx17, i32 0, i32 1, !dbg !5518
  %22 = load i16, i16* %id18, align 4, !dbg !5518
  %23 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5519
  %24 = load i32, i32* %i, align 4, !dbg !5520
  %idxprom19 = sext i32 %24 to i64, !dbg !5519
  %arrayidx20 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %23, i64 %idxprom19, !dbg !5519
  %value21 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx20, i32 0, i32 2, !dbg !5521
  %asBuffer = bitcast %union.anon.0* %value21 to %struct.anon*, !dbg !5522
  %length22 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !5523
  %25 = load i64, i64* %length22, align 8, !dbg !5523
  %call23 = call i32 @prv_getHeaderLength(i16 zeroext %22, i64 %25), !dbg !5524
  %conv24 = sext i32 %call23 to i64, !dbg !5524
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5525
  %27 = load i32, i32* %i, align 4, !dbg !5526
  %idxprom25 = sext i32 %27 to i64, !dbg !5525
  %arrayidx26 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %26, i64 %idxprom25, !dbg !5525
  %value27 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx26, i32 0, i32 2, !dbg !5527
  %asBuffer28 = bitcast %union.anon.0* %value27 to %struct.anon*, !dbg !5528
  %length29 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer28, i32 0, i32 0, !dbg !5529
  %28 = load i64, i64* %length29, align 8, !dbg !5529
  %add30 = add i64 %conv24, %28, !dbg !5530
  %29 = load i32, i32* %length, align 4, !dbg !5531
  %conv31 = sext i32 %29 to i64, !dbg !5531
  %add32 = add i64 %conv31, %add30, !dbg !5531
  %conv33 = trunc i64 %add32 to i32, !dbg !5531
  store i32 %conv33, i32* %length, align 4, !dbg !5531
  br label %sw.epilog, !dbg !5532

sw.bb34:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %data_len, metadata !5533, metadata !1190), !dbg !5535
  call void @llvm.dbg.declare(metadata [8 x i8]* %unused_buffer, metadata !5536, metadata !1190), !dbg !5537
  %30 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5538
  %31 = load i32, i32* %i, align 4, !dbg !5539
  %idxprom35 = sext i32 %31 to i64, !dbg !5538
  %arrayidx36 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %30, i64 %idxprom35, !dbg !5538
  %value37 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx36, i32 0, i32 2, !dbg !5540
  %asInteger = bitcast %union.anon.0* %value37 to i64*, !dbg !5541
  %32 = load i64, i64* %asInteger, align 8, !dbg !5541
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %unused_buffer, i32 0, i32 0, !dbg !5542
  %call38 = call i64 @prv_encodeInt(i64 %32, i8* %arraydecay), !dbg !5543
  store i64 %call38, i64* %data_len, align 8, !dbg !5544
  %33 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5545
  %34 = load i32, i32* %i, align 4, !dbg !5546
  %idxprom39 = sext i32 %34 to i64, !dbg !5545
  %arrayidx40 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %33, i64 %idxprom39, !dbg !5545
  %id41 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx40, i32 0, i32 1, !dbg !5547
  %35 = load i16, i16* %id41, align 4, !dbg !5547
  %36 = load i64, i64* %data_len, align 8, !dbg !5548
  %call42 = call i32 @prv_getHeaderLength(i16 zeroext %35, i64 %36), !dbg !5549
  %conv43 = sext i32 %call42 to i64, !dbg !5549
  %37 = load i64, i64* %data_len, align 8, !dbg !5550
  %add44 = add i64 %conv43, %37, !dbg !5551
  %38 = load i32, i32* %length, align 4, !dbg !5552
  %conv45 = sext i32 %38 to i64, !dbg !5552
  %add46 = add i64 %conv45, %add44, !dbg !5552
  %conv47 = trunc i64 %add46 to i32, !dbg !5552
  store i32 %conv47, i32* %length, align 4, !dbg !5552
  br label %sw.epilog, !dbg !5553

sw.bb48:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %data_len49, metadata !5554, metadata !1190), !dbg !5556
  %39 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5557
  %40 = load i32, i32* %i, align 4, !dbg !5559
  %idxprom50 = sext i32 %40 to i64, !dbg !5557
  %arrayidx51 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %39, i64 %idxprom50, !dbg !5557
  %value52 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx51, i32 0, i32 2, !dbg !5560
  %asFloat = bitcast %union.anon.0* %value52 to double*, !dbg !5561
  %41 = load double, double* %asFloat, align 8, !dbg !5561
  %cmp53 = fcmp olt double %41, 0xC7EFFFFFE0000000, !dbg !5562
  br i1 %cmp53, label %if.then61, label %lor.lhs.false, !dbg !5563

lor.lhs.false:                                    ; preds = %sw.bb48
  %42 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5564
  %43 = load i32, i32* %i, align 4, !dbg !5565
  %idxprom55 = sext i32 %43 to i64, !dbg !5564
  %arrayidx56 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %42, i64 %idxprom55, !dbg !5564
  %value57 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx56, i32 0, i32 2, !dbg !5566
  %asFloat58 = bitcast %union.anon.0* %value57 to double*, !dbg !5567
  %44 = load double, double* %asFloat58, align 8, !dbg !5567
  %cmp59 = fcmp ogt double %44, 0x47EFFFFFE0000000, !dbg !5568
  br i1 %cmp59, label %if.then61, label %if.else62, !dbg !5569

if.then61:                                        ; preds = %lor.lhs.false, %sw.bb48
  store i64 8, i64* %data_len49, align 8, !dbg !5570
  br label %if.end63, !dbg !5572

if.else62:                                        ; preds = %lor.lhs.false
  store i64 4, i64* %data_len49, align 8, !dbg !5573
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then61
  %45 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5575
  %46 = load i32, i32* %i, align 4, !dbg !5576
  %idxprom64 = sext i32 %46 to i64, !dbg !5575
  %arrayidx65 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %45, i64 %idxprom64, !dbg !5575
  %id66 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx65, i32 0, i32 1, !dbg !5577
  %47 = load i16, i16* %id66, align 4, !dbg !5577
  %48 = load i64, i64* %data_len49, align 8, !dbg !5578
  %call67 = call i32 @prv_getHeaderLength(i16 zeroext %47, i64 %48), !dbg !5579
  %conv68 = sext i32 %call67 to i64, !dbg !5579
  %49 = load i64, i64* %data_len49, align 8, !dbg !5580
  %add69 = add i64 %conv68, %49, !dbg !5581
  %50 = load i32, i32* %length, align 4, !dbg !5582
  %conv70 = sext i32 %50 to i64, !dbg !5582
  %add71 = add i64 %conv70, %add69, !dbg !5582
  %conv72 = trunc i64 %add71 to i32, !dbg !5582
  store i32 %conv72, i32* %length, align 4, !dbg !5582
  br label %sw.epilog, !dbg !5583

sw.bb73:                                          ; preds = %for.body
  %51 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5584
  %52 = load i32, i32* %i, align 4, !dbg !5585
  %idxprom74 = sext i32 %52 to i64, !dbg !5584
  %arrayidx75 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %51, i64 %idxprom74, !dbg !5584
  %id76 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx75, i32 0, i32 1, !dbg !5586
  %53 = load i16, i16* %id76, align 4, !dbg !5586
  %call77 = call i32 @prv_getHeaderLength(i16 zeroext %53, i64 1), !dbg !5587
  %add78 = add nsw i32 %call77, 1, !dbg !5588
  %54 = load i32, i32* %length, align 4, !dbg !5589
  %add79 = add nsw i32 %54, %add78, !dbg !5589
  store i32 %add79, i32* %length, align 4, !dbg !5589
  br label %sw.epilog, !dbg !5590

sw.bb80:                                          ; preds = %for.body
  %55 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5591
  %56 = load i32, i32* %i, align 4, !dbg !5592
  %idxprom81 = sext i32 %56 to i64, !dbg !5591
  %arrayidx82 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %55, i64 %idxprom81, !dbg !5591
  %id83 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx82, i32 0, i32 1, !dbg !5593
  %57 = load i16, i16* %id83, align 4, !dbg !5593
  %call84 = call i32 @prv_getHeaderLength(i16 zeroext %57, i64 4), !dbg !5594
  %add85 = add nsw i32 %call84, 4, !dbg !5595
  %58 = load i32, i32* %length, align 4, !dbg !5596
  %add86 = add nsw i32 %58, %add85, !dbg !5596
  store i32 %add86, i32* %length, align 4, !dbg !5596
  br label %sw.epilog, !dbg !5597

sw.default:                                       ; preds = %for.body
  store i32 -1, i32* %length, align 4, !dbg !5598
  br label %sw.epilog, !dbg !5599

sw.epilog:                                        ; preds = %sw.default, %sw.bb80, %sw.bb73, %if.end63, %sw.bb34, %sw.bb15, %if.end
  br label %for.inc, !dbg !5600

for.inc:                                          ; preds = %sw.epilog
  %59 = load i32, i32* %i, align 4, !dbg !5601
  %inc = add nsw i32 %59, 1, !dbg !5601
  store i32 %inc, i32* %i, align 4, !dbg !5601
  br label %for.cond, !dbg !5602, !llvm.loop !5603

for.end:                                          ; preds = %land.end
  %60 = load i32, i32* %length, align 4, !dbg !5605
  ret i32 %60, !dbg !5606
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_createHeader(i8* %header, i1 zeroext %isInstance, i32 %type, i16 zeroext %id, i64 %data_len) #0 !dbg !5607 {
entry:
  %header.addr = alloca i8*, align 8
  %isInstance.addr = alloca i8, align 1
  %type.addr = alloca i32, align 4
  %id.addr = alloca i16, align 2
  %data_len.addr = alloca i64, align 8
  %header_len = alloca i32, align 4
  %offset = alloca i32, align 4
  %hdrType = alloca i8, align 1
  store i8* %header, i8** %header.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %header.addr, metadata !5610, metadata !1190), !dbg !5611
  %frombool = zext i1 %isInstance to i8
  store i8 %frombool, i8* %isInstance.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isInstance.addr, metadata !5612, metadata !1190), !dbg !5613
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5614, metadata !1190), !dbg !5615
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !5616, metadata !1190), !dbg !5617
  store i64 %data_len, i64* %data_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data_len.addr, metadata !5618, metadata !1190), !dbg !5619
  call void @llvm.dbg.declare(metadata i32* %header_len, metadata !5620, metadata !1190), !dbg !5621
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5622, metadata !1190), !dbg !5623
  call void @llvm.dbg.declare(metadata i8* %hdrType, metadata !5624, metadata !1190), !dbg !5625
  %0 = load i16, i16* %id.addr, align 2, !dbg !5626
  %1 = load i64, i64* %data_len.addr, align 8, !dbg !5627
  %call = call i32 @prv_getHeaderLength(i16 zeroext %0, i64 %1), !dbg !5628
  store i32 %call, i32* %header_len, align 4, !dbg !5629
  %2 = load i8, i8* %isInstance.addr, align 1, !dbg !5630
  %tobool = trunc i8 %2 to i1, !dbg !5630
  %conv = zext i1 %tobool to i32, !dbg !5630
  %cmp = icmp eq i32 %conv, 1, !dbg !5632
  br i1 %cmp, label %if.then, label %if.else, !dbg !5633

if.then:                                          ; preds = %entry
  store i8 64, i8* %hdrType, align 1, !dbg !5634
  br label %if.end, !dbg !5636

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %type.addr, align 4, !dbg !5637
  %call2 = call zeroext i8 @prv_getHeaderType(i32 %3), !dbg !5639
  store i8 %call2, i8* %hdrType, align 1, !dbg !5640
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i8*, i8** %header.addr, align 8, !dbg !5641
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !5641
  store i8 0, i8* %arrayidx, align 1, !dbg !5642
  %5 = load i8, i8* %hdrType, align 1, !dbg !5643
  %conv3 = zext i8 %5 to i32, !dbg !5643
  %and = and i32 %conv3, 192, !dbg !5644
  %6 = load i8*, i8** %header.addr, align 8, !dbg !5645
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !5645
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !5646
  %conv5 = zext i8 %7 to i32, !dbg !5646
  %or = or i32 %conv5, %and, !dbg !5646
  %conv6 = trunc i32 %or to i8, !dbg !5646
  store i8 %conv6, i8* %arrayidx4, align 1, !dbg !5646
  %8 = load i16, i16* %id.addr, align 2, !dbg !5647
  %conv7 = zext i16 %8 to i32, !dbg !5647
  %cmp8 = icmp sgt i32 %conv7, 255, !dbg !5649
  br i1 %cmp8, label %if.then10, label %if.else23, !dbg !5650

if.then10:                                        ; preds = %if.end
  %9 = load i8*, i8** %header.addr, align 8, !dbg !5651
  %arrayidx11 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !5651
  %10 = load i8, i8* %arrayidx11, align 1, !dbg !5653
  %conv12 = zext i8 %10 to i32, !dbg !5653
  %or13 = or i32 %conv12, 32, !dbg !5653
  %conv14 = trunc i32 %or13 to i8, !dbg !5653
  store i8 %conv14, i8* %arrayidx11, align 1, !dbg !5653
  %11 = load i16, i16* %id.addr, align 2, !dbg !5654
  %conv15 = zext i16 %11 to i32, !dbg !5654
  %shr = ashr i32 %conv15, 8, !dbg !5655
  %and16 = and i32 %shr, 255, !dbg !5656
  %conv17 = trunc i32 %and16 to i8, !dbg !5657
  %12 = load i8*, i8** %header.addr, align 8, !dbg !5658
  %arrayidx18 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !5658
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !5659
  %13 = load i16, i16* %id.addr, align 2, !dbg !5660
  %conv19 = zext i16 %13 to i32, !dbg !5660
  %and20 = and i32 %conv19, 255, !dbg !5661
  %conv21 = trunc i32 %and20 to i8, !dbg !5660
  %14 = load i8*, i8** %header.addr, align 8, !dbg !5662
  %arrayidx22 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !5662
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !5663
  store i32 3, i32* %offset, align 4, !dbg !5664
  br label %if.end26, !dbg !5665

if.else23:                                        ; preds = %if.end
  %15 = load i16, i16* %id.addr, align 2, !dbg !5666
  %conv24 = trunc i16 %15 to i8, !dbg !5666
  %16 = load i8*, i8** %header.addr, align 8, !dbg !5668
  %arrayidx25 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !5668
  store i8 %conv24, i8* %arrayidx25, align 1, !dbg !5669
  store i32 2, i32* %offset, align 4, !dbg !5670
  br label %if.end26

if.end26:                                         ; preds = %if.else23, %if.then10
  %17 = load i64, i64* %data_len.addr, align 8, !dbg !5671
  %cmp27 = icmp ule i64 %17, 7, !dbg !5673
  br i1 %cmp27, label %if.then29, label %if.else33, !dbg !5674

if.then29:                                        ; preds = %if.end26
  %18 = load i64, i64* %data_len.addr, align 8, !dbg !5675
  %19 = load i8*, i8** %header.addr, align 8, !dbg !5677
  %arrayidx30 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !5677
  %20 = load i8, i8* %arrayidx30, align 1, !dbg !5678
  %conv31 = zext i8 %20 to i64, !dbg !5678
  %add = add i64 %conv31, %18, !dbg !5678
  %conv32 = trunc i64 %add to i8, !dbg !5678
  store i8 %conv32, i8* %arrayidx30, align 1, !dbg !5678
  br label %if.end88, !dbg !5679

if.else33:                                        ; preds = %if.end26
  %21 = load i64, i64* %data_len.addr, align 8, !dbg !5680
  %cmp34 = icmp ule i64 %21, 255, !dbg !5682
  br i1 %cmp34, label %if.then36, label %if.else43, !dbg !5683

if.then36:                                        ; preds = %if.else33
  %22 = load i8*, i8** %header.addr, align 8, !dbg !5684
  %arrayidx37 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !5684
  %23 = load i8, i8* %arrayidx37, align 1, !dbg !5686
  %conv38 = zext i8 %23 to i32, !dbg !5686
  %or39 = or i32 %conv38, 8, !dbg !5686
  %conv40 = trunc i32 %or39 to i8, !dbg !5686
  store i8 %conv40, i8* %arrayidx37, align 1, !dbg !5686
  %24 = load i64, i64* %data_len.addr, align 8, !dbg !5687
  %conv41 = trunc i64 %24 to i8, !dbg !5687
  %25 = load i8*, i8** %header.addr, align 8, !dbg !5688
  %26 = load i32, i32* %offset, align 4, !dbg !5689
  %idxprom = sext i32 %26 to i64, !dbg !5688
  %arrayidx42 = getelementptr inbounds i8, i8* %25, i64 %idxprom, !dbg !5688
  store i8 %conv41, i8* %arrayidx42, align 1, !dbg !5690
  br label %if.end87, !dbg !5691

if.else43:                                        ; preds = %if.else33
  %27 = load i64, i64* %data_len.addr, align 8, !dbg !5692
  %cmp44 = icmp ule i64 %27, 65535, !dbg !5694
  br i1 %cmp44, label %if.then46, label %if.else61, !dbg !5695

if.then46:                                        ; preds = %if.else43
  %28 = load i8*, i8** %header.addr, align 8, !dbg !5696
  %arrayidx47 = getelementptr inbounds i8, i8* %28, i64 0, !dbg !5696
  %29 = load i8, i8* %arrayidx47, align 1, !dbg !5698
  %conv48 = zext i8 %29 to i32, !dbg !5698
  %or49 = or i32 %conv48, 16, !dbg !5698
  %conv50 = trunc i32 %or49 to i8, !dbg !5698
  store i8 %conv50, i8* %arrayidx47, align 1, !dbg !5698
  %30 = load i64, i64* %data_len.addr, align 8, !dbg !5699
  %shr51 = lshr i64 %30, 8, !dbg !5700
  %and52 = and i64 %shr51, 255, !dbg !5701
  %conv53 = trunc i64 %and52 to i8, !dbg !5702
  %31 = load i8*, i8** %header.addr, align 8, !dbg !5703
  %32 = load i32, i32* %offset, align 4, !dbg !5704
  %idxprom54 = sext i32 %32 to i64, !dbg !5703
  %arrayidx55 = getelementptr inbounds i8, i8* %31, i64 %idxprom54, !dbg !5703
  store i8 %conv53, i8* %arrayidx55, align 1, !dbg !5705
  %33 = load i64, i64* %data_len.addr, align 8, !dbg !5706
  %and56 = and i64 %33, 255, !dbg !5707
  %conv57 = trunc i64 %and56 to i8, !dbg !5706
  %34 = load i8*, i8** %header.addr, align 8, !dbg !5708
  %35 = load i32, i32* %offset, align 4, !dbg !5709
  %add58 = add nsw i32 %35, 1, !dbg !5710
  %idxprom59 = sext i32 %add58 to i64, !dbg !5708
  %arrayidx60 = getelementptr inbounds i8, i8* %34, i64 %idxprom59, !dbg !5708
  store i8 %conv57, i8* %arrayidx60, align 1, !dbg !5711
  br label %if.end86, !dbg !5712

if.else61:                                        ; preds = %if.else43
  %36 = load i64, i64* %data_len.addr, align 8, !dbg !5713
  %cmp62 = icmp ule i64 %36, 16777215, !dbg !5715
  br i1 %cmp62, label %if.then64, label %if.end85, !dbg !5716

if.then64:                                        ; preds = %if.else61
  %37 = load i8*, i8** %header.addr, align 8, !dbg !5717
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 0, !dbg !5717
  %38 = load i8, i8* %arrayidx65, align 1, !dbg !5719
  %conv66 = zext i8 %38 to i32, !dbg !5719
  %or67 = or i32 %conv66, 24, !dbg !5719
  %conv68 = trunc i32 %or67 to i8, !dbg !5719
  store i8 %conv68, i8* %arrayidx65, align 1, !dbg !5719
  %39 = load i64, i64* %data_len.addr, align 8, !dbg !5720
  %shr69 = lshr i64 %39, 16, !dbg !5721
  %and70 = and i64 %shr69, 255, !dbg !5722
  %conv71 = trunc i64 %and70 to i8, !dbg !5723
  %40 = load i8*, i8** %header.addr, align 8, !dbg !5724
  %41 = load i32, i32* %offset, align 4, !dbg !5725
  %idxprom72 = sext i32 %41 to i64, !dbg !5724
  %arrayidx73 = getelementptr inbounds i8, i8* %40, i64 %idxprom72, !dbg !5724
  store i8 %conv71, i8* %arrayidx73, align 1, !dbg !5726
  %42 = load i64, i64* %data_len.addr, align 8, !dbg !5727
  %shr74 = lshr i64 %42, 8, !dbg !5728
  %and75 = and i64 %shr74, 255, !dbg !5729
  %conv76 = trunc i64 %and75 to i8, !dbg !5730
  %43 = load i8*, i8** %header.addr, align 8, !dbg !5731
  %44 = load i32, i32* %offset, align 4, !dbg !5732
  %add77 = add nsw i32 %44, 1, !dbg !5733
  %idxprom78 = sext i32 %add77 to i64, !dbg !5731
  %arrayidx79 = getelementptr inbounds i8, i8* %43, i64 %idxprom78, !dbg !5731
  store i8 %conv76, i8* %arrayidx79, align 1, !dbg !5734
  %45 = load i64, i64* %data_len.addr, align 8, !dbg !5735
  %and80 = and i64 %45, 255, !dbg !5736
  %conv81 = trunc i64 %and80 to i8, !dbg !5735
  %46 = load i8*, i8** %header.addr, align 8, !dbg !5737
  %47 = load i32, i32* %offset, align 4, !dbg !5738
  %add82 = add nsw i32 %47, 2, !dbg !5739
  %idxprom83 = sext i32 %add82 to i64, !dbg !5737
  %arrayidx84 = getelementptr inbounds i8, i8* %46, i64 %idxprom83, !dbg !5737
  store i8 %conv81, i8* %arrayidx84, align 1, !dbg !5740
  br label %if.end85, !dbg !5741

if.end85:                                         ; preds = %if.then64, %if.else61
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then46
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then36
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then29
  %48 = load i32, i32* %header_len, align 4, !dbg !5742
  ret i32 %48, !dbg !5743
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @prv_encodeInt(i64 %data, i8* %data_buffer) #0 !dbg !5744 {
entry:
  %data.addr = alloca i64, align 8
  %data_buffer.addr = alloca i8*, align 8
  %length = alloca i64, align 8
  %value = alloca i16, align 2
  %value23 = alloca i32, align 4
  store i64 %data, i64* %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data.addr, metadata !5747, metadata !1190), !dbg !5748
  store i8* %data_buffer, i8** %data_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_buffer.addr, metadata !5749, metadata !1190), !dbg !5750
  call void @llvm.dbg.declare(metadata i64* %length, metadata !5751, metadata !1190), !dbg !5752
  store i64 0, i64* %length, align 8, !dbg !5752
  %0 = load i64, i64* %data.addr, align 8, !dbg !5753
  %cmp = icmp sge i64 %0, -128, !dbg !5755
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5756

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, i64* %data.addr, align 8, !dbg !5757
  %cmp1 = icmp sle i64 %1, 127, !dbg !5758
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5759

if.then:                                          ; preds = %land.lhs.true
  store i64 1, i64* %length, align 8, !dbg !5760
  %2 = load i64, i64* %data.addr, align 8, !dbg !5762
  %conv = trunc i64 %2 to i8, !dbg !5762
  %3 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5763
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5763
  store i8 %conv, i8* %arrayidx, align 1, !dbg !5764
  br label %if.end34, !dbg !5765

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = load i64, i64* %data.addr, align 8, !dbg !5766
  %cmp2 = icmp sge i64 %4, -32768, !dbg !5768
  br i1 %cmp2, label %land.lhs.true4, label %if.else16, !dbg !5769

land.lhs.true4:                                   ; preds = %if.else
  %5 = load i64, i64* %data.addr, align 8, !dbg !5770
  %cmp5 = icmp sle i64 %5, 32767, !dbg !5771
  br i1 %cmp5, label %if.then7, label %if.else16, !dbg !5772

if.then7:                                         ; preds = %land.lhs.true4
  call void @llvm.dbg.declare(metadata i16* %value, metadata !5773, metadata !1190), !dbg !5777
  %6 = load i64, i64* %data.addr, align 8, !dbg !5778
  %conv8 = trunc i64 %6 to i16, !dbg !5778
  store i16 %conv8, i16* %value, align 2, !dbg !5779
  store i64 2, i64* %length, align 8, !dbg !5780
  %7 = load i16, i16* %value, align 2, !dbg !5781
  %conv9 = sext i16 %7 to i32, !dbg !5781
  %shr = ashr i32 %conv9, 8, !dbg !5782
  %and = and i32 %shr, 255, !dbg !5783
  %conv10 = trunc i32 %and to i8, !dbg !5784
  %8 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5785
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !5785
  store i8 %conv10, i8* %arrayidx11, align 1, !dbg !5786
  %9 = load i16, i16* %value, align 2, !dbg !5787
  %conv12 = sext i16 %9 to i32, !dbg !5787
  %and13 = and i32 %conv12, 255, !dbg !5788
  %conv14 = trunc i32 %and13 to i8, !dbg !5787
  %10 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5789
  %arrayidx15 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5789
  store i8 %conv14, i8* %arrayidx15, align 1, !dbg !5790
  br label %if.end33, !dbg !5791

if.else16:                                        ; preds = %land.lhs.true4, %if.else
  %11 = load i64, i64* %data.addr, align 8, !dbg !5792
  %cmp17 = icmp sge i64 %11, -2147483648, !dbg !5794
  br i1 %cmp17, label %land.lhs.true19, label %if.else25, !dbg !5795

land.lhs.true19:                                  ; preds = %if.else16
  %12 = load i64, i64* %data.addr, align 8, !dbg !5796
  %cmp20 = icmp sle i64 %12, 2147483647, !dbg !5797
  br i1 %cmp20, label %if.then22, label %if.else25, !dbg !5798

if.then22:                                        ; preds = %land.lhs.true19
  call void @llvm.dbg.declare(metadata i32* %value23, metadata !5799, metadata !1190), !dbg !5802
  %13 = load i64, i64* %data.addr, align 8, !dbg !5803
  %conv24 = trunc i64 %13 to i32, !dbg !5803
  store i32 %conv24, i32* %value23, align 4, !dbg !5804
  store i64 4, i64* %length, align 8, !dbg !5805
  %14 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5806
  %15 = bitcast i32* %value23 to i8*, !dbg !5807
  %16 = load i64, i64* %length, align 8, !dbg !5808
  call void @utils_copyValue(i8* %14, i8* %15, i64 %16), !dbg !5809
  br label %if.end32, !dbg !5810

if.else25:                                        ; preds = %land.lhs.true19, %if.else16
  %17 = load i64, i64* %data.addr, align 8, !dbg !5811
  %cmp26 = icmp sge i64 %17, -9223372036854775808, !dbg !5813
  br i1 %cmp26, label %land.lhs.true28, label %if.end, !dbg !5814

land.lhs.true28:                                  ; preds = %if.else25
  %18 = load i64, i64* %data.addr, align 8, !dbg !5815
  %cmp29 = icmp sle i64 %18, 9223372036854775807, !dbg !5816
  br i1 %cmp29, label %if.then31, label %if.end, !dbg !5817

if.then31:                                        ; preds = %land.lhs.true28
  store i64 8, i64* %length, align 8, !dbg !5818
  %19 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5820
  %20 = bitcast i64* %data.addr to i8*, !dbg !5821
  %21 = load i64, i64* %length, align 8, !dbg !5822
  call void @utils_copyValue(i8* %19, i8* %20, i64 %21), !dbg !5823
  br label %if.end, !dbg !5824

if.end:                                           ; preds = %if.then31, %land.lhs.true28, %if.else25
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then22
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then7
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  %22 = load i64, i64* %length, align 8, !dbg !5825
  ret i64 %22, !dbg !5826
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @prv_encodeFloat(double %data, i8* %data_buffer) #0 !dbg !5827 {
entry:
  %data.addr = alloca double, align 8
  %data_buffer.addr = alloca i8*, align 8
  %length = alloca i64, align 8
  %value = alloca float, align 4
  store double %data, double* %data.addr, align 8
  call void @llvm.dbg.declare(metadata double* %data.addr, metadata !5830, metadata !1190), !dbg !5831
  store i8* %data_buffer, i8** %data_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_buffer.addr, metadata !5832, metadata !1190), !dbg !5833
  call void @llvm.dbg.declare(metadata i64* %length, metadata !5834, metadata !1190), !dbg !5835
  store i64 0, i64* %length, align 8, !dbg !5835
  %0 = load double, double* %data.addr, align 8, !dbg !5836
  %cmp = fcmp olt double %0, 0xC7EFFFFFE0000000, !dbg !5838
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5839

lor.lhs.false:                                    ; preds = %entry
  %1 = load double, double* %data.addr, align 8, !dbg !5840
  %cmp1 = fcmp ogt double %1, 0x47EFFFFFE0000000, !dbg !5841
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5842

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 8, i64* %length, align 8, !dbg !5843
  %2 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5845
  %3 = bitcast double* %data.addr to i8*, !dbg !5846
  call void @utils_copyValue(i8* %2, i8* %3, i64 8), !dbg !5847
  br label %if.end, !dbg !5848

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata float* %value, metadata !5849, metadata !1190), !dbg !5851
  store i64 4, i64* %length, align 8, !dbg !5852
  %4 = load double, double* %data.addr, align 8, !dbg !5853
  %conv = fptrunc double %4 to float, !dbg !5854
  store float %conv, float* %value, align 4, !dbg !5855
  %5 = load i8*, i8** %data_buffer.addr, align 8, !dbg !5856
  %6 = bitcast float* %value to i8*, !dbg !5857
  call void @utils_copyValue(i8* %5, i8* %6, i64 4), !dbg !5858
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i64, i64* %length, align 8, !dbg !5859
  ret i64 %7, !dbg !5860
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_getHeaderLength(i16 zeroext %id, i64 %dataLen) #0 !dbg !5861 {
entry:
  %id.addr = alloca i16, align 2
  %dataLen.addr = alloca i64, align 8
  %length = alloca i32, align 4
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !5864, metadata !1190), !dbg !5865
  store i64 %dataLen, i64* %dataLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataLen.addr, metadata !5866, metadata !1190), !dbg !5867
  call void @llvm.dbg.declare(metadata i32* %length, metadata !5868, metadata !1190), !dbg !5869
  store i32 2, i32* %length, align 4, !dbg !5870
  %0 = load i16, i16* %id.addr, align 2, !dbg !5871
  %conv = zext i16 %0 to i32, !dbg !5871
  %cmp = icmp sgt i32 %conv, 255, !dbg !5873
  br i1 %cmp, label %if.then, label %if.end, !dbg !5874

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %length, align 4, !dbg !5875
  %add = add nsw i32 %1, 1, !dbg !5875
  store i32 %add, i32* %length, align 4, !dbg !5875
  br label %if.end, !dbg !5877

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, i64* %dataLen.addr, align 8, !dbg !5878
  %cmp2 = icmp ugt i64 %2, 65535, !dbg !5880
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !5881

if.then4:                                         ; preds = %if.end
  %3 = load i32, i32* %length, align 4, !dbg !5882
  %add5 = add nsw i32 %3, 3, !dbg !5882
  store i32 %add5, i32* %length, align 4, !dbg !5882
  br label %if.end17, !dbg !5884

if.else:                                          ; preds = %if.end
  %4 = load i64, i64* %dataLen.addr, align 8, !dbg !5885
  %cmp6 = icmp ugt i64 %4, 255, !dbg !5887
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !5888

if.then8:                                         ; preds = %if.else
  %5 = load i32, i32* %length, align 4, !dbg !5889
  %add9 = add nsw i32 %5, 2, !dbg !5889
  store i32 %add9, i32* %length, align 4, !dbg !5889
  br label %if.end16, !dbg !5891

if.else10:                                        ; preds = %if.else
  %6 = load i64, i64* %dataLen.addr, align 8, !dbg !5892
  %cmp11 = icmp ugt i64 %6, 7, !dbg !5894
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !5895

if.then13:                                        ; preds = %if.else10
  %7 = load i32, i32* %length, align 4, !dbg !5896
  %add14 = add nsw i32 %7, 1, !dbg !5896
  store i32 %add14, i32* %length, align 4, !dbg !5896
  br label %if.end15, !dbg !5898

if.end15:                                         ; preds = %if.then13, %if.else10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then4
  %8 = load i32, i32* %length, align 4, !dbg !5899
  ret i32 %8, !dbg !5900
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @prv_getHeaderType(i32 %type) #0 !dbg !5901 {
entry:
  %retval = alloca i8, align 1
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5904, metadata !1190), !dbg !5905
  %0 = load i32, i32* %type.addr, align 4, !dbg !5906
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 6, label %sw.bb3
    i32 7, label %sw.bb3
    i32 8, label %sw.bb3
    i32 5, label %sw.bb3
    i32 9, label %sw.bb3
    i32 0, label %sw.bb4
  ], !dbg !5907

sw.bb:                                            ; preds = %entry
  store i8 16, i8* %retval, align 1, !dbg !5908
  br label %return, !dbg !5908

sw.bb1:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5910
  br label %return, !dbg !5910

sw.bb2:                                           ; preds = %entry
  store i8 -128, i8* %retval, align 1, !dbg !5911
  br label %return, !dbg !5911

sw.bb3:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i8 -64, i8* %retval, align 1, !dbg !5912
  br label %return, !dbg !5912

sw.bb4:                                           ; preds = %entry
  br label %sw.default, !dbg !5912

sw.default:                                       ; preds = %sw.bb4, %entry
  store i8 -1, i8* %retval, align 1, !dbg !5913
  br label %return, !dbg !5913

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8, i8* %retval, align 1, !dbg !5914
  ret i8 %1, !dbg !5914
}

; Function Attrs: noinline nounwind uwtable
define %struct._lwm2m_data_t* @lwm2m_data_new(i32 %size) #0 !dbg !5915 {
entry:
  %retval = alloca %struct._lwm2m_data_t*, align 8
  %size.addr = alloca i32, align 4
  %dataP = alloca %struct._lwm2m_data_t*, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5918, metadata !1190), !dbg !5919
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP, metadata !5920, metadata !1190), !dbg !5921
  %0 = load i32, i32* %size.addr, align 4, !dbg !5922
  %cmp = icmp sle i32 %0, 0, !dbg !5924
  br i1 %cmp, label %if.then, label %if.end, !dbg !5925

if.then:                                          ; preds = %entry
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %retval, align 8, !dbg !5926
  br label %return, !dbg !5926

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !5927
  %conv = sext i32 %1 to i64, !dbg !5927
  %mul = mul i64 %conv, 24, !dbg !5928
  %call = call i8* @lwm2m_malloc(i64 %mul), !dbg !5929
  %2 = bitcast i8* %call to %struct._lwm2m_data_t*, !dbg !5930
  store %struct._lwm2m_data_t* %2, %struct._lwm2m_data_t** %dataP, align 8, !dbg !5931
  %3 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !5932
  %cmp1 = icmp ne %struct._lwm2m_data_t* %3, null, !dbg !5934
  br i1 %cmp1, label %if.then3, label %if.end6, !dbg !5935

if.then3:                                         ; preds = %if.end
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !5936
  %5 = bitcast %struct._lwm2m_data_t* %4 to i8*, !dbg !5938
  %6 = load i32, i32* %size.addr, align 4, !dbg !5939
  %conv4 = sext i32 %6 to i64, !dbg !5939
  %mul5 = mul i64 %conv4, 24, !dbg !5940
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %mul5, i32 8, i1 false), !dbg !5938
  br label %if.end6, !dbg !5941

if.end6:                                          ; preds = %if.then3, %if.end
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP, align 8, !dbg !5942
  store %struct._lwm2m_data_t* %7, %struct._lwm2m_data_t** %retval, align 8, !dbg !5943
  br label %return, !dbg !5943

return:                                           ; preds = %if.end6, %if.then
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %retval, align 8, !dbg !5944
  ret %struct._lwm2m_data_t* %8, !dbg !5944
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_free(i32 %size, %struct._lwm2m_data_t* %dataP) #0 !dbg !5945 {
entry:
  %size.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %i = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5948, metadata !1190), !dbg !5949
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !5950, metadata !1190), !dbg !5951
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5952, metadata !1190), !dbg !5953
  %0 = load i32, i32* %size.addr, align 4, !dbg !5954
  %cmp = icmp eq i32 %0, 0, !dbg !5956
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5957

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5958
  %cmp1 = icmp eq %struct._lwm2m_data_t* %1, null, !dbg !5959
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5960

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5961

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !5962
  br label %for.cond, !dbg !5964

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !5965
  %3 = load i32, i32* %size.addr, align 4, !dbg !5967
  %cmp2 = icmp slt i32 %2, %3, !dbg !5968
  br i1 %cmp2, label %for.body, label %for.end, !dbg !5969

for.body:                                         ; preds = %for.cond
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5970
  %5 = load i32, i32* %i, align 4, !dbg !5972
  %idxprom = sext i32 %5 to i64, !dbg !5970
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %4, i64 %idxprom, !dbg !5970
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !5973
  %6 = load i32, i32* %type, align 8, !dbg !5973
  switch i32 %6, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 4, label %sw.bb9
    i32 5, label %sw.bb9
  ], !dbg !5974

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5975
  %8 = load i32, i32* %i, align 4, !dbg !5977
  %idxprom3 = sext i32 %8 to i64, !dbg !5975
  %arrayidx4 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i64 %idxprom3, !dbg !5975
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx4, i32 0, i32 2, !dbg !5978
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !5979
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !5980
  %9 = load i64, i64* %count, align 8, !dbg !5980
  %conv = trunc i64 %9 to i32, !dbg !5975
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5981
  %11 = load i32, i32* %i, align 4, !dbg !5982
  %idxprom5 = sext i32 %11 to i64, !dbg !5981
  %arrayidx6 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i64 %idxprom5, !dbg !5981
  %value7 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx6, i32 0, i32 2, !dbg !5983
  %asChildren8 = bitcast %union.anon.0* %value7 to %struct.anon.0*, !dbg !5984
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren8, i32 0, i32 1, !dbg !5985
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !5985
  call void @lwm2m_data_free(i32 %conv, %struct._lwm2m_data_t* %12), !dbg !5986
  br label %sw.epilog, !dbg !5987

sw.bb9:                                           ; preds = %for.body, %for.body
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5988
  %14 = load i32, i32* %i, align 4, !dbg !5990
  %idxprom10 = sext i32 %14 to i64, !dbg !5988
  %arrayidx11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %13, i64 %idxprom10, !dbg !5988
  %value12 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx11, i32 0, i32 2, !dbg !5991
  %asBuffer = bitcast %union.anon.0* %value12 to %struct.anon*, !dbg !5992
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 1, !dbg !5993
  %15 = load i8*, i8** %buffer, align 8, !dbg !5993
  %cmp13 = icmp ne i8* %15, null, !dbg !5994
  br i1 %cmp13, label %if.then15, label %if.end21, !dbg !5995

if.then15:                                        ; preds = %sw.bb9
  %16 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !5996
  %17 = load i32, i32* %i, align 4, !dbg !5998
  %idxprom16 = sext i32 %17 to i64, !dbg !5996
  %arrayidx17 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %16, i64 %idxprom16, !dbg !5996
  %value18 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx17, i32 0, i32 2, !dbg !5999
  %asBuffer19 = bitcast %union.anon.0* %value18 to %struct.anon*, !dbg !6000
  %buffer20 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer19, i32 0, i32 1, !dbg !6001
  %18 = load i8*, i8** %buffer20, align 8, !dbg !6001
  call void @lwm2m_free(i8* %18), !dbg !6002
  br label %if.end21, !dbg !6003

if.end21:                                         ; preds = %if.then15, %sw.bb9
  br label %sw.default, !dbg !6004

sw.default:                                       ; preds = %if.end21, %for.body
  br label %sw.epilog, !dbg !6005

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %for.inc, !dbg !6006

for.inc:                                          ; preds = %sw.epilog
  %19 = load i32, i32* %i, align 4, !dbg !6007
  %inc = add nsw i32 %19, 1, !dbg !6007
  store i32 %inc, i32* %i, align 4, !dbg !6007
  br label %for.cond, !dbg !6008, !llvm.loop !6009

for.end:                                          ; preds = %for.cond
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6011
  %21 = bitcast %struct._lwm2m_data_t* %20 to i8*, !dbg !6011
  call void @lwm2m_free(i8* %21), !dbg !6012
  br label %return, !dbg !6013

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !6013
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_string(i8* %string, %struct._lwm2m_data_t* %dataP) #0 !dbg !6014 {
entry:
  %string.addr = alloca i8*, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %len = alloca i64, align 8
  %res = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !6017, metadata !1190), !dbg !6018
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6019, metadata !1190), !dbg !6020
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6021, metadata !1190), !dbg !6022
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6023, metadata !1190), !dbg !6024
  %0 = load i8*, i8** %string.addr, align 8, !dbg !6025
  %cmp = icmp eq i8* %0, null, !dbg !6027
  br i1 %cmp, label %if.then, label %if.else, !dbg !6028

if.then:                                          ; preds = %entry
  store i64 0, i64* %len, align 8, !dbg !6029
  br label %if.end, !dbg !6031

if.else:                                          ; preds = %entry
  store i64 0, i64* %len, align 8, !dbg !6032
  br label %for.cond, !dbg !6035

for.cond:                                         ; preds = %for.inc, %if.else
  %1 = load i8*, i8** %string.addr, align 8, !dbg !6036
  %2 = load i64, i64* %len, align 8, !dbg !6038
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !6036
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6036
  %conv = sext i8 %3 to i32, !dbg !6036
  %cmp1 = icmp ne i32 %conv, 0, !dbg !6039
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6040

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !6040

for.inc:                                          ; preds = %for.body
  %4 = load i64, i64* %len, align 8, !dbg !6041
  %inc = add i64 %4, 1, !dbg !6041
  store i64 %inc, i64* %len, align 8, !dbg !6041
  br label %for.cond, !dbg !6042, !llvm.loop !6043

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %5 = load i64, i64* %len, align 8, !dbg !6045
  %cmp3 = icmp eq i64 %5, 0, !dbg !6047
  br i1 %cmp3, label %if.then5, label %if.else8, !dbg !6048

if.then5:                                         ; preds = %if.end
  %6 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6049
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %6, i32 0, i32 2, !dbg !6051
  %asBuffer = bitcast %union.anon.0* %value to %struct.anon*, !dbg !6052
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !6053
  store i64 0, i64* %length, align 8, !dbg !6054
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6055
  %value6 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 2, !dbg !6056
  %asBuffer7 = bitcast %union.anon.0* %value6 to %struct.anon*, !dbg !6057
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer7, i32 0, i32 1, !dbg !6058
  store i8* null, i8** %buffer, align 8, !dbg !6059
  store i32 1, i32* %res, align 4, !dbg !6060
  br label %if.end9, !dbg !6061

if.else8:                                         ; preds = %if.end
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6062
  %9 = load i8*, i8** %string.addr, align 8, !dbg !6064
  %10 = load i64, i64* %len, align 8, !dbg !6065
  %call = call i32 @prv_setBuffer(%struct._lwm2m_data_t* %8, i8* %9, i64 %10), !dbg !6066
  store i32 %call, i32* %res, align 4, !dbg !6067
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then5
  %11 = load i32, i32* %res, align 4, !dbg !6068
  %cmp10 = icmp eq i32 %11, 1, !dbg !6070
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !6071

if.then12:                                        ; preds = %if.end9
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6072
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 0, !dbg !6074
  store i32 4, i32* %type, align 8, !dbg !6075
  br label %if.end15, !dbg !6076

if.else13:                                        ; preds = %if.end9
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6077
  %type14 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %13, i32 0, i32 0, !dbg !6079
  store i32 0, i32* %type14, align 8, !dbg !6080
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then12
  ret void, !dbg !6081
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_setBuffer(%struct._lwm2m_data_t* %dataP, i8* %buffer, i64 %bufferLen) #0 !dbg !6082 {
entry:
  %retval = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6085, metadata !1190), !dbg !6086
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6087, metadata !1190), !dbg !6088
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !6089, metadata !1190), !dbg !6090
  %0 = load i64, i64* %bufferLen.addr, align 8, !dbg !6091
  %call = call i8* @lwm2m_malloc(i64 %0), !dbg !6092
  %1 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6093
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %1, i32 0, i32 2, !dbg !6094
  %asBuffer = bitcast %union.anon.0* %value to %struct.anon*, !dbg !6095
  %buffer1 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 1, !dbg !6096
  store i8* %call, i8** %buffer1, align 8, !dbg !6097
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6098
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6100
  %asBuffer3 = bitcast %union.anon.0* %value2 to %struct.anon*, !dbg !6101
  %buffer4 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer3, i32 0, i32 1, !dbg !6102
  %3 = load i8*, i8** %buffer4, align 8, !dbg !6102
  %cmp = icmp eq i8* %3, null, !dbg !6103
  br i1 %cmp, label %if.then, label %if.end, !dbg !6104

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6105
  br label %return, !dbg !6105

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %bufferLen.addr, align 8, !dbg !6107
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6108
  %value5 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i32 0, i32 2, !dbg !6109
  %asBuffer6 = bitcast %union.anon.0* %value5 to %struct.anon*, !dbg !6110
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer6, i32 0, i32 0, !dbg !6111
  store i64 %4, i64* %length, align 8, !dbg !6112
  %6 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6113
  %value7 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %6, i32 0, i32 2, !dbg !6114
  %asBuffer8 = bitcast %union.anon.0* %value7 to %struct.anon*, !dbg !6115
  %buffer9 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer8, i32 0, i32 1, !dbg !6116
  %7 = load i8*, i8** %buffer9, align 8, !dbg !6116
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !6117
  %9 = load i64, i64* %bufferLen.addr, align 8, !dbg !6118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 %9, i32 1, i1 false), !dbg !6119
  store i32 1, i32* %retval, align 4, !dbg !6120
  br label %return, !dbg !6120

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6121
  ret i32 %10, !dbg !6121
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_opaque(i8* %buffer, i64 %length, %struct._lwm2m_data_t* %dataP) #0 !dbg !6122 {
entry:
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %res = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6125, metadata !1190), !dbg !6126
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !6127, metadata !1190), !dbg !6128
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6129, metadata !1190), !dbg !6130
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6131, metadata !1190), !dbg !6132
  %0 = load i64, i64* %length.addr, align 8, !dbg !6133
  %cmp = icmp eq i64 %0, 0, !dbg !6135
  br i1 %cmp, label %if.then, label %if.else, !dbg !6136

if.then:                                          ; preds = %entry
  %1 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6137
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %1, i32 0, i32 2, !dbg !6139
  %asBuffer = bitcast %union.anon.0* %value to %struct.anon*, !dbg !6140
  %length1 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !6141
  store i64 0, i64* %length1, align 8, !dbg !6142
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6143
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6144
  %asBuffer3 = bitcast %union.anon.0* %value2 to %struct.anon*, !dbg !6145
  %buffer4 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer3, i32 0, i32 1, !dbg !6146
  store i8* null, i8** %buffer4, align 8, !dbg !6147
  store i32 1, i32* %res, align 4, !dbg !6148
  br label %if.end, !dbg !6149

if.else:                                          ; preds = %entry
  %3 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6150
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !6152
  %5 = load i64, i64* %length.addr, align 8, !dbg !6153
  %call = call i32 @prv_setBuffer(%struct._lwm2m_data_t* %3, i8* %4, i64 %5), !dbg !6154
  store i32 %call, i32* %res, align 4, !dbg !6155
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %res, align 4, !dbg !6156
  %cmp5 = icmp eq i32 %6, 1, !dbg !6158
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !6159

if.then6:                                         ; preds = %if.end
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6160
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 0, !dbg !6162
  store i32 5, i32* %type, align 8, !dbg !6163
  br label %if.end9, !dbg !6164

if.else7:                                         ; preds = %if.end
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6165
  %type8 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %8, i32 0, i32 0, !dbg !6167
  store i32 0, i32* %type8, align 8, !dbg !6168
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then6
  ret void, !dbg !6169
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_nstring(i8* %string, i64 %length, %struct._lwm2m_data_t* %dataP) #0 !dbg !6170 {
entry:
  %string.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !6173, metadata !1190), !dbg !6174
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !6175, metadata !1190), !dbg !6176
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6177, metadata !1190), !dbg !6178
  %0 = load i8*, i8** %string.addr, align 8, !dbg !6179
  %1 = load i64, i64* %length.addr, align 8, !dbg !6180
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6181
  call void @lwm2m_data_encode_opaque(i8* %0, i64 %1, %struct._lwm2m_data_t* %2), !dbg !6182
  %3 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6183
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %3, i32 0, i32 0, !dbg !6185
  %4 = load i32, i32* %type, align 8, !dbg !6185
  %cmp = icmp eq i32 %4, 5, !dbg !6186
  br i1 %cmp, label %if.then, label %if.end, !dbg !6187

if.then:                                          ; preds = %entry
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6188
  %type1 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i32 0, i32 0, !dbg !6190
  store i32 4, i32* %type1, align 8, !dbg !6191
  br label %if.end, !dbg !6192

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6193
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_int(i64 %value, %struct._lwm2m_data_t* %dataP) #0 !dbg !6194 {
entry:
  %value.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !6197, metadata !1190), !dbg !6198
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6199, metadata !1190), !dbg !6200
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6201
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6202
  store i32 6, i32* %type, align 8, !dbg !6203
  %1 = load i64, i64* %value.addr, align 8, !dbg !6204
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6205
  %value1 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6206
  %asInteger = bitcast %union.anon.0* %value1 to i64*, !dbg !6207
  store i64 %1, i64* %asInteger, align 8, !dbg !6208
  ret void, !dbg !6209
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_data_decode_int(%struct._lwm2m_data_t* %dataP, i64* %valueP) #0 !dbg !6210 {
entry:
  %retval = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %valueP.addr = alloca i64*, align 8
  %result = alloca i32, align 4
  %value15 = alloca i16, align 2
  %value24 = alloca i32, align 4
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6215, metadata !1190), !dbg !6216
  store i64* %valueP, i64** %valueP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %valueP.addr, metadata !6217, metadata !1190), !dbg !6218
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6219, metadata !1190), !dbg !6220
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6221
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6222
  %1 = load i32, i32* %type, align 8, !dbg !6222
  switch i32 %1, label %sw.default39 [
    i32 6, label %sw.bb
    i32 4, label %sw.bb1
    i32 5, label %sw.bb5
  ], !dbg !6223

sw.bb:                                            ; preds = %entry
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6224
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6226
  %asInteger = bitcast %union.anon.0* %value to i64*, !dbg !6227
  %3 = load i64, i64* %asInteger, align 8, !dbg !6227
  %4 = load i64*, i64** %valueP.addr, align 8, !dbg !6228
  store i64 %3, i64* %4, align 8, !dbg !6229
  store i32 1, i32* %result, align 4, !dbg !6230
  br label %sw.epilog40, !dbg !6231

sw.bb1:                                           ; preds = %entry
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6232
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i32 0, i32 2, !dbg !6233
  %asBuffer = bitcast %union.anon.0* %value2 to %struct.anon*, !dbg !6234
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 1, !dbg !6235
  %6 = load i8*, i8** %buffer, align 8, !dbg !6235
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6236
  %value3 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 2, !dbg !6237
  %asBuffer4 = bitcast %union.anon.0* %value3 to %struct.anon*, !dbg !6238
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer4, i32 0, i32 0, !dbg !6239
  %8 = load i64, i64* %length, align 8, !dbg !6239
  %conv = trunc i64 %8 to i32, !dbg !6236
  %9 = load i64*, i64** %valueP.addr, align 8, !dbg !6240
  %call = call i32 @utils_textToInt(i8* %6, i32 %conv, i64* %9), !dbg !6241
  store i32 %call, i32* %result, align 4, !dbg !6242
  br label %sw.epilog40, !dbg !6243

sw.bb5:                                           ; preds = %entry
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6244
  %value6 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i32 0, i32 2, !dbg !6245
  %asBuffer7 = bitcast %union.anon.0* %value6 to %struct.anon*, !dbg !6246
  %length8 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer7, i32 0, i32 0, !dbg !6247
  %11 = load i64, i64* %length8, align 8, !dbg !6247
  switch i64 %11, label %sw.default [
    i64 1, label %sw.bb9
    i64 2, label %sw.bb14
    i64 4, label %sw.bb23
    i64 8, label %sw.bb32
  ], !dbg !6248

sw.bb9:                                           ; preds = %sw.bb5
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6249
  %value10 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 2, !dbg !6251
  %asBuffer11 = bitcast %union.anon.0* %value10 to %struct.anon*, !dbg !6252
  %buffer12 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer11, i32 0, i32 1, !dbg !6253
  %13 = load i8*, i8** %buffer12, align 8, !dbg !6253
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 0, !dbg !6249
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6249
  %conv13 = sext i8 %14 to i64, !dbg !6254
  %15 = load i64*, i64** %valueP.addr, align 8, !dbg !6255
  store i64 %conv13, i64* %15, align 8, !dbg !6256
  store i32 1, i32* %result, align 4, !dbg !6257
  br label %sw.epilog, !dbg !6258

sw.bb14:                                          ; preds = %sw.bb5
  call void @llvm.dbg.declare(metadata i16* %value15, metadata !6259, metadata !1190), !dbg !6261
  %16 = bitcast i16* %value15 to i8*, !dbg !6262
  %17 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6263
  %value16 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %17, i32 0, i32 2, !dbg !6264
  %asBuffer17 = bitcast %union.anon.0* %value16 to %struct.anon*, !dbg !6265
  %buffer18 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer17, i32 0, i32 1, !dbg !6266
  %18 = load i8*, i8** %buffer18, align 8, !dbg !6266
  %19 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6267
  %value19 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %19, i32 0, i32 2, !dbg !6268
  %asBuffer20 = bitcast %union.anon.0* %value19 to %struct.anon*, !dbg !6269
  %length21 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer20, i32 0, i32 0, !dbg !6270
  %20 = load i64, i64* %length21, align 8, !dbg !6270
  call void @utils_copyValue(i8* %16, i8* %18, i64 %20), !dbg !6271
  %21 = load i16, i16* %value15, align 2, !dbg !6272
  %conv22 = sext i16 %21 to i64, !dbg !6272
  %22 = load i64*, i64** %valueP.addr, align 8, !dbg !6273
  store i64 %conv22, i64* %22, align 8, !dbg !6274
  store i32 1, i32* %result, align 4, !dbg !6275
  br label %sw.epilog, !dbg !6276

sw.bb23:                                          ; preds = %sw.bb5
  call void @llvm.dbg.declare(metadata i32* %value24, metadata !6277, metadata !1190), !dbg !6279
  %23 = bitcast i32* %value24 to i8*, !dbg !6280
  %24 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6281
  %value25 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %24, i32 0, i32 2, !dbg !6282
  %asBuffer26 = bitcast %union.anon.0* %value25 to %struct.anon*, !dbg !6283
  %buffer27 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer26, i32 0, i32 1, !dbg !6284
  %25 = load i8*, i8** %buffer27, align 8, !dbg !6284
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6285
  %value28 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %26, i32 0, i32 2, !dbg !6286
  %asBuffer29 = bitcast %union.anon.0* %value28 to %struct.anon*, !dbg !6287
  %length30 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer29, i32 0, i32 0, !dbg !6288
  %27 = load i64, i64* %length30, align 8, !dbg !6288
  call void @utils_copyValue(i8* %23, i8* %25, i64 %27), !dbg !6289
  %28 = load i32, i32* %value24, align 4, !dbg !6290
  %conv31 = sext i32 %28 to i64, !dbg !6290
  %29 = load i64*, i64** %valueP.addr, align 8, !dbg !6291
  store i64 %conv31, i64* %29, align 8, !dbg !6292
  store i32 1, i32* %result, align 4, !dbg !6293
  br label %sw.epilog, !dbg !6294

sw.bb32:                                          ; preds = %sw.bb5
  %30 = load i64*, i64** %valueP.addr, align 8, !dbg !6295
  %31 = bitcast i64* %30 to i8*, !dbg !6295
  %32 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6296
  %value33 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %32, i32 0, i32 2, !dbg !6297
  %asBuffer34 = bitcast %union.anon.0* %value33 to %struct.anon*, !dbg !6298
  %buffer35 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer34, i32 0, i32 1, !dbg !6299
  %33 = load i8*, i8** %buffer35, align 8, !dbg !6299
  %34 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6300
  %value36 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %34, i32 0, i32 2, !dbg !6301
  %asBuffer37 = bitcast %union.anon.0* %value36 to %struct.anon*, !dbg !6302
  %length38 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer37, i32 0, i32 0, !dbg !6303
  %35 = load i64, i64* %length38, align 8, !dbg !6303
  call void @utils_copyValue(i8* %31, i8* %33, i64 %35), !dbg !6304
  store i32 1, i32* %result, align 4, !dbg !6305
  br label %sw.epilog, !dbg !6306

sw.default:                                       ; preds = %sw.bb5
  store i32 0, i32* %result, align 4, !dbg !6307
  br label %sw.epilog, !dbg !6308

sw.epilog:                                        ; preds = %sw.default, %sw.bb32, %sw.bb23, %sw.bb14, %sw.bb9
  br label %sw.epilog40, !dbg !6309

sw.default39:                                     ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6310
  br label %return, !dbg !6310

sw.epilog40:                                      ; preds = %sw.epilog, %sw.bb1, %sw.bb
  %36 = load i32, i32* %result, align 4, !dbg !6311
  store i32 %36, i32* %retval, align 4, !dbg !6312
  br label %return, !dbg !6312

return:                                           ; preds = %sw.epilog40, %sw.default39
  %37 = load i32, i32* %retval, align 4, !dbg !6313
  ret i32 %37, !dbg !6313
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_float(double %value, %struct._lwm2m_data_t* %dataP) #0 !dbg !6314 {
entry:
  %value.addr = alloca double, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !6317, metadata !1190), !dbg !6318
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6319, metadata !1190), !dbg !6320
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6321
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6322
  store i32 7, i32* %type, align 8, !dbg !6323
  %1 = load double, double* %value.addr, align 8, !dbg !6324
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6325
  %value1 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6326
  %asFloat = bitcast %union.anon.0* %value1 to double*, !dbg !6327
  store double %1, double* %asFloat, align 8, !dbg !6328
  ret void, !dbg !6329
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_data_decode_float(%struct._lwm2m_data_t* %dataP, double* %valueP) #0 !dbg !6330 {
entry:
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %valueP.addr = alloca double*, align 8
  %result = alloca i32, align 4
  %temp = alloca float, align 4
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6333, metadata !1190), !dbg !6334
  store double* %valueP, double** %valueP.addr, align 8
  call void @llvm.dbg.declare(metadata double** %valueP.addr, metadata !6335, metadata !1190), !dbg !6336
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6337, metadata !1190), !dbg !6338
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6339
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6340
  %1 = load i32, i32* %type, align 8, !dbg !6340
  switch i32 %1, label %sw.default27 [
    i32 7, label %sw.bb
    i32 6, label %sw.bb1
    i32 4, label %sw.bb3
    i32 5, label %sw.bb8
  ], !dbg !6341

sw.bb:                                            ; preds = %entry
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6342
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6344
  %asFloat = bitcast %union.anon.0* %value to double*, !dbg !6345
  %3 = load double, double* %asFloat, align 8, !dbg !6345
  %4 = load double*, double** %valueP.addr, align 8, !dbg !6346
  store double %3, double* %4, align 8, !dbg !6347
  store i32 1, i32* %result, align 4, !dbg !6348
  br label %sw.epilog28, !dbg !6349

sw.bb1:                                           ; preds = %entry
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6350
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i32 0, i32 2, !dbg !6351
  %asInteger = bitcast %union.anon.0* %value2 to i64*, !dbg !6352
  %6 = load i64, i64* %asInteger, align 8, !dbg !6352
  %conv = sitofp i64 %6 to double, !dbg !6353
  %7 = load double*, double** %valueP.addr, align 8, !dbg !6354
  store double %conv, double* %7, align 8, !dbg !6355
  store i32 1, i32* %result, align 4, !dbg !6356
  br label %sw.epilog28, !dbg !6357

sw.bb3:                                           ; preds = %entry
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6358
  %value4 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %8, i32 0, i32 2, !dbg !6359
  %asBuffer = bitcast %union.anon.0* %value4 to %struct.anon*, !dbg !6360
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 1, !dbg !6361
  %9 = load i8*, i8** %buffer, align 8, !dbg !6361
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6362
  %value5 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i32 0, i32 2, !dbg !6363
  %asBuffer6 = bitcast %union.anon.0* %value5 to %struct.anon*, !dbg !6364
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer6, i32 0, i32 0, !dbg !6365
  %11 = load i64, i64* %length, align 8, !dbg !6365
  %conv7 = trunc i64 %11 to i32, !dbg !6362
  %12 = load double*, double** %valueP.addr, align 8, !dbg !6366
  %call = call i32 @utils_textToFloat(i8* %9, i32 %conv7, double* %12), !dbg !6367
  store i32 %call, i32* %result, align 4, !dbg !6368
  br label %sw.epilog28, !dbg !6369

sw.bb8:                                           ; preds = %entry
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6370
  %value9 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %13, i32 0, i32 2, !dbg !6371
  %asBuffer10 = bitcast %union.anon.0* %value9 to %struct.anon*, !dbg !6372
  %length11 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer10, i32 0, i32 0, !dbg !6373
  %14 = load i64, i64* %length11, align 8, !dbg !6373
  switch i64 %14, label %sw.default [
    i64 4, label %sw.bb12
    i64 8, label %sw.bb20
  ], !dbg !6374

sw.bb12:                                          ; preds = %sw.bb8
  call void @llvm.dbg.declare(metadata float* %temp, metadata !6375, metadata !1190), !dbg !6378
  %15 = bitcast float* %temp to i8*, !dbg !6379
  %16 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6380
  %value13 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %16, i32 0, i32 2, !dbg !6381
  %asBuffer14 = bitcast %union.anon.0* %value13 to %struct.anon*, !dbg !6382
  %buffer15 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer14, i32 0, i32 1, !dbg !6383
  %17 = load i8*, i8** %buffer15, align 8, !dbg !6383
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6384
  %value16 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %18, i32 0, i32 2, !dbg !6385
  %asBuffer17 = bitcast %union.anon.0* %value16 to %struct.anon*, !dbg !6386
  %length18 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer17, i32 0, i32 0, !dbg !6387
  %19 = load i64, i64* %length18, align 8, !dbg !6387
  call void @utils_copyValue(i8* %15, i8* %17, i64 %19), !dbg !6388
  %20 = load float, float* %temp, align 4, !dbg !6389
  %conv19 = fpext float %20 to double, !dbg !6389
  %21 = load double*, double** %valueP.addr, align 8, !dbg !6390
  store double %conv19, double* %21, align 8, !dbg !6391
  store i32 1, i32* %result, align 4, !dbg !6392
  br label %sw.epilog, !dbg !6393

sw.bb20:                                          ; preds = %sw.bb8
  %22 = load double*, double** %valueP.addr, align 8, !dbg !6394
  %23 = bitcast double* %22 to i8*, !dbg !6394
  %24 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6395
  %value21 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %24, i32 0, i32 2, !dbg !6396
  %asBuffer22 = bitcast %union.anon.0* %value21 to %struct.anon*, !dbg !6397
  %buffer23 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer22, i32 0, i32 1, !dbg !6398
  %25 = load i8*, i8** %buffer23, align 8, !dbg !6398
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6399
  %value24 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %26, i32 0, i32 2, !dbg !6400
  %asBuffer25 = bitcast %union.anon.0* %value24 to %struct.anon*, !dbg !6401
  %length26 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer25, i32 0, i32 0, !dbg !6402
  %27 = load i64, i64* %length26, align 8, !dbg !6402
  call void @utils_copyValue(i8* %23, i8* %25, i64 %27), !dbg !6403
  store i32 1, i32* %result, align 4, !dbg !6404
  br label %sw.epilog, !dbg !6405

sw.default:                                       ; preds = %sw.bb8
  store i32 0, i32* %result, align 4, !dbg !6406
  br label %sw.epilog, !dbg !6407

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb12
  br label %sw.epilog28, !dbg !6408

sw.default27:                                     ; preds = %entry
  store i32 0, i32* %result, align 4, !dbg !6409
  br label %sw.epilog28, !dbg !6410

sw.epilog28:                                      ; preds = %sw.default27, %sw.epilog, %sw.bb3, %sw.bb1, %sw.bb
  %28 = load i32, i32* %result, align 4, !dbg !6411
  ret i32 %28, !dbg !6412
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_bool(i1 zeroext %value, %struct._lwm2m_data_t* %dataP) #0 !dbg !6413 {
entry:
  %value.addr = alloca i8, align 1
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %frombool = zext i1 %value to i8
  store i8 %frombool, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !6416, metadata !1190), !dbg !6417
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6418, metadata !1190), !dbg !6419
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6420
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6421
  store i32 8, i32* %type, align 8, !dbg !6422
  %1 = load i8, i8* %value.addr, align 1, !dbg !6423
  %tobool = trunc i8 %1 to i1, !dbg !6423
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6424
  %value1 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6425
  %asBoolean = bitcast %union.anon.0* %value1 to i8*, !dbg !6426
  %frombool2 = zext i1 %tobool to i8, !dbg !6427
  store i8 %frombool2, i8* %asBoolean, align 8, !dbg !6427
  ret void, !dbg !6428
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_data_decode_bool(%struct._lwm2m_data_t* %dataP, i8* %valueP) #0 !dbg !6429 {
entry:
  %retval = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %valueP.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6433, metadata !1190), !dbg !6434
  store i8* %valueP, i8** %valueP.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %valueP.addr, metadata !6435, metadata !1190), !dbg !6436
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6437, metadata !1190), !dbg !6438
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6439
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6440
  %1 = load i32, i32* %type, align 8, !dbg !6440
  switch i32 %1, label %sw.default24 [
    i32 8, label %sw.bb
    i32 4, label %sw.bb1
    i32 5, label %sw.bb7
  ], !dbg !6441

sw.bb:                                            ; preds = %entry
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6442
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6444
  %asBoolean = bitcast %union.anon.0* %value to i8*, !dbg !6445
  %3 = load i8, i8* %asBoolean, align 8, !dbg !6445
  %tobool = trunc i8 %3 to i1, !dbg !6445
  %4 = load i8*, i8** %valueP.addr, align 8, !dbg !6446
  %frombool = zext i1 %tobool to i8, !dbg !6447
  store i8 %frombool, i8* %4, align 1, !dbg !6447
  store i32 1, i32* %result, align 4, !dbg !6448
  br label %sw.epilog25, !dbg !6449

sw.bb1:                                           ; preds = %entry
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6450
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i32 0, i32 2, !dbg !6452
  %asBuffer = bitcast %union.anon.0* %value2 to %struct.anon*, !dbg !6453
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !6454
  %6 = load i64, i64* %length, align 8, !dbg !6454
  %cmp = icmp ne i64 %6, 1, !dbg !6455
  br i1 %cmp, label %if.then, label %if.end, !dbg !6456

if.then:                                          ; preds = %sw.bb1
  store i32 0, i32* %retval, align 4, !dbg !6457
  br label %return, !dbg !6457

if.end:                                           ; preds = %sw.bb1
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6458
  %value3 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 2, !dbg !6459
  %asBuffer4 = bitcast %union.anon.0* %value3 to %struct.anon*, !dbg !6460
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer4, i32 0, i32 1, !dbg !6461
  %8 = load i8*, i8** %buffer, align 8, !dbg !6461
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 0, !dbg !6458
  %9 = load i8, i8* %arrayidx, align 1, !dbg !6458
  %conv = zext i8 %9 to i32, !dbg !6458
  switch i32 %conv, label %sw.default [
    i32 48, label %sw.bb5
    i32 49, label %sw.bb6
  ], !dbg !6462

sw.bb5:                                           ; preds = %if.end
  %10 = load i8*, i8** %valueP.addr, align 8, !dbg !6463
  store i8 0, i8* %10, align 1, !dbg !6465
  store i32 1, i32* %result, align 4, !dbg !6466
  br label %sw.epilog, !dbg !6467

sw.bb6:                                           ; preds = %if.end
  %11 = load i8*, i8** %valueP.addr, align 8, !dbg !6468
  store i8 1, i8* %11, align 1, !dbg !6469
  store i32 1, i32* %result, align 4, !dbg !6470
  br label %sw.epilog, !dbg !6471

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %result, align 4, !dbg !6472
  br label %sw.epilog, !dbg !6473

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5
  br label %sw.epilog25, !dbg !6474

sw.bb7:                                           ; preds = %entry
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6475
  %value8 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 2, !dbg !6477
  %asBuffer9 = bitcast %union.anon.0* %value8 to %struct.anon*, !dbg !6478
  %length10 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer9, i32 0, i32 0, !dbg !6479
  %13 = load i64, i64* %length10, align 8, !dbg !6479
  %cmp11 = icmp ne i64 %13, 1, !dbg !6480
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6481

if.then13:                                        ; preds = %sw.bb7
  store i32 0, i32* %retval, align 4, !dbg !6482
  br label %return, !dbg !6482

if.end14:                                         ; preds = %sw.bb7
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6483
  %value15 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %14, i32 0, i32 2, !dbg !6484
  %asBuffer16 = bitcast %union.anon.0* %value15 to %struct.anon*, !dbg !6485
  %buffer17 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer16, i32 0, i32 1, !dbg !6486
  %15 = load i8*, i8** %buffer17, align 8, !dbg !6486
  %arrayidx18 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !6483
  %16 = load i8, i8* %arrayidx18, align 1, !dbg !6483
  %conv19 = zext i8 %16 to i32, !dbg !6483
  switch i32 %conv19, label %sw.default22 [
    i32 0, label %sw.bb20
    i32 1, label %sw.bb21
  ], !dbg !6487

sw.bb20:                                          ; preds = %if.end14
  %17 = load i8*, i8** %valueP.addr, align 8, !dbg !6488
  store i8 0, i8* %17, align 1, !dbg !6490
  store i32 1, i32* %result, align 4, !dbg !6491
  br label %sw.epilog23, !dbg !6492

sw.bb21:                                          ; preds = %if.end14
  %18 = load i8*, i8** %valueP.addr, align 8, !dbg !6493
  store i8 1, i8* %18, align 1, !dbg !6494
  store i32 1, i32* %result, align 4, !dbg !6495
  br label %sw.epilog23, !dbg !6496

sw.default22:                                     ; preds = %if.end14
  store i32 0, i32* %result, align 4, !dbg !6497
  br label %sw.epilog23, !dbg !6498

sw.epilog23:                                      ; preds = %sw.default22, %sw.bb21, %sw.bb20
  br label %sw.epilog25, !dbg !6499

sw.default24:                                     ; preds = %entry
  store i32 0, i32* %result, align 4, !dbg !6500
  br label %sw.epilog25, !dbg !6501

sw.epilog25:                                      ; preds = %sw.default24, %sw.epilog23, %sw.epilog, %sw.bb
  %19 = load i32, i32* %result, align 4, !dbg !6502
  store i32 %19, i32* %retval, align 4, !dbg !6503
  br label %return, !dbg !6503

return:                                           ; preds = %sw.epilog25, %if.then13, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !6504
  ret i32 %20, !dbg !6504
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_objlink(i16 zeroext %objectId, i16 zeroext %objectInstanceId, %struct._lwm2m_data_t* %dataP) #0 !dbg !6505 {
entry:
  %objectId.addr = alloca i16, align 2
  %objectInstanceId.addr = alloca i16, align 2
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  store i16 %objectId, i16* %objectId.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %objectId.addr, metadata !6508, metadata !1190), !dbg !6509
  store i16 %objectInstanceId, i16* %objectInstanceId.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %objectInstanceId.addr, metadata !6510, metadata !1190), !dbg !6511
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6512, metadata !1190), !dbg !6513
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6514
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6515
  store i32 9, i32* %type, align 8, !dbg !6516
  %1 = load i16, i16* %objectId.addr, align 2, !dbg !6517
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6518
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6519
  %asObjLink = bitcast %union.anon.0* %value to %struct.anon.1*, !dbg !6520
  %objectId1 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %asObjLink, i32 0, i32 0, !dbg !6521
  store i16 %1, i16* %objectId1, align 8, !dbg !6522
  %3 = load i16, i16* %objectInstanceId.addr, align 2, !dbg !6523
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6524
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %4, i32 0, i32 2, !dbg !6525
  %asObjLink3 = bitcast %union.anon.0* %value2 to %struct.anon.1*, !dbg !6526
  %objectInstanceId4 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %asObjLink3, i32 0, i32 1, !dbg !6527
  store i16 %3, i16* %objectInstanceId4, align 2, !dbg !6528
  ret void, !dbg !6529
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_include(%struct._lwm2m_data_t* %subDataP, i64 %count, %struct._lwm2m_data_t* %dataP) #0 !dbg !6530 {
entry:
  %subDataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %count.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  store %struct._lwm2m_data_t* %subDataP, %struct._lwm2m_data_t** %subDataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %subDataP.addr, metadata !6533, metadata !1190), !dbg !6534
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6535, metadata !1190), !dbg !6536
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6537, metadata !1190), !dbg !6538
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %subDataP.addr, align 8, !dbg !6539
  %cmp = icmp eq %struct._lwm2m_data_t* %0, null, !dbg !6541
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6542

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !6543
  %cmp1 = icmp eq i64 %1, 0, !dbg !6544
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6545

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6546

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %subDataP.addr, align 8, !dbg !6547
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i64 0, !dbg !6547
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !6548
  %3 = load i32, i32* %type, align 8, !dbg !6548
  switch i32 %3, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !6549

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6550
  %type2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %4, i32 0, i32 0, !dbg !6552
  store i32 2, i32* %type2, align 8, !dbg !6553
  br label %sw.epilog, !dbg !6554

sw.bb3:                                           ; preds = %if.end
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6555
  %type4 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i32 0, i32 0, !dbg !6556
  store i32 1, i32* %type4, align 8, !dbg !6557
  br label %sw.epilog, !dbg !6558

sw.default:                                       ; preds = %if.end
  br label %return, !dbg !6559

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb
  %6 = load i64, i64* %count.addr, align 8, !dbg !6560
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6561
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 2, !dbg !6562
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !6563
  %count5 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !6564
  store i64 %6, i64* %count5, align 8, !dbg !6565
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %subDataP.addr, align 8, !dbg !6566
  %9 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6567
  %value6 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %9, i32 0, i32 2, !dbg !6568
  %asChildren7 = bitcast %union.anon.0* %value6 to %struct.anon.0*, !dbg !6569
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren7, i32 0, i32 1, !dbg !6570
  store %struct._lwm2m_data_t* %8, %struct._lwm2m_data_t** %array, align 8, !dbg !6571
  br label %return, !dbg !6572

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  ret void, !dbg !6572
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_data_encode_instances(%struct._lwm2m_data_t* %subDataP, i64 %count, %struct._lwm2m_data_t* %dataP) #0 !dbg !6573 {
entry:
  %subDataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %count.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  store %struct._lwm2m_data_t* %subDataP, %struct._lwm2m_data_t** %subDataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %subDataP.addr, metadata !6574, metadata !1190), !dbg !6575
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6576, metadata !1190), !dbg !6577
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6578, metadata !1190), !dbg !6579
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %subDataP.addr, align 8, !dbg !6580
  %1 = load i64, i64* %count.addr, align 8, !dbg !6581
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6582
  call void @lwm2m_data_include(%struct._lwm2m_data_t* %0, i64 %1, %struct._lwm2m_data_t* %2), !dbg !6583
  %3 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6584
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %3, i32 0, i32 0, !dbg !6585
  store i32 3, i32* %type, align 8, !dbg !6586
  ret void, !dbg !6587
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_data_parse(%struct.lwm2m_uri_t* %uriP, i8* %buffer, i64 %bufferLen, i32 %format, %struct._lwm2m_data_t** %dataP) #0 !dbg !6588 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %format.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t**, align 8
  %res = alloca i32, align 4
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !6600, metadata !1190), !dbg !6601
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6602, metadata !1190), !dbg !6603
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !6604, metadata !1190), !dbg !6605
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !6606, metadata !1190), !dbg !6607
  store %struct._lwm2m_data_t** %dataP, %struct._lwm2m_data_t*** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t*** %dataP.addr, metadata !6608, metadata !1190), !dbg !6609
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6610, metadata !1190), !dbg !6611
  %0 = load i32, i32* %format.addr, align 4, !dbg !6612
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 42, label %sw.bb11
    i32 11542, label %sw.bb32
    i32 11543, label %sw.bb34
  ], !dbg !6613

sw.bb:                                            ; preds = %entry
  %1 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6614
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %1, i32 0, i32 0, !dbg !6614
  %2 = load i8, i8* %flag, align 2, !dbg !6614
  %conv = zext i8 %2 to i32, !dbg !6614
  %and = and i32 %conv, 1, !dbg !6614
  %cmp = icmp ne i32 %and, 0, !dbg !6614
  br i1 %cmp, label %if.end, label %if.then, !dbg !6617

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !6618
  br label %return, !dbg !6618

if.end:                                           ; preds = %sw.bb
  %call = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 1), !dbg !6619
  %3 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6620
  store %struct._lwm2m_data_t* %call, %struct._lwm2m_data_t** %3, align 8, !dbg !6621
  %4 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6622
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %4, align 8, !dbg !6624
  %cmp2 = icmp eq %struct._lwm2m_data_t* %5, null, !dbg !6625
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6626

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6627
  br label %return, !dbg !6627

if.end5:                                          ; preds = %if.end
  %6 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6628
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %6, i32 0, i32 3, !dbg !6629
  %7 = load i16, i16* %resourceId, align 2, !dbg !6629
  %8 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6630
  %9 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %8, align 8, !dbg !6631
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %9, i32 0, i32 1, !dbg !6632
  store i16 %7, i16* %id, align 4, !dbg !6633
  %10 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6634
  %11 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %10, align 8, !dbg !6635
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %11, i32 0, i32 0, !dbg !6636
  store i32 4, i32* %type, align 8, !dbg !6637
  %12 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6638
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %12, align 8, !dbg !6639
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !6640
  %15 = load i64, i64* %bufferLen.addr, align 8, !dbg !6641
  %call6 = call i32 @prv_setBuffer(%struct._lwm2m_data_t* %13, i8* %14, i64 %15), !dbg !6642
  store i32 %call6, i32* %res, align 4, !dbg !6643
  %16 = load i32, i32* %res, align 4, !dbg !6644
  %cmp7 = icmp eq i32 %16, 0, !dbg !6646
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6647

if.then9:                                         ; preds = %if.end5
  %17 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6648
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %17, align 8, !dbg !6650
  call void @lwm2m_data_free(i32 1, %struct._lwm2m_data_t* %18), !dbg !6651
  %19 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6652
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %19, align 8, !dbg !6653
  br label %if.end10, !dbg !6654

if.end10:                                         ; preds = %if.then9, %if.end5
  %20 = load i32, i32* %res, align 4, !dbg !6655
  store i32 %20, i32* %retval, align 4, !dbg !6656
  br label %return, !dbg !6656

sw.bb11:                                          ; preds = %entry
  %21 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6657
  %flag12 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %21, i32 0, i32 0, !dbg !6657
  %22 = load i8, i8* %flag12, align 2, !dbg !6657
  %conv13 = zext i8 %22 to i32, !dbg !6657
  %and14 = and i32 %conv13, 1, !dbg !6657
  %cmp15 = icmp ne i32 %and14, 0, !dbg !6657
  br i1 %cmp15, label %if.end18, label %if.then17, !dbg !6659

if.then17:                                        ; preds = %sw.bb11
  store i32 0, i32* %retval, align 4, !dbg !6660
  br label %return, !dbg !6660

if.end18:                                         ; preds = %sw.bb11
  %call19 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 1), !dbg !6661
  %23 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6662
  store %struct._lwm2m_data_t* %call19, %struct._lwm2m_data_t** %23, align 8, !dbg !6663
  %24 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6664
  %25 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %24, align 8, !dbg !6666
  %cmp20 = icmp eq %struct._lwm2m_data_t* %25, null, !dbg !6667
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !6668

if.then22:                                        ; preds = %if.end18
  store i32 0, i32* %retval, align 4, !dbg !6669
  br label %return, !dbg !6669

if.end23:                                         ; preds = %if.end18
  %26 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6670
  %resourceId24 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %26, i32 0, i32 3, !dbg !6671
  %27 = load i16, i16* %resourceId24, align 2, !dbg !6671
  %28 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6672
  %29 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %28, align 8, !dbg !6673
  %id25 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %29, i32 0, i32 1, !dbg !6674
  store i16 %27, i16* %id25, align 4, !dbg !6675
  %30 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6676
  %31 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %30, align 8, !dbg !6677
  %type26 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %31, i32 0, i32 0, !dbg !6678
  store i32 5, i32* %type26, align 8, !dbg !6679
  %32 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6680
  %33 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %32, align 8, !dbg !6681
  %34 = load i8*, i8** %buffer.addr, align 8, !dbg !6682
  %35 = load i64, i64* %bufferLen.addr, align 8, !dbg !6683
  %call27 = call i32 @prv_setBuffer(%struct._lwm2m_data_t* %33, i8* %34, i64 %35), !dbg !6684
  store i32 %call27, i32* %res, align 4, !dbg !6685
  %36 = load i32, i32* %res, align 4, !dbg !6686
  %cmp28 = icmp eq i32 %36, 0, !dbg !6688
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6689

if.then30:                                        ; preds = %if.end23
  %37 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6690
  %38 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %37, align 8, !dbg !6692
  call void @lwm2m_data_free(i32 1, %struct._lwm2m_data_t* %38), !dbg !6693
  %39 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6694
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %39, align 8, !dbg !6695
  br label %if.end31, !dbg !6696

if.end31:                                         ; preds = %if.then30, %if.end23
  %40 = load i32, i32* %res, align 4, !dbg !6697
  store i32 %40, i32* %retval, align 4, !dbg !6698
  br label %return, !dbg !6698

sw.bb32:                                          ; preds = %entry
  %41 = load i8*, i8** %buffer.addr, align 8, !dbg !6699
  %42 = load i64, i64* %bufferLen.addr, align 8, !dbg !6700
  %43 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6701
  %call33 = call i32 @tlv_parse(i8* %41, i64 %42, %struct._lwm2m_data_t** %43), !dbg !6702
  store i32 %call33, i32* %retval, align 4, !dbg !6703
  br label %return, !dbg !6703

sw.bb34:                                          ; preds = %entry
  %44 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6704
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !6705
  %46 = load i64, i64* %bufferLen.addr, align 8, !dbg !6706
  %47 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !6707
  %call35 = call i32 @json_parse(%struct.lwm2m_uri_t* %44, i8* %45, i64 %46, %struct._lwm2m_data_t** %47), !dbg !6708
  store i32 %call35, i32* %retval, align 4, !dbg !6709
  br label %return, !dbg !6709

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6710
  br label %return, !dbg !6710

return:                                           ; preds = %sw.default, %sw.bb34, %sw.bb32, %if.end31, %if.then22, %if.then17, %if.end10, %if.then4, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !6711
  ret i32 %48, !dbg !6711
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_data_serialize(%struct.lwm2m_uri_t* %uriP, i32 %size, %struct._lwm2m_data_t* %dataP, i32* %formatP, i8** %bufferP) #0 !dbg !6712 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %size.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %formatP.addr = alloca i32*, align 8
  %bufferP.addr = alloca i8**, align 8
  %isResourceInstance = alloca i8, align 1
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !6716, metadata !1190), !dbg !6717
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6718, metadata !1190), !dbg !6719
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6720, metadata !1190), !dbg !6721
  store i32* %formatP, i32** %formatP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %formatP.addr, metadata !6722, metadata !1190), !dbg !6723
  store i8** %bufferP, i8*** %bufferP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %bufferP.addr, metadata !6724, metadata !1190), !dbg !6725
  %0 = load i32*, i32** %formatP.addr, align 8, !dbg !6726
  %1 = load i32, i32* %0, align 4, !dbg !6728
  %cmp = icmp eq i32 %1, 0, !dbg !6729
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6730

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32*, i32** %formatP.addr, align 8, !dbg !6731
  %3 = load i32, i32* %2, align 4, !dbg !6732
  %cmp1 = icmp eq i32 %3, 42, !dbg !6733
  br i1 %cmp1, label %if.then, label %if.end19, !dbg !6734

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i32, i32* %size.addr, align 4, !dbg !6735
  %cmp2 = icmp ne i32 %4, 1, !dbg !6738
  br i1 %cmp2, label %if.then18, label %lor.lhs.false3, !dbg !6739

lor.lhs.false3:                                   ; preds = %if.then
  %5 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6740
  %cmp4 = icmp ne %struct.lwm2m_uri_t* %5, null, !dbg !6741
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false7, !dbg !6742

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %6 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6743
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %6, i32 0, i32 0, !dbg !6743
  %7 = load i8, i8* %flag, align 2, !dbg !6743
  %conv = zext i8 %7 to i32, !dbg !6743
  %and = and i32 %conv, 1, !dbg !6743
  %cmp5 = icmp ne i32 %and, 0, !dbg !6743
  br i1 %cmp5, label %lor.lhs.false7, label %if.then18, !dbg !6744

lor.lhs.false7:                                   ; preds = %land.lhs.true, %lor.lhs.false3
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6745
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %8, i32 0, i32 0, !dbg !6746
  %9 = load i32, i32* %type, align 8, !dbg !6746
  %cmp8 = icmp eq i32 %9, 1, !dbg !6747
  br i1 %cmp8, label %if.then18, label %lor.lhs.false10, !dbg !6748

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6749
  %type11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i32 0, i32 0, !dbg !6750
  %11 = load i32, i32* %type11, align 8, !dbg !6750
  %cmp12 = icmp eq i32 %11, 2, !dbg !6751
  br i1 %cmp12, label %if.then18, label %lor.lhs.false14, !dbg !6752

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6753
  %type15 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 0, !dbg !6754
  %13 = load i32, i32* %type15, align 8, !dbg !6754
  %cmp16 = icmp eq i32 %13, 3, !dbg !6755
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !6756

if.then18:                                        ; preds = %lor.lhs.false14, %lor.lhs.false10, %lor.lhs.false7, %land.lhs.true, %if.then
  %14 = load i32*, i32** %formatP.addr, align 8, !dbg !6757
  store i32 11543, i32* %14, align 4, !dbg !6759
  br label %if.end, !dbg !6760

if.end:                                           ; preds = %if.then18, %lor.lhs.false14
  br label %if.end19, !dbg !6761

if.end19:                                         ; preds = %if.end, %lor.lhs.false
  %15 = load i32*, i32** %formatP.addr, align 8, !dbg !6762
  %16 = load i32, i32* %15, align 4, !dbg !6764
  %cmp20 = icmp eq i32 %16, 42, !dbg !6765
  br i1 %cmp20, label %land.lhs.true22, label %if.end27, !dbg !6766

land.lhs.true22:                                  ; preds = %if.end19
  %17 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6767
  %type23 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %17, i32 0, i32 0, !dbg !6768
  %18 = load i32, i32* %type23, align 8, !dbg !6768
  %cmp24 = icmp ne i32 %18, 5, !dbg !6769
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6770

if.then26:                                        ; preds = %land.lhs.true22
  store i32 -1, i32* %retval, align 4, !dbg !6771
  br label %return, !dbg !6771

if.end27:                                         ; preds = %land.lhs.true22, %if.end19
  %19 = load i32*, i32** %formatP.addr, align 8, !dbg !6773
  %20 = load i32, i32* %19, align 4, !dbg !6774
  switch i32 %20, label %sw.default [
    i32 0, label %sw.bb
    i32 42, label %sw.bb28
    i32 11542, label %sw.bb43
    i32 1542, label %sw.bb43
    i32 11543, label %sw.bb63
    i32 1543, label %sw.bb63
  ], !dbg !6775

sw.bb:                                            ; preds = %if.end27
  %21 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6776
  %22 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6778
  %call = call i32 @prv_textSerialize(%struct._lwm2m_data_t* %21, i8** %22), !dbg !6779
  store i32 %call, i32* %retval, align 4, !dbg !6780
  br label %return, !dbg !6780

sw.bb28:                                          ; preds = %if.end27
  %23 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6781
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %23, i32 0, i32 2, !dbg !6782
  %asBuffer = bitcast %union.anon.0* %value to %struct.anon*, !dbg !6783
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !6784
  %24 = load i64, i64* %length, align 8, !dbg !6784
  %call29 = call i8* @lwm2m_malloc(i64 %24), !dbg !6785
  %25 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6786
  store i8* %call29, i8** %25, align 8, !dbg !6787
  %26 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6788
  %27 = load i8*, i8** %26, align 8, !dbg !6790
  %cmp30 = icmp eq i8* %27, null, !dbg !6791
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !6792

if.then32:                                        ; preds = %sw.bb28
  store i32 -1, i32* %retval, align 4, !dbg !6793
  br label %return, !dbg !6793

if.end33:                                         ; preds = %sw.bb28
  %28 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6794
  %29 = load i8*, i8** %28, align 8, !dbg !6795
  %30 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6796
  %value34 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %30, i32 0, i32 2, !dbg !6797
  %asBuffer35 = bitcast %union.anon.0* %value34 to %struct.anon*, !dbg !6798
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer35, i32 0, i32 1, !dbg !6799
  %31 = load i8*, i8** %buffer, align 8, !dbg !6799
  %32 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6800
  %value36 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %32, i32 0, i32 2, !dbg !6801
  %asBuffer37 = bitcast %union.anon.0* %value36 to %struct.anon*, !dbg !6802
  %length38 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer37, i32 0, i32 0, !dbg !6803
  %33 = load i64, i64* %length38, align 8, !dbg !6803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 1, i1 false), !dbg !6804
  %34 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6805
  %value39 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %34, i32 0, i32 2, !dbg !6806
  %asBuffer40 = bitcast %union.anon.0* %value39 to %struct.anon*, !dbg !6807
  %length41 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer40, i32 0, i32 0, !dbg !6808
  %35 = load i64, i64* %length41, align 8, !dbg !6808
  %conv42 = trunc i64 %35 to i32, !dbg !6809
  store i32 %conv42, i32* %retval, align 4, !dbg !6810
  br label %return, !dbg !6810

sw.bb43:                                          ; preds = %if.end27, %if.end27
  call void @llvm.dbg.declare(metadata i8* %isResourceInstance, metadata !6811, metadata !1190), !dbg !6813
  %36 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6814
  %cmp44 = icmp ne %struct.lwm2m_uri_t* %36, null, !dbg !6816
  br i1 %cmp44, label %land.lhs.true46, label %if.else, !dbg !6817

land.lhs.true46:                                  ; preds = %sw.bb43
  %37 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6818
  %flag47 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %37, i32 0, i32 0, !dbg !6818
  %38 = load i8, i8* %flag47, align 2, !dbg !6818
  %conv48 = zext i8 %38 to i32, !dbg !6818
  %and49 = and i32 %conv48, 1, !dbg !6818
  %cmp50 = icmp ne i32 %and49, 0, !dbg !6818
  br i1 %cmp50, label %land.lhs.true52, label %if.else, !dbg !6819

land.lhs.true52:                                  ; preds = %land.lhs.true46
  %39 = load i32, i32* %size.addr, align 4, !dbg !6820
  %cmp53 = icmp ne i32 %39, 1, !dbg !6821
  br i1 %cmp53, label %if.then60, label %lor.lhs.false55, !dbg !6822

lor.lhs.false55:                                  ; preds = %land.lhs.true52
  %40 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6823
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %40, i32 0, i32 1, !dbg !6824
  %41 = load i16, i16* %id, align 4, !dbg !6824
  %conv56 = zext i16 %41 to i32, !dbg !6823
  %42 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6825
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %42, i32 0, i32 3, !dbg !6826
  %43 = load i16, i16* %resourceId, align 2, !dbg !6826
  %conv57 = zext i16 %43 to i32, !dbg !6825
  %cmp58 = icmp ne i32 %conv56, %conv57, !dbg !6827
  br i1 %cmp58, label %if.then60, label %if.else, !dbg !6828

if.then60:                                        ; preds = %lor.lhs.false55, %land.lhs.true52
  store i8 1, i8* %isResourceInstance, align 1, !dbg !6829
  br label %if.end61, !dbg !6831

if.else:                                          ; preds = %lor.lhs.false55, %land.lhs.true46, %sw.bb43
  store i8 0, i8* %isResourceInstance, align 1, !dbg !6832
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then60
  %44 = load i8, i8* %isResourceInstance, align 1, !dbg !6834
  %tobool = trunc i8 %44 to i1, !dbg !6834
  %45 = load i32, i32* %size.addr, align 4, !dbg !6835
  %46 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6836
  %47 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6837
  %call62 = call i32 @tlv_serialize(i1 zeroext %tobool, i32 %45, %struct._lwm2m_data_t* %46, i8** %47), !dbg !6838
  store i32 %call62, i32* %retval, align 4, !dbg !6839
  br label %return, !dbg !6839

sw.bb63:                                          ; preds = %if.end27, %if.end27
  %48 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !6840
  %49 = load i32, i32* %size.addr, align 4, !dbg !6841
  %50 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6842
  %51 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6843
  %call64 = call i32 @json_serialize(%struct.lwm2m_uri_t* %48, i32 %49, %struct._lwm2m_data_t* %50, i8** %51), !dbg !6844
  store i32 %call64, i32* %retval, align 4, !dbg !6845
  br label %return, !dbg !6845

sw.default:                                       ; preds = %if.end27
  store i32 -1, i32* %retval, align 4, !dbg !6846
  br label %return, !dbg !6846

return:                                           ; preds = %sw.default, %sw.bb63, %if.end61, %if.end33, %if.then32, %sw.bb, %if.then26
  %52 = load i32, i32* %retval, align 4, !dbg !6847
  ret i32 %52, !dbg !6847
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_textSerialize(%struct._lwm2m_data_t* %dataP, i8** %bufferP) #0 !dbg !6848 {
entry:
  %retval = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %bufferP.addr = alloca i8**, align 8
  %res = alloca i64, align 8
  %intString = alloca [32 x i8], align 16
  %floatString = alloca [64 x i8], align 16
  %stringBuffer = alloca [11 x i8], align 1
  %length48 = alloca i64, align 8
  %length76 = alloca i64, align 8
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !6851, metadata !1190), !dbg !6852
  store i8** %bufferP, i8*** %bufferP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %bufferP.addr, metadata !6853, metadata !1190), !dbg !6854
  call void @llvm.dbg.declare(metadata i64* %res, metadata !6855, metadata !1190), !dbg !6856
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6857
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !6858
  %1 = load i32, i32* %type, align 8, !dbg !6858
  switch i32 %1, label %sw.default [
    i32 4, label %sw.bb
    i32 6, label %sw.bb9
    i32 7, label %sw.bb23
    i32 8, label %sw.bb38
    i32 9, label %sw.bb47
    i32 5, label %sw.bb75
    i32 0, label %sw.bb98
  ], !dbg !6859

sw.bb:                                            ; preds = %entry
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6860
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i32 0, i32 2, !dbg !6862
  %asBuffer = bitcast %union.anon.0* %value to %struct.anon*, !dbg !6863
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !6864
  %3 = load i64, i64* %length, align 8, !dbg !6864
  %call = call i8* @lwm2m_malloc(i64 %3), !dbg !6865
  %4 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6866
  store i8* %call, i8** %4, align 8, !dbg !6867
  %5 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6868
  %6 = load i8*, i8** %5, align 8, !dbg !6870
  %cmp = icmp eq i8* %6, null, !dbg !6871
  br i1 %cmp, label %if.then, label %if.end, !dbg !6872

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !6873
  br label %return, !dbg !6873

if.end:                                           ; preds = %sw.bb
  %7 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6874
  %8 = load i8*, i8** %7, align 8, !dbg !6875
  %9 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6876
  %value1 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %9, i32 0, i32 2, !dbg !6877
  %asBuffer2 = bitcast %union.anon.0* %value1 to %struct.anon*, !dbg !6878
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer2, i32 0, i32 1, !dbg !6879
  %10 = load i8*, i8** %buffer, align 8, !dbg !6879
  %11 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6880
  %value3 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %11, i32 0, i32 2, !dbg !6881
  %asBuffer4 = bitcast %union.anon.0* %value3 to %struct.anon*, !dbg !6882
  %length5 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer4, i32 0, i32 0, !dbg !6883
  %12 = load i64, i64* %length5, align 8, !dbg !6883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %10, i64 %12, i32 1, i1 false), !dbg !6884
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6885
  %value6 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %13, i32 0, i32 2, !dbg !6886
  %asBuffer7 = bitcast %union.anon.0* %value6 to %struct.anon*, !dbg !6887
  %length8 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer7, i32 0, i32 0, !dbg !6888
  %14 = load i64, i64* %length8, align 8, !dbg !6888
  %conv = trunc i64 %14 to i32, !dbg !6889
  store i32 %conv, i32* %retval, align 4, !dbg !6890
  br label %return, !dbg !6890

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata [32 x i8]* %intString, metadata !6891, metadata !1190), !dbg !6896
  %15 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6897
  %value10 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %15, i32 0, i32 2, !dbg !6898
  %asInteger = bitcast %union.anon.0* %value10 to i64*, !dbg !6899
  %16 = load i64, i64* %asInteger, align 8, !dbg !6899
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %intString, i32 0, i32 0, !dbg !6900
  %call11 = call i64 @utils_intToText(i64 %16, i8* %arraydecay, i64 32), !dbg !6901
  store i64 %call11, i64* %res, align 8, !dbg !6902
  %17 = load i64, i64* %res, align 8, !dbg !6903
  %cmp12 = icmp eq i64 %17, 0, !dbg !6905
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6906

if.then14:                                        ; preds = %sw.bb9
  store i32 -1, i32* %retval, align 4, !dbg !6907
  br label %return, !dbg !6907

if.end15:                                         ; preds = %sw.bb9
  %18 = load i64, i64* %res, align 8, !dbg !6908
  %call16 = call i8* @lwm2m_malloc(i64 %18), !dbg !6909
  %19 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6910
  store i8* %call16, i8** %19, align 8, !dbg !6911
  %20 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6912
  %21 = load i8*, i8** %20, align 8, !dbg !6914
  %cmp17 = icmp eq i8* null, %21, !dbg !6915
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6916

if.then19:                                        ; preds = %if.end15
  store i32 -1, i32* %retval, align 4, !dbg !6917
  br label %return, !dbg !6917

if.end20:                                         ; preds = %if.end15
  %22 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6918
  %23 = load i8*, i8** %22, align 8, !dbg !6919
  %arraydecay21 = getelementptr inbounds [32 x i8], [32 x i8]* %intString, i32 0, i32 0, !dbg !6920
  %24 = load i64, i64* %res, align 8, !dbg !6921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %arraydecay21, i64 %24, i32 1, i1 false), !dbg !6920
  %25 = load i64, i64* %res, align 8, !dbg !6922
  %conv22 = trunc i64 %25 to i32, !dbg !6923
  store i32 %conv22, i32* %retval, align 4, !dbg !6924
  br label %return, !dbg !6924

sw.bb23:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %floatString, metadata !6925, metadata !1190), !dbg !6928
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6929
  %value24 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %26, i32 0, i32 2, !dbg !6930
  %asFloat = bitcast %union.anon.0* %value24 to double*, !dbg !6931
  %27 = load double, double* %asFloat, align 8, !dbg !6931
  %arraydecay25 = getelementptr inbounds [64 x i8], [64 x i8]* %floatString, i32 0, i32 0, !dbg !6932
  %call26 = call i64 @utils_floatToText(double %27, i8* %arraydecay25, i64 64), !dbg !6933
  store i64 %call26, i64* %res, align 8, !dbg !6934
  %28 = load i64, i64* %res, align 8, !dbg !6935
  %cmp27 = icmp eq i64 %28, 0, !dbg !6937
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !6938

if.then29:                                        ; preds = %sw.bb23
  store i32 -1, i32* %retval, align 4, !dbg !6939
  br label %return, !dbg !6939

if.end30:                                         ; preds = %sw.bb23
  %29 = load i64, i64* %res, align 8, !dbg !6940
  %call31 = call i8* @lwm2m_malloc(i64 %29), !dbg !6941
  %30 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6942
  store i8* %call31, i8** %30, align 8, !dbg !6943
  %31 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6944
  %32 = load i8*, i8** %31, align 8, !dbg !6946
  %cmp32 = icmp eq i8* null, %32, !dbg !6947
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !6948

if.then34:                                        ; preds = %if.end30
  store i32 -1, i32* %retval, align 4, !dbg !6949
  br label %return, !dbg !6949

if.end35:                                         ; preds = %if.end30
  %33 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6950
  %34 = load i8*, i8** %33, align 8, !dbg !6951
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %floatString, i32 0, i32 0, !dbg !6952
  %35 = load i64, i64* %res, align 8, !dbg !6953
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %arraydecay36, i64 %35, i32 1, i1 false), !dbg !6952
  %36 = load i64, i64* %res, align 8, !dbg !6954
  %conv37 = trunc i64 %36 to i32, !dbg !6955
  store i32 %conv37, i32* %retval, align 4, !dbg !6956
  br label %return, !dbg !6956

sw.bb38:                                          ; preds = %entry
  %call39 = call i8* @lwm2m_malloc(i64 1), !dbg !6957
  %37 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6958
  store i8* %call39, i8** %37, align 8, !dbg !6959
  %38 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6960
  %39 = load i8*, i8** %38, align 8, !dbg !6962
  %cmp40 = icmp eq i8* null, %39, !dbg !6963
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !6964

if.then42:                                        ; preds = %sw.bb38
  store i32 -1, i32* %retval, align 4, !dbg !6965
  br label %return, !dbg !6965

if.end43:                                         ; preds = %sw.bb38
  %40 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6966
  %value44 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %40, i32 0, i32 2, !dbg !6967
  %asBoolean = bitcast %union.anon.0* %value44 to i8*, !dbg !6968
  %41 = load i8, i8* %asBoolean, align 8, !dbg !6968
  %tobool = trunc i8 %41 to i1, !dbg !6968
  %42 = zext i1 %tobool to i64, !dbg !6966
  %cond = select i1 %tobool, i32 49, i32 48, !dbg !6966
  %conv46 = trunc i32 %cond to i8, !dbg !6966
  %43 = load i8**, i8*** %bufferP.addr, align 8, !dbg !6969
  %arrayidx = getelementptr inbounds i8*, i8** %43, i64 0, !dbg !6969
  %44 = load i8*, i8** %arrayidx, align 8, !dbg !6969
  store i8 %conv46, i8* %44, align 1, !dbg !6970
  store i32 1, i32* %retval, align 4, !dbg !6971
  br label %return, !dbg !6971

sw.bb47:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [11 x i8]* %stringBuffer, metadata !6972, metadata !1190), !dbg !6977
  call void @llvm.dbg.declare(metadata i64* %length48, metadata !6978, metadata !1190), !dbg !6979
  %45 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6980
  %value49 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %45, i32 0, i32 2, !dbg !6981
  %asObjLink = bitcast %union.anon.0* %value49 to %struct.anon.1*, !dbg !6982
  %objectId = getelementptr inbounds %struct.anon.1, %struct.anon.1* %asObjLink, i32 0, i32 0, !dbg !6983
  %46 = load i16, i16* %objectId, align 8, !dbg !6983
  %conv50 = zext i16 %46 to i64, !dbg !6980
  %arraydecay51 = getelementptr inbounds [11 x i8], [11 x i8]* %stringBuffer, i32 0, i32 0, !dbg !6984
  %call52 = call i64 @utils_intToText(i64 %conv50, i8* %arraydecay51, i64 5), !dbg !6985
  store i64 %call52, i64* %length48, align 8, !dbg !6986
  %47 = load i64, i64* %length48, align 8, !dbg !6987
  %cmp53 = icmp eq i64 %47, 0, !dbg !6989
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !6990

if.then55:                                        ; preds = %sw.bb47
  store i32 -1, i32* %retval, align 4, !dbg !6991
  br label %return, !dbg !6991

if.end56:                                         ; preds = %sw.bb47
  %arrayidx57 = getelementptr inbounds [11 x i8], [11 x i8]* %stringBuffer, i64 0, i64 5, !dbg !6992
  store i8 58, i8* %arrayidx57, align 1, !dbg !6993
  %48 = load i64, i64* %length48, align 8, !dbg !6994
  %add = add i64 %48, 1, !dbg !6995
  store i64 %add, i64* %res, align 8, !dbg !6996
  %49 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !6997
  %value58 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %49, i32 0, i32 2, !dbg !6998
  %asObjLink59 = bitcast %union.anon.0* %value58 to %struct.anon.1*, !dbg !6999
  %objectInstanceId = getelementptr inbounds %struct.anon.1, %struct.anon.1* %asObjLink59, i32 0, i32 1, !dbg !7000
  %50 = load i16, i16* %objectInstanceId, align 2, !dbg !7000
  %conv60 = zext i16 %50 to i64, !dbg !6997
  %arraydecay61 = getelementptr inbounds [11 x i8], [11 x i8]* %stringBuffer, i32 0, i32 0, !dbg !7001
  %51 = load i64, i64* %res, align 8, !dbg !7002
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay61, i64 %51, !dbg !7003
  %call62 = call i64 @utils_intToText(i64 %conv60, i8* %add.ptr, i64 5), !dbg !7004
  store i64 %call62, i64* %length48, align 8, !dbg !7005
  %52 = load i64, i64* %length48, align 8, !dbg !7006
  %cmp63 = icmp eq i64 %52, 0, !dbg !7008
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7009

if.then65:                                        ; preds = %if.end56
  store i32 -1, i32* %retval, align 4, !dbg !7010
  br label %return, !dbg !7010

if.end66:                                         ; preds = %if.end56
  %53 = load i64, i64* %length48, align 8, !dbg !7011
  %54 = load i64, i64* %res, align 8, !dbg !7012
  %add67 = add i64 %54, %53, !dbg !7012
  store i64 %add67, i64* %res, align 8, !dbg !7012
  %55 = load i64, i64* %res, align 8, !dbg !7013
  %call68 = call i8* @lwm2m_malloc(i64 %55), !dbg !7014
  %56 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7015
  store i8* %call68, i8** %56, align 8, !dbg !7016
  %57 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7017
  %58 = load i8*, i8** %57, align 8, !dbg !7019
  %cmp69 = icmp eq i8* %58, null, !dbg !7020
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !7021

if.then71:                                        ; preds = %if.end66
  store i32 -1, i32* %retval, align 4, !dbg !7022
  br label %return, !dbg !7022

if.end72:                                         ; preds = %if.end66
  %59 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7023
  %60 = load i8*, i8** %59, align 8, !dbg !7024
  %arraydecay73 = getelementptr inbounds [11 x i8], [11 x i8]* %stringBuffer, i32 0, i32 0, !dbg !7025
  %61 = load i64, i64* %res, align 8, !dbg !7026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %arraydecay73, i64 %61, i32 1, i1 false), !dbg !7025
  %62 = load i64, i64* %res, align 8, !dbg !7027
  %conv74 = trunc i64 %62 to i32, !dbg !7027
  store i32 %conv74, i32* %retval, align 4, !dbg !7028
  br label %return, !dbg !7028

sw.bb75:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %length76, metadata !7029, metadata !1190), !dbg !7031
  %63 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !7032
  %value77 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %63, i32 0, i32 2, !dbg !7033
  %asBuffer78 = bitcast %union.anon.0* %value77 to %struct.anon*, !dbg !7034
  %length79 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer78, i32 0, i32 0, !dbg !7035
  %64 = load i64, i64* %length79, align 8, !dbg !7035
  %call80 = call i64 @utils_base64GetSize(i64 %64), !dbg !7036
  store i64 %call80, i64* %length76, align 8, !dbg !7037
  %65 = load i64, i64* %length76, align 8, !dbg !7038
  %call81 = call i8* @lwm2m_malloc(i64 %65), !dbg !7039
  %66 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7040
  store i8* %call81, i8** %66, align 8, !dbg !7041
  %67 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7042
  %68 = load i8*, i8** %67, align 8, !dbg !7044
  %cmp82 = icmp eq i8* %68, null, !dbg !7045
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !7046

if.then84:                                        ; preds = %sw.bb75
  store i32 0, i32* %retval, align 4, !dbg !7047
  br label %return, !dbg !7047

if.end85:                                         ; preds = %sw.bb75
  %69 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !7048
  %value86 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %69, i32 0, i32 2, !dbg !7049
  %asBuffer87 = bitcast %union.anon.0* %value86 to %struct.anon*, !dbg !7050
  %buffer88 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer87, i32 0, i32 1, !dbg !7051
  %70 = load i8*, i8** %buffer88, align 8, !dbg !7051
  %71 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !7052
  %value89 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %71, i32 0, i32 2, !dbg !7053
  %asBuffer90 = bitcast %union.anon.0* %value89 to %struct.anon*, !dbg !7054
  %length91 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer90, i32 0, i32 0, !dbg !7055
  %72 = load i64, i64* %length91, align 8, !dbg !7055
  %73 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7056
  %74 = load i8*, i8** %73, align 8, !dbg !7057
  %75 = load i64, i64* %length76, align 8, !dbg !7058
  %call92 = call i64 @utils_base64Encode(i8* %70, i64 %72, i8* %74, i64 %75), !dbg !7059
  store i64 %call92, i64* %length76, align 8, !dbg !7060
  %76 = load i64, i64* %length76, align 8, !dbg !7061
  %cmp93 = icmp eq i64 %76, 0, !dbg !7063
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !7064

if.then95:                                        ; preds = %if.end85
  %77 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7065
  %78 = load i8*, i8** %77, align 8, !dbg !7067
  call void @lwm2m_free(i8* %78), !dbg !7068
  %79 = load i8**, i8*** %bufferP.addr, align 8, !dbg !7069
  store i8* null, i8** %79, align 8, !dbg !7070
  store i32 0, i32* %retval, align 4, !dbg !7071
  br label %return, !dbg !7071

if.end96:                                         ; preds = %if.end85
  %80 = load i64, i64* %length76, align 8, !dbg !7072
  %conv97 = trunc i64 %80 to i32, !dbg !7073
  store i32 %conv97, i32* %retval, align 4, !dbg !7074
  br label %return, !dbg !7074

sw.bb98:                                          ; preds = %entry
  br label %sw.default, !dbg !7075

sw.default:                                       ; preds = %sw.bb98, %entry
  store i32 -1, i32* %retval, align 4, !dbg !7076
  br label %return, !dbg !7076

return:                                           ; preds = %sw.default, %if.end96, %if.then95, %if.then84, %if.end72, %if.then71, %if.then65, %if.then55, %if.end43, %if.then42, %if.end35, %if.then34, %if.then29, %if.end20, %if.then19, %if.then14, %if.end, %if.then
  %81 = load i32, i32* %retval, align 4, !dbg !7077
  ret i32 %81, !dbg !7077
}

; Function Attrs: noinline nounwind uwtable
define %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %head, %struct._lwm2m_list_t* %node) #0 !dbg !7078 {
entry:
  %retval = alloca %struct._lwm2m_list_t*, align 8
  %head.addr = alloca %struct._lwm2m_list_t*, align 8
  %node.addr = alloca %struct._lwm2m_list_t*, align 8
  %target = alloca %struct._lwm2m_list_t*, align 8
  store %struct._lwm2m_list_t* %head, %struct._lwm2m_list_t** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %head.addr, metadata !7088, metadata !1190), !dbg !7089
  store %struct._lwm2m_list_t* %node, %struct._lwm2m_list_t** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %node.addr, metadata !7090, metadata !1190), !dbg !7091
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %target, metadata !7092, metadata !1190), !dbg !7093
  %0 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7094
  %cmp = icmp eq %struct._lwm2m_list_t* null, %0, !dbg !7096
  br i1 %cmp, label %if.then, label %if.end, !dbg !7097

if.then:                                          ; preds = %entry
  %1 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7098
  store %struct._lwm2m_list_t* %1, %struct._lwm2m_list_t** %retval, align 8, !dbg !7099
  br label %return, !dbg !7099

if.end:                                           ; preds = %entry
  %2 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7100
  %id = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %2, i32 0, i32 1, !dbg !7102
  %3 = load i16, i16* %id, align 8, !dbg !7102
  %conv = zext i16 %3 to i32, !dbg !7100
  %4 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7103
  %id1 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %4, i32 0, i32 1, !dbg !7104
  %5 = load i16, i16* %id1, align 8, !dbg !7104
  %conv2 = zext i16 %5 to i32, !dbg !7103
  %cmp3 = icmp sgt i32 %conv, %conv2, !dbg !7105
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !7106

if.then5:                                         ; preds = %if.end
  %6 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7107
  %7 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7109
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %7, i32 0, i32 0, !dbg !7110
  store %struct._lwm2m_list_t* %6, %struct._lwm2m_list_t** %next, align 8, !dbg !7111
  %8 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7112
  store %struct._lwm2m_list_t* %8, %struct._lwm2m_list_t** %retval, align 8, !dbg !7113
  br label %return, !dbg !7113

if.end6:                                          ; preds = %if.end
  %9 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7114
  store %struct._lwm2m_list_t* %9, %struct._lwm2m_list_t** %target, align 8, !dbg !7115
  br label %while.cond, !dbg !7116

while.cond:                                       ; preds = %while.body, %if.end6
  %10 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7117
  %next7 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %10, i32 0, i32 0, !dbg !7118
  %11 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next7, align 8, !dbg !7118
  %cmp8 = icmp ne %struct._lwm2m_list_t* null, %11, !dbg !7119
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !7120

land.rhs:                                         ; preds = %while.cond
  %12 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7121
  %next10 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %12, i32 0, i32 0, !dbg !7122
  %13 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next10, align 8, !dbg !7122
  %id11 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %13, i32 0, i32 1, !dbg !7123
  %14 = load i16, i16* %id11, align 8, !dbg !7123
  %conv12 = zext i16 %14 to i32, !dbg !7121
  %15 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7124
  %id13 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %15, i32 0, i32 1, !dbg !7125
  %16 = load i16, i16* %id13, align 8, !dbg !7125
  %conv14 = zext i16 %16 to i32, !dbg !7124
  %cmp15 = icmp slt i32 %conv12, %conv14, !dbg !7126
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %17 = phi i1 [ false, %while.cond ], [ %cmp15, %land.rhs ]
  br i1 %17, label %while.body, label %while.end, !dbg !7116

while.body:                                       ; preds = %land.end
  %18 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7127
  %next17 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %18, i32 0, i32 0, !dbg !7129
  %19 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next17, align 8, !dbg !7129
  store %struct._lwm2m_list_t* %19, %struct._lwm2m_list_t** %target, align 8, !dbg !7130
  br label %while.cond, !dbg !7116, !llvm.loop !7131

while.end:                                        ; preds = %land.end
  %20 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7133
  %next18 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %20, i32 0, i32 0, !dbg !7134
  %21 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next18, align 8, !dbg !7134
  %22 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7135
  %next19 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %22, i32 0, i32 0, !dbg !7136
  store %struct._lwm2m_list_t* %21, %struct._lwm2m_list_t** %next19, align 8, !dbg !7137
  %23 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %node.addr, align 8, !dbg !7138
  %24 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7139
  %next20 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %24, i32 0, i32 0, !dbg !7140
  store %struct._lwm2m_list_t* %23, %struct._lwm2m_list_t** %next20, align 8, !dbg !7141
  %25 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7142
  store %struct._lwm2m_list_t* %25, %struct._lwm2m_list_t** %retval, align 8, !dbg !7143
  br label %return, !dbg !7143

return:                                           ; preds = %while.end, %if.then5, %if.then
  %26 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %retval, align 8, !dbg !7144
  ret %struct._lwm2m_list_t* %26, !dbg !7144
}

; Function Attrs: noinline nounwind uwtable
define %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %head, i16 zeroext %id) #0 !dbg !7145 {
entry:
  %retval = alloca %struct._lwm2m_list_t*, align 8
  %head.addr = alloca %struct._lwm2m_list_t*, align 8
  %id.addr = alloca i16, align 2
  store %struct._lwm2m_list_t* %head, %struct._lwm2m_list_t** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %head.addr, metadata !7148, metadata !1190), !dbg !7149
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !7150, metadata !1190), !dbg !7151
  br label %while.cond, !dbg !7152

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7153
  %cmp = icmp ne %struct._lwm2m_list_t* null, %0, !dbg !7154
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7155

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7156
  %id1 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %1, i32 0, i32 1, !dbg !7157
  %2 = load i16, i16* %id1, align 8, !dbg !7157
  %conv = zext i16 %2 to i32, !dbg !7156
  %3 = load i16, i16* %id.addr, align 2, !dbg !7158
  %conv2 = zext i16 %3 to i32, !dbg !7158
  %cmp3 = icmp slt i32 %conv, %conv2, !dbg !7159
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !7152

while.body:                                       ; preds = %land.end
  %5 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7160
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %5, i32 0, i32 0, !dbg !7162
  %6 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next, align 8, !dbg !7162
  store %struct._lwm2m_list_t* %6, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7163
  br label %while.cond, !dbg !7152, !llvm.loop !7164

while.end:                                        ; preds = %land.end
  %7 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7166
  %cmp5 = icmp ne %struct._lwm2m_list_t* null, %7, !dbg !7168
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !7169

land.lhs.true:                                    ; preds = %while.end
  %8 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7170
  %id7 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %8, i32 0, i32 1, !dbg !7171
  %9 = load i16, i16* %id7, align 8, !dbg !7171
  %conv8 = zext i16 %9 to i32, !dbg !7170
  %10 = load i16, i16* %id.addr, align 2, !dbg !7172
  %conv9 = zext i16 %10 to i32, !dbg !7172
  %cmp10 = icmp eq i32 %conv8, %conv9, !dbg !7173
  br i1 %cmp10, label %if.then, label %if.end, !dbg !7174

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7175
  store %struct._lwm2m_list_t* %11, %struct._lwm2m_list_t** %retval, align 8, !dbg !7176
  br label %return, !dbg !7176

if.end:                                           ; preds = %land.lhs.true, %while.end
  store %struct._lwm2m_list_t* null, %struct._lwm2m_list_t** %retval, align 8, !dbg !7177
  br label %return, !dbg !7177

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %retval, align 8, !dbg !7178
  ret %struct._lwm2m_list_t* %12, !dbg !7178
}

; Function Attrs: noinline nounwind uwtable
define %struct._lwm2m_list_t* @lwm2m_list_remove(%struct._lwm2m_list_t* %head, i16 zeroext %id, %struct._lwm2m_list_t** %nodeP) #0 !dbg !7179 {
entry:
  %retval = alloca %struct._lwm2m_list_t*, align 8
  %head.addr = alloca %struct._lwm2m_list_t*, align 8
  %id.addr = alloca i16, align 2
  %nodeP.addr = alloca %struct._lwm2m_list_t**, align 8
  %target = alloca %struct._lwm2m_list_t*, align 8
  store %struct._lwm2m_list_t* %head, %struct._lwm2m_list_t** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %head.addr, metadata !7183, metadata !1190), !dbg !7184
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !7185, metadata !1190), !dbg !7186
  store %struct._lwm2m_list_t** %nodeP, %struct._lwm2m_list_t*** %nodeP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t*** %nodeP.addr, metadata !7187, metadata !1190), !dbg !7188
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %target, metadata !7189, metadata !1190), !dbg !7190
  %0 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7191
  %cmp = icmp eq %struct._lwm2m_list_t* %0, null, !dbg !7193
  br i1 %cmp, label %if.then, label %if.end2, !dbg !7194

if.then:                                          ; preds = %entry
  %1 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7195
  %tobool = icmp ne %struct._lwm2m_list_t** %1, null, !dbg !7195
  br i1 %tobool, label %if.then1, label %if.end, !dbg !7198

if.then1:                                         ; preds = %if.then
  %2 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7199
  store %struct._lwm2m_list_t* null, %struct._lwm2m_list_t** %2, align 8, !dbg !7200
  br label %if.end, !dbg !7201

if.end:                                           ; preds = %if.then1, %if.then
  store %struct._lwm2m_list_t* null, %struct._lwm2m_list_t** %retval, align 8, !dbg !7202
  br label %return, !dbg !7202

if.end2:                                          ; preds = %entry
  %3 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7203
  %id3 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %3, i32 0, i32 1, !dbg !7205
  %4 = load i16, i16* %id3, align 8, !dbg !7205
  %conv = zext i16 %4 to i32, !dbg !7203
  %5 = load i16, i16* %id.addr, align 2, !dbg !7206
  %conv4 = zext i16 %5 to i32, !dbg !7206
  %cmp5 = icmp eq i32 %conv, %conv4, !dbg !7207
  br i1 %cmp5, label %if.then7, label %if.end11, !dbg !7208

if.then7:                                         ; preds = %if.end2
  %6 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7209
  %tobool8 = icmp ne %struct._lwm2m_list_t** %6, null, !dbg !7209
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7212

if.then9:                                         ; preds = %if.then7
  %7 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7213
  %8 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7214
  store %struct._lwm2m_list_t* %7, %struct._lwm2m_list_t** %8, align 8, !dbg !7215
  br label %if.end10, !dbg !7216

if.end10:                                         ; preds = %if.then9, %if.then7
  %9 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7217
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %9, i32 0, i32 0, !dbg !7218
  %10 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next, align 8, !dbg !7218
  store %struct._lwm2m_list_t* %10, %struct._lwm2m_list_t** %retval, align 8, !dbg !7219
  br label %return, !dbg !7219

if.end11:                                         ; preds = %if.end2
  %11 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7220
  store %struct._lwm2m_list_t* %11, %struct._lwm2m_list_t** %target, align 8, !dbg !7221
  br label %while.cond, !dbg !7222

while.cond:                                       ; preds = %while.body, %if.end11
  %12 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7223
  %next12 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %12, i32 0, i32 0, !dbg !7224
  %13 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next12, align 8, !dbg !7224
  %cmp13 = icmp ne %struct._lwm2m_list_t* null, %13, !dbg !7225
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !7226

land.rhs:                                         ; preds = %while.cond
  %14 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7227
  %next15 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %14, i32 0, i32 0, !dbg !7228
  %15 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next15, align 8, !dbg !7228
  %id16 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %15, i32 0, i32 1, !dbg !7229
  %16 = load i16, i16* %id16, align 8, !dbg !7229
  %conv17 = zext i16 %16 to i32, !dbg !7227
  %17 = load i16, i16* %id.addr, align 2, !dbg !7230
  %conv18 = zext i16 %17 to i32, !dbg !7230
  %cmp19 = icmp slt i32 %conv17, %conv18, !dbg !7231
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp19, %land.rhs ]
  br i1 %18, label %while.body, label %while.end, !dbg !7222

while.body:                                       ; preds = %land.end
  %19 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7232
  %next21 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %19, i32 0, i32 0, !dbg !7234
  %20 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next21, align 8, !dbg !7234
  store %struct._lwm2m_list_t* %20, %struct._lwm2m_list_t** %target, align 8, !dbg !7235
  br label %while.cond, !dbg !7222, !llvm.loop !7236

while.end:                                        ; preds = %land.end
  %21 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7238
  %next22 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %21, i32 0, i32 0, !dbg !7240
  %22 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next22, align 8, !dbg !7240
  %cmp23 = icmp ne %struct._lwm2m_list_t* null, %22, !dbg !7241
  br i1 %cmp23, label %land.lhs.true, label %if.else, !dbg !7242

land.lhs.true:                                    ; preds = %while.end
  %23 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7243
  %next25 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %23, i32 0, i32 0, !dbg !7244
  %24 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next25, align 8, !dbg !7244
  %id26 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %24, i32 0, i32 1, !dbg !7245
  %25 = load i16, i16* %id26, align 8, !dbg !7245
  %conv27 = zext i16 %25 to i32, !dbg !7243
  %26 = load i16, i16* %id.addr, align 2, !dbg !7246
  %conv28 = zext i16 %26 to i32, !dbg !7246
  %cmp29 = icmp eq i32 %conv27, %conv28, !dbg !7247
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !7248

if.then31:                                        ; preds = %land.lhs.true
  %27 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7249
  %tobool32 = icmp ne %struct._lwm2m_list_t** %27, null, !dbg !7249
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !7252

if.then33:                                        ; preds = %if.then31
  %28 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7253
  %next34 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %28, i32 0, i32 0, !dbg !7254
  %29 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next34, align 8, !dbg !7254
  %30 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7255
  store %struct._lwm2m_list_t* %29, %struct._lwm2m_list_t** %30, align 8, !dbg !7256
  br label %if.end35, !dbg !7257

if.end35:                                         ; preds = %if.then33, %if.then31
  %31 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7258
  %next36 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %31, i32 0, i32 0, !dbg !7259
  %32 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next36, align 8, !dbg !7259
  %next37 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %32, i32 0, i32 0, !dbg !7260
  %33 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next37, align 8, !dbg !7260
  %34 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7261
  %next38 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %34, i32 0, i32 0, !dbg !7262
  store %struct._lwm2m_list_t* %33, %struct._lwm2m_list_t** %next38, align 8, !dbg !7263
  br label %if.end42, !dbg !7264

if.else:                                          ; preds = %land.lhs.true, %while.end
  %35 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7265
  %tobool39 = icmp ne %struct._lwm2m_list_t** %35, null, !dbg !7265
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !7268

if.then40:                                        ; preds = %if.else
  %36 = load %struct._lwm2m_list_t**, %struct._lwm2m_list_t*** %nodeP.addr, align 8, !dbg !7269
  store %struct._lwm2m_list_t* null, %struct._lwm2m_list_t** %36, align 8, !dbg !7270
  br label %if.end41, !dbg !7271

if.end41:                                         ; preds = %if.then40, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end35
  %37 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7272
  store %struct._lwm2m_list_t* %37, %struct._lwm2m_list_t** %retval, align 8, !dbg !7273
  br label %return, !dbg !7273

return:                                           ; preds = %if.end42, %if.end10, %if.end
  %38 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %retval, align 8, !dbg !7274
  ret %struct._lwm2m_list_t* %38, !dbg !7274
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @lwm2m_list_newId(%struct._lwm2m_list_t* %head) #0 !dbg !7275 {
entry:
  %head.addr = alloca %struct._lwm2m_list_t*, align 8
  %id = alloca i16, align 2
  %target = alloca %struct._lwm2m_list_t*, align 8
  store %struct._lwm2m_list_t* %head, %struct._lwm2m_list_t** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %head.addr, metadata !7278, metadata !1190), !dbg !7279
  call void @llvm.dbg.declare(metadata i16* %id, metadata !7280, metadata !1190), !dbg !7281
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %target, metadata !7282, metadata !1190), !dbg !7283
  store i16 0, i16* %id, align 2, !dbg !7284
  %0 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7285
  store %struct._lwm2m_list_t* %0, %struct._lwm2m_list_t** %target, align 8, !dbg !7286
  br label %while.cond, !dbg !7287

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7288
  %cmp = icmp ne %struct._lwm2m_list_t* %1, null, !dbg !7289
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7290

land.rhs:                                         ; preds = %while.cond
  %2 = load i16, i16* %id, align 2, !dbg !7291
  %conv = zext i16 %2 to i32, !dbg !7291
  %3 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7292
  %id1 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %3, i32 0, i32 1, !dbg !7293
  %4 = load i16, i16* %id1, align 8, !dbg !7293
  %conv2 = zext i16 %4 to i32, !dbg !7292
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !7294
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %5, label %while.body, label %while.end, !dbg !7287

while.body:                                       ; preds = %land.end
  %6 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7295
  %id5 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %6, i32 0, i32 1, !dbg !7297
  %7 = load i16, i16* %id5, align 8, !dbg !7297
  %conv6 = zext i16 %7 to i32, !dbg !7295
  %add = add nsw i32 %conv6, 1, !dbg !7298
  %conv7 = trunc i32 %add to i16, !dbg !7295
  store i16 %conv7, i16* %id, align 2, !dbg !7299
  %8 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !7300
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %8, i32 0, i32 0, !dbg !7301
  %9 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next, align 8, !dbg !7301
  store %struct._lwm2m_list_t* %9, %struct._lwm2m_list_t** %target, align 8, !dbg !7302
  br label %while.cond, !dbg !7287, !llvm.loop !7303

while.end:                                        ; preds = %land.end
  %10 = load i16, i16* %id, align 2, !dbg !7305
  ret i16 %10, !dbg !7306
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_list_free(%struct._lwm2m_list_t* %head) #0 !dbg !7307 {
entry:
  %head.addr = alloca %struct._lwm2m_list_t*, align 8
  %nextP = alloca %struct._lwm2m_list_t*, align 8
  store %struct._lwm2m_list_t* %head, %struct._lwm2m_list_t** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %head.addr, metadata !7310, metadata !1190), !dbg !7311
  %0 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7312
  %cmp = icmp ne %struct._lwm2m_list_t* %0, null, !dbg !7314
  br i1 %cmp, label %if.then, label %if.end, !dbg !7315

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %nextP, metadata !7316, metadata !1190), !dbg !7318
  %1 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7319
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %1, i32 0, i32 0, !dbg !7320
  %2 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next, align 8, !dbg !7320
  store %struct._lwm2m_list_t* %2, %struct._lwm2m_list_t** %nextP, align 8, !dbg !7321
  %3 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %head.addr, align 8, !dbg !7322
  %4 = bitcast %struct._lwm2m_list_t* %3 to i8*, !dbg !7322
  call void @lwm2m_free(i8* %4), !dbg !7323
  %5 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %nextP, align 8, !dbg !7324
  call void @lwm2m_list_free(%struct._lwm2m_list_t* %5), !dbg !7325
  br label %if.end, !dbg !7326

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7327
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_handle_packet(%struct.lwm2m_context_t* %contextP, i8* %buffer, i32 %length, i8* %fromSessionH) #0 !dbg !261 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %fromSessionH.addr = alloca i8*, align 8
  %coap_error_code = alloca i8, align 1
  %block_num = alloca i32, align 4
  %block_size = alloca i16, align 2
  %block_offset = alloca i32, align 4
  %new_offset = alloca i64, align 8
  %done = alloca i8, align 1
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !7328, metadata !1190), !dbg !7329
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7330, metadata !1190), !dbg !7331
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !7332, metadata !1190), !dbg !7333
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !7334, metadata !1190), !dbg !7335
  call void @llvm.dbg.declare(metadata i8* %coap_error_code, metadata !7336, metadata !1190), !dbg !7337
  store i8 0, i8* %coap_error_code, align 1, !dbg !7337
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !7338
  %1 = load i32, i32* %length.addr, align 4, !dbg !7339
  %conv = trunc i32 %1 to i16, !dbg !7340
  %call = call i32 @coap_parse_message(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message to i8*), i8* %0, i16 zeroext %conv), !dbg !7341
  %conv1 = trunc i32 %call to i8, !dbg !7341
  store i8 %conv1, i8* %coap_error_code, align 1, !dbg !7342
  %2 = load i8, i8* %coap_error_code, align 1, !dbg !7343
  %conv2 = zext i8 %2 to i32, !dbg !7343
  %cmp = icmp eq i32 %conv2, 0, !dbg !7345
  br i1 %cmp, label %if.then, label %if.else166, !dbg !7346

if.then:                                          ; preds = %entry
  %3 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 3), align 16, !dbg !7347
  %conv4 = zext i8 %3 to i32, !dbg !7350
  %cmp5 = icmp sge i32 %conv4, 1, !dbg !7351
  br i1 %cmp5, label %land.lhs.true, label %if.else134, !dbg !7352

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 3), align 16, !dbg !7353
  %conv7 = zext i8 %4 to i32, !dbg !7354
  %cmp8 = icmp sle i32 %conv7, 4, !dbg !7355
  br i1 %cmp8, label %if.then10, label %if.else134, !dbg !7356

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %block_num, metadata !7357, metadata !1190), !dbg !7359
  store i32 0, i32* %block_num, align 4, !dbg !7359
  call void @llvm.dbg.declare(metadata i16* %block_size, metadata !7360, metadata !1190), !dbg !7361
  store i16 128, i16* %block_size, align 2, !dbg !7361
  call void @llvm.dbg.declare(metadata i32* %block_offset, metadata !7362, metadata !1190), !dbg !7363
  store i32 0, i32* %block_offset, align 4, !dbg !7363
  call void @llvm.dbg.declare(metadata i64* %new_offset, metadata !7364, metadata !1190), !dbg !7365
  store i64 0, i64* %new_offset, align 8, !dbg !7365
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 2), align 4, !dbg !7366
  %cmp11 = icmp eq i32 %5, 0, !dbg !7368
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !7369

if.then13:                                        ; preds = %if.then10
  %6 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 4), align 2, !dbg !7370
  call void @coap_init_message(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 2, i8 zeroext 69, i16 zeroext %6), !dbg !7372
  br label %if.end, !dbg !7373

if.else:                                          ; preds = %if.then10
  %7 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7374
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %7, i32 0, i32 3, !dbg !7376
  %8 = load i16, i16* %nextMID, align 8, !dbg !7377
  %inc = add i16 %8, 1, !dbg !7377
  store i16 %inc, i16* %nextMID, align 8, !dbg !7377
  call void @coap_init_message(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 1, i8 zeroext 69, i16 zeroext %8), !dbg !7378
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  %9 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 20), align 4, !dbg !7379
  %tobool = icmp ne i8 %9, 0, !dbg !7381
  br i1 %tobool, label %if.then14, label %if.end17, !dbg !7382

if.then14:                                        ; preds = %if.end
  %10 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 20), align 4, !dbg !7383
  %conv15 = zext i8 %10 to i64, !dbg !7385
  %call16 = call i32 @coap_set_header_token(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 21, i32 0), i64 %conv15), !dbg !7386
  br label %if.end17, !dbg !7387

if.end17:                                         ; preds = %if.then14, %if.end
  %call18 = call i32 @coap_get_header_block2(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message to i8*), i32* %block_num, i8* null, i16* %block_size, i32* %block_offset), !dbg !7388
  %tobool19 = icmp ne i32 %call18, 0, !dbg !7388
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !7390

if.then20:                                        ; preds = %if.end17
  %11 = load i16, i16* %block_size, align 2, !dbg !7391
  %conv21 = zext i16 %11 to i32, !dbg !7391
  %cmp22 = icmp slt i32 %conv21, 128, !dbg !7391
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !7391

cond.true:                                        ; preds = %if.then20
  %12 = load i16, i16* %block_size, align 2, !dbg !7391
  %conv24 = zext i16 %12 to i32, !dbg !7391
  br label %cond.end, !dbg !7391

cond.false:                                       ; preds = %if.then20
  br label %cond.end, !dbg !7391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 128, %cond.false ], !dbg !7391
  %conv25 = trunc i32 %cond to i16, !dbg !7391
  store i16 %conv25, i16* %block_size, align 2, !dbg !7393
  %13 = load i32, i32* %block_offset, align 4, !dbg !7394
  %conv26 = zext i32 %13 to i64, !dbg !7394
  store i64 %conv26, i64* %new_offset, align 8, !dbg !7395
  br label %if.end27, !dbg !7396

if.end27:                                         ; preds = %cond.end, %if.end17
  br i1 true, label %cond.true28, label %cond.false31, !dbg !7397

cond.true28:                                      ; preds = %if.end27
  %14 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 5, i64 3), align 1, !dbg !7398
  %conv29 = zext i8 %14 to i32, !dbg !7398
  %and = and i32 %conv29, 8, !dbg !7398
  %tobool30 = icmp ne i32 %and, 0, !dbg !7398
  br i1 %tobool30, label %if.then32, label %if.end33, !dbg !7398

cond.false31:                                     ; preds = %if.end27
  br i1 false, label %if.then32, label %if.end33, !dbg !7397

if.then32:                                        ; preds = %cond.false31, %cond.true28
  store i8 -95, i8* %coap_error_code, align 1, !dbg !7400
  br label %if.end33, !dbg !7402

if.end33:                                         ; preds = %if.then32, %cond.false31, %cond.true28
  %15 = load i8, i8* %coap_error_code, align 1, !dbg !7403
  %conv34 = zext i8 %15 to i32, !dbg !7403
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !7405
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !7406

if.then37:                                        ; preds = %if.end33
  %16 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7407
  %17 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7409
  %call38 = call zeroext i8 @handle_request(%struct.lwm2m_context_t* %16, i8* %17, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0), %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0)), !dbg !7410
  store i8 %call38, i8* %coap_error_code, align 1, !dbg !7411
  br label %if.end39, !dbg !7412

if.end39:                                         ; preds = %if.then37, %if.end33
  %18 = load i8, i8* %coap_error_code, align 1, !dbg !7413
  %conv40 = zext i8 %18 to i32, !dbg !7413
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !7415
  br i1 %cmp41, label %if.then43, label %if.else120, !dbg !7416

if.then43:                                        ; preds = %if.end39
  br i1 true, label %cond.true44, label %cond.false48, !dbg !7417

cond.true44:                                      ; preds = %if.then43
  %19 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 5, i64 2), align 2, !dbg !7419
  %conv45 = zext i8 %19 to i32, !dbg !7419
  %and46 = and i32 %conv45, 128, !dbg !7419
  %tobool47 = icmp ne i32 %and46, 0, !dbg !7419
  br i1 %tobool47, label %if.then49, label %if.else99, !dbg !7419

cond.false48:                                     ; preds = %if.then43
  br i1 false, label %if.then49, label %if.else99, !dbg !7417

if.then49:                                        ; preds = %cond.false48, %cond.true44
  %20 = load i64, i64* %new_offset, align 8, !dbg !7421
  %21 = load i32, i32* %block_offset, align 4, !dbg !7424
  %conv50 = zext i32 %21 to i64, !dbg !7424
  %cmp51 = icmp eq i64 %20, %conv50, !dbg !7425
  br i1 %cmp51, label %if.then53, label %if.else81, !dbg !7426

if.then53:                                        ; preds = %if.then49
  %22 = load i32, i32* %block_offset, align 4, !dbg !7427
  %23 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7430
  %conv54 = zext i16 %23 to i32, !dbg !7431
  %cmp55 = icmp uge i32 %22, %conv54, !dbg !7432
  br i1 %cmp55, label %if.then57, label %if.else59, !dbg !7433

if.then57:                                        ; preds = %if.then53
  store i8 -126, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 3), align 16, !dbg !7434
  %call58 = call i32 @coap_set_payload(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i32 0, i32 0), i64 15), !dbg !7436
  br label %if.end80, !dbg !7437

if.else59:                                        ; preds = %if.then53
  %24 = load i32, i32* %block_num, align 4, !dbg !7438
  %25 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7440
  %conv60 = zext i16 %25 to i32, !dbg !7441
  %26 = load i32, i32* %block_offset, align 4, !dbg !7442
  %sub = sub i32 %conv60, %26, !dbg !7443
  %27 = load i16, i16* %block_size, align 2, !dbg !7444
  %conv61 = zext i16 %27 to i32, !dbg !7444
  %cmp62 = icmp ugt i32 %sub, %conv61, !dbg !7445
  %conv63 = zext i1 %cmp62 to i32, !dbg !7445
  %conv64 = trunc i32 %conv63 to i8, !dbg !7441
  %28 = load i16, i16* %block_size, align 2, !dbg !7446
  %call65 = call i32 @coap_set_header_block2(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 %24, i8 zeroext %conv64, i16 zeroext %28), !dbg !7447
  %29 = load i8*, i8** getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 38), align 8, !dbg !7448
  %30 = load i32, i32* %block_offset, align 4, !dbg !7449
  %idx.ext = zext i32 %30 to i64, !dbg !7450
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %idx.ext, !dbg !7450
  %31 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7451
  %conv66 = zext i16 %31 to i32, !dbg !7451
  %32 = load i32, i32* %block_offset, align 4, !dbg !7451
  %sub67 = sub i32 %conv66, %32, !dbg !7451
  %33 = load i16, i16* %block_size, align 2, !dbg !7451
  %conv68 = zext i16 %33 to i32, !dbg !7451
  %cmp69 = icmp ult i32 %sub67, %conv68, !dbg !7451
  br i1 %cmp69, label %cond.true71, label %cond.false74, !dbg !7451

cond.true71:                                      ; preds = %if.else59
  %34 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7451
  %conv72 = zext i16 %34 to i32, !dbg !7451
  %35 = load i32, i32* %block_offset, align 4, !dbg !7451
  %sub73 = sub i32 %conv72, %35, !dbg !7451
  br label %cond.end76, !dbg !7451

cond.false74:                                     ; preds = %if.else59
  %36 = load i16, i16* %block_size, align 2, !dbg !7451
  %conv75 = zext i16 %36 to i32, !dbg !7451
  br label %cond.end76, !dbg !7451

cond.end76:                                       ; preds = %cond.false74, %cond.true71
  %cond77 = phi i32 [ %sub73, %cond.true71 ], [ %conv75, %cond.false74 ], !dbg !7451
  %conv78 = zext i32 %cond77 to i64, !dbg !7451
  %call79 = call i32 @coap_set_payload(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i8* %add.ptr, i64 %conv78), !dbg !7452
  br label %if.end80

if.end80:                                         ; preds = %cond.end76, %if.then57
  br label %if.end98, !dbg !7453

if.else81:                                        ; preds = %if.then49
  %37 = load i32, i32* %block_num, align 4, !dbg !7454
  %38 = load i64, i64* %new_offset, align 8, !dbg !7456
  %cmp82 = icmp ne i64 %38, -1, !dbg !7457
  br i1 %cmp82, label %lor.end, label %lor.rhs, !dbg !7458

lor.rhs:                                          ; preds = %if.else81
  %39 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7459
  %conv84 = zext i16 %39 to i32, !dbg !7460
  %40 = load i16, i16* %block_size, align 2, !dbg !7461
  %conv85 = zext i16 %40 to i32, !dbg !7461
  %cmp86 = icmp sgt i32 %conv84, %conv85, !dbg !7462
  br label %lor.end, !dbg !7458

lor.end:                                          ; preds = %lor.rhs, %if.else81
  %41 = phi i1 [ true, %if.else81 ], [ %cmp86, %lor.rhs ]
  %lor.ext = zext i1 %41 to i32, !dbg !7458
  %conv88 = trunc i32 %lor.ext to i8, !dbg !7456
  %42 = load i16, i16* %block_size, align 2, !dbg !7463
  %call89 = call i32 @coap_set_header_block2(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 %37, i8 zeroext %conv88, i16 zeroext %42), !dbg !7464
  %43 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7465
  %conv90 = zext i16 %43 to i32, !dbg !7467
  %44 = load i16, i16* %block_size, align 2, !dbg !7468
  %conv91 = zext i16 %44 to i32, !dbg !7468
  %cmp92 = icmp sgt i32 %conv90, %conv91, !dbg !7469
  br i1 %cmp92, label %if.then94, label %if.end97, !dbg !7470

if.then94:                                        ; preds = %lor.end
  %45 = load i8*, i8** getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 38), align 8, !dbg !7471
  %46 = load i16, i16* %block_size, align 2, !dbg !7472
  %conv95 = zext i16 %46 to i64, !dbg !7472
  %call96 = call i32 @coap_set_payload(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i8* %45, i64 %conv95), !dbg !7473
  br label %if.end97, !dbg !7473

if.end97:                                         ; preds = %if.then94, %lor.end
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end80
  br label %if.end118, !dbg !7474

if.else99:                                        ; preds = %cond.false48, %cond.true44
  %47 = load i64, i64* %new_offset, align 8, !dbg !7475
  %cmp100 = icmp ne i64 %47, 0, !dbg !7477
  br i1 %cmp100, label %if.then102, label %if.end117, !dbg !7478

if.then102:                                       ; preds = %if.else99
  %48 = load i64, i64* %new_offset, align 8, !dbg !7479
  %cmp103 = icmp ne i64 %48, -1, !dbg !7481
  %conv104 = zext i1 %cmp103 to i32, !dbg !7481
  %conv105 = trunc i32 %conv104 to i8, !dbg !7479
  %call106 = call i32 @coap_set_header_block2(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 0, i8 zeroext %conv105, i16 zeroext 128), !dbg !7482
  %49 = load i8*, i8** getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 38), align 8, !dbg !7483
  %50 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7484
  %conv107 = zext i16 %50 to i32, !dbg !7484
  %cmp108 = icmp slt i32 %conv107, 128, !dbg !7484
  br i1 %cmp108, label %cond.true110, label %cond.false112, !dbg !7484

cond.true110:                                     ; preds = %if.then102
  %51 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7484
  %conv111 = zext i16 %51 to i32, !dbg !7484
  br label %cond.end113, !dbg !7484

cond.false112:                                    ; preds = %if.then102
  br label %cond.end113, !dbg !7484

cond.end113:                                      ; preds = %cond.false112, %cond.true110
  %cond114 = phi i32 [ %conv111, %cond.true110 ], [ 128, %cond.false112 ], !dbg !7484
  %conv115 = sext i32 %cond114 to i64, !dbg !7484
  %call116 = call i32 @coap_set_payload(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i8* %49, i64 %conv115), !dbg !7485
  br label %if.end117, !dbg !7486

if.end117:                                        ; preds = %cond.end113, %if.else99
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end98
  %52 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7487
  %53 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7488
  %call119 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %52, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0), i8* %53), !dbg !7489
  store i8 %call119, i8* %coap_error_code, align 1, !dbg !7490
  %54 = load i8*, i8** getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 38), align 8, !dbg !7491
  call void @lwm2m_free(i8* %54), !dbg !7492
  store i8* null, i8** getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 38), align 8, !dbg !7493
  store i16 0, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0, i32 37), align 2, !dbg !7494
  br label %if.end133, !dbg !7495

if.else120:                                       ; preds = %if.end39
  %55 = load i8, i8* %coap_error_code, align 1, !dbg !7496
  %conv121 = zext i8 %55 to i32, !dbg !7496
  %cmp122 = icmp ne i32 %conv121, 1, !dbg !7498
  br i1 %cmp122, label %if.then124, label %if.end132, !dbg !7499

if.then124:                                       ; preds = %if.else120
  %56 = load i8, i8* %coap_error_code, align 1, !dbg !7500
  %conv125 = zext i8 %56 to i32, !dbg !7500
  %call126 = call i32 @coap_set_status_code(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 %conv125), !dbg !7503
  %cmp127 = icmp eq i32 1, %call126, !dbg !7504
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !7505

if.then129:                                       ; preds = %if.then124
  %57 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7506
  %58 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7508
  %call130 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %57, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0), i8* %58), !dbg !7509
  store i8 %call130, i8* %coap_error_code, align 1, !dbg !7510
  br label %if.end131, !dbg !7511

if.end131:                                        ; preds = %if.then129, %if.then124
  br label %if.end132, !dbg !7512

if.end132:                                        ; preds = %if.end131, %if.else120
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end118
  br label %if.end165, !dbg !7513

if.else134:                                       ; preds = %land.lhs.true, %if.then
  %59 = load i32, i32* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 2), align 4, !dbg !7514
  switch i32 %59, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 3, label %sw.bb161
    i32 2, label %sw.bb163
  ], !dbg !7516

sw.bb:                                            ; preds = %if.else134, %if.else134
  call void @llvm.dbg.declare(metadata i8* %done, metadata !7517, metadata !1190), !dbg !7520
  %60 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7521
  %61 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7522
  %call135 = call zeroext i1 @transaction_handleResponse(%struct.lwm2m_context_t* %60, i8* %61, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0), %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0)), !dbg !7523
  %frombool = zext i1 %call135 to i8, !dbg !7520
  store i8 %frombool, i8* %done, align 1, !dbg !7520
  %62 = load i8, i8* %done, align 1, !dbg !7524
  %tobool136 = trunc i8 %62 to i1, !dbg !7524
  br i1 %tobool136, label %if.end153, label %land.lhs.true137, !dbg !7526

land.lhs.true137:                                 ; preds = %sw.bb
  br i1 true, label %cond.true138, label %cond.false142, !dbg !7527

cond.true138:                                     ; preds = %land.lhs.true137
  %63 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 5, i64 0), align 4, !dbg !7528
  %conv139 = zext i8 %63 to i32, !dbg !7528
  %and140 = and i32 %conv139, 64, !dbg !7528
  %tobool141 = icmp ne i32 %and140, 0, !dbg !7528
  br i1 %tobool141, label %land.lhs.true143, label %if.end153, !dbg !7528

cond.false142:                                    ; preds = %land.lhs.true137
  br i1 false, label %land.lhs.true143, label %if.end153, !dbg !7527

land.lhs.true143:                                 ; preds = %cond.false142, %cond.true138
  %64 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 3), align 16, !dbg !7529
  %conv144 = zext i8 %64 to i32, !dbg !7530
  %cmp145 = icmp eq i32 %conv144, 68, !dbg !7531
  br i1 %cmp145, label %if.then150, label %lor.lhs.false, !dbg !7532

lor.lhs.false:                                    ; preds = %land.lhs.true143
  %65 = load i8, i8* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 3), align 16, !dbg !7533
  %conv147 = zext i8 %65 to i32, !dbg !7534
  %cmp148 = icmp eq i32 %conv147, 69, !dbg !7535
  br i1 %cmp148, label %if.then150, label %if.end153, !dbg !7536

if.then150:                                       ; preds = %lor.lhs.false, %land.lhs.true143
  %66 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7537
  %67 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7539
  %call151 = call zeroext i1 @observe_handleNotify(%struct.lwm2m_context_t* %66, i8* %67, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0), %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0)), !dbg !7540
  %frombool152 = zext i1 %call151 to i8, !dbg !7541
  store i8 %frombool152, i8* %done, align 1, !dbg !7541
  br label %if.end153, !dbg !7542

if.end153:                                        ; preds = %if.then150, %lor.lhs.false, %cond.false142, %cond.true138, %sw.bb
  %68 = load i8, i8* %done, align 1, !dbg !7543
  %tobool154 = trunc i8 %68 to i1, !dbg !7543
  br i1 %tobool154, label %if.end160, label %land.lhs.true155, !dbg !7545

land.lhs.true155:                                 ; preds = %if.end153
  %69 = load i32, i32* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 2), align 4, !dbg !7546
  %cmp156 = icmp eq i32 %69, 0, !dbg !7547
  br i1 %cmp156, label %if.then158, label %if.end160, !dbg !7548

if.then158:                                       ; preds = %land.lhs.true155
  %70 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 4), align 2, !dbg !7549
  call void @coap_init_message(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response to i8*), i32 2, i8 zeroext 0, i16 zeroext %70), !dbg !7551
  %71 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7552
  %72 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7553
  %call159 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %71, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.response, i32 0, i32 0), i8* %72), !dbg !7554
  store i8 %call159, i8* %coap_error_code, align 1, !dbg !7555
  br label %if.end160, !dbg !7556

if.end160:                                        ; preds = %if.then158, %land.lhs.true155, %if.end153
  br label %sw.epilog, !dbg !7557

sw.bb161:                                         ; preds = %if.else134
  %73 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7558
  %74 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7559
  call void @handle_reset(%struct.lwm2m_context_t* %73, i8* %74, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0)), !dbg !7560
  %75 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7561
  %76 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7562
  %call162 = call zeroext i1 @transaction_handleResponse(%struct.lwm2m_context_t* %75, i8* %76, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0), %struct.coap_packet_t* null), !dbg !7563
  br label %sw.epilog, !dbg !7564

sw.bb163:                                         ; preds = %if.else134
  %77 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7565
  %78 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7566
  %call164 = call zeroext i1 @transaction_handleResponse(%struct.lwm2m_context_t* %77, i8* %78, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0), %struct.coap_packet_t* null), !dbg !7567
  br label %sw.epilog, !dbg !7568

sw.default:                                       ; preds = %if.else134
  br label %sw.epilog, !dbg !7569

sw.epilog:                                        ; preds = %sw.default, %sw.bb163, %sw.bb161, %if.end160
  br label %if.end165

if.end165:                                        ; preds = %sw.epilog, %if.end133
  call void @coap_free_header(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message to i8*)), !dbg !7570
  br label %if.end167, !dbg !7571

if.else166:                                       ; preds = %entry
  br label %if.end167

if.end167:                                        ; preds = %if.else166, %if.end165
  %79 = load i8, i8* %coap_error_code, align 1, !dbg !7572
  %conv168 = zext i8 %79 to i32, !dbg !7572
  %cmp169 = icmp ne i32 %conv168, 0, !dbg !7574
  br i1 %cmp169, label %land.lhs.true171, label %if.end184, !dbg !7575

land.lhs.true171:                                 ; preds = %if.end167
  %80 = load i8, i8* %coap_error_code, align 1, !dbg !7576
  %conv172 = zext i8 %80 to i32, !dbg !7576
  %cmp173 = icmp ne i32 %conv172, 1, !dbg !7577
  br i1 %cmp173, label %if.then175, label %if.end184, !dbg !7578

if.then175:                                       ; preds = %land.lhs.true171
  %81 = load i8, i8* %coap_error_code, align 1, !dbg !7579
  %conv176 = zext i8 %81 to i32, !dbg !7579
  %cmp177 = icmp sge i32 %conv176, 192, !dbg !7582
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !7583

if.then179:                                       ; preds = %if.then175
  store i8 -96, i8* %coap_error_code, align 1, !dbg !7584
  br label %if.end180, !dbg !7586

if.end180:                                        ; preds = %if.then179, %if.then175
  %82 = load i8, i8* %coap_error_code, align 1, !dbg !7587
  %83 = load i16, i16* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0, i32 4), align 2, !dbg !7588
  call void @coap_init_message(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message to i8*), i32 2, i8 zeroext %82, i16 zeroext %83), !dbg !7589
  %84 = load i8*, i8** @coap_error_message, align 8, !dbg !7590
  %85 = load i8*, i8** @coap_error_message, align 8, !dbg !7591
  %call181 = call i64 @strlen(i8* %85) #9, !dbg !7592
  %call182 = call i32 @coap_set_payload(i8* bitcast ([1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message to i8*), i8* %84, i64 %call181), !dbg !7593
  %86 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7594
  %87 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7595
  %call183 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %86, %struct.coap_packet_t* getelementptr inbounds ([1 x %struct.coap_packet_t], [1 x %struct.coap_packet_t]* @lwm2m_handle_packet.message, i32 0, i32 0), i8* %87), !dbg !7596
  br label %if.end184, !dbg !7597

if.end184:                                        ; preds = %if.end180, %land.lhs.true171, %if.end167
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @handle_request(%struct.lwm2m_context_t* %contextP, i8* %fromSessionH, %struct.coap_packet_t* %message, %struct.coap_packet_t* %response) #0 !dbg !7599 {
entry:
  %retval = alloca i8, align 1
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %fromSessionH.addr = alloca i8*, align 8
  %message.addr = alloca %struct.coap_packet_t*, align 8
  %response.addr = alloca %struct.coap_packet_t*, align 8
  %uriP = alloca %struct.lwm2m_uri_t*, align 8
  %result = alloca i8, align 1
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !7603, metadata !1190), !dbg !7604
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !7605, metadata !1190), !dbg !7606
  store %struct.coap_packet_t* %message, %struct.coap_packet_t** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %message.addr, metadata !7607, metadata !1190), !dbg !7608
  store %struct.coap_packet_t* %response, %struct.coap_packet_t** %response.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %response.addr, metadata !7609, metadata !1190), !dbg !7610
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP, metadata !7611, metadata !1190), !dbg !7612
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7613, metadata !1190), !dbg !7614
  store i8 1, i8* %result, align 1, !dbg !7614
  %0 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !7615
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %0, i32 0, i32 18, !dbg !7616
  %1 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_path, align 8, !dbg !7616
  %call = call %struct.lwm2m_uri_t* @uri_decode(i8* null, %struct._multi_option_t* %1), !dbg !7617
  store %struct.lwm2m_uri_t* %call, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !7618
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !7619
  %cmp = icmp eq %struct.lwm2m_uri_t* %2, null, !dbg !7621
  br i1 %cmp, label %if.then, label %if.end, !dbg !7622

if.then:                                          ; preds = %entry
  store i8 -128, i8* %retval, align 1, !dbg !7623
  br label %return, !dbg !7623

if.end:                                           ; preds = %entry
  %3 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !7624
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %3, i32 0, i32 0, !dbg !7625
  %4 = load i8, i8* %flag, align 2, !dbg !7625
  %conv = zext i8 %4 to i32, !dbg !7624
  %and = and i32 %conv, 112, !dbg !7626
  switch i32 %and, label %sw.default [
    i32 32, label %sw.bb
  ], !dbg !7627

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7628
  %6 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !7630
  %7 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !7631
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !7632
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !7633
  %call1 = call zeroext i8 @registration_handleRequest(%struct.lwm2m_context_t* %5, %struct.lwm2m_uri_t* %6, i8* %7, %struct.coap_packet_t* %8, %struct.coap_packet_t* %9), !dbg !7634
  store i8 %call1, i8* %result, align 1, !dbg !7635
  br label %sw.epilog, !dbg !7636

sw.default:                                       ; preds = %if.end
  store i8 1, i8* %result, align 1, !dbg !7637
  br label %sw.epilog, !dbg !7638

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !7639
  %11 = bitcast %struct.coap_packet_t* %10 to i8*, !dbg !7639
  %12 = load i8, i8* %result, align 1, !dbg !7640
  %conv2 = zext i8 %12 to i32, !dbg !7640
  %call3 = call i32 @coap_set_status_code(i8* %11, i32 %conv2), !dbg !7641
  %13 = load i8, i8* %result, align 1, !dbg !7642
  %conv4 = zext i8 %13 to i32, !dbg !7642
  %cmp5 = icmp slt i32 1, %conv4, !dbg !7644
  br i1 %cmp5, label %land.lhs.true, label %if.end11, !dbg !7645

land.lhs.true:                                    ; preds = %sw.epilog
  %14 = load i8, i8* %result, align 1, !dbg !7646
  %conv7 = zext i8 %14 to i32, !dbg !7646
  %cmp8 = icmp slt i32 %conv7, 128, !dbg !7647
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !7648

if.then10:                                        ; preds = %land.lhs.true
  store i8 0, i8* %result, align 1, !dbg !7649
  br label %if.end11, !dbg !7651

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %sw.epilog
  %15 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP, align 8, !dbg !7652
  %16 = bitcast %struct.lwm2m_uri_t* %15 to i8*, !dbg !7652
  call void @lwm2m_free(i8* %16), !dbg !7653
  %17 = load i8, i8* %result, align 1, !dbg !7654
  store i8 %17, i8* %retval, align 1, !dbg !7655
  br label %return, !dbg !7655

return:                                           ; preds = %if.end11, %if.then
  %18 = load i8, i8* %retval, align 1, !dbg !7656
  ret i8 %18, !dbg !7656
}

; Function Attrs: noinline nounwind uwtable
define zeroext i8 @message_send(%struct.lwm2m_context_t* %contextP, %struct.coap_packet_t* %message, i8* %sessionH) #0 !dbg !7657 {
entry:
  %retval = alloca i8, align 1
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %message.addr = alloca %struct.coap_packet_t*, align 8
  %sessionH.addr = alloca i8*, align 8
  %result = alloca i8, align 1
  %pktBuffer = alloca i8*, align 8
  %pktBufferLen = alloca i64, align 8
  %allocLen = alloca i64, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !7660, metadata !1190), !dbg !7661
  store %struct.coap_packet_t* %message, %struct.coap_packet_t** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %message.addr, metadata !7662, metadata !1190), !dbg !7663
  store i8* %sessionH, i8** %sessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sessionH.addr, metadata !7664, metadata !1190), !dbg !7665
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7666, metadata !1190), !dbg !7667
  store i8 -96, i8* %result, align 1, !dbg !7667
  call void @llvm.dbg.declare(metadata i8** %pktBuffer, metadata !7668, metadata !1190), !dbg !7669
  call void @llvm.dbg.declare(metadata i64* %pktBufferLen, metadata !7670, metadata !1190), !dbg !7671
  store i64 0, i64* %pktBufferLen, align 8, !dbg !7671
  call void @llvm.dbg.declare(metadata i64* %allocLen, metadata !7672, metadata !1190), !dbg !7673
  %0 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !7674
  %1 = bitcast %struct.coap_packet_t* %0 to i8*, !dbg !7674
  %call = call i64 @coap_serialize_get_size(i8* %1), !dbg !7675
  store i64 %call, i64* %allocLen, align 8, !dbg !7676
  %2 = load i64, i64* %allocLen, align 8, !dbg !7677
  %cmp = icmp eq i64 %2, 0, !dbg !7679
  br i1 %cmp, label %if.then, label %if.end, !dbg !7680

if.then:                                          ; preds = %entry
  store i8 -96, i8* %retval, align 1, !dbg !7681
  br label %return, !dbg !7681

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %allocLen, align 8, !dbg !7682
  %call1 = call i8* @lwm2m_malloc(i64 %3), !dbg !7683
  store i8* %call1, i8** %pktBuffer, align 8, !dbg !7684
  %4 = load i8*, i8** %pktBuffer, align 8, !dbg !7685
  %cmp2 = icmp ne i8* %4, null, !dbg !7687
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !7688

if.then3:                                         ; preds = %if.end
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !7689
  %6 = bitcast %struct.coap_packet_t* %5 to i8*, !dbg !7689
  %7 = load i8*, i8** %pktBuffer, align 8, !dbg !7691
  %call4 = call i64 @coap_serialize_message(i8* %6, i8* %7), !dbg !7692
  store i64 %call4, i64* %pktBufferLen, align 8, !dbg !7693
  %8 = load i64, i64* %pktBufferLen, align 8, !dbg !7694
  %cmp5 = icmp ne i64 0, %8, !dbg !7696
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !7697

if.then6:                                         ; preds = %if.then3
  %9 = load i8*, i8** %sessionH.addr, align 8, !dbg !7698
  %10 = load i8*, i8** %pktBuffer, align 8, !dbg !7700
  %11 = load i64, i64* %pktBufferLen, align 8, !dbg !7701
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !7702
  %userData = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %12, i32 0, i32 5, !dbg !7703
  %13 = load i8*, i8** %userData, align 8, !dbg !7703
  %call7 = call zeroext i8 @lwm2m_buffer_send(i8* %9, i8* %10, i64 %11, i8* %13), !dbg !7704
  store i8 %call7, i8* %result, align 1, !dbg !7705
  br label %if.end8, !dbg !7706

if.end8:                                          ; preds = %if.then6, %if.then3
  %14 = load i8*, i8** %pktBuffer, align 8, !dbg !7707
  call void @lwm2m_free(i8* %14), !dbg !7708
  br label %if.end9, !dbg !7709

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i8, i8* %result, align 1, !dbg !7710
  store i8 %15, i8* %retval, align 1, !dbg !7711
  br label %return, !dbg !7711

return:                                           ; preds = %if.end9, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !7712
  ret i8 %16, !dbg !7712
}

; Function Attrs: noinline nounwind uwtable
define internal void @handle_reset(%struct.lwm2m_context_t* %contextP, i8* %fromSessionH, %struct.coap_packet_t* %message) #0 !dbg !7713 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %fromSessionH.addr = alloca i8*, align 8
  %message.addr = alloca %struct.coap_packet_t*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !7716, metadata !1190), !dbg !7717
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !7718, metadata !1190), !dbg !7719
  store %struct.coap_packet_t* %message, %struct.coap_packet_t** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %message.addr, metadata !7720, metadata !1190), !dbg !7721
  ret void, !dbg !7722
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: noinline nounwind uwtable
define %struct._lwm2m_transaction_* @transaction_new(i8* %sessionH, i32 %method, i8* %altPath, %struct.lwm2m_uri_t* %uriP, i16 zeroext %mID, i8 zeroext %token_len, i8* %token) #0 !dbg !7723 {
entry:
  %retval = alloca %struct._lwm2m_transaction_*, align 8
  %sessionH.addr = alloca i8*, align 8
  %method.addr = alloca i32, align 4
  %altPath.addr = alloca i8*, align 8
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %mID.addr = alloca i16, align 2
  %token_len.addr = alloca i8, align 1
  %token.addr = alloca i8*, align 8
  %transacP = alloca %struct._lwm2m_transaction_*, align 8
  %result = alloca i32, align 4
  %stringID = alloca [6 x i8], align 1
  %temp_token = alloca [8 x i8], align 1
  %tv_sec = alloca i64, align 8
  store i8* %sessionH, i8** %sessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sessionH.addr, metadata !7735, metadata !1190), !dbg !7736
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !7737, metadata !1190), !dbg !7738
  store i8* %altPath, i8** %altPath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %altPath.addr, metadata !7739, metadata !1190), !dbg !7740
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !7741, metadata !1190), !dbg !7742
  store i16 %mID, i16* %mID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mID.addr, metadata !7743, metadata !1190), !dbg !7744
  store i8 %token_len, i8* %token_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %token_len.addr, metadata !7745, metadata !1190), !dbg !7746
  store i8* %token, i8** %token.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %token.addr, metadata !7747, metadata !1190), !dbg !7748
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP, metadata !7749, metadata !1190), !dbg !7750
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7751, metadata !1190), !dbg !7752
  %0 = load i8*, i8** %sessionH.addr, align 8, !dbg !7753
  %cmp = icmp eq i8* null, %0, !dbg !7755
  br i1 %cmp, label %if.then, label %if.end, !dbg !7756

if.then:                                          ; preds = %entry
  store %struct._lwm2m_transaction_* null, %struct._lwm2m_transaction_** %retval, align 8, !dbg !7757
  br label %return, !dbg !7757

if.end:                                           ; preds = %entry
  %call = call i8* @lwm2m_malloc(i64 96), !dbg !7758
  %1 = bitcast i8* %call to %struct._lwm2m_transaction_*, !dbg !7759
  store %struct._lwm2m_transaction_* %1, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7760
  %2 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7761
  %cmp1 = icmp eq %struct._lwm2m_transaction_* null, %2, !dbg !7763
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7764

if.then2:                                         ; preds = %if.end
  store %struct._lwm2m_transaction_* null, %struct._lwm2m_transaction_** %retval, align 8, !dbg !7765
  br label %return, !dbg !7765

if.end3:                                          ; preds = %if.end
  %3 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7766
  %4 = bitcast %struct._lwm2m_transaction_* %3 to i8*, !dbg !7767
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 96, i32 8, i1 false), !dbg !7767
  %call4 = call i8* @lwm2m_malloc(i64 208), !dbg !7768
  %5 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7769
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %5, i32 0, i32 7, !dbg !7770
  store i8* %call4, i8** %message, align 8, !dbg !7771
  %6 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7772
  %message5 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %6, i32 0, i32 7, !dbg !7774
  %7 = load i8*, i8** %message5, align 8, !dbg !7774
  %cmp6 = icmp eq i8* null, %7, !dbg !7775
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7776

if.then7:                                         ; preds = %if.end3
  br label %error, !dbg !7777

if.end8:                                          ; preds = %if.end3
  %8 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7778
  %message9 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %8, i32 0, i32 7, !dbg !7779
  %9 = load i8*, i8** %message9, align 8, !dbg !7779
  %10 = load i32, i32* %method.addr, align 4, !dbg !7780
  %conv = trunc i32 %10 to i8, !dbg !7780
  %11 = load i16, i16* %mID.addr, align 2, !dbg !7781
  call void @coap_init_message(i8* %9, i32 0, i8 zeroext %conv, i16 zeroext %11), !dbg !7782
  %12 = load i8*, i8** %sessionH.addr, align 8, !dbg !7783
  %13 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7784
  %peerH = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %13, i32 0, i32 2, !dbg !7785
  store i8* %12, i8** %peerH, align 8, !dbg !7786
  %14 = load i16, i16* %mID.addr, align 2, !dbg !7787
  %15 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7788
  %mID10 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %15, i32 0, i32 1, !dbg !7789
  store i16 %14, i16* %mID10, align 8, !dbg !7790
  %16 = load i8*, i8** %altPath.addr, align 8, !dbg !7791
  %cmp11 = icmp ne i8* %16, null, !dbg !7793
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !7794

if.then13:                                        ; preds = %if.end8
  %17 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7795
  %message14 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %17, i32 0, i32 7, !dbg !7797
  %18 = load i8*, i8** %message14, align 8, !dbg !7797
  %19 = load i8*, i8** %altPath.addr, align 8, !dbg !7798
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 1, !dbg !7799
  %call15 = call i32 @coap_set_header_uri_path_segment(i8* %18, i8* %add.ptr), !dbg !7800
  br label %if.end16, !dbg !7801

if.end16:                                         ; preds = %if.then13, %if.end8
  %20 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7802
  %cmp17 = icmp ne %struct.lwm2m_uri_t* null, %20, !dbg !7804
  br i1 %cmp17, label %if.then19, label %if.end77, !dbg !7805

if.then19:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata [6 x i8]* %stringID, metadata !7806, metadata !1190), !dbg !7811
  %21 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7812
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %21, i32 0, i32 1, !dbg !7813
  %22 = load i16, i16* %objectId, align 2, !dbg !7813
  %conv20 = zext i16 %22 to i64, !dbg !7812
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i32 0, i32 0, !dbg !7814
  %call21 = call i64 @utils_intToText(i64 %conv20, i8* %arraydecay, i64 6), !dbg !7815
  %conv22 = trunc i64 %call21 to i32, !dbg !7815
  store i32 %conv22, i32* %result, align 4, !dbg !7816
  %23 = load i32, i32* %result, align 4, !dbg !7817
  %cmp23 = icmp eq i32 %23, 0, !dbg !7819
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7820

if.then25:                                        ; preds = %if.then19
  br label %error, !dbg !7821

if.end26:                                         ; preds = %if.then19
  %24 = load i32, i32* %result, align 4, !dbg !7822
  %idxprom = sext i32 %24 to i64, !dbg !7823
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i64 0, i64 %idxprom, !dbg !7823
  store i8 0, i8* %arrayidx, align 1, !dbg !7824
  %25 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7825
  %message27 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %25, i32 0, i32 7, !dbg !7826
  %26 = load i8*, i8** %message27, align 8, !dbg !7826
  %arraydecay28 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i32 0, i32 0, !dbg !7827
  %call29 = call i32 @coap_set_header_uri_path_segment(i8* %26, i8* %arraydecay28), !dbg !7828
  %27 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7829
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %27, i32 0, i32 0, !dbg !7829
  %28 = load i8, i8* %flag, align 2, !dbg !7829
  %conv30 = zext i8 %28 to i32, !dbg !7829
  %and = and i32 %conv30, 2, !dbg !7829
  %cmp31 = icmp ne i32 %and, 0, !dbg !7829
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !7831

if.then33:                                        ; preds = %if.end26
  %29 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7832
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %29, i32 0, i32 2, !dbg !7834
  %30 = load i16, i16* %instanceId, align 2, !dbg !7834
  %conv34 = zext i16 %30 to i64, !dbg !7832
  %arraydecay35 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i32 0, i32 0, !dbg !7835
  %call36 = call i64 @utils_intToText(i64 %conv34, i8* %arraydecay35, i64 6), !dbg !7836
  %conv37 = trunc i64 %call36 to i32, !dbg !7836
  store i32 %conv37, i32* %result, align 4, !dbg !7837
  %31 = load i32, i32* %result, align 4, !dbg !7838
  %cmp38 = icmp eq i32 %31, 0, !dbg !7840
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !7841

if.then40:                                        ; preds = %if.then33
  br label %error, !dbg !7842

if.end41:                                         ; preds = %if.then33
  %32 = load i32, i32* %result, align 4, !dbg !7843
  %idxprom42 = sext i32 %32 to i64, !dbg !7844
  %arrayidx43 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i64 0, i64 %idxprom42, !dbg !7844
  store i8 0, i8* %arrayidx43, align 1, !dbg !7845
  %33 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7846
  %message44 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %33, i32 0, i32 7, !dbg !7847
  %34 = load i8*, i8** %message44, align 8, !dbg !7847
  %arraydecay45 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i32 0, i32 0, !dbg !7848
  %call46 = call i32 @coap_set_header_uri_path_segment(i8* %34, i8* %arraydecay45), !dbg !7849
  br label %if.end56, !dbg !7850

if.else:                                          ; preds = %if.end26
  %35 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7851
  %flag47 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %35, i32 0, i32 0, !dbg !7851
  %36 = load i8, i8* %flag47, align 2, !dbg !7851
  %conv48 = zext i8 %36 to i32, !dbg !7851
  %and49 = and i32 %conv48, 1, !dbg !7851
  %cmp50 = icmp ne i32 %and49, 0, !dbg !7851
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !7854

if.then52:                                        ; preds = %if.else
  %37 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7855
  %message53 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %37, i32 0, i32 7, !dbg !7857
  %38 = load i8*, i8** %message53, align 8, !dbg !7857
  %call54 = call i32 @coap_set_header_uri_path_segment(i8* %38, i8* null), !dbg !7858
  br label %if.end55, !dbg !7859

if.end55:                                         ; preds = %if.then52, %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end41
  %39 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7860
  %flag57 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %39, i32 0, i32 0, !dbg !7860
  %40 = load i8, i8* %flag57, align 2, !dbg !7860
  %conv58 = zext i8 %40 to i32, !dbg !7860
  %and59 = and i32 %conv58, 1, !dbg !7860
  %cmp60 = icmp ne i32 %and59, 0, !dbg !7860
  br i1 %cmp60, label %if.then62, label %if.end76, !dbg !7862

if.then62:                                        ; preds = %if.end56
  %41 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !7863
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %41, i32 0, i32 3, !dbg !7865
  %42 = load i16, i16* %resourceId, align 2, !dbg !7865
  %conv63 = zext i16 %42 to i64, !dbg !7863
  %arraydecay64 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i32 0, i32 0, !dbg !7866
  %call65 = call i64 @utils_intToText(i64 %conv63, i8* %arraydecay64, i64 6), !dbg !7867
  %conv66 = trunc i64 %call65 to i32, !dbg !7867
  store i32 %conv66, i32* %result, align 4, !dbg !7868
  %43 = load i32, i32* %result, align 4, !dbg !7869
  %cmp67 = icmp eq i32 %43, 0, !dbg !7871
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !7872

if.then69:                                        ; preds = %if.then62
  br label %error, !dbg !7873

if.end70:                                         ; preds = %if.then62
  %44 = load i32, i32* %result, align 4, !dbg !7874
  %idxprom71 = sext i32 %44 to i64, !dbg !7875
  %arrayidx72 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i64 0, i64 %idxprom71, !dbg !7875
  store i8 0, i8* %arrayidx72, align 1, !dbg !7876
  %45 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7877
  %message73 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %45, i32 0, i32 7, !dbg !7878
  %46 = load i8*, i8** %message73, align 8, !dbg !7878
  %arraydecay74 = getelementptr inbounds [6 x i8], [6 x i8]* %stringID, i32 0, i32 0, !dbg !7879
  %call75 = call i32 @coap_set_header_uri_path_segment(i8* %46, i8* %arraydecay74), !dbg !7880
  br label %if.end76, !dbg !7881

if.end76:                                         ; preds = %if.end70, %if.end56
  br label %if.end77, !dbg !7882

if.end77:                                         ; preds = %if.end76, %if.end16
  %47 = load i8, i8* %token_len.addr, align 1, !dbg !7883
  %conv78 = zext i8 %47 to i32, !dbg !7883
  %cmp79 = icmp slt i32 0, %conv78, !dbg !7885
  br i1 %cmp79, label %if.then81, label %if.end111, !dbg !7886

if.then81:                                        ; preds = %if.end77
  %48 = load i8*, i8** %token.addr, align 8, !dbg !7887
  %cmp82 = icmp ne i8* null, %48, !dbg !7890
  br i1 %cmp82, label %if.then84, label %if.else88, !dbg !7891

if.then84:                                        ; preds = %if.then81
  %49 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7892
  %message85 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %49, i32 0, i32 7, !dbg !7894
  %50 = load i8*, i8** %message85, align 8, !dbg !7894
  %51 = load i8*, i8** %token.addr, align 8, !dbg !7895
  %52 = load i8, i8* %token_len.addr, align 1, !dbg !7896
  %conv86 = zext i8 %52 to i64, !dbg !7896
  %call87 = call i32 @coap_set_header_token(i8* %50, i8* %51, i64 %conv86), !dbg !7897
  br label %if.end110, !dbg !7898

if.else88:                                        ; preds = %if.then81
  call void @llvm.dbg.declare(metadata [8 x i8]* %temp_token, metadata !7899, metadata !1190), !dbg !7901
  call void @llvm.dbg.declare(metadata i64* %tv_sec, metadata !7902, metadata !1190), !dbg !7903
  %call89 = call i64 @lwm2m_gettime(), !dbg !7904
  store i64 %call89, i64* %tv_sec, align 8, !dbg !7903
  %53 = load i16, i16* %mID.addr, align 2, !dbg !7905
  %conv90 = trunc i16 %53 to i8, !dbg !7905
  %arrayidx91 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i64 0, i64 0, !dbg !7906
  store i8 %conv90, i8* %arrayidx91, align 1, !dbg !7907
  %54 = load i16, i16* %mID.addr, align 2, !dbg !7908
  %conv92 = zext i16 %54 to i32, !dbg !7908
  %shr = ashr i32 %conv92, 8, !dbg !7909
  %conv93 = trunc i32 %shr to i8, !dbg !7908
  %arrayidx94 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i64 0, i64 1, !dbg !7910
  store i8 %conv93, i8* %arrayidx94, align 1, !dbg !7911
  %55 = load i64, i64* %tv_sec, align 8, !dbg !7912
  %conv95 = trunc i64 %55 to i8, !dbg !7912
  %arrayidx96 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i64 0, i64 2, !dbg !7913
  store i8 %conv95, i8* %arrayidx96, align 1, !dbg !7914
  %56 = load i64, i64* %tv_sec, align 8, !dbg !7915
  %shr97 = ashr i64 %56, 8, !dbg !7916
  %conv98 = trunc i64 %shr97 to i8, !dbg !7915
  %arrayidx99 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i64 0, i64 3, !dbg !7917
  store i8 %conv98, i8* %arrayidx99, align 1, !dbg !7918
  %57 = load i64, i64* %tv_sec, align 8, !dbg !7919
  %shr100 = ashr i64 %57, 16, !dbg !7920
  %conv101 = trunc i64 %shr100 to i8, !dbg !7919
  %arrayidx102 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i64 0, i64 4, !dbg !7921
  store i8 %conv101, i8* %arrayidx102, align 1, !dbg !7922
  %58 = load i64, i64* %tv_sec, align 8, !dbg !7923
  %shr103 = ashr i64 %58, 24, !dbg !7924
  %conv104 = trunc i64 %shr103 to i8, !dbg !7923
  %arrayidx105 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i64 0, i64 5, !dbg !7925
  store i8 %conv104, i8* %arrayidx105, align 1, !dbg !7926
  %59 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7927
  %message106 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %59, i32 0, i32 7, !dbg !7928
  %60 = load i8*, i8** %message106, align 8, !dbg !7928
  %arraydecay107 = getelementptr inbounds [8 x i8], [8 x i8]* %temp_token, i32 0, i32 0, !dbg !7929
  %61 = load i8, i8* %token_len.addr, align 1, !dbg !7930
  %conv108 = zext i8 %61 to i64, !dbg !7930
  %call109 = call i32 @coap_set_header_token(i8* %60, i8* %arraydecay107, i64 %conv108), !dbg !7931
  br label %if.end110

if.end110:                                        ; preds = %if.else88, %if.then84
  br label %if.end111, !dbg !7932

if.end111:                                        ; preds = %if.end110, %if.end77
  %62 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7933
  store %struct._lwm2m_transaction_* %62, %struct._lwm2m_transaction_** %retval, align 8, !dbg !7934
  br label %return, !dbg !7934

error:                                            ; preds = %if.then69, %if.then40, %if.then25, %if.then7
  %63 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !7935
  %64 = bitcast %struct._lwm2m_transaction_* %63 to i8*, !dbg !7935
  call void @lwm2m_free(i8* %64), !dbg !7936
  store %struct._lwm2m_transaction_* null, %struct._lwm2m_transaction_** %retval, align 8, !dbg !7937
  br label %return, !dbg !7937

return:                                           ; preds = %error, %if.end111, %if.then2, %if.then
  %65 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %retval, align 8, !dbg !7938
  ret %struct._lwm2m_transaction_* %65, !dbg !7938
}

; Function Attrs: noinline nounwind uwtable
define void @transaction_free(%struct._lwm2m_transaction_* %transacP) #0 !dbg !7939 {
entry:
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !7942, metadata !1190), !dbg !7943
  %0 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !7944
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %0, i32 0, i32 7, !dbg !7946
  %1 = load i8*, i8** %message, align 8, !dbg !7946
  %tobool = icmp ne i8* %1, null, !dbg !7944
  br i1 %tobool, label %if.then, label %if.end, !dbg !7947

if.then:                                          ; preds = %entry
  %2 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !7948
  %message1 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %2, i32 0, i32 7, !dbg !7950
  %3 = load i8*, i8** %message1, align 8, !dbg !7950
  call void @coap_free_header(i8* %3), !dbg !7951
  %4 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !7952
  %message2 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %4, i32 0, i32 7, !dbg !7953
  %5 = load i8*, i8** %message2, align 8, !dbg !7953
  call void @lwm2m_free(i8* %5), !dbg !7954
  br label %if.end, !dbg !7955

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !7956
  %buffer = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %6, i32 0, i32 9, !dbg !7958
  %7 = load i8*, i8** %buffer, align 8, !dbg !7958
  %tobool3 = icmp ne i8* %7, null, !dbg !7956
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7959

if.then4:                                         ; preds = %if.end
  %8 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !7960
  %buffer5 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %8, i32 0, i32 9, !dbg !7961
  %9 = load i8*, i8** %buffer5, align 8, !dbg !7961
  call void @lwm2m_free(i8* %9), !dbg !7962
  br label %if.end6, !dbg !7962

if.end6:                                          ; preds = %if.then4, %if.end
  %10 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !7963
  %11 = bitcast %struct._lwm2m_transaction_* %10 to i8*, !dbg !7963
  call void @lwm2m_free(i8* %11), !dbg !7964
  ret void, !dbg !7965
}

; Function Attrs: noinline nounwind uwtable
define void @transaction_remove(%struct.lwm2m_context_t* %contextP, %struct._lwm2m_transaction_* %transacP) #0 !dbg !7966 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !8020, metadata !1190), !dbg !8021
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !8022, metadata !1190), !dbg !8023
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8024
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 4, !dbg !8024
  %1 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !8024
  %2 = bitcast %struct._lwm2m_transaction_* %1 to %struct._lwm2m_list_t*, !dbg !8024
  %3 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8024
  %mID = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %3, i32 0, i32 1, !dbg !8024
  %4 = load i16, i16* %mID, align 8, !dbg !8024
  %call = call %struct._lwm2m_list_t* @lwm2m_list_remove(%struct._lwm2m_list_t* %2, i16 zeroext %4, %struct._lwm2m_list_t** null), !dbg !8024
  %5 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_transaction_*, !dbg !8025
  %6 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8026
  %transactionList1 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %6, i32 0, i32 4, !dbg !8027
  store %struct._lwm2m_transaction_* %5, %struct._lwm2m_transaction_** %transactionList1, align 8, !dbg !8028
  %7 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8029
  call void @transaction_free(%struct._lwm2m_transaction_* %7), !dbg !8030
  ret void, !dbg !8031
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @transaction_handleResponse(%struct.lwm2m_context_t* %contextP, i8* %fromSessionH, %struct.coap_packet_t* %message, %struct.coap_packet_t* %response) #0 !dbg !8032 {
entry:
  %retval = alloca i1, align 1
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %fromSessionH.addr = alloca i8*, align 8
  %message.addr = alloca %struct.coap_packet_t*, align 8
  %response.addr = alloca %struct.coap_packet_t*, align 8
  %found = alloca i8, align 1
  %reset = alloca i8, align 1
  %transacP = alloca %struct._lwm2m_transaction_*, align 8
  %tv_sec = alloca i64, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !8087, metadata !1190), !dbg !8088
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !8089, metadata !1190), !dbg !8090
  store %struct.coap_packet_t* %message, %struct.coap_packet_t** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %message.addr, metadata !8091, metadata !1190), !dbg !8092
  store %struct.coap_packet_t* %response, %struct.coap_packet_t** %response.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %response.addr, metadata !8093, metadata !1190), !dbg !8094
  call void @llvm.dbg.declare(metadata i8* %found, metadata !8095, metadata !1190), !dbg !8096
  store i8 0, i8* %found, align 1, !dbg !8096
  call void @llvm.dbg.declare(metadata i8* %reset, metadata !8097, metadata !1190), !dbg !8098
  store i8 0, i8* %reset, align 1, !dbg !8098
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP, metadata !8099, metadata !1190), !dbg !8100
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8101
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 4, !dbg !8102
  %1 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !8102
  store %struct._lwm2m_transaction_* %1, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8103
  br label %while.cond, !dbg !8104

while.cond:                                       ; preds = %if.end75, %entry
  %2 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8105
  %cmp = icmp ne %struct._lwm2m_transaction_* null, %2, !dbg !8106
  br i1 %cmp, label %while.body, label %while.end, !dbg !8104

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !8107
  %4 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8110
  %peerH = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %4, i32 0, i32 2, !dbg !8111
  %5 = load i8*, i8** %peerH, align 8, !dbg !8111
  %6 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8112
  %userData = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %6, i32 0, i32 5, !dbg !8113
  %7 = load i8*, i8** %userData, align 8, !dbg !8113
  %call = call zeroext i1 @lwm2m_session_is_equal(i8* %3, i8* %5, i8* %7), !dbg !8114
  %conv = zext i1 %call to i32, !dbg !8114
  %cmp1 = icmp eq i32 %conv, 1, !dbg !8115
  br i1 %cmp1, label %if.then, label %if.end75, !dbg !8116

if.then:                                          ; preds = %while.body
  %8 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8117
  %ack_received = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %8, i32 0, i32 3, !dbg !8120
  %9 = load i8, i8* %ack_received, align 8, !dbg !8120
  %tobool = icmp ne i8 %9, 0, !dbg !8117
  br i1 %tobool, label %if.end20, label %if.then3, !dbg !8121

if.then3:                                         ; preds = %if.then
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8122
  %type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 2, !dbg !8125
  %11 = load i32, i32* %type, align 4, !dbg !8125
  %cmp4 = icmp eq i32 2, %11, !dbg !8126
  br i1 %cmp4, label %if.then9, label %lor.lhs.false, !dbg !8127

lor.lhs.false:                                    ; preds = %if.then3
  %12 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8128
  %type6 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %12, i32 0, i32 2, !dbg !8129
  %13 = load i32, i32* %type6, align 4, !dbg !8129
  %cmp7 = icmp eq i32 3, %13, !dbg !8130
  br i1 %cmp7, label %if.then9, label %if.end19, !dbg !8131

if.then9:                                         ; preds = %lor.lhs.false, %if.then3
  %14 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8132
  %mID = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %14, i32 0, i32 1, !dbg !8135
  %15 = load i16, i16* %mID, align 8, !dbg !8135
  %conv10 = zext i16 %15 to i32, !dbg !8132
  %16 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8136
  %mid = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %16, i32 0, i32 4, !dbg !8137
  %17 = load i16, i16* %mid, align 2, !dbg !8137
  %conv11 = zext i16 %17 to i32, !dbg !8136
  %cmp12 = icmp eq i32 %conv10, %conv11, !dbg !8138
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !8139

if.then14:                                        ; preds = %if.then9
  store i8 1, i8* %found, align 1, !dbg !8140
  %18 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8142
  %ack_received15 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %18, i32 0, i32 3, !dbg !8143
  store i8 1, i8* %ack_received15, align 8, !dbg !8144
  %19 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8145
  %type16 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %19, i32 0, i32 2, !dbg !8146
  %20 = load i32, i32* %type16, align 4, !dbg !8146
  %cmp17 = icmp eq i32 3, %20, !dbg !8147
  %frombool = zext i1 %cmp17 to i8, !dbg !8148
  store i8 %frombool, i8* %reset, align 1, !dbg !8148
  br label %if.end, !dbg !8149

if.end:                                           ; preds = %if.then14, %if.then9
  br label %if.end19, !dbg !8150

if.end19:                                         ; preds = %if.end, %lor.lhs.false
  br label %if.end20, !dbg !8151

if.end20:                                         ; preds = %if.end19, %if.then
  %21 = load i8, i8* %reset, align 1, !dbg !8152
  %tobool21 = trunc i8 %21 to i1, !dbg !8152
  br i1 %tobool21, label %if.then26, label %lor.lhs.false23, !dbg !8154

lor.lhs.false23:                                  ; preds = %if.end20
  %22 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8155
  %23 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8156
  %call24 = call i32 @prv_checkFinished(%struct._lwm2m_transaction_* %22, %struct.coap_packet_t* %23), !dbg !8157
  %tobool25 = icmp ne i32 %call24, 0, !dbg !8157
  br i1 %tobool25, label %if.then26, label %if.end54, !dbg !8158

if.then26:                                        ; preds = %lor.lhs.false23, %if.end20
  %24 = load i8, i8* %reset, align 1, !dbg !8159
  %tobool27 = trunc i8 %24 to i1, !dbg !8159
  br i1 %tobool27, label %if.end48, label %if.then28, !dbg !8162

if.then28:                                        ; preds = %if.then26
  %25 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8163
  %type29 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %25, i32 0, i32 2, !dbg !8166
  %26 = load i32, i32* %type29, align 4, !dbg !8166
  %cmp30 = icmp eq i32 0, %26, !dbg !8167
  br i1 %cmp30, label %land.lhs.true, label %if.end37, !dbg !8168

land.lhs.true:                                    ; preds = %if.then28
  %27 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !8169
  %cmp32 = icmp ne %struct.coap_packet_t* null, %27, !dbg !8170
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !8171

if.then34:                                        ; preds = %land.lhs.true
  %28 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !8172
  %29 = bitcast %struct.coap_packet_t* %28 to i8*, !dbg !8172
  %30 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8174
  %mid35 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %30, i32 0, i32 4, !dbg !8175
  %31 = load i16, i16* %mid35, align 2, !dbg !8175
  call void @coap_init_message(i8* %29, i32 2, i8 zeroext 0, i16 zeroext %31), !dbg !8176
  %32 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8177
  %33 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !8178
  %34 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !8179
  %call36 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %32, %struct.coap_packet_t* %33, i8* %34), !dbg !8180
  br label %if.end37, !dbg !8181

if.end37:                                         ; preds = %if.then34, %land.lhs.true, %if.then28
  %35 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8182
  %code = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %35, i32 0, i32 3, !dbg !8184
  %36 = load i8, i8* %code, align 8, !dbg !8184
  %conv38 = zext i8 %36 to i32, !dbg !8182
  %cmp39 = icmp eq i32 129, %conv38, !dbg !8185
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !8186

land.lhs.true41:                                  ; preds = %if.end37
  %37 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8187
  %retrans_counter = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %37, i32 0, i32 5, !dbg !8188
  %38 = load i8, i8* %retrans_counter, align 8, !dbg !8188
  %conv42 = zext i8 %38 to i32, !dbg !8187
  %cmp43 = icmp sgt i32 4, %conv42, !dbg !8189
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !8190

if.then45:                                        ; preds = %land.lhs.true41
  %39 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8191
  %ack_received46 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %39, i32 0, i32 3, !dbg !8193
  store i8 0, i8* %ack_received46, align 8, !dbg !8194
  %40 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8195
  %retrans_time = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %40, i32 0, i32 6, !dbg !8196
  %41 = load i64, i64* %retrans_time, align 8, !dbg !8197
  %add = add nsw i64 %41, 2, !dbg !8197
  store i64 %add, i64* %retrans_time, align 8, !dbg !8197
  store i1 true, i1* %retval, align 1, !dbg !8198
  br label %return, !dbg !8198

if.end47:                                         ; preds = %land.lhs.true41, %if.end37
  br label %if.end48, !dbg !8199

if.end48:                                         ; preds = %if.end47, %if.then26
  %42 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8200
  %callback = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %42, i32 0, i32 10, !dbg !8202
  %43 = load void (%struct._lwm2m_transaction_*, i8*)*, void (%struct._lwm2m_transaction_*, i8*)** %callback, align 8, !dbg !8202
  %cmp49 = icmp ne void (%struct._lwm2m_transaction_*, i8*)* %43, null, !dbg !8203
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !8204

if.then51:                                        ; preds = %if.end48
  %44 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8205
  %callback52 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %44, i32 0, i32 10, !dbg !8207
  %45 = load void (%struct._lwm2m_transaction_*, i8*)*, void (%struct._lwm2m_transaction_*, i8*)** %callback52, align 8, !dbg !8207
  %46 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8208
  %47 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8209
  %48 = bitcast %struct.coap_packet_t* %47 to i8*, !dbg !8209
  call void %45(%struct._lwm2m_transaction_* %46, i8* %48), !dbg !8205
  br label %if.end53, !dbg !8210

if.end53:                                         ; preds = %if.then51, %if.end48
  %49 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8211
  %50 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8212
  call void @transaction_remove(%struct.lwm2m_context_t* %49, %struct._lwm2m_transaction_* %50), !dbg !8213
  store i1 true, i1* %retval, align 1, !dbg !8214
  br label %return, !dbg !8214

if.end54:                                         ; preds = %lor.lhs.false23
  %51 = load i8, i8* %found, align 1, !dbg !8215
  %tobool55 = trunc i8 %51 to i1, !dbg !8215
  br i1 %tobool55, label %if.then56, label %if.end74, !dbg !8217

if.then56:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i64* %tv_sec, metadata !8218, metadata !1190), !dbg !8220
  %call57 = call i64 @lwm2m_gettime(), !dbg !8221
  store i64 %call57, i64* %tv_sec, align 8, !dbg !8220
  %52 = load i64, i64* %tv_sec, align 8, !dbg !8222
  %cmp58 = icmp sle i64 0, %52, !dbg !8224
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !8225

if.then60:                                        ; preds = %if.then56
  %53 = load i64, i64* %tv_sec, align 8, !dbg !8226
  %54 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8228
  %retrans_time61 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %54, i32 0, i32 6, !dbg !8229
  store i64 %53, i64* %retrans_time61, align 8, !dbg !8230
  br label %if.end62, !dbg !8231

if.end62:                                         ; preds = %if.then60, %if.then56
  %55 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8232
  %response_timeout = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %55, i32 0, i32 4, !dbg !8234
  %56 = load i64, i64* %response_timeout, align 8, !dbg !8234
  %tobool63 = icmp ne i64 %56, 0, !dbg !8232
  br i1 %tobool63, label %if.then64, label %if.else, !dbg !8235

if.then64:                                        ; preds = %if.end62
  %57 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8236
  %response_timeout65 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %57, i32 0, i32 4, !dbg !8238
  %58 = load i64, i64* %response_timeout65, align 8, !dbg !8238
  %59 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8239
  %retrans_time66 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %59, i32 0, i32 6, !dbg !8240
  %60 = load i64, i64* %retrans_time66, align 8, !dbg !8241
  %add67 = add nsw i64 %60, %58, !dbg !8241
  store i64 %add67, i64* %retrans_time66, align 8, !dbg !8241
  br label %if.end73, !dbg !8242

if.else:                                          ; preds = %if.end62
  %61 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8243
  %retrans_counter68 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %61, i32 0, i32 5, !dbg !8245
  %62 = load i8, i8* %retrans_counter68, align 8, !dbg !8245
  %conv69 = zext i8 %62 to i32, !dbg !8243
  %mul = mul nsw i32 2, %conv69, !dbg !8246
  %conv70 = sext i32 %mul to i64, !dbg !8247
  %63 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8248
  %retrans_time71 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %63, i32 0, i32 6, !dbg !8249
  %64 = load i64, i64* %retrans_time71, align 8, !dbg !8250
  %add72 = add nsw i64 %64, %conv70, !dbg !8250
  store i64 %add72, i64* %retrans_time71, align 8, !dbg !8250
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then64
  store i1 true, i1* %retval, align 1, !dbg !8251
  br label %return, !dbg !8251

if.end74:                                         ; preds = %if.end54
  br label %if.end75, !dbg !8252

if.end75:                                         ; preds = %if.end74, %while.body
  %65 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8253
  %next = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %65, i32 0, i32 0, !dbg !8254
  %66 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %next, align 8, !dbg !8254
  store %struct._lwm2m_transaction_* %66, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8255
  br label %while.cond, !dbg !8104, !llvm.loop !8256

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !8258
  br label %return, !dbg !8258

return:                                           ; preds = %while.end, %if.end73, %if.end53, %if.then45
  %67 = load i1, i1* %retval, align 1, !dbg !8259
  ret i1 %67, !dbg !8259
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_checkFinished(%struct._lwm2m_transaction_* %transacP, %struct.coap_packet_t* %receivedMessage) #0 !dbg !8260 {
entry:
  %retval = alloca i32, align 4
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  %receivedMessage.addr = alloca %struct.coap_packet_t*, align 8
  %len = alloca i32, align 4
  %token = alloca i8*, align 8
  %transactionMessage = alloca %struct.coap_packet_t*, align 8
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !8263, metadata !1190), !dbg !8264
  store %struct.coap_packet_t* %receivedMessage, %struct.coap_packet_t** %receivedMessage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %receivedMessage.addr, metadata !8265, metadata !1190), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8267, metadata !1190), !dbg !8268
  call void @llvm.dbg.declare(metadata i8** %token, metadata !8269, metadata !1190), !dbg !8270
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %transactionMessage, metadata !8271, metadata !1190), !dbg !8272
  %0 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8273
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %0, i32 0, i32 7, !dbg !8274
  %1 = load i8*, i8** %message, align 8, !dbg !8274
  %2 = bitcast i8* %1 to %struct.coap_packet_t*, !dbg !8273
  store %struct.coap_packet_t* %2, %struct.coap_packet_t** %transactionMessage, align 8, !dbg !8272
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %transactionMessage, align 8, !dbg !8275
  %code = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 3, !dbg !8277
  %4 = load i8, i8* %code, align 8, !dbg !8277
  %conv = zext i8 %4 to i32, !dbg !8275
  %cmp = icmp slt i32 4, %conv, !dbg !8278
  br i1 %cmp, label %if.then, label %if.end, !dbg !8279

if.then:                                          ; preds = %entry
  %5 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8280
  %ack_received = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %5, i32 0, i32 3, !dbg !8282
  %6 = load i8, i8* %ack_received, align 8, !dbg !8282
  %conv2 = zext i8 %6 to i32, !dbg !8280
  %tobool = icmp ne i32 %conv2, 0, !dbg !8280
  %7 = zext i1 %tobool to i64, !dbg !8280
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !8280
  store i32 %cond, i32* %retval, align 4, !dbg !8283
  br label %return, !dbg !8283

if.end:                                           ; preds = %entry
  br i1 true, label %cond.true, label %cond.false, !dbg !8284

cond.true:                                        ; preds = %if.end
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %transactionMessage, align 8, !dbg !8285
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 5, !dbg !8285
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !8285
  %9 = load i8, i8* %arrayidx, align 2, !dbg !8285
  %conv3 = zext i8 %9 to i32, !dbg !8285
  %and = and i32 %conv3, 8, !dbg !8285
  %tobool4 = icmp ne i32 %and, 0, !dbg !8285
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !8285

cond.false:                                       ; preds = %if.end
  br i1 false, label %if.end10, label %if.then5, !dbg !8284

if.then5:                                         ; preds = %cond.false, %cond.true
  %10 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8287
  %ack_received6 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %10, i32 0, i32 3, !dbg !8289
  %11 = load i8, i8* %ack_received6, align 8, !dbg !8289
  %conv7 = zext i8 %11 to i32, !dbg !8287
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !8287
  %12 = zext i1 %tobool8 to i64, !dbg !8287
  %cond9 = select i1 %tobool8, i32 1, i32 0, !dbg !8287
  store i32 %cond9, i32* %retval, align 4, !dbg !8290
  br label %return, !dbg !8290

if.end10:                                         ; preds = %cond.false, %cond.true
  %13 = load %struct.coap_packet_t*, %struct.coap_packet_t** %receivedMessage.addr, align 8, !dbg !8291
  %14 = bitcast %struct.coap_packet_t* %13 to i8*, !dbg !8291
  %call = call i32 @coap_get_header_token(i8* %14, i8** %token), !dbg !8292
  store i32 %call, i32* %len, align 4, !dbg !8293
  %15 = load %struct.coap_packet_t*, %struct.coap_packet_t** %transactionMessage, align 8, !dbg !8294
  %token_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %15, i32 0, i32 20, !dbg !8296
  %16 = load i8, i8* %token_len, align 4, !dbg !8296
  %conv11 = zext i8 %16 to i32, !dbg !8294
  %17 = load i32, i32* %len, align 4, !dbg !8297
  %cmp12 = icmp eq i32 %conv11, %17, !dbg !8298
  br i1 %cmp12, label %if.then14, label %if.end22, !dbg !8299

if.then14:                                        ; preds = %if.end10
  %18 = load %struct.coap_packet_t*, %struct.coap_packet_t** %transactionMessage, align 8, !dbg !8300
  %token15 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %18, i32 0, i32 21, !dbg !8303
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %token15, i32 0, i32 0, !dbg !8300
  %19 = load i8*, i8** %token, align 8, !dbg !8304
  %20 = load i32, i32* %len, align 4, !dbg !8305
  %conv16 = sext i32 %20 to i64, !dbg !8305
  %call17 = call i32 @memcmp(i8* %arraydecay, i8* %19, i64 %conv16) #9, !dbg !8306
  %cmp18 = icmp eq i32 %call17, 0, !dbg !8307
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8308

if.then20:                                        ; preds = %if.then14
  store i32 1, i32* %retval, align 4, !dbg !8309
  br label %return, !dbg !8309

if.end21:                                         ; preds = %if.then14
  br label %if.end22, !dbg !8310

if.end22:                                         ; preds = %if.end21, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !8311
  br label %return, !dbg !8311

return:                                           ; preds = %if.end22, %if.then20, %if.then5, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !8312
  ret i32 %21, !dbg !8312
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind uwtable
define i32 @transaction_send(%struct.lwm2m_context_t* %contextP, %struct._lwm2m_transaction_* %transacP) #0 !dbg !8313 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  %maxRetriesReached = alloca i8, align 1
  %timeout = alloca i64, align 8
  %tv_sec = alloca i64, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !8316, metadata !1190), !dbg !8317
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !8318, metadata !1190), !dbg !8319
  call void @llvm.dbg.declare(metadata i8* %maxRetriesReached, metadata !8320, metadata !1190), !dbg !8321
  store i8 0, i8* %maxRetriesReached, align 1, !dbg !8321
  %0 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8322
  %buffer = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %0, i32 0, i32 9, !dbg !8324
  %1 = load i8*, i8** %buffer, align 8, !dbg !8324
  %cmp = icmp eq i8* %1, null, !dbg !8325
  br i1 %cmp, label %if.then, label %if.end28, !dbg !8326

if.then:                                          ; preds = %entry
  %2 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8327
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %2, i32 0, i32 7, !dbg !8329
  %3 = load i8*, i8** %message, align 8, !dbg !8329
  %call = call i64 @coap_serialize_get_size(i8* %3), !dbg !8330
  %conv = trunc i64 %call to i16, !dbg !8330
  %4 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8331
  %buffer_len = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %4, i32 0, i32 8, !dbg !8332
  store i16 %conv, i16* %buffer_len, align 8, !dbg !8333
  %5 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8334
  %buffer_len1 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %5, i32 0, i32 8, !dbg !8336
  %6 = load i16, i16* %buffer_len1, align 8, !dbg !8336
  %conv2 = zext i16 %6 to i32, !dbg !8334
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !8337
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !8338

if.then5:                                         ; preds = %if.then
  %7 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8339
  %8 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8341
  call void @transaction_remove(%struct.lwm2m_context_t* %7, %struct._lwm2m_transaction_* %8), !dbg !8342
  store i32 160, i32* %retval, align 4, !dbg !8343
  br label %return, !dbg !8343

if.end:                                           ; preds = %if.then
  %9 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8344
  %buffer_len6 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %9, i32 0, i32 8, !dbg !8345
  %10 = load i16, i16* %buffer_len6, align 8, !dbg !8345
  %conv7 = zext i16 %10 to i64, !dbg !8344
  %call8 = call i8* @lwm2m_malloc(i64 %conv7), !dbg !8346
  %11 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8347
  %buffer9 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %11, i32 0, i32 9, !dbg !8348
  store i8* %call8, i8** %buffer9, align 8, !dbg !8349
  %12 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8350
  %buffer10 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %12, i32 0, i32 9, !dbg !8352
  %13 = load i8*, i8** %buffer10, align 8, !dbg !8352
  %cmp11 = icmp eq i8* %13, null, !dbg !8353
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !8354

if.then13:                                        ; preds = %if.end
  %14 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8355
  %15 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8357
  call void @transaction_remove(%struct.lwm2m_context_t* %14, %struct._lwm2m_transaction_* %15), !dbg !8358
  store i32 160, i32* %retval, align 4, !dbg !8359
  br label %return, !dbg !8359

if.end14:                                         ; preds = %if.end
  %16 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8360
  %message15 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %16, i32 0, i32 7, !dbg !8361
  %17 = load i8*, i8** %message15, align 8, !dbg !8361
  %18 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8362
  %buffer16 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %18, i32 0, i32 9, !dbg !8363
  %19 = load i8*, i8** %buffer16, align 8, !dbg !8363
  %call17 = call i64 @coap_serialize_message(i8* %17, i8* %19), !dbg !8364
  %conv18 = trunc i64 %call17 to i16, !dbg !8364
  %20 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8365
  %buffer_len19 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %20, i32 0, i32 8, !dbg !8366
  store i16 %conv18, i16* %buffer_len19, align 8, !dbg !8367
  %21 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8368
  %buffer_len20 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %21, i32 0, i32 8, !dbg !8370
  %22 = load i16, i16* %buffer_len20, align 8, !dbg !8370
  %conv21 = zext i16 %22 to i32, !dbg !8368
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !8371
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !8372

if.then24:                                        ; preds = %if.end14
  %23 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8373
  %buffer25 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %23, i32 0, i32 9, !dbg !8375
  %24 = load i8*, i8** %buffer25, align 8, !dbg !8375
  call void @lwm2m_free(i8* %24), !dbg !8376
  %25 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8377
  %buffer26 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %25, i32 0, i32 9, !dbg !8378
  store i8* null, i8** %buffer26, align 8, !dbg !8379
  %26 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8380
  %27 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8381
  call void @transaction_remove(%struct.lwm2m_context_t* %26, %struct._lwm2m_transaction_* %27), !dbg !8382
  store i32 160, i32* %retval, align 4, !dbg !8383
  br label %return, !dbg !8383

if.end27:                                         ; preds = %if.end14
  br label %if.end28, !dbg !8384

if.end28:                                         ; preds = %if.end27, %entry
  %28 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8385
  %ack_received = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %28, i32 0, i32 3, !dbg !8387
  %29 = load i8, i8* %ack_received, align 8, !dbg !8387
  %tobool = icmp ne i8 %29, 0, !dbg !8385
  br i1 %tobool, label %if.end62, label %if.then29, !dbg !8388

if.then29:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !8389, metadata !1190), !dbg !8391
  %30 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8392
  %retrans_counter = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %30, i32 0, i32 5, !dbg !8394
  %31 = load i8, i8* %retrans_counter, align 8, !dbg !8394
  %conv30 = zext i8 %31 to i32, !dbg !8392
  %cmp31 = icmp eq i32 0, %conv30, !dbg !8395
  br i1 %cmp31, label %if.then33, label %if.else40, !dbg !8396

if.then33:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata i64* %tv_sec, metadata !8397, metadata !1190), !dbg !8399
  %call34 = call i64 @lwm2m_gettime(), !dbg !8400
  store i64 %call34, i64* %tv_sec, align 8, !dbg !8399
  %32 = load i64, i64* %tv_sec, align 8, !dbg !8401
  %cmp35 = icmp sle i64 0, %32, !dbg !8403
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !8404

if.then37:                                        ; preds = %if.then33
  %33 = load i64, i64* %tv_sec, align 8, !dbg !8405
  %add = add nsw i64 %33, 2, !dbg !8407
  %34 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8408
  %retrans_time = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %34, i32 0, i32 6, !dbg !8409
  store i64 %add, i64* %retrans_time, align 8, !dbg !8410
  %35 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8411
  %retrans_counter38 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %35, i32 0, i32 5, !dbg !8412
  store i8 1, i8* %retrans_counter38, align 8, !dbg !8413
  store i64 0, i64* %timeout, align 8, !dbg !8414
  br label %if.end39, !dbg !8415

if.else:                                          ; preds = %if.then33
  store i8 1, i8* %maxRetriesReached, align 1, !dbg !8416
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then37
  br label %if.end44, !dbg !8418

if.else40:                                        ; preds = %if.then29
  %36 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8419
  %retrans_counter41 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %36, i32 0, i32 5, !dbg !8421
  %37 = load i8, i8* %retrans_counter41, align 8, !dbg !8421
  %conv42 = zext i8 %37 to i32, !dbg !8419
  %sub = sub nsw i32 %conv42, 1, !dbg !8422
  %shl = shl i32 2, %sub, !dbg !8423
  %conv43 = sext i32 %shl to i64, !dbg !8424
  store i64 %conv43, i64* %timeout, align 8, !dbg !8425
  br label %if.end44

if.end44:                                         ; preds = %if.else40, %if.end39
  %38 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8426
  %retrans_counter45 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %38, i32 0, i32 5, !dbg !8428
  %39 = load i8, i8* %retrans_counter45, align 8, !dbg !8428
  %conv46 = zext i8 %39 to i32, !dbg !8426
  %cmp47 = icmp sge i32 5, %conv46, !dbg !8429
  br i1 %cmp47, label %if.then49, label %if.else60, !dbg !8430

if.then49:                                        ; preds = %if.end44
  %40 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8431
  %peerH = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %40, i32 0, i32 2, !dbg !8433
  %41 = load i8*, i8** %peerH, align 8, !dbg !8433
  %42 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8434
  %buffer50 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %42, i32 0, i32 9, !dbg !8435
  %43 = load i8*, i8** %buffer50, align 8, !dbg !8435
  %44 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8436
  %buffer_len51 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %44, i32 0, i32 8, !dbg !8437
  %45 = load i16, i16* %buffer_len51, align 8, !dbg !8437
  %conv52 = zext i16 %45 to i64, !dbg !8436
  %46 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8438
  %userData = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %46, i32 0, i32 5, !dbg !8439
  %47 = load i8*, i8** %userData, align 8, !dbg !8439
  %call53 = call zeroext i8 @lwm2m_buffer_send(i8* %41, i8* %43, i64 %conv52, i8* %47), !dbg !8440
  %48 = load i64, i64* %timeout, align 8, !dbg !8441
  %49 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8442
  %retrans_time54 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %49, i32 0, i32 6, !dbg !8443
  %50 = load i64, i64* %retrans_time54, align 8, !dbg !8444
  %add55 = add i64 %50, %48, !dbg !8444
  store i64 %add55, i64* %retrans_time54, align 8, !dbg !8444
  %51 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8445
  %retrans_counter56 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %51, i32 0, i32 5, !dbg !8446
  %52 = load i8, i8* %retrans_counter56, align 8, !dbg !8447
  %conv57 = zext i8 %52 to i32, !dbg !8447
  %add58 = add nsw i32 %conv57, 1, !dbg !8447
  %conv59 = trunc i32 %add58 to i8, !dbg !8447
  store i8 %conv59, i8* %retrans_counter56, align 8, !dbg !8447
  br label %if.end61, !dbg !8448

if.else60:                                        ; preds = %if.end44
  store i8 1, i8* %maxRetriesReached, align 1, !dbg !8449
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then49
  br label %if.end62, !dbg !8451

if.end62:                                         ; preds = %if.end61, %if.end28
  %53 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8452
  %ack_received63 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %53, i32 0, i32 3, !dbg !8454
  %54 = load i8, i8* %ack_received63, align 8, !dbg !8454
  %conv64 = zext i8 %54 to i32, !dbg !8452
  %tobool65 = icmp ne i32 %conv64, 0, !dbg !8452
  br i1 %tobool65, label %if.then68, label %lor.lhs.false, !dbg !8455

lor.lhs.false:                                    ; preds = %if.end62
  %55 = load i8, i8* %maxRetriesReached, align 1, !dbg !8456
  %tobool66 = trunc i8 %55 to i1, !dbg !8456
  br i1 %tobool66, label %if.then68, label %if.end73, !dbg !8457

if.then68:                                        ; preds = %lor.lhs.false, %if.end62
  %56 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8458
  %callback = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %56, i32 0, i32 10, !dbg !8461
  %57 = load void (%struct._lwm2m_transaction_*, i8*)*, void (%struct._lwm2m_transaction_*, i8*)** %callback, align 8, !dbg !8461
  %tobool69 = icmp ne void (%struct._lwm2m_transaction_*, i8*)* %57, null, !dbg !8458
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !8462

if.then70:                                        ; preds = %if.then68
  %58 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8463
  %callback71 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %58, i32 0, i32 10, !dbg !8465
  %59 = load void (%struct._lwm2m_transaction_*, i8*)*, void (%struct._lwm2m_transaction_*, i8*)** %callback71, align 8, !dbg !8465
  %60 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8466
  call void %59(%struct._lwm2m_transaction_* %60, i8* null), !dbg !8463
  br label %if.end72, !dbg !8467

if.end72:                                         ; preds = %if.then70, %if.then68
  %61 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8468
  %62 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !8469
  call void @transaction_remove(%struct.lwm2m_context_t* %61, %struct._lwm2m_transaction_* %62), !dbg !8470
  store i32 -1, i32* %retval, align 4, !dbg !8471
  br label %return, !dbg !8471

if.end73:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !8472
  br label %return, !dbg !8472

return:                                           ; preds = %if.end73, %if.end72, %if.then24, %if.then13, %if.then5
  %63 = load i32, i32* %retval, align 4, !dbg !8473
  ret i32 %63, !dbg !8473
}

; Function Attrs: noinline nounwind uwtable
define void @transaction_step(%struct.lwm2m_context_t* %contextP, i64 %currentTime, i64* %timeoutP) #0 !dbg !8474 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %currentTime.addr = alloca i64, align 8
  %timeoutP.addr = alloca i64*, align 8
  %transacP = alloca %struct._lwm2m_transaction_*, align 8
  %nextP = alloca %struct._lwm2m_transaction_*, align 8
  %removed = alloca i32, align 4
  %interval = alloca i64, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !8477, metadata !1190), !dbg !8478
  store i64 %currentTime, i64* %currentTime.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %currentTime.addr, metadata !8479, metadata !1190), !dbg !8480
  store i64* %timeoutP, i64** %timeoutP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %timeoutP.addr, metadata !8481, metadata !1190), !dbg !8482
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP, metadata !8483, metadata !1190), !dbg !8484
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8485
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 4, !dbg !8486
  %1 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !8486
  store %struct._lwm2m_transaction_* %1, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8487
  br label %while.cond, !dbg !8488

while.cond:                                       ; preds = %if.end13, %entry
  %2 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8489
  %cmp = icmp ne %struct._lwm2m_transaction_* %2, null, !dbg !8490
  br i1 %cmp, label %while.body, label %while.end, !dbg !8488

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %nextP, metadata !8491, metadata !1190), !dbg !8493
  %3 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8494
  %next = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %3, i32 0, i32 0, !dbg !8495
  %4 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %next, align 8, !dbg !8495
  store %struct._lwm2m_transaction_* %4, %struct._lwm2m_transaction_** %nextP, align 8, !dbg !8493
  call void @llvm.dbg.declare(metadata i32* %removed, metadata !8496, metadata !1190), !dbg !8497
  store i32 0, i32* %removed, align 4, !dbg !8497
  %5 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8498
  %retrans_time = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %5, i32 0, i32 6, !dbg !8500
  %6 = load i64, i64* %retrans_time, align 8, !dbg !8500
  %7 = load i64, i64* %currentTime.addr, align 8, !dbg !8501
  %cmp1 = icmp sle i64 %6, %7, !dbg !8502
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8503

if.then:                                          ; preds = %while.body
  %8 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8504
  %9 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8506
  %call = call i32 @transaction_send(%struct.lwm2m_context_t* %8, %struct._lwm2m_transaction_* %9), !dbg !8507
  store i32 %call, i32* %removed, align 4, !dbg !8508
  br label %if.end, !dbg !8509

if.end:                                           ; preds = %if.then, %while.body
  %10 = load i32, i32* %removed, align 4, !dbg !8510
  %cmp2 = icmp eq i32 0, %10, !dbg !8512
  br i1 %cmp2, label %if.then3, label %if.else12, !dbg !8513

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %interval, metadata !8514, metadata !1190), !dbg !8516
  %11 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8517
  %retrans_time4 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %11, i32 0, i32 6, !dbg !8519
  %12 = load i64, i64* %retrans_time4, align 8, !dbg !8519
  %13 = load i64, i64* %currentTime.addr, align 8, !dbg !8520
  %cmp5 = icmp sgt i64 %12, %13, !dbg !8521
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !8522

if.then6:                                         ; preds = %if.then3
  %14 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8523
  %retrans_time7 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %14, i32 0, i32 6, !dbg !8525
  %15 = load i64, i64* %retrans_time7, align 8, !dbg !8525
  %16 = load i64, i64* %currentTime.addr, align 8, !dbg !8526
  %sub = sub nsw i64 %15, %16, !dbg !8527
  store i64 %sub, i64* %interval, align 8, !dbg !8528
  br label %if.end8, !dbg !8529

if.else:                                          ; preds = %if.then3
  store i64 1, i64* %interval, align 8, !dbg !8530
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  %17 = load i64*, i64** %timeoutP.addr, align 8, !dbg !8532
  %18 = load i64, i64* %17, align 8, !dbg !8534
  %19 = load i64, i64* %interval, align 8, !dbg !8535
  %cmp9 = icmp sgt i64 %18, %19, !dbg !8536
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8537

if.then10:                                        ; preds = %if.end8
  %20 = load i64, i64* %interval, align 8, !dbg !8538
  %21 = load i64*, i64** %timeoutP.addr, align 8, !dbg !8540
  store i64 %20, i64* %21, align 8, !dbg !8541
  br label %if.end11, !dbg !8542

if.end11:                                         ; preds = %if.then10, %if.end8
  br label %if.end13, !dbg !8543

if.else12:                                        ; preds = %if.end
  %22 = load i64*, i64** %timeoutP.addr, align 8, !dbg !8544
  store i64 1, i64* %22, align 8, !dbg !8546
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.end11
  %23 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %nextP, align 8, !dbg !8547
  store %struct._lwm2m_transaction_* %23, %struct._lwm2m_transaction_** %transacP, align 8, !dbg !8548
  br label %while.cond, !dbg !8488, !llvm.loop !8549

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8551
}

; Function Attrs: noinline nounwind uwtable
define void @registration_freeClient(%struct._lwm2m_client_* %clientP) #0 !dbg !8552 {
entry:
  %clientP.addr = alloca %struct._lwm2m_client_*, align 8
  %targetP = alloca %struct._lwm2m_observation_*, align 8
  store %struct._lwm2m_client_* %clientP, %struct._lwm2m_client_** %clientP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP.addr, metadata !8555, metadata !1190), !dbg !8556
  %0 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8557
  %name = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %0, i32 0, i32 2, !dbg !8559
  %1 = load i8*, i8** %name, align 8, !dbg !8559
  %cmp = icmp ne i8* %1, null, !dbg !8560
  br i1 %cmp, label %if.then, label %if.end, !dbg !8561

if.then:                                          ; preds = %entry
  %2 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8562
  %name1 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %2, i32 0, i32 2, !dbg !8563
  %3 = load i8*, i8** %name1, align 8, !dbg !8563
  call void @lwm2m_free(i8* %3), !dbg !8564
  br label %if.end, !dbg !8564

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8565
  %msisdn = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %4, i32 0, i32 4, !dbg !8567
  %5 = load i8*, i8** %msisdn, align 8, !dbg !8567
  %cmp2 = icmp ne i8* %5, null, !dbg !8568
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !8569

if.then3:                                         ; preds = %if.end
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8570
  %msisdn4 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %6, i32 0, i32 4, !dbg !8571
  %7 = load i8*, i8** %msisdn4, align 8, !dbg !8571
  call void @lwm2m_free(i8* %7), !dbg !8572
  br label %if.end5, !dbg !8572

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8573
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %8, i32 0, i32 5, !dbg !8575
  %9 = load i8*, i8** %altPath, align 8, !dbg !8575
  %cmp6 = icmp ne i8* %9, null, !dbg !8576
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !8577

if.then7:                                         ; preds = %if.end5
  %10 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8578
  %altPath8 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %10, i32 0, i32 5, !dbg !8579
  %11 = load i8*, i8** %altPath8, align 8, !dbg !8579
  call void @lwm2m_free(i8* %11), !dbg !8580
  br label %if.end9, !dbg !8580

if.end9:                                          ; preds = %if.then7, %if.end5
  %12 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8581
  %objectList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %12, i32 0, i32 10, !dbg !8582
  %13 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectList, align 8, !dbg !8582
  call void @prv_freeClientObjectList(%struct._lwm2m_client_object_* %13), !dbg !8583
  br label %while.cond, !dbg !8584

while.cond:                                       ; preds = %while.body, %if.end9
  %14 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8585
  %observationList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %14, i32 0, i32 11, !dbg !8586
  %15 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList, align 8, !dbg !8586
  %cmp10 = icmp ne %struct._lwm2m_observation_* %15, null, !dbg !8587
  br i1 %cmp10, label %while.body, label %while.end, !dbg !8584

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %targetP, metadata !8588, metadata !1190), !dbg !8590
  %16 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8591
  %observationList11 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %16, i32 0, i32 11, !dbg !8592
  %17 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList11, align 8, !dbg !8592
  store %struct._lwm2m_observation_* %17, %struct._lwm2m_observation_** %targetP, align 8, !dbg !8593
  %18 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8594
  %observationList12 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %18, i32 0, i32 11, !dbg !8595
  %19 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList12, align 8, !dbg !8595
  %next = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %19, i32 0, i32 0, !dbg !8596
  %20 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %next, align 8, !dbg !8596
  %21 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8597
  %observationList13 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %21, i32 0, i32 11, !dbg !8598
  store %struct._lwm2m_observation_* %20, %struct._lwm2m_observation_** %observationList13, align 8, !dbg !8599
  %22 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !8600
  %23 = bitcast %struct._lwm2m_observation_* %22 to i8*, !dbg !8600
  call void @lwm2m_free(i8* %23), !dbg !8601
  br label %while.cond, !dbg !8584, !llvm.loop !8602

while.end:                                        ; preds = %while.cond
  %24 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !8604
  %25 = bitcast %struct._lwm2m_client_* %24 to i8*, !dbg !8604
  call void @lwm2m_free(i8* %25), !dbg !8605
  ret void, !dbg !8606
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_freeClientObjectList(%struct._lwm2m_client_object_* %objects) #0 !dbg !8607 {
entry:
  %objects.addr = alloca %struct._lwm2m_client_object_*, align 8
  %objP = alloca %struct._lwm2m_client_object_*, align 8
  %target = alloca %struct._lwm2m_list_t*, align 8
  store %struct._lwm2m_client_object_* %objects, %struct._lwm2m_client_object_** %objects.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objects.addr, metadata !8610, metadata !1190), !dbg !8611
  br label %while.cond, !dbg !8612

while.cond:                                       ; preds = %while.end, %entry
  %0 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8613
  %cmp = icmp ne %struct._lwm2m_client_object_* %0, null, !dbg !8614
  br i1 %cmp, label %while.body, label %while.end8, !dbg !8612

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objP, metadata !8615, metadata !1190), !dbg !8617
  br label %while.cond1, !dbg !8618

while.cond1:                                      ; preds = %while.body3, %while.body
  %1 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8619
  %instanceList = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %1, i32 0, i32 2, !dbg !8620
  %2 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList, align 8, !dbg !8620
  %cmp2 = icmp ne %struct._lwm2m_list_t* %2, null, !dbg !8621
  br i1 %cmp2, label %while.body3, label %while.end, !dbg !8618

while.body3:                                      ; preds = %while.cond1
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %target, metadata !8622, metadata !1190), !dbg !8624
  %3 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8625
  %instanceList4 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %3, i32 0, i32 2, !dbg !8626
  %4 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList4, align 8, !dbg !8626
  store %struct._lwm2m_list_t* %4, %struct._lwm2m_list_t** %target, align 8, !dbg !8627
  %5 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8628
  %instanceList5 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %5, i32 0, i32 2, !dbg !8629
  %6 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList5, align 8, !dbg !8629
  %next = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %6, i32 0, i32 0, !dbg !8630
  %7 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %next, align 8, !dbg !8630
  %8 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8631
  %instanceList6 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %8, i32 0, i32 2, !dbg !8632
  store %struct._lwm2m_list_t* %7, %struct._lwm2m_list_t** %instanceList6, align 8, !dbg !8633
  %9 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %target, align 8, !dbg !8634
  %10 = bitcast %struct._lwm2m_list_t* %9 to i8*, !dbg !8634
  call void @lwm2m_free(i8* %10), !dbg !8635
  br label %while.cond1, !dbg !8618, !llvm.loop !8636

while.end:                                        ; preds = %while.cond1
  %11 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8638
  store %struct._lwm2m_client_object_* %11, %struct._lwm2m_client_object_** %objP, align 8, !dbg !8639
  %12 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8640
  %next7 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %12, i32 0, i32 0, !dbg !8641
  %13 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %next7, align 8, !dbg !8641
  store %struct._lwm2m_client_object_* %13, %struct._lwm2m_client_object_** %objects.addr, align 8, !dbg !8642
  %14 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objP, align 8, !dbg !8643
  %15 = bitcast %struct._lwm2m_client_object_* %14 to i8*, !dbg !8643
  call void @lwm2m_free(i8* %15), !dbg !8644
  br label %while.cond, !dbg !8612, !llvm.loop !8645

while.end8:                                       ; preds = %while.cond
  ret void, !dbg !8647
}

; Function Attrs: noinline nounwind uwtable
define zeroext i8 @registration_handleRequest(%struct.lwm2m_context_t* %contextP, %struct.lwm2m_uri_t* %uriP, i8* %fromSessionH, %struct.coap_packet_t* %message, %struct.coap_packet_t* %response) #0 !dbg !8648 {
entry:
  %retval = alloca i8, align 1
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %fromSessionH.addr = alloca i8*, align 8
  %message.addr = alloca %struct.coap_packet_t*, align 8
  %response.addr = alloca %struct.coap_packet_t*, align 8
  %result = alloca i8, align 1
  %tv_sec = alloca i64, align 8
  %name = alloca i8*, align 8
  %lifetime = alloca i32, align 4
  %msisdn = alloca i8*, align 8
  %altPath = alloca i8*, align 8
  %version = alloca i8*, align 8
  %binding = alloca i32, align 4
  %objects = alloca %struct._lwm2m_client_object_*, align 8
  %supportJSON = alloca i8, align 1
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %location = alloca [10 x i8], align 1
  %observationP = alloca %struct._lwm2m_observation_*, align 8
  %objP = alloca %struct._lwm2m_client_object_*, align 8
  %nextP = alloca %struct._lwm2m_observation_*, align 8
  %clientP202 = alloca %struct._lwm2m_client_*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !8733, metadata !1190), !dbg !8734
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !8735, metadata !1190), !dbg !8736
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !8737, metadata !1190), !dbg !8738
  store %struct.coap_packet_t* %message, %struct.coap_packet_t** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %message.addr, metadata !8739, metadata !1190), !dbg !8740
  store %struct.coap_packet_t* %response, %struct.coap_packet_t** %response.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %response.addr, metadata !8741, metadata !1190), !dbg !8742
  call void @llvm.dbg.declare(metadata i8* %result, metadata !8743, metadata !1190), !dbg !8744
  call void @llvm.dbg.declare(metadata i64* %tv_sec, metadata !8745, metadata !1190), !dbg !8746
  %call = call i64 @lwm2m_gettime(), !dbg !8747
  store i64 %call, i64* %tv_sec, align 8, !dbg !8748
  %0 = load i64, i64* %tv_sec, align 8, !dbg !8749
  %cmp = icmp slt i64 %0, 0, !dbg !8751
  br i1 %cmp, label %if.then, label %if.end, !dbg !8752

if.then:                                          ; preds = %entry
  store i8 -96, i8* %retval, align 1, !dbg !8753
  br label %return, !dbg !8753

if.end:                                           ; preds = %entry
  %1 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8754
  %code = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %1, i32 0, i32 3, !dbg !8755
  %2 = load i8, i8* %code, align 8, !dbg !8755
  %conv = zext i8 %2 to i32, !dbg !8754
  switch i32 %conv, label %sw.default226 [
    i32 2, label %sw.bb
    i32 4, label %sw.bb201
  ], !dbg !8756

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %name, metadata !8757, metadata !1190), !dbg !8760
  store i8* null, i8** %name, align 8, !dbg !8760
  call void @llvm.dbg.declare(metadata i32* %lifetime, metadata !8761, metadata !1190), !dbg !8762
  call void @llvm.dbg.declare(metadata i8** %msisdn, metadata !8763, metadata !1190), !dbg !8764
  call void @llvm.dbg.declare(metadata i8** %altPath, metadata !8765, metadata !1190), !dbg !8766
  call void @llvm.dbg.declare(metadata i8** %version, metadata !8767, metadata !1190), !dbg !8768
  call void @llvm.dbg.declare(metadata i32* %binding, metadata !8769, metadata !1190), !dbg !8770
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objects, metadata !8771, metadata !1190), !dbg !8772
  call void @llvm.dbg.declare(metadata i8* %supportJSON, metadata !8773, metadata !1190), !dbg !8774
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !8775, metadata !1190), !dbg !8776
  call void @llvm.dbg.declare(metadata [10 x i8]* %location, metadata !8777, metadata !1190), !dbg !8781
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8782
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 35, !dbg !8784
  %4 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_query, align 8, !dbg !8784
  %call1 = call i32 @prv_getParameters(%struct._multi_option_t* %4, i8** %name, i32* %lifetime, i8** %msisdn, i32* %binding, i8** %version), !dbg !8785
  %cmp2 = icmp ne i32 0, %call1, !dbg !8786
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !8787

if.then4:                                         ; preds = %sw.bb
  store i8 -128, i8* %retval, align 1, !dbg !8788
  br label %return, !dbg !8788

if.end5:                                          ; preds = %sw.bb
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8790
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 6, !dbg !8792
  %6 = load i32, i32* %content_type, align 4, !dbg !8792
  %cmp6 = icmp ne i32 %6, 40, !dbg !8793
  br i1 %cmp6, label %land.lhs.true, label %if.end12, !dbg !8794

land.lhs.true:                                    ; preds = %if.end5
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8795
  %content_type8 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 6, !dbg !8796
  %8 = load i32, i32* %content_type8, align 4, !dbg !8796
  %cmp9 = icmp ne i32 %8, 0, !dbg !8797
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !8798

if.then11:                                        ; preds = %land.lhs.true
  store i8 -128, i8* %retval, align 1, !dbg !8799
  br label %return, !dbg !8799

if.end12:                                         ; preds = %land.lhs.true, %if.end5
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8801
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 38, !dbg !8802
  %10 = load i8*, i8** %payload, align 8, !dbg !8802
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !8803
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 37, !dbg !8804
  %12 = load i16, i16* %payload_len, align 2, !dbg !8804
  %call13 = call %struct._lwm2m_client_object_* @prv_decodeRegisterPayload(i8* %10, i16 zeroext %12, i8* %supportJSON, i8** %altPath), !dbg !8805
  store %struct._lwm2m_client_object_* %call13, %struct._lwm2m_client_object_** %objects, align 8, !dbg !8806
  %13 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !8807
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %13, i32 0, i32 0, !dbg !8808
  %14 = load i8, i8* %flag, align 2, !dbg !8808
  %conv14 = zext i8 %14 to i32, !dbg !8807
  %and = and i32 %conv14, 7, !dbg !8809
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb15
    i32 4, label %sw.bb117
  ], !dbg !8810

sw.bb15:                                          ; preds = %if.end12
  %15 = load i8*, i8** %version, align 8, !dbg !8811
  %cmp16 = icmp eq i8* %15, null, !dbg !8814
  br i1 %cmp16, label %if.then18, label %if.end27, !dbg !8815

if.then18:                                        ; preds = %sw.bb15
  %16 = load i8*, i8** %name, align 8, !dbg !8816
  %cmp19 = icmp ne i8* %16, null, !dbg !8819
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !8820

if.then21:                                        ; preds = %if.then18
  %17 = load i8*, i8** %name, align 8, !dbg !8821
  call void @lwm2m_free(i8* %17), !dbg !8822
  br label %if.end22, !dbg !8822

if.end22:                                         ; preds = %if.then21, %if.then18
  %18 = load i8*, i8** %msisdn, align 8, !dbg !8823
  %cmp23 = icmp ne i8* %18, null, !dbg !8825
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8826

if.then25:                                        ; preds = %if.end22
  %19 = load i8*, i8** %msisdn, align 8, !dbg !8827
  call void @lwm2m_free(i8* %19), !dbg !8828
  br label %if.end26, !dbg !8828

if.end26:                                         ; preds = %if.then25, %if.end22
  store i8 -128, i8* %retval, align 1, !dbg !8829
  br label %return, !dbg !8829

if.end27:                                         ; preds = %sw.bb15
  %20 = load i8*, i8** %name, align 8, !dbg !8830
  %cmp28 = icmp eq i8* %20, null, !dbg !8832
  br i1 %cmp28, label %if.then30, label %if.end35, !dbg !8833

if.then30:                                        ; preds = %if.end27
  %21 = load i8*, i8** %version, align 8, !dbg !8834
  call void @lwm2m_free(i8* %21), !dbg !8836
  %22 = load i8*, i8** %msisdn, align 8, !dbg !8837
  %cmp31 = icmp ne i8* %22, null, !dbg !8839
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !8840

if.then33:                                        ; preds = %if.then30
  %23 = load i8*, i8** %msisdn, align 8, !dbg !8841
  call void @lwm2m_free(i8* %23), !dbg !8842
  br label %if.end34, !dbg !8842

if.end34:                                         ; preds = %if.then33, %if.then30
  store i8 -128, i8* %retval, align 1, !dbg !8843
  br label %return, !dbg !8843

if.end35:                                         ; preds = %if.end27
  %24 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects, align 8, !dbg !8844
  %cmp36 = icmp eq %struct._lwm2m_client_object_* %24, null, !dbg !8846
  br i1 %cmp36, label %if.then38, label %if.end43, !dbg !8847

if.then38:                                        ; preds = %if.end35
  %25 = load i8*, i8** %version, align 8, !dbg !8848
  call void @lwm2m_free(i8* %25), !dbg !8850
  %26 = load i8*, i8** %name, align 8, !dbg !8851
  call void @lwm2m_free(i8* %26), !dbg !8852
  %27 = load i8*, i8** %msisdn, align 8, !dbg !8853
  %cmp39 = icmp ne i8* %27, null, !dbg !8855
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !8856

if.then41:                                        ; preds = %if.then38
  %28 = load i8*, i8** %msisdn, align 8, !dbg !8857
  call void @lwm2m_free(i8* %28), !dbg !8858
  br label %if.end42, !dbg !8858

if.end42:                                         ; preds = %if.then41, %if.then38
  store i8 -128, i8* %retval, align 1, !dbg !8859
  br label %return, !dbg !8859

if.end43:                                         ; preds = %if.end35
  %29 = load i8*, i8** %version, align 8, !dbg !8860
  %call44 = call i64 @strlen(i8* %29) #9, !dbg !8862
  %cmp45 = icmp ne i64 %call44, 3, !dbg !8863
  br i1 %cmp45, label %if.then48, label %lor.lhs.false, !dbg !8864

lor.lhs.false:                                    ; preds = %if.end43
  %30 = load i8*, i8** %version, align 8, !dbg !8865
  %call47 = call i32 @lwm2m_strncmp(i8* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i32 0, i32 0), i64 3), !dbg !8866
  %tobool = icmp ne i32 %call47, 0, !dbg !8866
  br i1 %tobool, label %if.then48, label %if.end53, !dbg !8867

if.then48:                                        ; preds = %lor.lhs.false, %if.end43
  %31 = load i8*, i8** %version, align 8, !dbg !8868
  call void @lwm2m_free(i8* %31), !dbg !8870
  %32 = load i8*, i8** %name, align 8, !dbg !8871
  call void @lwm2m_free(i8* %32), !dbg !8872
  %33 = load i8*, i8** %msisdn, align 8, !dbg !8873
  %cmp49 = icmp ne i8* %33, null, !dbg !8875
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !8876

if.then51:                                        ; preds = %if.then48
  %34 = load i8*, i8** %msisdn, align 8, !dbg !8877
  call void @lwm2m_free(i8* %34), !dbg !8878
  br label %if.end52, !dbg !8878

if.end52:                                         ; preds = %if.then51, %if.then48
  store i8 -116, i8* %retval, align 1, !dbg !8879
  br label %return, !dbg !8879

if.end53:                                         ; preds = %lor.lhs.false
  %35 = load i32, i32* %lifetime, align 4, !dbg !8880
  %cmp54 = icmp eq i32 %35, 0, !dbg !8882
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8883

if.then56:                                        ; preds = %if.end53
  store i32 86400, i32* %lifetime, align 4, !dbg !8884
  br label %if.end57, !dbg !8886

if.end57:                                         ; preds = %if.then56, %if.end53
  %36 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8887
  %37 = load i8*, i8** %name, align 8, !dbg !8888
  %call58 = call %struct._lwm2m_client_* @prv_getClientByName(%struct.lwm2m_context_t* %36, i8* %37), !dbg !8889
  store %struct._lwm2m_client_* %call58, %struct._lwm2m_client_** %clientP, align 8, !dbg !8890
  %38 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8891
  %cmp59 = icmp ne %struct._lwm2m_client_* %38, null, !dbg !8893
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !8894

if.then61:                                        ; preds = %if.end57
  %39 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8895
  %name62 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %39, i32 0, i32 2, !dbg !8897
  %40 = load i8*, i8** %name62, align 8, !dbg !8897
  call void @lwm2m_free(i8* %40), !dbg !8898
  %41 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8899
  %msisdn63 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %41, i32 0, i32 4, !dbg !8901
  %42 = load i8*, i8** %msisdn63, align 8, !dbg !8901
  %cmp64 = icmp ne i8* %42, null, !dbg !8902
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !8903

if.then66:                                        ; preds = %if.then61
  %43 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8904
  %msisdn67 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %43, i32 0, i32 4, !dbg !8905
  %44 = load i8*, i8** %msisdn67, align 8, !dbg !8905
  call void @lwm2m_free(i8* %44), !dbg !8906
  br label %if.end68, !dbg !8906

if.end68:                                         ; preds = %if.then66, %if.then61
  %45 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8907
  %altPath69 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %45, i32 0, i32 5, !dbg !8909
  %46 = load i8*, i8** %altPath69, align 8, !dbg !8909
  %cmp70 = icmp ne i8* %46, null, !dbg !8910
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !8911

if.then72:                                        ; preds = %if.end68
  %47 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8912
  %altPath73 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %47, i32 0, i32 5, !dbg !8913
  %48 = load i8*, i8** %altPath73, align 8, !dbg !8913
  call void @lwm2m_free(i8* %48), !dbg !8914
  br label %if.end74, !dbg !8914

if.end74:                                         ; preds = %if.then72, %if.end68
  %49 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8915
  %objectList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %49, i32 0, i32 10, !dbg !8916
  %50 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectList, align 8, !dbg !8916
  call void @prv_freeClientObjectList(%struct._lwm2m_client_object_* %50), !dbg !8917
  %51 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8918
  %objectList75 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %51, i32 0, i32 10, !dbg !8919
  store %struct._lwm2m_client_object_* null, %struct._lwm2m_client_object_** %objectList75, align 8, !dbg !8920
  br label %if.end89, !dbg !8921

if.else:                                          ; preds = %if.end57
  %call76 = call i8* @lwm2m_malloc(i64 88), !dbg !8922
  %52 = bitcast i8* %call76 to %struct._lwm2m_client_*, !dbg !8924
  store %struct._lwm2m_client_* %52, %struct._lwm2m_client_** %clientP, align 8, !dbg !8925
  %53 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8926
  %cmp77 = icmp eq %struct._lwm2m_client_* %53, null, !dbg !8928
  br i1 %cmp77, label %if.then79, label %if.end84, !dbg !8929

if.then79:                                        ; preds = %if.else
  %54 = load i8*, i8** %name, align 8, !dbg !8930
  call void @lwm2m_free(i8* %54), !dbg !8932
  %55 = load i8*, i8** %altPath, align 8, !dbg !8933
  call void @lwm2m_free(i8* %55), !dbg !8934
  %56 = load i8*, i8** %msisdn, align 8, !dbg !8935
  %cmp80 = icmp ne i8* %56, null, !dbg !8937
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !8938

if.then82:                                        ; preds = %if.then79
  %57 = load i8*, i8** %msisdn, align 8, !dbg !8939
  call void @lwm2m_free(i8* %57), !dbg !8940
  br label %if.end83, !dbg !8940

if.end83:                                         ; preds = %if.then82, %if.then79
  %58 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects, align 8, !dbg !8941
  call void @prv_freeClientObjectList(%struct._lwm2m_client_object_* %58), !dbg !8942
  store i8 -96, i8* %retval, align 1, !dbg !8943
  br label %return, !dbg !8943

if.end84:                                         ; preds = %if.else
  %59 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8944
  %60 = bitcast %struct._lwm2m_client_* %59 to i8*, !dbg !8945
  call void @llvm.memset.p0i8.i64(i8* %60, i8 0, i64 88, i32 8, i1 false), !dbg !8945
  %61 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8946
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %61, i32 0, i32 0, !dbg !8947
  %62 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !8947
  %63 = bitcast %struct._lwm2m_client_* %62 to %struct._lwm2m_list_t*, !dbg !8948
  %call85 = call zeroext i16 @lwm2m_list_newId(%struct._lwm2m_list_t* %63), !dbg !8949
  %64 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8950
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %64, i32 0, i32 1, !dbg !8951
  store i16 %call85, i16* %internalID, align 8, !dbg !8952
  %65 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8953
  %clientList86 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %65, i32 0, i32 0, !dbg !8953
  %66 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList86, align 8, !dbg !8953
  %67 = bitcast %struct._lwm2m_client_* %66 to %struct._lwm2m_list_t*, !dbg !8953
  %68 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8953
  %69 = bitcast %struct._lwm2m_client_* %68 to %struct._lwm2m_list_t*, !dbg !8953
  %call87 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %67, %struct._lwm2m_list_t* %69), !dbg !8953
  %70 = bitcast %struct._lwm2m_list_t* %call87 to %struct._lwm2m_client_*, !dbg !8954
  %71 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !8955
  %clientList88 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %71, i32 0, i32 0, !dbg !8956
  store %struct._lwm2m_client_* %70, %struct._lwm2m_client_** %clientList88, align 8, !dbg !8957
  br label %if.end89

if.end89:                                         ; preds = %if.end84, %if.end74
  %72 = load i8*, i8** %name, align 8, !dbg !8958
  %73 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8959
  %name90 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %73, i32 0, i32 2, !dbg !8960
  store i8* %72, i8** %name90, align 8, !dbg !8961
  %74 = load i32, i32* %binding, align 4, !dbg !8962
  %75 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8963
  %binding91 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %75, i32 0, i32 3, !dbg !8964
  store i32 %74, i32* %binding91, align 8, !dbg !8965
  %76 = load i8*, i8** %msisdn, align 8, !dbg !8966
  %77 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8967
  %msisdn92 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %77, i32 0, i32 4, !dbg !8968
  store i8* %76, i8** %msisdn92, align 8, !dbg !8969
  %78 = load i8*, i8** %altPath, align 8, !dbg !8970
  %79 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8971
  %altPath93 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %79, i32 0, i32 5, !dbg !8972
  store i8* %78, i8** %altPath93, align 8, !dbg !8973
  %80 = load i8, i8* %supportJSON, align 1, !dbg !8974
  %tobool94 = trunc i8 %80 to i1, !dbg !8974
  %81 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8975
  %supportJSON95 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %81, i32 0, i32 6, !dbg !8976
  %frombool = zext i1 %tobool94 to i8, !dbg !8977
  store i8 %frombool, i8* %supportJSON95, align 8, !dbg !8977
  %82 = load i32, i32* %lifetime, align 4, !dbg !8978
  %83 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8979
  %lifetime96 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %83, i32 0, i32 7, !dbg !8980
  store i32 %82, i32* %lifetime96, align 4, !dbg !8981
  %84 = load i64, i64* %tv_sec, align 8, !dbg !8982
  %85 = load i32, i32* %lifetime, align 4, !dbg !8983
  %conv97 = zext i32 %85 to i64, !dbg !8983
  %add = add nsw i64 %84, %conv97, !dbg !8984
  %86 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8985
  %endOfLife = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %86, i32 0, i32 8, !dbg !8986
  store i64 %add, i64* %endOfLife, align 8, !dbg !8987
  %87 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects, align 8, !dbg !8988
  %88 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8989
  %objectList98 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %88, i32 0, i32 10, !dbg !8990
  store %struct._lwm2m_client_object_* %87, %struct._lwm2m_client_object_** %objectList98, align 8, !dbg !8991
  %89 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !8992
  %90 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8993
  %sessionH = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %90, i32 0, i32 9, !dbg !8994
  store i8* %89, i8** %sessionH, align 8, !dbg !8995
  %91 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !8996
  %internalID99 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %91, i32 0, i32 1, !dbg !8998
  %92 = load i16, i16* %internalID99, align 8, !dbg !8998
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %location, i32 0, i32 0, !dbg !8999
  %call100 = call i32 @prv_getLocationString(i16 zeroext %92, i8* %arraydecay), !dbg !9000
  %cmp101 = icmp eq i32 %call100, 0, !dbg !9001
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !9002

if.then103:                                       ; preds = %if.end89
  %93 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9003
  call void @registration_freeClient(%struct._lwm2m_client_* %93), !dbg !9005
  store i8 -96, i8* %retval, align 1, !dbg !9006
  br label %return, !dbg !9006

if.end104:                                        ; preds = %if.end89
  %94 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !9007
  %95 = bitcast %struct.coap_packet_t* %94 to i8*, !dbg !9007
  %arraydecay105 = getelementptr inbounds [10 x i8], [10 x i8]* %location, i32 0, i32 0, !dbg !9009
  %call106 = call i32 @coap_set_header_location_path(i8* %95, i8* %arraydecay105), !dbg !9010
  %cmp107 = icmp eq i32 %call106, 0, !dbg !9011
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !9012

if.then109:                                       ; preds = %if.end104
  %96 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9013
  call void @registration_freeClient(%struct._lwm2m_client_* %96), !dbg !9015
  store i8 -96, i8* %retval, align 1, !dbg !9016
  br label %return, !dbg !9016

if.end110:                                        ; preds = %if.end104
  %97 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9017
  %monitorCallback = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %97, i32 0, i32 1, !dbg !9019
  %98 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback, align 8, !dbg !9019
  %cmp111 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %98, null, !dbg !9020
  br i1 %cmp111, label %if.then113, label %if.end116, !dbg !9021

if.then113:                                       ; preds = %if.end110
  %99 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9022
  %monitorCallback114 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %99, i32 0, i32 1, !dbg !9024
  %100 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback114, align 8, !dbg !9024
  %101 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9025
  %internalID115 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %101, i32 0, i32 1, !dbg !9026
  %102 = load i16, i16* %internalID115, align 8, !dbg !9026
  %103 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9027
  %monitorUserData = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %103, i32 0, i32 2, !dbg !9028
  %104 = load i8*, i8** %monitorUserData, align 8, !dbg !9028
  call void %100(i16 zeroext %102, %struct.lwm2m_uri_t* null, i32 65, i32 0, i8* null, i32 0, i8* %104), !dbg !9022
  br label %if.end116, !dbg !9029

if.end116:                                        ; preds = %if.then113, %if.end110
  store i8 65, i8* %result, align 1, !dbg !9030
  br label %sw.epilog, !dbg !9031

sw.bb117:                                         ; preds = %if.end12
  %105 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9032
  %clientList118 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %105, i32 0, i32 0, !dbg !9033
  %106 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList118, align 8, !dbg !9033
  %107 = bitcast %struct._lwm2m_client_* %106 to %struct._lwm2m_list_t*, !dbg !9034
  %108 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !9035
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %108, i32 0, i32 1, !dbg !9036
  %109 = load i16, i16* %objectId, align 2, !dbg !9036
  %call119 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %107, i16 zeroext %109), !dbg !9037
  %110 = bitcast %struct._lwm2m_list_t* %call119 to %struct._lwm2m_client_*, !dbg !9038
  store %struct._lwm2m_client_* %110, %struct._lwm2m_client_** %clientP, align 8, !dbg !9039
  %111 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9040
  %cmp120 = icmp eq %struct._lwm2m_client_* %111, null, !dbg !9042
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !9043

if.then122:                                       ; preds = %sw.bb117
  store i8 -124, i8* %retval, align 1, !dbg !9044
  br label %return, !dbg !9044

if.end123:                                        ; preds = %sw.bb117
  %112 = load i8*, i8** %name, align 8, !dbg !9045
  %cmp124 = icmp ne i8* %112, null, !dbg !9047
  br i1 %cmp124, label %if.then126, label %if.end131, !dbg !9048

if.then126:                                       ; preds = %if.end123
  %113 = load i8*, i8** %name, align 8, !dbg !9049
  call void @lwm2m_free(i8* %113), !dbg !9051
  %114 = load i8*, i8** %msisdn, align 8, !dbg !9052
  %cmp127 = icmp ne i8* %114, null, !dbg !9054
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !9055

if.then129:                                       ; preds = %if.then126
  %115 = load i8*, i8** %msisdn, align 8, !dbg !9056
  call void @lwm2m_free(i8* %115), !dbg !9057
  br label %if.end130, !dbg !9057

if.end130:                                        ; preds = %if.then129, %if.then126
  store i8 -128, i8* %retval, align 1, !dbg !9058
  br label %return, !dbg !9058

if.end131:                                        ; preds = %if.end123
  %116 = load i32, i32* %binding, align 4, !dbg !9059
  %cmp132 = icmp ne i32 %116, 0, !dbg !9061
  br i1 %cmp132, label %if.then134, label %if.end136, !dbg !9062

if.then134:                                       ; preds = %if.end131
  %117 = load i32, i32* %binding, align 4, !dbg !9063
  %118 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9065
  %binding135 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %118, i32 0, i32 3, !dbg !9066
  store i32 %117, i32* %binding135, align 8, !dbg !9067
  br label %if.end136, !dbg !9068

if.end136:                                        ; preds = %if.then134, %if.end131
  %119 = load i8*, i8** %msisdn, align 8, !dbg !9069
  %cmp137 = icmp ne i8* %119, null, !dbg !9071
  br i1 %cmp137, label %if.then139, label %if.end147, !dbg !9072

if.then139:                                       ; preds = %if.end136
  %120 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9073
  %msisdn140 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %120, i32 0, i32 4, !dbg !9076
  %121 = load i8*, i8** %msisdn140, align 8, !dbg !9076
  %cmp141 = icmp ne i8* %121, null, !dbg !9077
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !9078

if.then143:                                       ; preds = %if.then139
  %122 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9079
  %msisdn144 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %122, i32 0, i32 4, !dbg !9080
  %123 = load i8*, i8** %msisdn144, align 8, !dbg !9080
  call void @lwm2m_free(i8* %123), !dbg !9081
  br label %if.end145, !dbg !9081

if.end145:                                        ; preds = %if.then143, %if.then139
  %124 = load i8*, i8** %msisdn, align 8, !dbg !9082
  %125 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9083
  %msisdn146 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %125, i32 0, i32 4, !dbg !9084
  store i8* %124, i8** %msisdn146, align 8, !dbg !9085
  br label %if.end147, !dbg !9086

if.end147:                                        ; preds = %if.end145, %if.end136
  %126 = load i32, i32* %lifetime, align 4, !dbg !9087
  %cmp148 = icmp ne i32 %126, 0, !dbg !9089
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !9090

if.then150:                                       ; preds = %if.end147
  %127 = load i32, i32* %lifetime, align 4, !dbg !9091
  %128 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9093
  %lifetime151 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %128, i32 0, i32 7, !dbg !9094
  store i32 %127, i32* %lifetime151, align 4, !dbg !9095
  br label %if.end152, !dbg !9096

if.end152:                                        ; preds = %if.then150, %if.end147
  %129 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !9097
  %130 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9098
  %sessionH153 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %130, i32 0, i32 9, !dbg !9099
  store i8* %129, i8** %sessionH153, align 8, !dbg !9100
  %131 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects, align 8, !dbg !9101
  %cmp154 = icmp ne %struct._lwm2m_client_object_* %131, null, !dbg !9103
  br i1 %cmp154, label %if.then156, label %if.end188, !dbg !9104

if.then156:                                       ; preds = %if.end152
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %observationP, metadata !9105, metadata !1190), !dbg !9107
  %132 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9108
  %observationList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %132, i32 0, i32 11, !dbg !9109
  %133 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList, align 8, !dbg !9109
  store %struct._lwm2m_observation_* %133, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9110
  br label %while.cond, !dbg !9111

while.cond:                                       ; preds = %if.end185, %if.then156
  %134 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9112
  %cmp157 = icmp ne %struct._lwm2m_observation_* %134, null, !dbg !9113
  br i1 %cmp157, label %while.body, label %while.end, !dbg !9111

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objP, metadata !9114, metadata !1190), !dbg !9116
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %nextP, metadata !9117, metadata !1190), !dbg !9118
  %135 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9119
  %next = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %135, i32 0, i32 0, !dbg !9120
  %136 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %next, align 8, !dbg !9120
  store %struct._lwm2m_observation_* %136, %struct._lwm2m_observation_** %nextP, align 8, !dbg !9121
  %137 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects, align 8, !dbg !9122
  %138 = bitcast %struct._lwm2m_client_object_* %137 to %struct._lwm2m_list_t*, !dbg !9123
  %139 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9124
  %uri = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %139, i32 0, i32 3, !dbg !9125
  %objectId159 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri, i32 0, i32 1, !dbg !9126
  %140 = load i16, i16* %objectId159, align 2, !dbg !9126
  %call160 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %138, i16 zeroext %140), !dbg !9127
  %141 = bitcast %struct._lwm2m_list_t* %call160 to %struct._lwm2m_client_object_*, !dbg !9128
  store %struct._lwm2m_client_object_* %141, %struct._lwm2m_client_object_** %objP, align 8, !dbg !9129
  %142 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objP, align 8, !dbg !9130
  %cmp161 = icmp eq %struct._lwm2m_client_object_* %142, null, !dbg !9132
  br i1 %cmp161, label %if.then163, label %if.else166, !dbg !9133

if.then163:                                       ; preds = %while.body
  %143 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9134
  %callback = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %143, i32 0, i32 5, !dbg !9136
  %144 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback, align 8, !dbg !9136
  %145 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9137
  %internalID164 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %145, i32 0, i32 1, !dbg !9138
  %146 = load i16, i16* %internalID164, align 8, !dbg !9138
  %147 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9139
  %uri165 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %147, i32 0, i32 3, !dbg !9140
  %148 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9141
  %userData = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %148, i32 0, i32 6, !dbg !9142
  %149 = load i8*, i8** %userData, align 8, !dbg !9142
  call void %144(i16 zeroext %146, %struct.lwm2m_uri_t* %uri165, i32 66, i32 0, i8* null, i32 0, i8* %149), !dbg !9134
  %150 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9143
  call void @observe_remove(%struct._lwm2m_observation_* %150), !dbg !9144
  br label %if.end185, !dbg !9145

if.else166:                                       ; preds = %while.body
  %151 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9146
  %uri167 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %151, i32 0, i32 3, !dbg !9149
  %flag168 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri167, i32 0, i32 0, !dbg !9150
  %152 = load i8, i8* %flag168, align 8, !dbg !9150
  %conv169 = zext i8 %152 to i32, !dbg !9146
  %and170 = and i32 %conv169, 2, !dbg !9151
  %cmp171 = icmp ne i32 %and170, 0, !dbg !9152
  br i1 %cmp171, label %if.then173, label %if.end184, !dbg !9153

if.then173:                                       ; preds = %if.else166
  %153 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objP, align 8, !dbg !9154
  %instanceList = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %153, i32 0, i32 2, !dbg !9157
  %154 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList, align 8, !dbg !9157
  %155 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9158
  %uri174 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %155, i32 0, i32 3, !dbg !9159
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri174, i32 0, i32 2, !dbg !9160
  %156 = load i16, i16* %instanceId, align 4, !dbg !9160
  %call175 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %154, i16 zeroext %156), !dbg !9161
  %cmp176 = icmp eq %struct._lwm2m_list_t* %call175, null, !dbg !9162
  br i1 %cmp176, label %if.then178, label %if.end183, !dbg !9163

if.then178:                                       ; preds = %if.then173
  %157 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9164
  %callback179 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %157, i32 0, i32 5, !dbg !9166
  %158 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback179, align 8, !dbg !9166
  %159 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9167
  %internalID180 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %159, i32 0, i32 1, !dbg !9168
  %160 = load i16, i16* %internalID180, align 8, !dbg !9168
  %161 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9169
  %uri181 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %161, i32 0, i32 3, !dbg !9170
  %162 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9171
  %userData182 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %162, i32 0, i32 6, !dbg !9172
  %163 = load i8*, i8** %userData182, align 8, !dbg !9172
  call void %158(i16 zeroext %160, %struct.lwm2m_uri_t* %uri181, i32 66, i32 0, i8* null, i32 0, i8* %163), !dbg !9164
  %164 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9173
  call void @observe_remove(%struct._lwm2m_observation_* %164), !dbg !9174
  br label %if.end183, !dbg !9175

if.end183:                                        ; preds = %if.then178, %if.then173
  br label %if.end184, !dbg !9176

if.end184:                                        ; preds = %if.end183, %if.else166
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then163
  %165 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %nextP, align 8, !dbg !9177
  store %struct._lwm2m_observation_* %165, %struct._lwm2m_observation_** %observationP, align 8, !dbg !9178
  br label %while.cond, !dbg !9111, !llvm.loop !9179

while.end:                                        ; preds = %while.cond
  %166 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9181
  %objectList186 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %166, i32 0, i32 10, !dbg !9182
  %167 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectList186, align 8, !dbg !9182
  call void @prv_freeClientObjectList(%struct._lwm2m_client_object_* %167), !dbg !9183
  %168 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objects, align 8, !dbg !9184
  %169 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9185
  %objectList187 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %169, i32 0, i32 10, !dbg !9186
  store %struct._lwm2m_client_object_* %168, %struct._lwm2m_client_object_** %objectList187, align 8, !dbg !9187
  br label %if.end188, !dbg !9188

if.end188:                                        ; preds = %while.end, %if.end152
  %170 = load i64, i64* %tv_sec, align 8, !dbg !9189
  %171 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9190
  %lifetime189 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %171, i32 0, i32 7, !dbg !9191
  %172 = load i32, i32* %lifetime189, align 4, !dbg !9191
  %conv190 = zext i32 %172 to i64, !dbg !9190
  %add191 = add nsw i64 %170, %conv190, !dbg !9192
  %173 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9193
  %endOfLife192 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %173, i32 0, i32 8, !dbg !9194
  store i64 %add191, i64* %endOfLife192, align 8, !dbg !9195
  %174 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9196
  %monitorCallback193 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %174, i32 0, i32 1, !dbg !9198
  %175 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback193, align 8, !dbg !9198
  %cmp194 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %175, null, !dbg !9199
  br i1 %cmp194, label %if.then196, label %if.end200, !dbg !9200

if.then196:                                       ; preds = %if.end188
  %176 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9201
  %monitorCallback197 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %176, i32 0, i32 1, !dbg !9203
  %177 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback197, align 8, !dbg !9203
  %178 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !9204
  %internalID198 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %178, i32 0, i32 1, !dbg !9205
  %179 = load i16, i16* %internalID198, align 8, !dbg !9205
  %180 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9206
  %monitorUserData199 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %180, i32 0, i32 2, !dbg !9207
  %181 = load i8*, i8** %monitorUserData199, align 8, !dbg !9207
  call void %177(i16 zeroext %179, %struct.lwm2m_uri_t* null, i32 68, i32 0, i8* null, i32 0, i8* %181), !dbg !9201
  br label %if.end200, !dbg !9208

if.end200:                                        ; preds = %if.then196, %if.end188
  store i8 68, i8* %result, align 1, !dbg !9209
  br label %sw.epilog, !dbg !9210

sw.default:                                       ; preds = %if.end12
  store i8 -128, i8* %retval, align 1, !dbg !9211
  br label %return, !dbg !9211

sw.epilog:                                        ; preds = %if.end200, %if.end116
  br label %sw.epilog227, !dbg !9212

sw.bb201:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP202, metadata !9213, metadata !1190), !dbg !9215
  %182 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !9216
  %flag203 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %182, i32 0, i32 0, !dbg !9218
  %183 = load i8, i8* %flag203, align 2, !dbg !9218
  %conv204 = zext i8 %183 to i32, !dbg !9216
  %and205 = and i32 %conv204, 7, !dbg !9219
  %cmp206 = icmp ne i32 %and205, 4, !dbg !9220
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !9221

if.then208:                                       ; preds = %sw.bb201
  store i8 -128, i8* %retval, align 1, !dbg !9222
  br label %return, !dbg !9222

if.end209:                                        ; preds = %sw.bb201
  %184 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9223
  %clientList210 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %184, i32 0, i32 0, !dbg !9223
  %185 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList210, align 8, !dbg !9223
  %186 = bitcast %struct._lwm2m_client_* %185 to %struct._lwm2m_list_t*, !dbg !9223
  %187 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !9223
  %objectId211 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %187, i32 0, i32 1, !dbg !9223
  %188 = load i16, i16* %objectId211, align 2, !dbg !9223
  %189 = bitcast %struct._lwm2m_client_** %clientP202 to %struct._lwm2m_list_t**, !dbg !9223
  %call212 = call %struct._lwm2m_list_t* @lwm2m_list_remove(%struct._lwm2m_list_t* %186, i16 zeroext %188, %struct._lwm2m_list_t** %189), !dbg !9223
  %190 = bitcast %struct._lwm2m_list_t* %call212 to %struct._lwm2m_client_*, !dbg !9224
  %191 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9225
  %clientList213 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %191, i32 0, i32 0, !dbg !9226
  store %struct._lwm2m_client_* %190, %struct._lwm2m_client_** %clientList213, align 8, !dbg !9227
  %192 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP202, align 8, !dbg !9228
  %cmp214 = icmp eq %struct._lwm2m_client_* %192, null, !dbg !9230
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !9231

if.then216:                                       ; preds = %if.end209
  store i8 -128, i8* %retval, align 1, !dbg !9232
  br label %return, !dbg !9232

if.end217:                                        ; preds = %if.end209
  %193 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9233
  %monitorCallback218 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %193, i32 0, i32 1, !dbg !9235
  %194 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback218, align 8, !dbg !9235
  %cmp219 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %194, null, !dbg !9236
  br i1 %cmp219, label %if.then221, label %if.end225, !dbg !9237

if.then221:                                       ; preds = %if.end217
  %195 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9238
  %monitorCallback222 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %195, i32 0, i32 1, !dbg !9240
  %196 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback222, align 8, !dbg !9240
  %197 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP202, align 8, !dbg !9241
  %internalID223 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %197, i32 0, i32 1, !dbg !9242
  %198 = load i16, i16* %internalID223, align 8, !dbg !9242
  %199 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9243
  %monitorUserData224 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %199, i32 0, i32 2, !dbg !9244
  %200 = load i8*, i8** %monitorUserData224, align 8, !dbg !9244
  call void %196(i16 zeroext %198, %struct.lwm2m_uri_t* null, i32 66, i32 0, i8* null, i32 0, i8* %200), !dbg !9238
  br label %if.end225, !dbg !9245

if.end225:                                        ; preds = %if.then221, %if.end217
  %201 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP202, align 8, !dbg !9246
  call void @registration_freeClient(%struct._lwm2m_client_* %201), !dbg !9247
  store i8 66, i8* %result, align 1, !dbg !9248
  br label %sw.epilog227, !dbg !9249

sw.default226:                                    ; preds = %if.end
  store i8 -128, i8* %retval, align 1, !dbg !9250
  br label %return, !dbg !9250

sw.epilog227:                                     ; preds = %if.end225, %sw.epilog
  %202 = load i8, i8* %result, align 1, !dbg !9251
  store i8 %202, i8* %retval, align 1, !dbg !9252
  br label %return, !dbg !9252

return:                                           ; preds = %sw.epilog227, %sw.default226, %if.then216, %if.then208, %sw.default, %if.end130, %if.then122, %if.then109, %if.then103, %if.end83, %if.end52, %if.end42, %if.end34, %if.end26, %if.then11, %if.then4, %if.then
  %203 = load i8, i8* %retval, align 1, !dbg !9253
  ret i8 %203, !dbg !9253
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_getParameters(%struct._multi_option_t* %query, i8** %nameP, i32* %lifetimeP, i8** %msisdnP, i32* %bindingP, i8** %versionP) #0 !dbg !9254 {
entry:
  %retval = alloca i32, align 4
  %query.addr = alloca %struct._multi_option_t*, align 8
  %nameP.addr = alloca i8**, align 8
  %lifetimeP.addr = alloca i32*, align 8
  %msisdnP.addr = alloca i8**, align 8
  %bindingP.addr = alloca i32*, align 8
  %versionP.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct._multi_option_t* %query, %struct._multi_option_t** %query.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %query.addr, metadata !9259, metadata !1190), !dbg !9260
  store i8** %nameP, i8*** %nameP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nameP.addr, metadata !9261, metadata !1190), !dbg !9262
  store i32* %lifetimeP, i32** %lifetimeP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lifetimeP.addr, metadata !9263, metadata !1190), !dbg !9264
  store i8** %msisdnP, i8*** %msisdnP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %msisdnP.addr, metadata !9265, metadata !1190), !dbg !9266
  store i32* %bindingP, i32** %bindingP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bindingP.addr, metadata !9267, metadata !1190), !dbg !9268
  store i8** %versionP, i8*** %versionP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %versionP.addr, metadata !9269, metadata !1190), !dbg !9270
  %0 = load i8**, i8*** %nameP.addr, align 8, !dbg !9271
  store i8* null, i8** %0, align 8, !dbg !9272
  %1 = load i32*, i32** %lifetimeP.addr, align 8, !dbg !9273
  store i32 0, i32* %1, align 4, !dbg !9274
  %2 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9275
  store i8* null, i8** %2, align 8, !dbg !9276
  %3 = load i32*, i32** %bindingP.addr, align 8, !dbg !9277
  store i32 0, i32* %3, align 4, !dbg !9278
  %4 = load i8**, i8*** %versionP.addr, align 8, !dbg !9279
  store i8* null, i8** %4, align 8, !dbg !9280
  br label %while.cond, !dbg !9281

while.cond:                                       ; preds = %if.end164, %entry
  %5 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9282
  %cmp = icmp ne %struct._multi_option_t* %5, null, !dbg !9283
  br i1 %cmp, label %while.body, label %while.end, !dbg !9281

while.body:                                       ; preds = %while.cond
  %6 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9284
  %data = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %6, i32 0, i32 3, !dbg !9287
  %7 = load i8*, i8** %data, align 8, !dbg !9287
  %call = call i32 @lwm2m_strncmp(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.125, i32 0, i32 0), i64 3), !dbg !9288
  %cmp1 = icmp eq i32 %call, 0, !dbg !9289
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9290

if.then:                                          ; preds = %while.body
  %8 = load i8**, i8*** %nameP.addr, align 8, !dbg !9291
  %9 = load i8*, i8** %8, align 8, !dbg !9294
  %cmp2 = icmp ne i8* %9, null, !dbg !9295
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !9296

if.then3:                                         ; preds = %if.then
  br label %error, !dbg !9297

if.end:                                           ; preds = %if.then
  %10 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9298
  %len = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %10, i32 0, i32 2, !dbg !9300
  %11 = load i8, i8* %len, align 1, !dbg !9300
  %conv = zext i8 %11 to i32, !dbg !9298
  %cmp4 = icmp eq i32 %conv, 3, !dbg !9301
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !9302

if.then6:                                         ; preds = %if.end
  br label %error, !dbg !9303

if.end7:                                          ; preds = %if.end
  %12 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9304
  %len8 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %12, i32 0, i32 2, !dbg !9305
  %13 = load i8, i8* %len8, align 1, !dbg !9305
  %conv9 = zext i8 %13 to i32, !dbg !9304
  %sub = sub nsw i32 %conv9, 3, !dbg !9306
  %add = add nsw i32 %sub, 1, !dbg !9307
  %conv10 = sext i32 %add to i64, !dbg !9304
  %call11 = call i8* @lwm2m_malloc(i64 %conv10), !dbg !9308
  %14 = load i8**, i8*** %nameP.addr, align 8, !dbg !9309
  store i8* %call11, i8** %14, align 8, !dbg !9310
  %15 = load i8**, i8*** %nameP.addr, align 8, !dbg !9311
  %16 = load i8*, i8** %15, align 8, !dbg !9313
  %cmp12 = icmp ne i8* %16, null, !dbg !9314
  br i1 %cmp12, label %if.then14, label %if.end23, !dbg !9315

if.then14:                                        ; preds = %if.end7
  %17 = load i8**, i8*** %nameP.addr, align 8, !dbg !9316
  %18 = load i8*, i8** %17, align 8, !dbg !9318
  %19 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9319
  %data15 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %19, i32 0, i32 3, !dbg !9320
  %20 = load i8*, i8** %data15, align 8, !dbg !9320
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 3, !dbg !9321
  %21 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9322
  %len16 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %21, i32 0, i32 2, !dbg !9323
  %22 = load i8, i8* %len16, align 1, !dbg !9323
  %conv17 = zext i8 %22 to i32, !dbg !9322
  %sub18 = sub nsw i32 %conv17, 3, !dbg !9324
  %conv19 = sext i32 %sub18 to i64, !dbg !9322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %add.ptr, i64 %conv19, i32 1, i1 false), !dbg !9325
  %23 = load i8**, i8*** %nameP.addr, align 8, !dbg !9326
  %24 = load i8*, i8** %23, align 8, !dbg !9327
  %25 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9328
  %len20 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %25, i32 0, i32 2, !dbg !9329
  %26 = load i8, i8* %len20, align 1, !dbg !9329
  %conv21 = zext i8 %26 to i32, !dbg !9328
  %sub22 = sub nsw i32 %conv21, 3, !dbg !9330
  %idxprom = sext i32 %sub22 to i64, !dbg !9331
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %idxprom, !dbg !9331
  store i8 0, i8* %arrayidx, align 1, !dbg !9332
  br label %if.end23, !dbg !9333

if.end23:                                         ; preds = %if.then14, %if.end7
  br label %if.end164, !dbg !9334

if.else:                                          ; preds = %while.body
  %27 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9335
  %data24 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %27, i32 0, i32 3, !dbg !9337
  %28 = load i8*, i8** %data24, align 8, !dbg !9337
  %call25 = call i32 @lwm2m_strncmp(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.126, i32 0, i32 0), i64 4), !dbg !9338
  %cmp26 = icmp eq i32 %call25, 0, !dbg !9339
  br i1 %cmp26, label %if.then28, label %if.else60, !dbg !9340

if.then28:                                        ; preds = %if.else
  %29 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9341
  %30 = load i8*, i8** %29, align 8, !dbg !9344
  %cmp29 = icmp ne i8* %30, null, !dbg !9345
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9346

if.then31:                                        ; preds = %if.then28
  br label %error, !dbg !9347

if.end32:                                         ; preds = %if.then28
  %31 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9348
  %len33 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %31, i32 0, i32 2, !dbg !9350
  %32 = load i8, i8* %len33, align 1, !dbg !9350
  %conv34 = zext i8 %32 to i32, !dbg !9348
  %cmp35 = icmp eq i32 %conv34, 4, !dbg !9351
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9352

if.then37:                                        ; preds = %if.end32
  br label %error, !dbg !9353

if.end38:                                         ; preds = %if.end32
  %33 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9354
  %len39 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %33, i32 0, i32 2, !dbg !9355
  %34 = load i8, i8* %len39, align 1, !dbg !9355
  %conv40 = zext i8 %34 to i32, !dbg !9354
  %sub41 = sub nsw i32 %conv40, 4, !dbg !9356
  %add42 = add nsw i32 %sub41, 1, !dbg !9357
  %conv43 = sext i32 %add42 to i64, !dbg !9354
  %call44 = call i8* @lwm2m_malloc(i64 %conv43), !dbg !9358
  %35 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9359
  store i8* %call44, i8** %35, align 8, !dbg !9360
  %36 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9361
  %37 = load i8*, i8** %36, align 8, !dbg !9363
  %cmp45 = icmp ne i8* %37, null, !dbg !9364
  br i1 %cmp45, label %if.then47, label %if.end59, !dbg !9365

if.then47:                                        ; preds = %if.end38
  %38 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9366
  %39 = load i8*, i8** %38, align 8, !dbg !9368
  %40 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9369
  %data48 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %40, i32 0, i32 3, !dbg !9370
  %41 = load i8*, i8** %data48, align 8, !dbg !9370
  %add.ptr49 = getelementptr inbounds i8, i8* %41, i64 4, !dbg !9371
  %42 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9372
  %len50 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %42, i32 0, i32 2, !dbg !9373
  %43 = load i8, i8* %len50, align 1, !dbg !9373
  %conv51 = zext i8 %43 to i32, !dbg !9372
  %sub52 = sub nsw i32 %conv51, 4, !dbg !9374
  %conv53 = sext i32 %sub52 to i64, !dbg !9372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %add.ptr49, i64 %conv53, i32 1, i1 false), !dbg !9375
  %44 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9376
  %45 = load i8*, i8** %44, align 8, !dbg !9377
  %46 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9378
  %len54 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %46, i32 0, i32 2, !dbg !9379
  %47 = load i8, i8* %len54, align 1, !dbg !9379
  %conv55 = zext i8 %47 to i32, !dbg !9378
  %sub56 = sub nsw i32 %conv55, 4, !dbg !9380
  %idxprom57 = sext i32 %sub56 to i64, !dbg !9381
  %arrayidx58 = getelementptr inbounds i8, i8* %45, i64 %idxprom57, !dbg !9381
  store i8 0, i8* %arrayidx58, align 1, !dbg !9382
  br label %if.end59, !dbg !9383

if.end59:                                         ; preds = %if.then47, %if.end38
  br label %if.end163, !dbg !9384

if.else60:                                        ; preds = %if.else
  %48 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9385
  %data61 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %48, i32 0, i32 3, !dbg !9387
  %49 = load i8*, i8** %data61, align 8, !dbg !9387
  %call62 = call i32 @lwm2m_strncmp(i8* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.127, i32 0, i32 0), i64 3), !dbg !9388
  %cmp63 = icmp eq i32 %call62, 0, !dbg !9389
  br i1 %cmp63, label %if.then65, label %if.else100, !dbg !9390

if.then65:                                        ; preds = %if.else60
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9391, metadata !1190), !dbg !9393
  %50 = load i32*, i32** %lifetimeP.addr, align 8, !dbg !9394
  %51 = load i32, i32* %50, align 4, !dbg !9396
  %cmp66 = icmp ne i32 %51, 0, !dbg !9397
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !9398

if.then68:                                        ; preds = %if.then65
  br label %error, !dbg !9399

if.end69:                                         ; preds = %if.then65
  %52 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9400
  %len70 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %52, i32 0, i32 2, !dbg !9402
  %53 = load i8, i8* %len70, align 1, !dbg !9402
  %conv71 = zext i8 %53 to i32, !dbg !9400
  %cmp72 = icmp eq i32 %conv71, 3, !dbg !9403
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !9404

if.then74:                                        ; preds = %if.end69
  br label %error, !dbg !9405

if.end75:                                         ; preds = %if.end69
  store i32 3, i32* %i, align 4, !dbg !9406
  br label %for.cond, !dbg !9408

for.cond:                                         ; preds = %for.inc, %if.end75
  %54 = load i32, i32* %i, align 4, !dbg !9409
  %55 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9411
  %len76 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %55, i32 0, i32 2, !dbg !9412
  %56 = load i8, i8* %len76, align 1, !dbg !9412
  %conv77 = zext i8 %56 to i32, !dbg !9411
  %cmp78 = icmp slt i32 %54, %conv77, !dbg !9413
  br i1 %cmp78, label %for.body, label %for.end, !dbg !9414

for.body:                                         ; preds = %for.cond
  %57 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9415
  %data80 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %57, i32 0, i32 3, !dbg !9418
  %58 = load i8*, i8** %data80, align 8, !dbg !9418
  %59 = load i32, i32* %i, align 4, !dbg !9419
  %idxprom81 = sext i32 %59 to i64, !dbg !9415
  %arrayidx82 = getelementptr inbounds i8, i8* %58, i64 %idxprom81, !dbg !9415
  %60 = load i8, i8* %arrayidx82, align 1, !dbg !9415
  %conv83 = zext i8 %60 to i32, !dbg !9415
  %cmp84 = icmp slt i32 %conv83, 48, !dbg !9420
  br i1 %cmp84, label %if.then92, label %lor.lhs.false, !dbg !9421

lor.lhs.false:                                    ; preds = %for.body
  %61 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9422
  %data86 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %61, i32 0, i32 3, !dbg !9423
  %62 = load i8*, i8** %data86, align 8, !dbg !9423
  %63 = load i32, i32* %i, align 4, !dbg !9424
  %idxprom87 = sext i32 %63 to i64, !dbg !9422
  %arrayidx88 = getelementptr inbounds i8, i8* %62, i64 %idxprom87, !dbg !9422
  %64 = load i8, i8* %arrayidx88, align 1, !dbg !9422
  %conv89 = zext i8 %64 to i32, !dbg !9422
  %cmp90 = icmp sgt i32 %conv89, 57, !dbg !9425
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !9426

if.then92:                                        ; preds = %lor.lhs.false, %for.body
  br label %error, !dbg !9427

if.end93:                                         ; preds = %lor.lhs.false
  %65 = load i32*, i32** %lifetimeP.addr, align 8, !dbg !9428
  %66 = load i32, i32* %65, align 4, !dbg !9429
  %mul = mul i32 %66, 10, !dbg !9430
  %67 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9431
  %data94 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %67, i32 0, i32 3, !dbg !9432
  %68 = load i8*, i8** %data94, align 8, !dbg !9432
  %69 = load i32, i32* %i, align 4, !dbg !9433
  %idxprom95 = sext i32 %69 to i64, !dbg !9431
  %arrayidx96 = getelementptr inbounds i8, i8* %68, i64 %idxprom95, !dbg !9431
  %70 = load i8, i8* %arrayidx96, align 1, !dbg !9431
  %conv97 = zext i8 %70 to i32, !dbg !9431
  %sub98 = sub nsw i32 %conv97, 48, !dbg !9434
  %add99 = add i32 %mul, %sub98, !dbg !9435
  %71 = load i32*, i32** %lifetimeP.addr, align 8, !dbg !9436
  store i32 %add99, i32* %71, align 4, !dbg !9437
  br label %for.inc, !dbg !9438

for.inc:                                          ; preds = %if.end93
  %72 = load i32, i32* %i, align 4, !dbg !9439
  %inc = add nsw i32 %72, 1, !dbg !9439
  store i32 %inc, i32* %i, align 4, !dbg !9439
  br label %for.cond, !dbg !9440, !llvm.loop !9441

for.end:                                          ; preds = %for.cond
  br label %if.end162, !dbg !9443

if.else100:                                       ; preds = %if.else60
  %73 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9444
  %data101 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %73, i32 0, i32 3, !dbg !9446
  %74 = load i8*, i8** %data101, align 8, !dbg !9446
  %call102 = call i32 @lwm2m_strncmp(i8* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.128, i32 0, i32 0), i64 6), !dbg !9447
  %cmp103 = icmp eq i32 %call102, 0, !dbg !9448
  br i1 %cmp103, label %if.then105, label %if.else137, !dbg !9449

if.then105:                                       ; preds = %if.else100
  %75 = load i8**, i8*** %versionP.addr, align 8, !dbg !9450
  %76 = load i8*, i8** %75, align 8, !dbg !9453
  %cmp106 = icmp ne i8* %76, null, !dbg !9454
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !9455

if.then108:                                       ; preds = %if.then105
  br label %error, !dbg !9456

if.end109:                                        ; preds = %if.then105
  %77 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9457
  %len110 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %77, i32 0, i32 2, !dbg !9459
  %78 = load i8, i8* %len110, align 1, !dbg !9459
  %conv111 = zext i8 %78 to i32, !dbg !9457
  %cmp112 = icmp eq i32 %conv111, 6, !dbg !9460
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !9461

if.then114:                                       ; preds = %if.end109
  br label %error, !dbg !9462

if.end115:                                        ; preds = %if.end109
  %79 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9463
  %len116 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %79, i32 0, i32 2, !dbg !9464
  %80 = load i8, i8* %len116, align 1, !dbg !9464
  %conv117 = zext i8 %80 to i32, !dbg !9463
  %sub118 = sub nsw i32 %conv117, 6, !dbg !9465
  %add119 = add nsw i32 %sub118, 1, !dbg !9466
  %conv120 = sext i32 %add119 to i64, !dbg !9463
  %call121 = call i8* @lwm2m_malloc(i64 %conv120), !dbg !9467
  %81 = load i8**, i8*** %versionP.addr, align 8, !dbg !9468
  store i8* %call121, i8** %81, align 8, !dbg !9469
  %82 = load i8**, i8*** %versionP.addr, align 8, !dbg !9470
  %83 = load i8*, i8** %82, align 8, !dbg !9472
  %cmp122 = icmp ne i8* %83, null, !dbg !9473
  br i1 %cmp122, label %if.then124, label %if.end136, !dbg !9474

if.then124:                                       ; preds = %if.end115
  %84 = load i8**, i8*** %versionP.addr, align 8, !dbg !9475
  %85 = load i8*, i8** %84, align 8, !dbg !9477
  %86 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9478
  %data125 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %86, i32 0, i32 3, !dbg !9479
  %87 = load i8*, i8** %data125, align 8, !dbg !9479
  %add.ptr126 = getelementptr inbounds i8, i8* %87, i64 6, !dbg !9480
  %88 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9481
  %len127 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %88, i32 0, i32 2, !dbg !9482
  %89 = load i8, i8* %len127, align 1, !dbg !9482
  %conv128 = zext i8 %89 to i32, !dbg !9481
  %sub129 = sub nsw i32 %conv128, 6, !dbg !9483
  %conv130 = sext i32 %sub129 to i64, !dbg !9481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %add.ptr126, i64 %conv130, i32 1, i1 false), !dbg !9484
  %90 = load i8**, i8*** %versionP.addr, align 8, !dbg !9485
  %91 = load i8*, i8** %90, align 8, !dbg !9486
  %92 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9487
  %len131 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %92, i32 0, i32 2, !dbg !9488
  %93 = load i8, i8* %len131, align 1, !dbg !9488
  %conv132 = zext i8 %93 to i32, !dbg !9487
  %sub133 = sub nsw i32 %conv132, 6, !dbg !9489
  %idxprom134 = sext i32 %sub133 to i64, !dbg !9490
  %arrayidx135 = getelementptr inbounds i8, i8* %91, i64 %idxprom134, !dbg !9490
  store i8 0, i8* %arrayidx135, align 1, !dbg !9491
  br label %if.end136, !dbg !9492

if.end136:                                        ; preds = %if.then124, %if.end115
  br label %if.end161, !dbg !9493

if.else137:                                       ; preds = %if.else100
  %94 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9494
  %data138 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %94, i32 0, i32 3, !dbg !9496
  %95 = load i8*, i8** %data138, align 8, !dbg !9496
  %call139 = call i32 @lwm2m_strncmp(i8* %95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.129, i32 0, i32 0), i64 2), !dbg !9497
  %cmp140 = icmp eq i32 %call139, 0, !dbg !9498
  br i1 %cmp140, label %if.then142, label %if.end160, !dbg !9499

if.then142:                                       ; preds = %if.else137
  %96 = load i32*, i32** %bindingP.addr, align 8, !dbg !9500
  %97 = load i32, i32* %96, align 4, !dbg !9503
  %cmp143 = icmp ne i32 %97, 0, !dbg !9504
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !9505

if.then145:                                       ; preds = %if.then142
  br label %error, !dbg !9506

if.end146:                                        ; preds = %if.then142
  %98 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9507
  %len147 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %98, i32 0, i32 2, !dbg !9509
  %99 = load i8, i8* %len147, align 1, !dbg !9509
  %conv148 = zext i8 %99 to i32, !dbg !9507
  %cmp149 = icmp eq i32 %conv148, 2, !dbg !9510
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !9511

if.then151:                                       ; preds = %if.end146
  br label %error, !dbg !9512

if.end152:                                        ; preds = %if.end146
  %100 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9513
  %data153 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %100, i32 0, i32 3, !dbg !9514
  %101 = load i8*, i8** %data153, align 8, !dbg !9514
  %add.ptr154 = getelementptr inbounds i8, i8* %101, i64 2, !dbg !9515
  %102 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9516
  %len155 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %102, i32 0, i32 2, !dbg !9517
  %103 = load i8, i8* %len155, align 1, !dbg !9517
  %conv156 = zext i8 %103 to i32, !dbg !9516
  %sub157 = sub nsw i32 %conv156, 2, !dbg !9518
  %conv158 = sext i32 %sub157 to i64, !dbg !9516
  %call159 = call i32 @utils_stringToBinding(i8* %add.ptr154, i64 %conv158), !dbg !9519
  %104 = load i32*, i32** %bindingP.addr, align 8, !dbg !9520
  store i32 %call159, i32* %104, align 4, !dbg !9521
  br label %if.end160, !dbg !9522

if.end160:                                        ; preds = %if.end152, %if.else137
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.end136
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %for.end
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end59
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end23
  %105 = load %struct._multi_option_t*, %struct._multi_option_t** %query.addr, align 8, !dbg !9523
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %105, i32 0, i32 0, !dbg !9524
  %106 = load %struct._multi_option_t*, %struct._multi_option_t** %next, align 8, !dbg !9524
  store %struct._multi_option_t* %106, %struct._multi_option_t** %query.addr, align 8, !dbg !9525
  br label %while.cond, !dbg !9281, !llvm.loop !9526

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !9528
  br label %return, !dbg !9528

error:                                            ; preds = %if.then151, %if.then145, %if.then114, %if.then108, %if.then92, %if.then74, %if.then68, %if.then37, %if.then31, %if.then6, %if.then3
  %107 = load i8**, i8*** %nameP.addr, align 8, !dbg !9529
  %108 = load i8*, i8** %107, align 8, !dbg !9531
  %cmp165 = icmp ne i8* %108, null, !dbg !9532
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !9533

if.then167:                                       ; preds = %error
  %109 = load i8**, i8*** %nameP.addr, align 8, !dbg !9534
  %110 = load i8*, i8** %109, align 8, !dbg !9535
  call void @lwm2m_free(i8* %110), !dbg !9536
  br label %if.end168, !dbg !9536

if.end168:                                        ; preds = %if.then167, %error
  %111 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9537
  %112 = load i8*, i8** %111, align 8, !dbg !9539
  %cmp169 = icmp ne i8* %112, null, !dbg !9540
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !9541

if.then171:                                       ; preds = %if.end168
  %113 = load i8**, i8*** %msisdnP.addr, align 8, !dbg !9542
  %114 = load i8*, i8** %113, align 8, !dbg !9543
  call void @lwm2m_free(i8* %114), !dbg !9544
  br label %if.end172, !dbg !9544

if.end172:                                        ; preds = %if.then171, %if.end168
  %115 = load i8**, i8*** %versionP.addr, align 8, !dbg !9545
  %116 = load i8*, i8** %115, align 8, !dbg !9547
  %cmp173 = icmp ne i8* %116, null, !dbg !9548
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !9549

if.then175:                                       ; preds = %if.end172
  %117 = load i8**, i8*** %versionP.addr, align 8, !dbg !9550
  %118 = load i8*, i8** %117, align 8, !dbg !9551
  call void @lwm2m_free(i8* %118), !dbg !9552
  br label %if.end176, !dbg !9552

if.end176:                                        ; preds = %if.then175, %if.end172
  store i32 -1, i32* %retval, align 4, !dbg !9553
  br label %return, !dbg !9553

return:                                           ; preds = %if.end176, %while.end
  %119 = load i32, i32* %retval, align 4, !dbg !9554
  ret i32 %119, !dbg !9554
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._lwm2m_client_object_* @prv_decodeRegisterPayload(i8* %payload, i16 zeroext %payloadLength, i8* %supportJSON, i8** %altPath) #0 !dbg !9555 {
entry:
  %retval = alloca %struct._lwm2m_client_object_*, align 8
  %payload.addr = alloca i8*, align 8
  %payloadLength.addr = alloca i16, align 2
  %supportJSON.addr = alloca i8*, align 8
  %altPath.addr = alloca i8**, align 8
  %index = alloca i16, align 2
  %objList = alloca %struct._lwm2m_client_object_*, align 8
  %linkAttrFound = alloca i8, align 1
  %start = alloca i16, align 2
  %length = alloca i16, align 2
  %result = alloca i32, align 4
  %id = alloca i16, align 2
  %instance = alloca i16, align 2
  %objectP = alloca %struct._lwm2m_client_object_*, align 8
  %instanceP = alloca %struct._lwm2m_list_t*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !9558, metadata !1190), !dbg !9559
  store i16 %payloadLength, i16* %payloadLength.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %payloadLength.addr, metadata !9560, metadata !1190), !dbg !9561
  store i8* %supportJSON, i8** %supportJSON.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %supportJSON.addr, metadata !9562, metadata !1190), !dbg !9563
  store i8** %altPath, i8*** %altPath.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %altPath.addr, metadata !9564, metadata !1190), !dbg !9565
  call void @llvm.dbg.declare(metadata i16* %index, metadata !9566, metadata !1190), !dbg !9567
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objList, metadata !9568, metadata !1190), !dbg !9569
  call void @llvm.dbg.declare(metadata i8* %linkAttrFound, metadata !9570, metadata !1190), !dbg !9571
  %0 = load i8**, i8*** %altPath.addr, align 8, !dbg !9572
  store i8* null, i8** %0, align 8, !dbg !9573
  %1 = load i8*, i8** %supportJSON.addr, align 8, !dbg !9574
  store i8 0, i8* %1, align 1, !dbg !9575
  store %struct._lwm2m_client_object_* null, %struct._lwm2m_client_object_** %objList, align 8, !dbg !9576
  store i8 0, i8* %linkAttrFound, align 1, !dbg !9577
  store i16 0, i16* %index, align 2, !dbg !9578
  br label %while.cond, !dbg !9579

while.cond:                                       ; preds = %if.end78, %entry
  %2 = load i16, i16* %index, align 2, !dbg !9580
  %conv = zext i16 %2 to i32, !dbg !9580
  %3 = load i16, i16* %payloadLength.addr, align 2, !dbg !9581
  %conv1 = zext i16 %3 to i32, !dbg !9581
  %cmp = icmp sle i32 %conv, %conv1, !dbg !9582
  br i1 %cmp, label %while.body, label %while.end80, !dbg !9579

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16* %start, metadata !9583, metadata !1190), !dbg !9585
  call void @llvm.dbg.declare(metadata i16* %length, metadata !9586, metadata !1190), !dbg !9587
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9588, metadata !1190), !dbg !9589
  call void @llvm.dbg.declare(metadata i16* %id, metadata !9590, metadata !1190), !dbg !9591
  call void @llvm.dbg.declare(metadata i16* %instance, metadata !9592, metadata !1190), !dbg !9593
  br label %while.cond3, !dbg !9594

while.cond3:                                      ; preds = %while.body11, %while.body
  %4 = load i16, i16* %index, align 2, !dbg !9595
  %conv4 = zext i16 %4 to i32, !dbg !9595
  %5 = load i16, i16* %payloadLength.addr, align 2, !dbg !9596
  %conv5 = zext i16 %5 to i32, !dbg !9596
  %cmp6 = icmp slt i32 %conv4, %conv5, !dbg !9597
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !9598

land.rhs:                                         ; preds = %while.cond3
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !9599
  %7 = load i16, i16* %index, align 2, !dbg !9600
  %idxprom = zext i16 %7 to i64, !dbg !9599
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !9599
  %8 = load i8, i8* %arrayidx, align 1, !dbg !9599
  %conv8 = zext i8 %8 to i32, !dbg !9599
  %cmp9 = icmp eq i32 %conv8, 32, !dbg !9601
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond3
  %9 = phi i1 [ false, %while.cond3 ], [ %cmp9, %land.rhs ]
  br i1 %9, label %while.body11, label %while.end, !dbg !9594

while.body11:                                     ; preds = %land.end
  %10 = load i16, i16* %index, align 2, !dbg !9602
  %inc = add i16 %10, 1, !dbg !9602
  store i16 %inc, i16* %index, align 2, !dbg !9602
  br label %while.cond3, !dbg !9594, !llvm.loop !9603

while.end:                                        ; preds = %land.end
  %11 = load i16, i16* %index, align 2, !dbg !9604
  %conv12 = zext i16 %11 to i32, !dbg !9604
  %12 = load i16, i16* %payloadLength.addr, align 2, !dbg !9606
  %conv13 = zext i16 %12 to i32, !dbg !9606
  %cmp14 = icmp eq i32 %conv12, %conv13, !dbg !9607
  br i1 %cmp14, label %if.then, label %if.end, !dbg !9608

if.then:                                          ; preds = %while.end
  br label %while.end80, !dbg !9609

if.end:                                           ; preds = %while.end
  %13 = load i16, i16* %index, align 2, !dbg !9610
  store i16 %13, i16* %start, align 2, !dbg !9611
  br label %while.cond16, !dbg !9612

while.cond16:                                     ; preds = %while.body28, %if.end
  %14 = load i16, i16* %index, align 2, !dbg !9613
  %conv17 = zext i16 %14 to i32, !dbg !9613
  %15 = load i16, i16* %payloadLength.addr, align 2, !dbg !9614
  %conv18 = zext i16 %15 to i32, !dbg !9614
  %cmp19 = icmp slt i32 %conv17, %conv18, !dbg !9615
  br i1 %cmp19, label %land.rhs21, label %land.end27, !dbg !9616

land.rhs21:                                       ; preds = %while.cond16
  %16 = load i8*, i8** %payload.addr, align 8, !dbg !9617
  %17 = load i16, i16* %index, align 2, !dbg !9618
  %idxprom22 = zext i16 %17 to i64, !dbg !9617
  %arrayidx23 = getelementptr inbounds i8, i8* %16, i64 %idxprom22, !dbg !9617
  %18 = load i8, i8* %arrayidx23, align 1, !dbg !9617
  %conv24 = zext i8 %18 to i32, !dbg !9617
  %cmp25 = icmp ne i32 %conv24, 44, !dbg !9619
  br label %land.end27

land.end27:                                       ; preds = %land.rhs21, %while.cond16
  %19 = phi i1 [ false, %while.cond16 ], [ %cmp25, %land.rhs21 ]
  br i1 %19, label %while.body28, label %while.end30, !dbg !9612

while.body28:                                     ; preds = %land.end27
  %20 = load i16, i16* %index, align 2, !dbg !9620
  %inc29 = add i16 %20, 1, !dbg !9620
  store i16 %inc29, i16* %index, align 2, !dbg !9620
  br label %while.cond16, !dbg !9612, !llvm.loop !9621

while.end30:                                      ; preds = %land.end27
  %21 = load i16, i16* %index, align 2, !dbg !9622
  %conv31 = zext i16 %21 to i32, !dbg !9622
  %22 = load i16, i16* %start, align 2, !dbg !9623
  %conv32 = zext i16 %22 to i32, !dbg !9623
  %sub = sub nsw i32 %conv31, %conv32, !dbg !9624
  %conv33 = trunc i32 %sub to i16, !dbg !9622
  store i16 %conv33, i16* %length, align 2, !dbg !9625
  %23 = load i8*, i8** %payload.addr, align 8, !dbg !9626
  %24 = load i16, i16* %start, align 2, !dbg !9627
  %conv34 = zext i16 %24 to i32, !dbg !9627
  %idx.ext = sext i32 %conv34 to i64, !dbg !9628
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %idx.ext, !dbg !9628
  %25 = load i16, i16* %length, align 2, !dbg !9629
  %call = call i32 @prv_getId(i8* %add.ptr, i16 zeroext %25, i16* %id, i16* %instance), !dbg !9630
  store i32 %call, i32* %result, align 4, !dbg !9631
  %26 = load i32, i32* %result, align 4, !dbg !9632
  %cmp35 = icmp ne i32 %26, 0, !dbg !9634
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !9635

if.then37:                                        ; preds = %while.end30
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_object_** %objectP, metadata !9636, metadata !1190), !dbg !9638
  %27 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objList, align 8, !dbg !9639
  %28 = bitcast %struct._lwm2m_client_object_* %27 to %struct._lwm2m_list_t*, !dbg !9640
  %29 = load i16, i16* %id, align 2, !dbg !9641
  %call38 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %28, i16 zeroext %29), !dbg !9642
  %30 = bitcast %struct._lwm2m_list_t* %call38 to %struct._lwm2m_client_object_*, !dbg !9643
  store %struct._lwm2m_client_object_* %30, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9644
  %31 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9645
  %cmp39 = icmp eq %struct._lwm2m_client_object_* %31, null, !dbg !9647
  br i1 %cmp39, label %if.then41, label %if.end49, !dbg !9648

if.then41:                                        ; preds = %if.then37
  %call42 = call i8* @lwm2m_malloc(i64 24), !dbg !9649
  %32 = bitcast i8* %call42 to %struct._lwm2m_client_object_*, !dbg !9651
  store %struct._lwm2m_client_object_* %32, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9652
  %33 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9653
  %34 = bitcast %struct._lwm2m_client_object_* %33 to i8*, !dbg !9654
  call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 24, i32 8, i1 false), !dbg !9654
  %35 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9655
  %cmp43 = icmp eq %struct._lwm2m_client_object_* %35, null, !dbg !9657
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !9658

if.then45:                                        ; preds = %if.then41
  br label %error, !dbg !9659

if.end46:                                         ; preds = %if.then41
  %36 = load i16, i16* %id, align 2, !dbg !9660
  %37 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9661
  %id47 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %37, i32 0, i32 1, !dbg !9662
  store i16 %36, i16* %id47, align 8, !dbg !9663
  %38 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objList, align 8, !dbg !9664
  %39 = bitcast %struct._lwm2m_client_object_* %38 to %struct._lwm2m_list_t*, !dbg !9664
  %40 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9664
  %41 = bitcast %struct._lwm2m_client_object_* %40 to %struct._lwm2m_list_t*, !dbg !9664
  %call48 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %39, %struct._lwm2m_list_t* %41), !dbg !9664
  %42 = bitcast %struct._lwm2m_list_t* %call48 to %struct._lwm2m_client_object_*, !dbg !9665
  store %struct._lwm2m_client_object_* %42, %struct._lwm2m_client_object_** %objList, align 8, !dbg !9666
  br label %if.end49, !dbg !9667

if.end49:                                         ; preds = %if.end46, %if.then37
  %43 = load i32, i32* %result, align 4, !dbg !9668
  %cmp50 = icmp eq i32 %43, 2, !dbg !9670
  br i1 %cmp50, label %if.then52, label %if.end63, !dbg !9671

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct._lwm2m_list_t** %instanceP, metadata !9672, metadata !1190), !dbg !9674
  %44 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9675
  %instanceList = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %44, i32 0, i32 2, !dbg !9676
  %45 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList, align 8, !dbg !9676
  %46 = load i16, i16* %instance, align 2, !dbg !9677
  %call53 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %45, i16 zeroext %46), !dbg !9678
  store %struct._lwm2m_list_t* %call53, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !9679
  %47 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !9680
  %cmp54 = icmp eq %struct._lwm2m_list_t* %47, null, !dbg !9682
  br i1 %cmp54, label %if.then56, label %if.end62, !dbg !9683

if.then56:                                        ; preds = %if.then52
  %call57 = call i8* @lwm2m_malloc(i64 16), !dbg !9684
  %48 = bitcast i8* %call57 to %struct._lwm2m_list_t*, !dbg !9686
  store %struct._lwm2m_list_t* %48, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !9687
  %49 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !9688
  %50 = bitcast %struct._lwm2m_list_t* %49 to i8*, !dbg !9689
  call void @llvm.memset.p0i8.i64(i8* %50, i8 0, i64 16, i32 8, i1 false), !dbg !9689
  %51 = load i16, i16* %instance, align 2, !dbg !9690
  %52 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !9691
  %id58 = getelementptr inbounds %struct._lwm2m_list_t, %struct._lwm2m_list_t* %52, i32 0, i32 1, !dbg !9692
  store i16 %51, i16* %id58, align 8, !dbg !9693
  %53 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9694
  %instanceList59 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %53, i32 0, i32 2, !dbg !9694
  %54 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceList59, align 8, !dbg !9694
  %55 = load %struct._lwm2m_list_t*, %struct._lwm2m_list_t** %instanceP, align 8, !dbg !9694
  %call60 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %54, %struct._lwm2m_list_t* %55), !dbg !9694
  %56 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objectP, align 8, !dbg !9695
  %instanceList61 = getelementptr inbounds %struct._lwm2m_client_object_, %struct._lwm2m_client_object_* %56, i32 0, i32 2, !dbg !9696
  store %struct._lwm2m_list_t* %call60, %struct._lwm2m_list_t** %instanceList61, align 8, !dbg !9697
  br label %if.end62, !dbg !9698

if.end62:                                         ; preds = %if.then56, %if.then52
  br label %if.end63, !dbg !9699

if.end63:                                         ; preds = %if.end62, %if.end49
  br label %if.end78, !dbg !9700

if.else:                                          ; preds = %while.end30
  %57 = load i8, i8* %linkAttrFound, align 1, !dbg !9701
  %tobool = trunc i8 %57 to i1, !dbg !9701
  %conv64 = zext i1 %tobool to i32, !dbg !9701
  %cmp65 = icmp eq i32 %conv64, 0, !dbg !9703
  br i1 %cmp65, label %if.then67, label %if.else76, !dbg !9704

if.then67:                                        ; preds = %if.else
  %58 = load i8*, i8** %payload.addr, align 8, !dbg !9705
  %59 = load i16, i16* %start, align 2, !dbg !9707
  %conv68 = zext i16 %59 to i32, !dbg !9707
  %idx.ext69 = sext i32 %conv68 to i64, !dbg !9708
  %add.ptr70 = getelementptr inbounds i8, i8* %58, i64 %idx.ext69, !dbg !9708
  %60 = load i16, i16* %length, align 2, !dbg !9709
  %61 = load i8*, i8** %supportJSON.addr, align 8, !dbg !9710
  %62 = load i8**, i8*** %altPath.addr, align 8, !dbg !9711
  %call71 = call i32 @prv_parseLinkAttributes(i8* %add.ptr70, i16 zeroext %60, i8* %61, i8** %62), !dbg !9712
  store i32 %call71, i32* %result, align 4, !dbg !9713
  %63 = load i32, i32* %result, align 4, !dbg !9714
  %cmp72 = icmp eq i32 %63, 0, !dbg !9716
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !9717

if.then74:                                        ; preds = %if.then67
  br label %error, !dbg !9718

if.end75:                                         ; preds = %if.then67
  store i8 1, i8* %linkAttrFound, align 1, !dbg !9719
  br label %if.end77, !dbg !9720

if.else76:                                        ; preds = %if.else
  br label %error, !dbg !9721

if.end77:                                         ; preds = %if.end75
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end63
  %64 = load i16, i16* %index, align 2, !dbg !9722
  %inc79 = add i16 %64, 1, !dbg !9722
  store i16 %inc79, i16* %index, align 2, !dbg !9722
  br label %while.cond, !dbg !9579, !llvm.loop !9723

while.end80:                                      ; preds = %if.then, %while.cond
  %65 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objList, align 8, !dbg !9725
  store %struct._lwm2m_client_object_* %65, %struct._lwm2m_client_object_** %retval, align 8, !dbg !9726
  br label %return, !dbg !9726

error:                                            ; preds = %if.else76, %if.then74, %if.then45
  %66 = load i8**, i8*** %altPath.addr, align 8, !dbg !9727
  %67 = load i8*, i8** %66, align 8, !dbg !9729
  %cmp81 = icmp ne i8* %67, null, !dbg !9730
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !9731

if.then83:                                        ; preds = %error
  %68 = load i8**, i8*** %altPath.addr, align 8, !dbg !9732
  %69 = load i8*, i8** %68, align 8, !dbg !9734
  call void @lwm2m_free(i8* %69), !dbg !9735
  %70 = load i8**, i8*** %altPath.addr, align 8, !dbg !9736
  store i8* null, i8** %70, align 8, !dbg !9737
  br label %if.end84, !dbg !9738

if.end84:                                         ; preds = %if.then83, %error
  %71 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %objList, align 8, !dbg !9739
  call void @prv_freeClientObjectList(%struct._lwm2m_client_object_* %71), !dbg !9740
  store %struct._lwm2m_client_object_* null, %struct._lwm2m_client_object_** %retval, align 8, !dbg !9741
  br label %return, !dbg !9741

return:                                           ; preds = %if.end84, %while.end80
  %72 = load %struct._lwm2m_client_object_*, %struct._lwm2m_client_object_** %retval, align 8, !dbg !9742
  ret %struct._lwm2m_client_object_* %72, !dbg !9742
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._lwm2m_client_* @prv_getClientByName(%struct.lwm2m_context_t* %contextP, i8* %name) #0 !dbg !9743 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %name.addr = alloca i8*, align 8
  %targetP = alloca %struct._lwm2m_client_*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !9746, metadata !1190), !dbg !9747
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9748, metadata !1190), !dbg !9749
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %targetP, metadata !9750, metadata !1190), !dbg !9751
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !9752
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !9753
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !9753
  store %struct._lwm2m_client_* %1, %struct._lwm2m_client_** %targetP, align 8, !dbg !9754
  br label %while.cond, !dbg !9755

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !9756
  %cmp = icmp ne %struct._lwm2m_client_* %2, null, !dbg !9757
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9758

land.rhs:                                         ; preds = %while.cond
  %3 = load i8*, i8** %name.addr, align 8, !dbg !9759
  %4 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !9760
  %name1 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %4, i32 0, i32 2, !dbg !9761
  %5 = load i8*, i8** %name1, align 8, !dbg !9761
  %call = call i32 @strcmp(i8* %3, i8* %5) #9, !dbg !9762
  %cmp2 = icmp ne i32 %call, 0, !dbg !9763
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !9755

while.body:                                       ; preds = %land.end
  %7 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !9764
  %next = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %7, i32 0, i32 0, !dbg !9766
  %8 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %next, align 8, !dbg !9766
  store %struct._lwm2m_client_* %8, %struct._lwm2m_client_** %targetP, align 8, !dbg !9767
  br label %while.cond, !dbg !9755, !llvm.loop !9768

while.end:                                        ; preds = %land.end
  %9 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %targetP, align 8, !dbg !9770
  ret %struct._lwm2m_client_* %9, !dbg !9771
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_getLocationString(i16 zeroext %id, i8* %location) #0 !dbg !9772 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16, align 2
  %location.addr = alloca i8*, align 8
  %index = alloca i32, align 4
  %result = alloca i32, align 4
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !9775, metadata !1190), !dbg !9776
  store i8* %location, i8** %location.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %location.addr, metadata !9777, metadata !1190), !dbg !9778
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9779, metadata !1190), !dbg !9780
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9781, metadata !1190), !dbg !9782
  %0 = load i8*, i8** %location.addr, align 8, !dbg !9783
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 10, i32 1, i1 false), !dbg !9784
  %1 = load i8*, i8** %location.addr, align 8, !dbg !9785
  %call = call i32 @utils_stringCopy(i8* %1, i64 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.120, i32 0, i32 0)), !dbg !9786
  store i32 %call, i32* %result, align 4, !dbg !9787
  %2 = load i32, i32* %result, align 4, !dbg !9788
  %cmp = icmp slt i32 %2, 0, !dbg !9790
  br i1 %cmp, label %if.then, label %if.end, !dbg !9791

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9792
  br label %return, !dbg !9792

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %result, align 4, !dbg !9793
  store i32 %3, i32* %index, align 4, !dbg !9794
  %4 = load i16, i16* %id.addr, align 2, !dbg !9795
  %conv = zext i16 %4 to i64, !dbg !9795
  %5 = load i8*, i8** %location.addr, align 8, !dbg !9796
  %6 = load i32, i32* %index, align 4, !dbg !9797
  %idx.ext = sext i32 %6 to i64, !dbg !9798
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !9798
  %7 = load i32, i32* %index, align 4, !dbg !9799
  %sub = sub nsw i32 10, %7, !dbg !9800
  %conv1 = sext i32 %sub to i64, !dbg !9801
  %call2 = call i64 @utils_intToText(i64 %conv, i8* %add.ptr, i64 %conv1), !dbg !9802
  %conv3 = trunc i64 %call2 to i32, !dbg !9802
  store i32 %conv3, i32* %result, align 4, !dbg !9803
  %8 = load i32, i32* %result, align 4, !dbg !9804
  %cmp4 = icmp eq i32 %8, 0, !dbg !9806
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !9807

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9808
  br label %return, !dbg !9808

if.end7:                                          ; preds = %if.end
  %9 = load i32, i32* %index, align 4, !dbg !9809
  %10 = load i32, i32* %result, align 4, !dbg !9810
  %add = add nsw i32 %9, %10, !dbg !9811
  store i32 %add, i32* %retval, align 4, !dbg !9812
  br label %return, !dbg !9812

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9813
  ret i32 %11, !dbg !9813
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_getId(i8* %data, i16 zeroext %length, i16* %objId, i16* %instanceId) #0 !dbg !9814 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %length.addr = alloca i16, align 2
  %objId.addr = alloca i16*, align 8
  %instanceId.addr = alloca i16*, align 8
  %value = alloca i32, align 4
  %limit = alloca i16, align 2
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9817, metadata !1190), !dbg !9818
  store i16 %length, i16* %length.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %length.addr, metadata !9819, metadata !1190), !dbg !9820
  store i16* %objId, i16** %objId.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %objId.addr, metadata !9821, metadata !1190), !dbg !9822
  store i16* %instanceId, i16** %instanceId.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %instanceId.addr, metadata !9823, metadata !1190), !dbg !9824
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9825, metadata !1190), !dbg !9826
  call void @llvm.dbg.declare(metadata i16* %limit, metadata !9827, metadata !1190), !dbg !9828
  br label %while.cond, !dbg !9829

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i16, i16* %length.addr, align 2, !dbg !9830
  %conv = zext i16 %0 to i32, !dbg !9830
  %cmp = icmp sgt i32 %conv, 0, !dbg !9831
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9832

land.rhs:                                         ; preds = %while.cond
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9833
  %2 = load i16, i16* %length.addr, align 2, !dbg !9834
  %conv2 = zext i16 %2 to i32, !dbg !9834
  %sub = sub nsw i32 %conv2, 1, !dbg !9835
  %idxprom = sext i32 %sub to i64, !dbg !9833
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !9833
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9833
  %conv3 = zext i8 %3 to i32, !dbg !9833
  %cmp4 = icmp eq i32 %conv3, 32, !dbg !9836
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !9829

while.body:                                       ; preds = %land.end
  %5 = load i16, i16* %length.addr, align 2, !dbg !9837
  %dec = add i16 %5, -1, !dbg !9837
  store i16 %dec, i16* %length.addr, align 2, !dbg !9837
  br label %while.cond, !dbg !9829, !llvm.loop !9838

while.end:                                        ; preds = %land.end
  %6 = load i16, i16* %length.addr, align 2, !dbg !9839
  %conv6 = zext i16 %6 to i32, !dbg !9839
  %cmp7 = icmp sge i32 %conv6, 1, !dbg !9841
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !9842

land.lhs.true:                                    ; preds = %while.end
  %7 = load i8*, i8** %data.addr, align 8, !dbg !9843
  %arrayidx9 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !9843
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !9843
  %conv10 = zext i8 %8 to i32, !dbg !9843
  %cmp11 = icmp eq i32 %conv10, 60, !dbg !9844
  br i1 %cmp11, label %land.lhs.true13, label %if.else, !dbg !9845

land.lhs.true13:                                  ; preds = %land.lhs.true
  %9 = load i8*, i8** %data.addr, align 8, !dbg !9846
  %10 = load i16, i16* %length.addr, align 2, !dbg !9847
  %conv14 = zext i16 %10 to i32, !dbg !9847
  %sub15 = sub nsw i32 %conv14, 1, !dbg !9848
  %idxprom16 = sext i32 %sub15 to i64, !dbg !9846
  %arrayidx17 = getelementptr inbounds i8, i8* %9, i64 %idxprom16, !dbg !9846
  %11 = load i8, i8* %arrayidx17, align 1, !dbg !9846
  %conv18 = zext i8 %11 to i32, !dbg !9846
  %cmp19 = icmp eq i32 %conv18, 62, !dbg !9849
  br i1 %cmp19, label %if.then, label %if.else, !dbg !9850

if.then:                                          ; preds = %land.lhs.true13
  %12 = load i8*, i8** %data.addr, align 8, !dbg !9851
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 1, !dbg !9851
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !9851
  %13 = load i16, i16* %length.addr, align 2, !dbg !9853
  %conv21 = zext i16 %13 to i32, !dbg !9853
  %sub22 = sub nsw i32 %conv21, 2, !dbg !9853
  %conv23 = trunc i32 %sub22 to i16, !dbg !9853
  store i16 %conv23, i16* %length.addr, align 2, !dbg !9853
  br label %if.end, !dbg !9854

if.else:                                          ; preds = %land.lhs.true13, %land.lhs.true, %while.end
  store i32 0, i32* %retval, align 4, !dbg !9855
  br label %return, !dbg !9855

if.end:                                           ; preds = %if.then
  %14 = load i16, i16* %length.addr, align 2, !dbg !9857
  %conv24 = zext i16 %14 to i32, !dbg !9857
  %cmp25 = icmp sge i32 %conv24, 1, !dbg !9859
  br i1 %cmp25, label %land.lhs.true27, label %if.end37, !dbg !9860

land.lhs.true27:                                  ; preds = %if.end
  %15 = load i8*, i8** %data.addr, align 8, !dbg !9861
  %arrayidx28 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !9861
  %16 = load i8, i8* %arrayidx28, align 1, !dbg !9861
  %conv29 = zext i8 %16 to i32, !dbg !9861
  %cmp30 = icmp eq i32 %conv29, 47, !dbg !9862
  br i1 %cmp30, label %if.then32, label %if.end37, !dbg !9863

if.then32:                                        ; preds = %land.lhs.true27
  %17 = load i8*, i8** %data.addr, align 8, !dbg !9864
  %add.ptr33 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !9864
  store i8* %add.ptr33, i8** %data.addr, align 8, !dbg !9864
  %18 = load i16, i16* %length.addr, align 2, !dbg !9866
  %conv34 = zext i16 %18 to i32, !dbg !9866
  %sub35 = sub nsw i32 %conv34, 1, !dbg !9866
  %conv36 = trunc i32 %sub35 to i16, !dbg !9866
  store i16 %conv36, i16* %length.addr, align 2, !dbg !9866
  br label %if.end37, !dbg !9867

if.end37:                                         ; preds = %if.then32, %land.lhs.true27, %if.end
  store i16 0, i16* %limit, align 2, !dbg !9868
  br label %while.cond38, !dbg !9869

while.cond38:                                     ; preds = %while.body50, %if.end37
  %19 = load i16, i16* %limit, align 2, !dbg !9870
  %conv39 = zext i16 %19 to i32, !dbg !9870
  %20 = load i16, i16* %length.addr, align 2, !dbg !9871
  %conv40 = zext i16 %20 to i32, !dbg !9871
  %cmp41 = icmp slt i32 %conv39, %conv40, !dbg !9872
  br i1 %cmp41, label %land.rhs43, label %land.end49, !dbg !9873

land.rhs43:                                       ; preds = %while.cond38
  %21 = load i8*, i8** %data.addr, align 8, !dbg !9874
  %22 = load i16, i16* %limit, align 2, !dbg !9875
  %idxprom44 = zext i16 %22 to i64, !dbg !9874
  %arrayidx45 = getelementptr inbounds i8, i8* %21, i64 %idxprom44, !dbg !9874
  %23 = load i8, i8* %arrayidx45, align 1, !dbg !9874
  %conv46 = zext i8 %23 to i32, !dbg !9874
  %cmp47 = icmp ne i32 %conv46, 47, !dbg !9876
  br label %land.end49

land.end49:                                       ; preds = %land.rhs43, %while.cond38
  %24 = phi i1 [ false, %while.cond38 ], [ %cmp47, %land.rhs43 ]
  br i1 %24, label %while.body50, label %while.end51, !dbg !9869

while.body50:                                     ; preds = %land.end49
  %25 = load i16, i16* %limit, align 2, !dbg !9877
  %inc = add i16 %25, 1, !dbg !9877
  store i16 %inc, i16* %limit, align 2, !dbg !9877
  br label %while.cond38, !dbg !9869, !llvm.loop !9878

while.end51:                                      ; preds = %land.end49
  %26 = load i8*, i8** %data.addr, align 8, !dbg !9879
  %27 = load i16, i16* %limit, align 2, !dbg !9880
  %conv52 = zext i16 %27 to i64, !dbg !9880
  %call = call i32 @uri_getNumber(i8* %26, i64 %conv52), !dbg !9881
  store i32 %call, i32* %value, align 4, !dbg !9882
  %28 = load i32, i32* %value, align 4, !dbg !9883
  %cmp53 = icmp slt i32 %28, 0, !dbg !9885
  br i1 %cmp53, label %if.then57, label %lor.lhs.false, !dbg !9886

lor.lhs.false:                                    ; preds = %while.end51
  %29 = load i32, i32* %value, align 4, !dbg !9887
  %cmp55 = icmp sge i32 %29, 65535, !dbg !9888
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !9889

if.then57:                                        ; preds = %lor.lhs.false, %while.end51
  store i32 0, i32* %retval, align 4, !dbg !9890
  br label %return, !dbg !9890

if.end58:                                         ; preds = %lor.lhs.false
  %30 = load i32, i32* %value, align 4, !dbg !9891
  %conv59 = trunc i32 %30 to i16, !dbg !9891
  %31 = load i16*, i16** %objId.addr, align 8, !dbg !9892
  store i16 %conv59, i16* %31, align 2, !dbg !9893
  %32 = load i16, i16* %limit, align 2, !dbg !9894
  %conv60 = zext i16 %32 to i32, !dbg !9894
  %33 = load i16, i16* %length.addr, align 2, !dbg !9896
  %conv61 = zext i16 %33 to i32, !dbg !9896
  %cmp62 = icmp slt i32 %conv60, %conv61, !dbg !9897
  br i1 %cmp62, label %if.then64, label %if.end88, !dbg !9898

if.then64:                                        ; preds = %if.end58
  %34 = load i16, i16* %limit, align 2, !dbg !9899
  %conv65 = zext i16 %34 to i32, !dbg !9899
  %add = add nsw i32 %conv65, 1, !dbg !9899
  %conv66 = trunc i32 %add to i16, !dbg !9899
  store i16 %conv66, i16* %limit, align 2, !dbg !9899
  %35 = load i16, i16* %limit, align 2, !dbg !9901
  %conv67 = zext i16 %35 to i32, !dbg !9901
  %36 = load i8*, i8** %data.addr, align 8, !dbg !9902
  %idx.ext = sext i32 %conv67 to i64, !dbg !9902
  %add.ptr68 = getelementptr inbounds i8, i8* %36, i64 %idx.ext, !dbg !9902
  store i8* %add.ptr68, i8** %data.addr, align 8, !dbg !9902
  %37 = load i16, i16* %limit, align 2, !dbg !9903
  %conv69 = zext i16 %37 to i32, !dbg !9903
  %38 = load i16, i16* %length.addr, align 2, !dbg !9904
  %conv70 = zext i16 %38 to i32, !dbg !9904
  %sub71 = sub nsw i32 %conv70, %conv69, !dbg !9904
  %conv72 = trunc i32 %sub71 to i16, !dbg !9904
  store i16 %conv72, i16* %length.addr, align 2, !dbg !9904
  %39 = load i16, i16* %length.addr, align 2, !dbg !9905
  %conv73 = zext i16 %39 to i32, !dbg !9905
  %cmp74 = icmp sgt i32 %conv73, 0, !dbg !9907
  br i1 %cmp74, label %if.then76, label %if.end87, !dbg !9908

if.then76:                                        ; preds = %if.then64
  %40 = load i8*, i8** %data.addr, align 8, !dbg !9909
  %41 = load i16, i16* %length.addr, align 2, !dbg !9911
  %conv77 = zext i16 %41 to i64, !dbg !9911
  %call78 = call i32 @uri_getNumber(i8* %40, i64 %conv77), !dbg !9912
  store i32 %call78, i32* %value, align 4, !dbg !9913
  %42 = load i32, i32* %value, align 4, !dbg !9914
  %cmp79 = icmp sge i32 %42, 0, !dbg !9916
  br i1 %cmp79, label %land.lhs.true81, label %if.else86, !dbg !9917

land.lhs.true81:                                  ; preds = %if.then76
  %43 = load i32, i32* %value, align 4, !dbg !9918
  %cmp82 = icmp slt i32 %43, 65535, !dbg !9919
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !9920

if.then84:                                        ; preds = %land.lhs.true81
  %44 = load i32, i32* %value, align 4, !dbg !9921
  %conv85 = trunc i32 %44 to i16, !dbg !9921
  %45 = load i16*, i16** %instanceId.addr, align 8, !dbg !9923
  store i16 %conv85, i16* %45, align 2, !dbg !9924
  store i32 2, i32* %retval, align 4, !dbg !9925
  br label %return, !dbg !9925

if.else86:                                        ; preds = %land.lhs.true81, %if.then76
  store i32 0, i32* %retval, align 4, !dbg !9926
  br label %return, !dbg !9926

if.end87:                                         ; preds = %if.then64
  br label %if.end88, !dbg !9928

if.end88:                                         ; preds = %if.end87, %if.end58
  store i32 1, i32* %retval, align 4, !dbg !9929
  br label %return, !dbg !9929

return:                                           ; preds = %if.end88, %if.else86, %if.then84, %if.then57, %if.else
  %46 = load i32, i32* %retval, align 4, !dbg !9930
  ret i32 %46, !dbg !9930
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_parseLinkAttributes(i8* %data, i16 zeroext %length, i8* %supportJSON, i8** %altPath) #0 !dbg !9931 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %length.addr = alloca i16, align 2
  %supportJSON.addr = alloca i8*, align 8
  %altPath.addr = alloca i8**, align 8
  %index = alloca i16, align 2
  %pathStart = alloca i16, align 2
  %pathLength = alloca i16, align 2
  %isValid = alloca i8, align 1
  %result = alloca i16, align 2
  %keyStart = alloca i16, align 2
  %keyLength = alloca i16, align 2
  %valueStart = alloca i16, align 2
  %valueLength = alloca i16, align 2
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9934, metadata !1190), !dbg !9935
  store i16 %length, i16* %length.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %length.addr, metadata !9936, metadata !1190), !dbg !9937
  store i8* %supportJSON, i8** %supportJSON.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %supportJSON.addr, metadata !9938, metadata !1190), !dbg !9939
  store i8** %altPath, i8*** %altPath.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %altPath.addr, metadata !9940, metadata !1190), !dbg !9941
  call void @llvm.dbg.declare(metadata i16* %index, metadata !9942, metadata !1190), !dbg !9943
  call void @llvm.dbg.declare(metadata i16* %pathStart, metadata !9944, metadata !1190), !dbg !9945
  call void @llvm.dbg.declare(metadata i16* %pathLength, metadata !9946, metadata !1190), !dbg !9947
  call void @llvm.dbg.declare(metadata i8* %isValid, metadata !9948, metadata !1190), !dbg !9949
  store i8 0, i8* %isValid, align 1, !dbg !9950
  br label %while.cond, !dbg !9951

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i16, i16* %length.addr, align 2, !dbg !9952
  %conv = zext i16 %0 to i32, !dbg !9952
  %cmp = icmp sgt i32 %conv, 0, !dbg !9953
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9954

land.rhs:                                         ; preds = %while.cond
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9955
  %2 = load i16, i16* %length.addr, align 2, !dbg !9956
  %conv2 = zext i16 %2 to i32, !dbg !9956
  %sub = sub nsw i32 %conv2, 1, !dbg !9957
  %idxprom = sext i32 %sub to i64, !dbg !9955
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !9955
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9955
  %conv3 = zext i8 %3 to i32, !dbg !9955
  %cmp4 = icmp eq i32 %conv3, 32, !dbg !9958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !9951

while.body:                                       ; preds = %land.end
  %5 = load i16, i16* %length.addr, align 2, !dbg !9959
  %dec = add i16 %5, -1, !dbg !9959
  store i16 %dec, i16* %length.addr, align 2, !dbg !9959
  br label %while.cond, !dbg !9951, !llvm.loop !9960

while.end:                                        ; preds = %land.end
  %6 = load i16, i16* %length.addr, align 2, !dbg !9961
  %conv6 = zext i16 %6 to i32, !dbg !9961
  %cmp7 = icmp sge i32 %conv6, 2, !dbg !9963
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !9964

land.lhs.true:                                    ; preds = %while.end
  %7 = load i8*, i8** %data.addr, align 8, !dbg !9965
  %arrayidx9 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !9965
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !9965
  %conv10 = zext i8 %8 to i32, !dbg !9965
  %cmp11 = icmp eq i32 %conv10, 60, !dbg !9966
  br i1 %cmp11, label %if.then, label %if.else, !dbg !9967

if.then:                                          ; preds = %land.lhs.true
  %9 = load i8*, i8** %data.addr, align 8, !dbg !9968
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !9968
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !9968
  %10 = load i16, i16* %length.addr, align 2, !dbg !9970
  %conv13 = zext i16 %10 to i32, !dbg !9970
  %sub14 = sub nsw i32 %conv13, 1, !dbg !9970
  %conv15 = trunc i32 %sub14 to i16, !dbg !9970
  store i16 %conv15, i16* %length.addr, align 2, !dbg !9970
  br label %if.end, !dbg !9971

if.else:                                          ; preds = %land.lhs.true, %while.end
  store i32 0, i32* %retval, align 4, !dbg !9972
  br label %return, !dbg !9972

if.end:                                           ; preds = %if.then
  store i16 0, i16* %pathStart, align 2, !dbg !9974
  %11 = load i16, i16* %length.addr, align 2, !dbg !9975
  %conv16 = zext i16 %11 to i32, !dbg !9975
  %sub17 = sub nsw i32 %conv16, 1, !dbg !9976
  %conv18 = trunc i32 %sub17 to i16, !dbg !9975
  store i16 %conv18, i16* %index, align 2, !dbg !9977
  br label %while.cond19, !dbg !9978

while.cond19:                                     ; preds = %while.body30, %if.end
  %12 = load i16, i16* %index, align 2, !dbg !9979
  %conv20 = zext i16 %12 to i32, !dbg !9979
  %cmp21 = icmp sgt i32 %conv20, 0, !dbg !9980
  br i1 %cmp21, label %land.rhs23, label %land.end29, !dbg !9981

land.rhs23:                                       ; preds = %while.cond19
  %13 = load i8*, i8** %data.addr, align 8, !dbg !9982
  %14 = load i16, i16* %index, align 2, !dbg !9983
  %idxprom24 = zext i16 %14 to i64, !dbg !9982
  %arrayidx25 = getelementptr inbounds i8, i8* %13, i64 %idxprom24, !dbg !9982
  %15 = load i8, i8* %arrayidx25, align 1, !dbg !9982
  %conv26 = zext i8 %15 to i32, !dbg !9982
  %cmp27 = icmp ne i32 %conv26, 62, !dbg !9984
  br label %land.end29

land.end29:                                       ; preds = %land.rhs23, %while.cond19
  %16 = phi i1 [ false, %while.cond19 ], [ %cmp27, %land.rhs23 ]
  br i1 %16, label %while.body30, label %while.end32, !dbg !9978

while.body30:                                     ; preds = %land.end29
  %17 = load i16, i16* %index, align 2, !dbg !9985
  %dec31 = add i16 %17, -1, !dbg !9985
  store i16 %dec31, i16* %index, align 2, !dbg !9985
  br label %while.cond19, !dbg !9978, !llvm.loop !9986

while.end32:                                      ; preds = %land.end29
  %18 = load i16, i16* %index, align 2, !dbg !9987
  %conv33 = zext i16 %18 to i32, !dbg !9987
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !9989
  br i1 %cmp34, label %if.then41, label %lor.lhs.false, !dbg !9990

lor.lhs.false:                                    ; preds = %while.end32
  %19 = load i16, i16* %index, align 2, !dbg !9991
  %conv36 = zext i16 %19 to i32, !dbg !9991
  %20 = load i16, i16* %length.addr, align 2, !dbg !9992
  %conv37 = zext i16 %20 to i32, !dbg !9992
  %sub38 = sub nsw i32 %conv37, 1, !dbg !9993
  %cmp39 = icmp eq i32 %conv36, %sub38, !dbg !9994
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !9995

if.then41:                                        ; preds = %lor.lhs.false, %while.end32
  store i32 0, i32* %retval, align 4, !dbg !9996
  br label %return, !dbg !9996

if.end42:                                         ; preds = %lor.lhs.false
  %21 = load i8*, i8** %data.addr, align 8, !dbg !9997
  %22 = load i16, i16* %pathStart, align 2, !dbg !9999
  %idxprom43 = zext i16 %22 to i64, !dbg !9997
  %arrayidx44 = getelementptr inbounds i8, i8* %21, i64 %idxprom43, !dbg !9997
  %23 = load i8, i8* %arrayidx44, align 1, !dbg !9997
  %conv45 = zext i8 %23 to i32, !dbg !9997
  %cmp46 = icmp eq i32 %conv45, 47, !dbg !10000
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !10001

if.then48:                                        ; preds = %if.end42
  %24 = load i16, i16* %pathStart, align 2, !dbg !10002
  %conv49 = zext i16 %24 to i32, !dbg !10002
  %add = add nsw i32 %conv49, 1, !dbg !10002
  %conv50 = trunc i32 %add to i16, !dbg !10002
  store i16 %conv50, i16* %pathStart, align 2, !dbg !10002
  br label %if.end51, !dbg !10004

if.end51:                                         ; preds = %if.then48, %if.end42
  %25 = load i16, i16* %index, align 2, !dbg !10005
  %conv52 = zext i16 %25 to i32, !dbg !10005
  %26 = load i16, i16* %pathStart, align 2, !dbg !10006
  %conv53 = zext i16 %26 to i32, !dbg !10006
  %sub54 = sub nsw i32 %conv52, %conv53, !dbg !10007
  %conv55 = trunc i32 %sub54 to i16, !dbg !10005
  store i16 %conv55, i16* %pathLength, align 2, !dbg !10008
  %27 = load i16, i16* %index, align 2, !dbg !10009
  %inc = add i16 %27, 1, !dbg !10009
  store i16 %inc, i16* %index, align 2, !dbg !10009
  %28 = load i16, i16* %index, align 2, !dbg !10010
  %conv56 = zext i16 %28 to i32, !dbg !10010
  %29 = load i16, i16* %length.addr, align 2, !dbg !10012
  %conv57 = zext i16 %29 to i32, !dbg !10012
  %cmp58 = icmp sge i32 %conv56, %conv57, !dbg !10013
  br i1 %cmp58, label %if.then66, label %lor.lhs.false60, !dbg !10014

lor.lhs.false60:                                  ; preds = %if.end51
  %30 = load i8*, i8** %data.addr, align 8, !dbg !10015
  %31 = load i16, i16* %index, align 2, !dbg !10016
  %idxprom61 = zext i16 %31 to i64, !dbg !10015
  %arrayidx62 = getelementptr inbounds i8, i8* %30, i64 %idxprom61, !dbg !10015
  %32 = load i8, i8* %arrayidx62, align 1, !dbg !10015
  %conv63 = zext i8 %32 to i32, !dbg !10015
  %cmp64 = icmp ne i32 %conv63, 59, !dbg !10017
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !10018

if.then66:                                        ; preds = %lor.lhs.false60, %if.end51
  store i32 0, i32* %retval, align 4, !dbg !10019
  br label %return, !dbg !10019

if.end67:                                         ; preds = %lor.lhs.false60
  %33 = load i16, i16* %index, align 2, !dbg !10020
  %inc68 = add i16 %33, 1, !dbg !10020
  store i16 %inc68, i16* %index, align 2, !dbg !10020
  br label %while.cond69, !dbg !10021

while.cond69:                                     ; preds = %if.end162, %if.end67
  %34 = load i16, i16* %index, align 2, !dbg !10022
  %conv70 = zext i16 %34 to i32, !dbg !10022
  %35 = load i16, i16* %length.addr, align 2, !dbg !10023
  %conv71 = zext i16 %35 to i32, !dbg !10023
  %cmp72 = icmp slt i32 %conv70, %conv71, !dbg !10024
  br i1 %cmp72, label %while.body74, label %while.end167, !dbg !10021

while.body74:                                     ; preds = %while.cond69
  call void @llvm.dbg.declare(metadata i16* %result, metadata !10025, metadata !1190), !dbg !10027
  call void @llvm.dbg.declare(metadata i16* %keyStart, metadata !10028, metadata !1190), !dbg !10029
  call void @llvm.dbg.declare(metadata i16* %keyLength, metadata !10030, metadata !1190), !dbg !10031
  call void @llvm.dbg.declare(metadata i16* %valueStart, metadata !10032, metadata !1190), !dbg !10033
  call void @llvm.dbg.declare(metadata i16* %valueLength, metadata !10034, metadata !1190), !dbg !10035
  %36 = load i8*, i8** %data.addr, align 8, !dbg !10036
  %37 = load i16, i16* %index, align 2, !dbg !10037
  %conv75 = zext i16 %37 to i32, !dbg !10037
  %idx.ext = sext i32 %conv75 to i64, !dbg !10038
  %add.ptr76 = getelementptr inbounds i8, i8* %36, i64 %idx.ext, !dbg !10038
  %38 = load i16, i16* %length.addr, align 2, !dbg !10039
  %conv77 = zext i16 %38 to i32, !dbg !10039
  %39 = load i16, i16* %index, align 2, !dbg !10040
  %conv78 = zext i16 %39 to i32, !dbg !10040
  %sub79 = sub nsw i32 %conv77, %conv78, !dbg !10041
  %conv80 = trunc i32 %sub79 to i16, !dbg !10039
  %call = call zeroext i16 @prv_splitLinkAttribute(i8* %add.ptr76, i16 zeroext %conv80, i16* %keyStart, i16* %keyLength, i16* %valueStart, i16* %valueLength), !dbg !10042
  store i16 %call, i16* %result, align 2, !dbg !10043
  %40 = load i16, i16* %result, align 2, !dbg !10044
  %conv81 = zext i16 %40 to i32, !dbg !10044
  %cmp82 = icmp eq i32 %conv81, 0, !dbg !10046
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !10047

if.then84:                                        ; preds = %while.body74
  store i32 0, i32* %retval, align 4, !dbg !10048
  br label %return, !dbg !10048

if.end85:                                         ; preds = %while.body74
  %41 = load i16, i16* %keyLength, align 2, !dbg !10049
  %conv86 = zext i16 %41 to i32, !dbg !10049
  %cmp87 = icmp eq i32 %conv86, 2, !dbg !10051
  br i1 %cmp87, label %land.lhs.true89, label %if.else122, !dbg !10052

land.lhs.true89:                                  ; preds = %if.end85
  %42 = load i8*, i8** %data.addr, align 8, !dbg !10053
  %43 = load i16, i16* %index, align 2, !dbg !10054
  %conv90 = zext i16 %43 to i32, !dbg !10054
  %idx.ext91 = sext i32 %conv90 to i64, !dbg !10055
  %add.ptr92 = getelementptr inbounds i8, i8* %42, i64 %idx.ext91, !dbg !10055
  %44 = load i16, i16* %keyStart, align 2, !dbg !10056
  %conv93 = zext i16 %44 to i32, !dbg !10056
  %idx.ext94 = sext i32 %conv93 to i64, !dbg !10057
  %add.ptr95 = getelementptr inbounds i8, i8* %add.ptr92, i64 %idx.ext94, !dbg !10057
  %45 = load i16, i16* %keyLength, align 2, !dbg !10058
  %conv96 = zext i16 %45 to i64, !dbg !10058
  %call97 = call i32 @lwm2m_strncmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.121, i32 0, i32 0), i8* %add.ptr95, i64 %conv96), !dbg !10059
  %cmp98 = icmp eq i32 0, %call97, !dbg !10060
  br i1 %cmp98, label %if.then100, label %if.else122, !dbg !10061

if.then100:                                       ; preds = %land.lhs.true89
  %46 = load i8, i8* %isValid, align 1, !dbg !10062
  %tobool = trunc i8 %46 to i1, !dbg !10062
  %conv101 = zext i1 %tobool to i32, !dbg !10062
  %cmp102 = icmp eq i32 %conv101, 1, !dbg !10065
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !10066

if.then104:                                       ; preds = %if.then100
  store i32 0, i32* %retval, align 4, !dbg !10067
  br label %return, !dbg !10067

if.end105:                                        ; preds = %if.then100
  %47 = load i16, i16* %valueLength, align 2, !dbg !10068
  %conv106 = zext i16 %47 to i32, !dbg !10068
  %cmp107 = icmp ne i32 %conv106, 11, !dbg !10070
  br i1 %cmp107, label %if.then120, label %lor.lhs.false109, !dbg !10071

lor.lhs.false109:                                 ; preds = %if.end105
  %48 = load i8*, i8** %data.addr, align 8, !dbg !10072
  %49 = load i16, i16* %index, align 2, !dbg !10073
  %conv110 = zext i16 %49 to i32, !dbg !10073
  %idx.ext111 = sext i32 %conv110 to i64, !dbg !10074
  %add.ptr112 = getelementptr inbounds i8, i8* %48, i64 %idx.ext111, !dbg !10074
  %50 = load i16, i16* %valueStart, align 2, !dbg !10075
  %conv113 = zext i16 %50 to i32, !dbg !10075
  %idx.ext114 = sext i32 %conv113 to i64, !dbg !10076
  %add.ptr115 = getelementptr inbounds i8, i8* %add.ptr112, i64 %idx.ext114, !dbg !10076
  %51 = load i16, i16* %valueLength, align 2, !dbg !10077
  %conv116 = zext i16 %51 to i64, !dbg !10077
  %call117 = call i32 @lwm2m_strncmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.122, i32 0, i32 0), i8* %add.ptr115, i64 %conv116), !dbg !10078
  %cmp118 = icmp ne i32 0, %call117, !dbg !10079
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !10080

if.then120:                                       ; preds = %lor.lhs.false109, %if.end105
  store i32 0, i32* %retval, align 4, !dbg !10081
  br label %return, !dbg !10081

if.end121:                                        ; preds = %lor.lhs.false109
  store i8 1, i8* %isValid, align 1, !dbg !10083
  br label %if.end162, !dbg !10084

if.else122:                                       ; preds = %land.lhs.true89, %if.end85
  %52 = load i16, i16* %keyLength, align 2, !dbg !10085
  %conv123 = zext i16 %52 to i32, !dbg !10085
  %cmp124 = icmp eq i32 %conv123, 2, !dbg !10087
  br i1 %cmp124, label %land.lhs.true126, label %if.end161, !dbg !10088

land.lhs.true126:                                 ; preds = %if.else122
  %53 = load i8*, i8** %data.addr, align 8, !dbg !10089
  %54 = load i16, i16* %index, align 2, !dbg !10090
  %conv127 = zext i16 %54 to i32, !dbg !10090
  %idx.ext128 = sext i32 %conv127 to i64, !dbg !10091
  %add.ptr129 = getelementptr inbounds i8, i8* %53, i64 %idx.ext128, !dbg !10091
  %55 = load i16, i16* %keyStart, align 2, !dbg !10092
  %conv130 = zext i16 %55 to i32, !dbg !10092
  %idx.ext131 = sext i32 %conv130 to i64, !dbg !10093
  %add.ptr132 = getelementptr inbounds i8, i8* %add.ptr129, i64 %idx.ext131, !dbg !10093
  %56 = load i16, i16* %keyLength, align 2, !dbg !10094
  %conv133 = zext i16 %56 to i64, !dbg !10094
  %call134 = call i32 @lwm2m_strncmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.123, i32 0, i32 0), i8* %add.ptr132, i64 %conv133), !dbg !10095
  %cmp135 = icmp eq i32 0, %call134, !dbg !10096
  br i1 %cmp135, label %if.then137, label %if.end161, !dbg !10097

if.then137:                                       ; preds = %land.lhs.true126
  %57 = load i8*, i8** %supportJSON.addr, align 8, !dbg !10098
  %58 = load i8, i8* %57, align 1, !dbg !10101
  %tobool138 = trunc i8 %58 to i1, !dbg !10101
  %conv139 = zext i1 %tobool138 to i32, !dbg !10101
  %cmp140 = icmp eq i32 %conv139, 1, !dbg !10102
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !10103

if.then142:                                       ; preds = %if.then137
  store i32 0, i32* %retval, align 4, !dbg !10104
  br label %return, !dbg !10104

if.end143:                                        ; preds = %if.then137
  %59 = load i16, i16* %valueLength, align 2, !dbg !10105
  %conv144 = zext i16 %59 to i32, !dbg !10105
  %cmp145 = icmp eq i32 %conv144, 5, !dbg !10107
  br i1 %cmp145, label %land.lhs.true147, label %if.else159, !dbg !10108

land.lhs.true147:                                 ; preds = %if.end143
  %60 = load i8*, i8** %data.addr, align 8, !dbg !10109
  %61 = load i16, i16* %index, align 2, !dbg !10110
  %conv148 = zext i16 %61 to i32, !dbg !10110
  %idx.ext149 = sext i32 %conv148 to i64, !dbg !10111
  %add.ptr150 = getelementptr inbounds i8, i8* %60, i64 %idx.ext149, !dbg !10111
  %62 = load i16, i16* %valueStart, align 2, !dbg !10112
  %conv151 = zext i16 %62 to i32, !dbg !10112
  %idx.ext152 = sext i32 %conv151 to i64, !dbg !10113
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr150, i64 %idx.ext152, !dbg !10113
  %63 = load i16, i16* %valueLength, align 2, !dbg !10114
  %conv154 = zext i16 %63 to i64, !dbg !10114
  %call155 = call i32 @lwm2m_strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.124, i32 0, i32 0), i8* %add.ptr153, i64 %conv154), !dbg !10115
  %cmp156 = icmp eq i32 0, %call155, !dbg !10116
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !10117

if.then158:                                       ; preds = %land.lhs.true147
  %64 = load i8*, i8** %supportJSON.addr, align 8, !dbg !10118
  store i8 1, i8* %64, align 1, !dbg !10120
  br label %if.end160, !dbg !10121

if.else159:                                       ; preds = %land.lhs.true147, %if.end143
  store i32 0, i32* %retval, align 4, !dbg !10122
  br label %return, !dbg !10122

if.end160:                                        ; preds = %if.then158
  br label %if.end161, !dbg !10124

if.end161:                                        ; preds = %if.end160, %land.lhs.true126, %if.else122
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.end121
  %65 = load i16, i16* %result, align 2, !dbg !10125
  %conv163 = zext i16 %65 to i32, !dbg !10125
  %66 = load i16, i16* %index, align 2, !dbg !10126
  %conv164 = zext i16 %66 to i32, !dbg !10126
  %add165 = add nsw i32 %conv164, %conv163, !dbg !10126
  %conv166 = trunc i32 %add165 to i16, !dbg !10126
  store i16 %conv166, i16* %index, align 2, !dbg !10126
  br label %while.cond69, !dbg !10021, !llvm.loop !10127

while.end167:                                     ; preds = %while.cond69
  %67 = load i8, i8* %isValid, align 1, !dbg !10129
  %tobool168 = trunc i8 %67 to i1, !dbg !10129
  %conv169 = zext i1 %tobool168 to i32, !dbg !10129
  %cmp170 = icmp eq i32 %conv169, 0, !dbg !10131
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !10132

if.then172:                                       ; preds = %while.end167
  store i32 0, i32* %retval, align 4, !dbg !10133
  br label %return, !dbg !10133

if.end173:                                        ; preds = %while.end167
  %68 = load i16, i16* %pathLength, align 2, !dbg !10134
  %conv174 = zext i16 %68 to i32, !dbg !10134
  %cmp175 = icmp ne i32 %conv174, 0, !dbg !10136
  br i1 %cmp175, label %if.then177, label %if.end192, !dbg !10137

if.then177:                                       ; preds = %if.end173
  %69 = load i16, i16* %pathLength, align 2, !dbg !10138
  %conv178 = zext i16 %69 to i32, !dbg !10138
  %add179 = add nsw i32 %conv178, 1, !dbg !10140
  %conv180 = sext i32 %add179 to i64, !dbg !10138
  %call181 = call i8* @lwm2m_malloc(i64 %conv180), !dbg !10141
  %70 = load i8**, i8*** %altPath.addr, align 8, !dbg !10142
  store i8* %call181, i8** %70, align 8, !dbg !10143
  %71 = load i8**, i8*** %altPath.addr, align 8, !dbg !10144
  %72 = load i8*, i8** %71, align 8, !dbg !10146
  %cmp182 = icmp eq i8* %72, null, !dbg !10147
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !10148

if.then184:                                       ; preds = %if.then177
  store i32 0, i32* %retval, align 4, !dbg !10149
  br label %return, !dbg !10149

if.end185:                                        ; preds = %if.then177
  %73 = load i8**, i8*** %altPath.addr, align 8, !dbg !10150
  %74 = load i8*, i8** %73, align 8, !dbg !10151
  %75 = load i8*, i8** %data.addr, align 8, !dbg !10152
  %76 = load i16, i16* %pathStart, align 2, !dbg !10153
  %conv186 = zext i16 %76 to i32, !dbg !10153
  %idx.ext187 = sext i32 %conv186 to i64, !dbg !10154
  %add.ptr188 = getelementptr inbounds i8, i8* %75, i64 %idx.ext187, !dbg !10154
  %77 = load i16, i16* %pathLength, align 2, !dbg !10155
  %conv189 = zext i16 %77 to i64, !dbg !10155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %add.ptr188, i64 %conv189, i32 1, i1 false), !dbg !10156
  %78 = load i8**, i8*** %altPath.addr, align 8, !dbg !10157
  %79 = load i8*, i8** %78, align 8, !dbg !10158
  %80 = load i16, i16* %pathLength, align 2, !dbg !10159
  %idxprom190 = zext i16 %80 to i64, !dbg !10160
  %arrayidx191 = getelementptr inbounds i8, i8* %79, i64 %idxprom190, !dbg !10160
  store i8 0, i8* %arrayidx191, align 1, !dbg !10161
  br label %if.end192, !dbg !10162

if.end192:                                        ; preds = %if.end185, %if.end173
  store i32 1, i32* %retval, align 4, !dbg !10163
  br label %return, !dbg !10163

return:                                           ; preds = %if.end192, %if.then184, %if.then172, %if.else159, %if.then142, %if.then120, %if.then104, %if.then84, %if.then66, %if.then41, %if.else
  %81 = load i32, i32* %retval, align 4, !dbg !10164
  ret i32 %81, !dbg !10164
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @prv_splitLinkAttribute(i8* %data, i16 zeroext %length, i16* %keyStart, i16* %keyLength, i16* %valueStart, i16* %valueLength) #0 !dbg !10165 {
entry:
  %retval = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %length.addr = alloca i16, align 2
  %keyStart.addr = alloca i16*, align 8
  %keyLength.addr = alloca i16*, align 8
  %valueStart.addr = alloca i16*, align 8
  %valueLength.addr = alloca i16*, align 8
  %index = alloca i16, align 2
  %end = alloca i16, align 2
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10168, metadata !1190), !dbg !10169
  store i16 %length, i16* %length.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %length.addr, metadata !10170, metadata !1190), !dbg !10171
  store i16* %keyStart, i16** %keyStart.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %keyStart.addr, metadata !10172, metadata !1190), !dbg !10173
  store i16* %keyLength, i16** %keyLength.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %keyLength.addr, metadata !10174, metadata !1190), !dbg !10175
  store i16* %valueStart, i16** %valueStart.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %valueStart.addr, metadata !10176, metadata !1190), !dbg !10177
  store i16* %valueLength, i16** %valueLength.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %valueLength.addr, metadata !10178, metadata !1190), !dbg !10179
  call void @llvm.dbg.declare(metadata i16* %index, metadata !10180, metadata !1190), !dbg !10181
  call void @llvm.dbg.declare(metadata i16* %end, metadata !10182, metadata !1190), !dbg !10183
  store i16 0, i16* %index, align 2, !dbg !10184
  br label %while.cond, !dbg !10185

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i16, i16* %index, align 2, !dbg !10186
  %conv = zext i16 %0 to i32, !dbg !10186
  %1 = load i16, i16* %length.addr, align 2, !dbg !10187
  %conv1 = zext i16 %1 to i32, !dbg !10187
  %cmp = icmp slt i32 %conv, %conv1, !dbg !10188
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10189

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %data.addr, align 8, !dbg !10190
  %3 = load i16, i16* %index, align 2, !dbg !10191
  %idxprom = zext i16 %3 to i64, !dbg !10190
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !10190
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10190
  %conv3 = zext i8 %4 to i32, !dbg !10190
  %cmp4 = icmp eq i32 %conv3, 32, !dbg !10192
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %5, label %while.body, label %while.end, !dbg !10185

while.body:                                       ; preds = %land.end
  %6 = load i16, i16* %index, align 2, !dbg !10193
  %inc = add i16 %6, 1, !dbg !10193
  store i16 %inc, i16* %index, align 2, !dbg !10193
  br label %while.cond, !dbg !10185, !llvm.loop !10194

while.end:                                        ; preds = %land.end
  %7 = load i16, i16* %index, align 2, !dbg !10195
  %conv6 = zext i16 %7 to i32, !dbg !10195
  %8 = load i16, i16* %length.addr, align 2, !dbg !10197
  %conv7 = zext i16 %8 to i32, !dbg !10197
  %cmp8 = icmp eq i32 %conv6, %conv7, !dbg !10198
  br i1 %cmp8, label %if.then, label %if.end, !dbg !10199

if.then:                                          ; preds = %while.end
  store i16 0, i16* %retval, align 2, !dbg !10200
  br label %return, !dbg !10200

if.end:                                           ; preds = %while.end
  %9 = load i8*, i8** %data.addr, align 8, !dbg !10201
  %10 = load i16, i16* %index, align 2, !dbg !10203
  %idxprom10 = zext i16 %10 to i64, !dbg !10201
  %arrayidx11 = getelementptr inbounds i8, i8* %9, i64 %idxprom10, !dbg !10201
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !10201
  %conv12 = zext i8 %11 to i32, !dbg !10201
  %cmp13 = icmp eq i32 %conv12, 59, !dbg !10204
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !10205

if.then15:                                        ; preds = %if.end
  %12 = load i16, i16* %index, align 2, !dbg !10206
  %inc16 = add i16 %12, 1, !dbg !10206
  store i16 %inc16, i16* %index, align 2, !dbg !10206
  br label %if.end17, !dbg !10208

if.end17:                                         ; preds = %if.then15, %if.end
  %13 = load i16, i16* %index, align 2, !dbg !10209
  %conv18 = zext i16 %13 to i32, !dbg !10209
  %14 = load i16, i16* %length.addr, align 2, !dbg !10211
  %conv19 = zext i16 %14 to i32, !dbg !10211
  %cmp20 = icmp eq i32 %conv18, %conv19, !dbg !10212
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10213

if.then22:                                        ; preds = %if.end17
  store i16 0, i16* %retval, align 2, !dbg !10214
  br label %return, !dbg !10214

if.end23:                                         ; preds = %if.end17
  %15 = load i16, i16* %index, align 2, !dbg !10215
  %16 = load i16*, i16** %keyStart.addr, align 8, !dbg !10216
  store i16 %15, i16* %16, align 2, !dbg !10217
  br label %while.cond24, !dbg !10218

while.cond24:                                     ; preds = %while.body36, %if.end23
  %17 = load i16, i16* %index, align 2, !dbg !10219
  %conv25 = zext i16 %17 to i32, !dbg !10219
  %18 = load i16, i16* %length.addr, align 2, !dbg !10220
  %conv26 = zext i16 %18 to i32, !dbg !10220
  %cmp27 = icmp slt i32 %conv25, %conv26, !dbg !10221
  br i1 %cmp27, label %land.rhs29, label %land.end35, !dbg !10222

land.rhs29:                                       ; preds = %while.cond24
  %19 = load i8*, i8** %data.addr, align 8, !dbg !10223
  %20 = load i16, i16* %index, align 2, !dbg !10224
  %idxprom30 = zext i16 %20 to i64, !dbg !10223
  %arrayidx31 = getelementptr inbounds i8, i8* %19, i64 %idxprom30, !dbg !10223
  %21 = load i8, i8* %arrayidx31, align 1, !dbg !10223
  %conv32 = zext i8 %21 to i32, !dbg !10223
  %cmp33 = icmp ne i32 %conv32, 61, !dbg !10225
  br label %land.end35

land.end35:                                       ; preds = %land.rhs29, %while.cond24
  %22 = phi i1 [ false, %while.cond24 ], [ %cmp33, %land.rhs29 ]
  br i1 %22, label %while.body36, label %while.end38, !dbg !10218

while.body36:                                     ; preds = %land.end35
  %23 = load i16, i16* %index, align 2, !dbg !10226
  %inc37 = add i16 %23, 1, !dbg !10226
  store i16 %inc37, i16* %index, align 2, !dbg !10226
  br label %while.cond24, !dbg !10218, !llvm.loop !10227

while.end38:                                      ; preds = %land.end35
  %24 = load i16, i16* %index, align 2, !dbg !10228
  %conv39 = zext i16 %24 to i32, !dbg !10228
  %25 = load i16*, i16** %keyStart.addr, align 8, !dbg !10230
  %26 = load i16, i16* %25, align 2, !dbg !10231
  %conv40 = zext i16 %26 to i32, !dbg !10231
  %cmp41 = icmp eq i32 %conv39, %conv40, !dbg !10232
  br i1 %cmp41, label %if.then47, label %lor.lhs.false, !dbg !10233

lor.lhs.false:                                    ; preds = %while.end38
  %27 = load i16, i16* %index, align 2, !dbg !10234
  %conv43 = zext i16 %27 to i32, !dbg !10234
  %28 = load i16, i16* %length.addr, align 2, !dbg !10235
  %conv44 = zext i16 %28 to i32, !dbg !10235
  %cmp45 = icmp eq i32 %conv43, %conv44, !dbg !10236
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !10237

if.then47:                                        ; preds = %lor.lhs.false, %while.end38
  store i16 0, i16* %retval, align 2, !dbg !10238
  br label %return, !dbg !10238

if.end48:                                         ; preds = %lor.lhs.false
  %29 = load i16, i16* %index, align 2, !dbg !10239
  %conv49 = zext i16 %29 to i32, !dbg !10239
  %30 = load i16*, i16** %keyStart.addr, align 8, !dbg !10240
  %31 = load i16, i16* %30, align 2, !dbg !10241
  %conv50 = zext i16 %31 to i32, !dbg !10241
  %sub = sub nsw i32 %conv49, %conv50, !dbg !10242
  %conv51 = trunc i32 %sub to i16, !dbg !10239
  %32 = load i16*, i16** %keyLength.addr, align 8, !dbg !10243
  store i16 %conv51, i16* %32, align 2, !dbg !10244
  %33 = load i16, i16* %index, align 2, !dbg !10245
  %inc52 = add i16 %33, 1, !dbg !10245
  store i16 %inc52, i16* %index, align 2, !dbg !10245
  br label %while.cond53, !dbg !10246

while.cond53:                                     ; preds = %while.body65, %if.end48
  %34 = load i16, i16* %index, align 2, !dbg !10247
  %conv54 = zext i16 %34 to i32, !dbg !10247
  %35 = load i16, i16* %length.addr, align 2, !dbg !10248
  %conv55 = zext i16 %35 to i32, !dbg !10248
  %cmp56 = icmp slt i32 %conv54, %conv55, !dbg !10249
  br i1 %cmp56, label %land.rhs58, label %land.end64, !dbg !10250

land.rhs58:                                       ; preds = %while.cond53
  %36 = load i8*, i8** %data.addr, align 8, !dbg !10251
  %37 = load i16, i16* %index, align 2, !dbg !10252
  %idxprom59 = zext i16 %37 to i64, !dbg !10251
  %arrayidx60 = getelementptr inbounds i8, i8* %36, i64 %idxprom59, !dbg !10251
  %38 = load i8, i8* %arrayidx60, align 1, !dbg !10251
  %conv61 = zext i8 %38 to i32, !dbg !10251
  %cmp62 = icmp eq i32 %conv61, 32, !dbg !10253
  br label %land.end64

land.end64:                                       ; preds = %land.rhs58, %while.cond53
  %39 = phi i1 [ false, %while.cond53 ], [ %cmp62, %land.rhs58 ]
  br i1 %39, label %while.body65, label %while.end67, !dbg !10246

while.body65:                                     ; preds = %land.end64
  %40 = load i16, i16* %index, align 2, !dbg !10254
  %inc66 = add i16 %40, 1, !dbg !10254
  store i16 %inc66, i16* %index, align 2, !dbg !10254
  br label %while.cond53, !dbg !10246, !llvm.loop !10255

while.end67:                                      ; preds = %land.end64
  %41 = load i16, i16* %index, align 2, !dbg !10256
  %conv68 = zext i16 %41 to i32, !dbg !10256
  %42 = load i16, i16* %length.addr, align 2, !dbg !10258
  %conv69 = zext i16 %42 to i32, !dbg !10258
  %cmp70 = icmp eq i32 %conv68, %conv69, !dbg !10259
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !10260

if.then72:                                        ; preds = %while.end67
  store i16 0, i16* %retval, align 2, !dbg !10261
  br label %return, !dbg !10261

if.end73:                                         ; preds = %while.end67
  %43 = load i16, i16* %index, align 2, !dbg !10262
  %44 = load i16*, i16** %valueStart.addr, align 8, !dbg !10263
  store i16 %43, i16* %44, align 2, !dbg !10264
  br label %while.cond74, !dbg !10265

while.cond74:                                     ; preds = %while.body86, %if.end73
  %45 = load i16, i16* %index, align 2, !dbg !10266
  %conv75 = zext i16 %45 to i32, !dbg !10266
  %46 = load i16, i16* %length.addr, align 2, !dbg !10267
  %conv76 = zext i16 %46 to i32, !dbg !10267
  %cmp77 = icmp slt i32 %conv75, %conv76, !dbg !10268
  br i1 %cmp77, label %land.rhs79, label %land.end85, !dbg !10269

land.rhs79:                                       ; preds = %while.cond74
  %47 = load i8*, i8** %data.addr, align 8, !dbg !10270
  %48 = load i16, i16* %index, align 2, !dbg !10271
  %idxprom80 = zext i16 %48 to i64, !dbg !10270
  %arrayidx81 = getelementptr inbounds i8, i8* %47, i64 %idxprom80, !dbg !10270
  %49 = load i8, i8* %arrayidx81, align 1, !dbg !10270
  %conv82 = zext i8 %49 to i32, !dbg !10270
  %cmp83 = icmp ne i32 %conv82, 59, !dbg !10272
  br label %land.end85

land.end85:                                       ; preds = %land.rhs79, %while.cond74
  %50 = phi i1 [ false, %while.cond74 ], [ %cmp83, %land.rhs79 ]
  br i1 %50, label %while.body86, label %while.end88, !dbg !10265

while.body86:                                     ; preds = %land.end85
  %51 = load i16, i16* %index, align 2, !dbg !10273
  %inc87 = add i16 %51, 1, !dbg !10273
  store i16 %inc87, i16* %index, align 2, !dbg !10273
  br label %while.cond74, !dbg !10265, !llvm.loop !10274

while.end88:                                      ; preds = %land.end85
  %52 = load i16, i16* %index, align 2, !dbg !10275
  store i16 %52, i16* %end, align 2, !dbg !10276
  %53 = load i16, i16* %index, align 2, !dbg !10277
  %dec = add i16 %53, -1, !dbg !10277
  store i16 %dec, i16* %index, align 2, !dbg !10277
  br label %while.cond89, !dbg !10278

while.cond89:                                     ; preds = %while.body101, %while.end88
  %54 = load i16, i16* %index, align 2, !dbg !10279
  %conv90 = zext i16 %54 to i32, !dbg !10279
  %55 = load i16*, i16** %valueStart.addr, align 8, !dbg !10280
  %56 = load i16, i16* %55, align 2, !dbg !10281
  %conv91 = zext i16 %56 to i32, !dbg !10281
  %cmp92 = icmp sgt i32 %conv90, %conv91, !dbg !10282
  br i1 %cmp92, label %land.rhs94, label %land.end100, !dbg !10283

land.rhs94:                                       ; preds = %while.cond89
  %57 = load i8*, i8** %data.addr, align 8, !dbg !10284
  %58 = load i16, i16* %index, align 2, !dbg !10285
  %idxprom95 = zext i16 %58 to i64, !dbg !10284
  %arrayidx96 = getelementptr inbounds i8, i8* %57, i64 %idxprom95, !dbg !10284
  %59 = load i8, i8* %arrayidx96, align 1, !dbg !10284
  %conv97 = zext i8 %59 to i32, !dbg !10284
  %cmp98 = icmp eq i32 %conv97, 32, !dbg !10286
  br label %land.end100

land.end100:                                      ; preds = %land.rhs94, %while.cond89
  %60 = phi i1 [ false, %while.cond89 ], [ %cmp98, %land.rhs94 ]
  br i1 %60, label %while.body101, label %while.end103, !dbg !10278

while.body101:                                    ; preds = %land.end100
  %61 = load i16, i16* %index, align 2, !dbg !10287
  %dec102 = add i16 %61, -1, !dbg !10287
  store i16 %dec102, i16* %index, align 2, !dbg !10287
  br label %while.cond89, !dbg !10278, !llvm.loop !10288

while.end103:                                     ; preds = %land.end100
  %62 = load i16, i16* %index, align 2, !dbg !10289
  %conv104 = zext i16 %62 to i32, !dbg !10289
  %63 = load i16*, i16** %valueStart.addr, align 8, !dbg !10291
  %64 = load i16, i16* %63, align 2, !dbg !10292
  %conv105 = zext i16 %64 to i32, !dbg !10292
  %cmp106 = icmp eq i32 %conv104, %conv105, !dbg !10293
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !10294

if.then108:                                       ; preds = %while.end103
  store i16 0, i16* %retval, align 2, !dbg !10295
  br label %return, !dbg !10295

if.end109:                                        ; preds = %while.end103
  %65 = load i16, i16* %index, align 2, !dbg !10296
  %conv110 = zext i16 %65 to i32, !dbg !10296
  %66 = load i16*, i16** %valueStart.addr, align 8, !dbg !10297
  %67 = load i16, i16* %66, align 2, !dbg !10298
  %conv111 = zext i16 %67 to i32, !dbg !10298
  %sub112 = sub nsw i32 %conv110, %conv111, !dbg !10299
  %add = add nsw i32 %sub112, 1, !dbg !10300
  %conv113 = trunc i32 %add to i16, !dbg !10296
  %68 = load i16*, i16** %valueLength.addr, align 8, !dbg !10301
  store i16 %conv113, i16* %68, align 2, !dbg !10302
  %69 = load i16, i16* %end, align 2, !dbg !10303
  store i16 %69, i16* %retval, align 2, !dbg !10304
  br label %return, !dbg !10304

return:                                           ; preds = %if.end109, %if.then108, %if.then72, %if.then47, %if.then22, %if.then
  %70 = load i16, i16* %retval, align 2, !dbg !10305
  ret i16 %70, !dbg !10305
}

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_set_monitoring_callback(%struct.lwm2m_context_t* %contextP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10306 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10309, metadata !1190), !dbg !10310
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10311, metadata !1190), !dbg !10312
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10313, metadata !1190), !dbg !10314
  %0 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10315
  %1 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10316
  %monitorCallback = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %1, i32 0, i32 1, !dbg !10317
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %0, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback, align 8, !dbg !10318
  %2 = load i8*, i8** %userData.addr, align 8, !dbg !10319
  %3 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10320
  %monitorUserData = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %3, i32 0, i32 2, !dbg !10321
  store i8* %2, i8** %monitorUserData, align 8, !dbg !10322
  ret void, !dbg !10323
}

; Function Attrs: noinline nounwind uwtable
define void @registration_step(%struct.lwm2m_context_t* %contextP, i64 %currentTime, i64* %timeoutP) #0 !dbg !10324 {
entry:
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %currentTime.addr = alloca i64, align 8
  %timeoutP.addr = alloca i64*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %nextP = alloca %struct._lwm2m_client_*, align 8
  %interval = alloca i64, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10327, metadata !1190), !dbg !10328
  store i64 %currentTime, i64* %currentTime.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %currentTime.addr, metadata !10329, metadata !1190), !dbg !10330
  store i64* %timeoutP, i64** %timeoutP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %timeoutP.addr, metadata !10331, metadata !1190), !dbg !10332
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !10333, metadata !1190), !dbg !10334
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10335
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !10336
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !10336
  store %struct._lwm2m_client_* %1, %struct._lwm2m_client_** %clientP, align 8, !dbg !10337
  br label %while.cond, !dbg !10338

while.cond:                                       ; preds = %if.end12, %entry
  %2 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10339
  %cmp = icmp ne %struct._lwm2m_client_* %2, null, !dbg !10340
  br i1 %cmp, label %while.body, label %while.end, !dbg !10338

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %nextP, metadata !10341, metadata !1190), !dbg !10343
  %3 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10344
  %next = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %3, i32 0, i32 0, !dbg !10345
  %4 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %next, align 8, !dbg !10345
  store %struct._lwm2m_client_* %4, %struct._lwm2m_client_** %nextP, align 8, !dbg !10343
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10346
  %endOfLife = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %5, i32 0, i32 8, !dbg !10348
  %6 = load i64, i64* %endOfLife, align 8, !dbg !10348
  %7 = load i64, i64* %currentTime.addr, align 8, !dbg !10349
  %cmp1 = icmp sle i64 %6, %7, !dbg !10350
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10351

if.then:                                          ; preds = %while.body
  %8 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10352
  %clientList2 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %8, i32 0, i32 0, !dbg !10352
  %9 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList2, align 8, !dbg !10352
  %10 = bitcast %struct._lwm2m_client_* %9 to %struct._lwm2m_list_t*, !dbg !10352
  %11 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10352
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %11, i32 0, i32 1, !dbg !10352
  %12 = load i16, i16* %internalID, align 8, !dbg !10352
  %call = call %struct._lwm2m_list_t* @lwm2m_list_remove(%struct._lwm2m_list_t* %10, i16 zeroext %12, %struct._lwm2m_list_t** null), !dbg !10352
  %13 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !10354
  %14 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10355
  %clientList3 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %14, i32 0, i32 0, !dbg !10356
  store %struct._lwm2m_client_* %13, %struct._lwm2m_client_** %clientList3, align 8, !dbg !10357
  %15 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10358
  %monitorCallback = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %15, i32 0, i32 1, !dbg !10360
  %16 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback, align 8, !dbg !10360
  %cmp4 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %16, null, !dbg !10361
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10362

if.then5:                                         ; preds = %if.then
  %17 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10363
  %monitorCallback6 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %17, i32 0, i32 1, !dbg !10365
  %18 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %monitorCallback6, align 8, !dbg !10365
  %19 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10366
  %internalID7 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %19, i32 0, i32 1, !dbg !10367
  %20 = load i16, i16* %internalID7, align 8, !dbg !10367
  %21 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10368
  %monitorUserData = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %21, i32 0, i32 2, !dbg !10369
  %22 = load i8*, i8** %monitorUserData, align 8, !dbg !10369
  call void %18(i16 zeroext %20, %struct.lwm2m_uri_t* null, i32 66, i32 0, i8* null, i32 0, i8* %22), !dbg !10363
  br label %if.end, !dbg !10370

if.end:                                           ; preds = %if.then5, %if.then
  %23 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10371
  call void @registration_freeClient(%struct._lwm2m_client_* %23), !dbg !10372
  br label %if.end12, !dbg !10373

if.else:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %interval, metadata !10374, metadata !1190), !dbg !10376
  %24 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10377
  %endOfLife8 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %24, i32 0, i32 8, !dbg !10378
  %25 = load i64, i64* %endOfLife8, align 8, !dbg !10378
  %26 = load i64, i64* %currentTime.addr, align 8, !dbg !10379
  %sub = sub nsw i64 %25, %26, !dbg !10380
  store i64 %sub, i64* %interval, align 8, !dbg !10381
  %27 = load i64*, i64** %timeoutP.addr, align 8, !dbg !10382
  %28 = load i64, i64* %27, align 8, !dbg !10384
  %29 = load i64, i64* %interval, align 8, !dbg !10385
  %cmp9 = icmp sgt i64 %28, %29, !dbg !10386
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10387

if.then10:                                        ; preds = %if.else
  %30 = load i64, i64* %interval, align 8, !dbg !10388
  %31 = load i64*, i64** %timeoutP.addr, align 8, !dbg !10390
  store i64 %30, i64* %31, align 8, !dbg !10391
  br label %if.end11, !dbg !10392

if.end11:                                         ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %32 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %nextP, align 8, !dbg !10393
  store %struct._lwm2m_client_* %32, %struct._lwm2m_client_** %clientP, align 8, !dbg !10394
  br label %while.cond, !dbg !10338, !llvm.loop !10395

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10397
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_read(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10398 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %format = alloca i32, align 4
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10411, metadata !1190), !dbg !10412
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10413, metadata !1190), !dbg !10414
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10415, metadata !1190), !dbg !10416
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10417, metadata !1190), !dbg !10418
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10419, metadata !1190), !dbg !10420
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !10421, metadata !1190), !dbg !10422
  call void @llvm.dbg.declare(metadata i32* %format, metadata !10423, metadata !1190), !dbg !10424
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10425
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !10426
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !10426
  %2 = bitcast %struct._lwm2m_client_* %1 to %struct._lwm2m_list_t*, !dbg !10427
  %3 = load i16, i16* %clientID.addr, align 2, !dbg !10428
  %call = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %2, i16 zeroext %3), !dbg !10429
  %4 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !10430
  store %struct._lwm2m_client_* %4, %struct._lwm2m_client_** %clientP, align 8, !dbg !10431
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10432
  %cmp = icmp eq %struct._lwm2m_client_* %5, null, !dbg !10434
  br i1 %cmp, label %if.then, label %if.end, !dbg !10435

if.then:                                          ; preds = %entry
  store i32 132, i32* %retval, align 4, !dbg !10436
  br label %return, !dbg !10436

if.end:                                           ; preds = %entry
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10437
  %supportJSON = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %6, i32 0, i32 6, !dbg !10439
  %7 = load i8, i8* %supportJSON, align 8, !dbg !10439
  %tobool = trunc i8 %7 to i1, !dbg !10439
  %conv = zext i1 %tobool to i32, !dbg !10437
  %cmp1 = icmp eq i32 %conv, 1, !dbg !10440
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !10441

if.then3:                                         ; preds = %if.end
  store i32 11543, i32* %format, align 4, !dbg !10442
  br label %if.end4, !dbg !10444

if.else:                                          ; preds = %if.end
  store i32 11542, i32* %format, align 4, !dbg !10445
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %8 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10447
  %9 = load i16, i16* %clientID.addr, align 2, !dbg !10448
  %10 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10449
  %11 = load i32, i32* %format, align 4, !dbg !10450
  %12 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10451
  %13 = load i8*, i8** %userData.addr, align 8, !dbg !10452
  %call5 = call i32 @prv_makeOperation(%struct.lwm2m_context_t* %8, i16 zeroext %9, %struct.lwm2m_uri_t* %10, i32 1, i32 %11, i8* null, i32 0, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %12, i8* %13), !dbg !10453
  store i32 %call5, i32* %retval, align 4, !dbg !10454
  br label %return, !dbg !10454

return:                                           ; preds = %if.end4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10455
  ret i32 %14, !dbg !10455
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_makeOperation(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %method, i32 %format, i8* %buffer, i32 %length, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10456 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %method.addr = alloca i32, align 4
  %format.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %transaction = alloca %struct._lwm2m_transaction_*, align 8
  %dataP = alloca %struct.dm_data_t*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10459, metadata !1190), !dbg !10460
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10461, metadata !1190), !dbg !10462
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10463, metadata !1190), !dbg !10464
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !10465, metadata !1190), !dbg !10466
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !10467, metadata !1190), !dbg !10468
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10469, metadata !1190), !dbg !10470
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10471, metadata !1190), !dbg !10472
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10473, metadata !1190), !dbg !10474
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10475, metadata !1190), !dbg !10476
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !10477, metadata !1190), !dbg !10478
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transaction, metadata !10479, metadata !1190), !dbg !10480
  call void @llvm.dbg.declare(metadata %struct.dm_data_t** %dataP, metadata !10481, metadata !1190), !dbg !10482
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10483
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !10484
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !10484
  %2 = bitcast %struct._lwm2m_client_* %1 to %struct._lwm2m_list_t*, !dbg !10485
  %3 = load i16, i16* %clientID.addr, align 2, !dbg !10486
  %call = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %2, i16 zeroext %3), !dbg !10487
  %4 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !10488
  store %struct._lwm2m_client_* %4, %struct._lwm2m_client_** %clientP, align 8, !dbg !10489
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10490
  %cmp = icmp eq %struct._lwm2m_client_* %5, null, !dbg !10492
  br i1 %cmp, label %if.then, label %if.end, !dbg !10493

if.then:                                          ; preds = %entry
  store i32 132, i32* %retval, align 4, !dbg !10494
  br label %return, !dbg !10494

if.end:                                           ; preds = %entry
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10495
  %sessionH = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %6, i32 0, i32 9, !dbg !10496
  %7 = load i8*, i8** %sessionH, align 8, !dbg !10496
  %8 = load i32, i32* %method.addr, align 4, !dbg !10497
  %9 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10498
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %9, i32 0, i32 5, !dbg !10499
  %10 = load i8*, i8** %altPath, align 8, !dbg !10499
  %11 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10500
  %12 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10501
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %12, i32 0, i32 3, !dbg !10502
  %13 = load i16, i16* %nextMID, align 8, !dbg !10503
  %inc = add i16 %13, 1, !dbg !10503
  store i16 %inc, i16* %nextMID, align 8, !dbg !10503
  %call1 = call %struct._lwm2m_transaction_* @transaction_new(i8* %7, i32 %8, i8* %10, %struct.lwm2m_uri_t* %11, i16 zeroext %13, i8 zeroext 4, i8* null), !dbg !10504
  store %struct._lwm2m_transaction_* %call1, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10505
  %14 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10506
  %cmp2 = icmp eq %struct._lwm2m_transaction_* %14, null, !dbg !10508
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10509

if.then3:                                         ; preds = %if.end
  store i32 160, i32* %retval, align 4, !dbg !10510
  br label %return, !dbg !10510

if.end4:                                          ; preds = %if.end
  %15 = load i32, i32* %method.addr, align 4, !dbg !10511
  %cmp5 = icmp eq i32 %15, 1, !dbg !10513
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !10514

if.then6:                                         ; preds = %if.end4
  %16 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10515
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %16, i32 0, i32 7, !dbg !10517
  %17 = load i8*, i8** %message, align 8, !dbg !10517
  %18 = load i32, i32* %format.addr, align 4, !dbg !10518
  %conv = trunc i32 %18 to i16, !dbg !10518
  %call7 = call i32 @coap_set_header_accept(i8* %17, i16 zeroext %conv), !dbg !10519
  br label %if.end17, !dbg !10520

if.else:                                          ; preds = %if.end4
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !10521
  %cmp8 = icmp ne i8* %19, null, !dbg !10523
  br i1 %cmp8, label %if.then10, label %if.end16, !dbg !10524

if.then10:                                        ; preds = %if.else
  %20 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10525
  %message11 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %20, i32 0, i32 7, !dbg !10527
  %21 = load i8*, i8** %message11, align 8, !dbg !10527
  %22 = load i32, i32* %format.addr, align 4, !dbg !10528
  %call12 = call i32 @coap_set_header_content_type(i8* %21, i32 %22), !dbg !10529
  %23 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10530
  %message13 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %23, i32 0, i32 7, !dbg !10531
  %24 = load i8*, i8** %message13, align 8, !dbg !10531
  %25 = load i8*, i8** %buffer.addr, align 8, !dbg !10532
  %26 = load i32, i32* %length.addr, align 4, !dbg !10533
  %conv14 = sext i32 %26 to i64, !dbg !10533
  %call15 = call i32 @coap_set_payload(i8* %24, i8* %25, i64 %conv14), !dbg !10534
  br label %if.end16, !dbg !10535

if.end16:                                         ; preds = %if.then10, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then6
  %27 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10536
  %cmp18 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %27, null, !dbg !10538
  br i1 %cmp18, label %if.then20, label %if.end31, !dbg !10539

if.then20:                                        ; preds = %if.end17
  %call21 = call i8* @lwm2m_malloc(i64 32), !dbg !10540
  %28 = bitcast i8* %call21 to %struct.dm_data_t*, !dbg !10542
  store %struct.dm_data_t* %28, %struct.dm_data_t** %dataP, align 8, !dbg !10543
  %29 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10544
  %cmp22 = icmp eq %struct.dm_data_t* %29, null, !dbg !10546
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10547

if.then24:                                        ; preds = %if.then20
  %30 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10548
  call void @transaction_free(%struct._lwm2m_transaction_* %30), !dbg !10550
  store i32 160, i32* %retval, align 4, !dbg !10551
  br label %return, !dbg !10551

if.end25:                                         ; preds = %if.then20
  %31 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10552
  %uri = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %31, i32 0, i32 1, !dbg !10553
  %32 = bitcast %struct.lwm2m_uri_t* %uri to i8*, !dbg !10554
  %33 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10555
  %34 = bitcast %struct.lwm2m_uri_t* %33 to i8*, !dbg !10554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %34, i64 8, i32 2, i1 false), !dbg !10554
  %35 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10556
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %35, i32 0, i32 1, !dbg !10557
  %36 = load i16, i16* %internalID, align 8, !dbg !10557
  %37 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10558
  %clientID26 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %37, i32 0, i32 0, !dbg !10559
  store i16 %36, i16* %clientID26, align 8, !dbg !10560
  %38 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10561
  %39 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10562
  %callback27 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %39, i32 0, i32 2, !dbg !10563
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %38, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback27, align 8, !dbg !10564
  %40 = load i8*, i8** %userData.addr, align 8, !dbg !10565
  %41 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10566
  %userData28 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %41, i32 0, i32 3, !dbg !10567
  store i8* %40, i8** %userData28, align 8, !dbg !10568
  %42 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10569
  %callback29 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %42, i32 0, i32 10, !dbg !10570
  store void (%struct._lwm2m_transaction_*, i8*)* @prv_resultCallback, void (%struct._lwm2m_transaction_*, i8*)** %callback29, align 8, !dbg !10571
  %43 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10572
  %44 = bitcast %struct.dm_data_t* %43 to i8*, !dbg !10573
  %45 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10574
  %userData30 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %45, i32 0, i32 11, !dbg !10575
  store i8* %44, i8** %userData30, align 8, !dbg !10576
  br label %if.end31, !dbg !10577

if.end31:                                         ; preds = %if.end25, %if.end17
  %46 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10578
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %46, i32 0, i32 4, !dbg !10578
  %47 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !10578
  %48 = bitcast %struct._lwm2m_transaction_* %47 to %struct._lwm2m_list_t*, !dbg !10578
  %49 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10578
  %50 = bitcast %struct._lwm2m_transaction_* %49 to %struct._lwm2m_list_t*, !dbg !10578
  %call32 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %48, %struct._lwm2m_list_t* %50), !dbg !10578
  %51 = bitcast %struct._lwm2m_list_t* %call32 to %struct._lwm2m_transaction_*, !dbg !10579
  %52 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10580
  %transactionList33 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %52, i32 0, i32 4, !dbg !10581
  store %struct._lwm2m_transaction_* %51, %struct._lwm2m_transaction_** %transactionList33, align 8, !dbg !10582
  %53 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10583
  %54 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10584
  %call34 = call i32 @transaction_send(%struct.lwm2m_context_t* %53, %struct._lwm2m_transaction_* %54), !dbg !10585
  store i32 %call34, i32* %retval, align 4, !dbg !10586
  br label %return, !dbg !10586

return:                                           ; preds = %if.end31, %if.then24, %if.then3, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !10587
  ret i32 %55, !dbg !10587
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_resultCallback(%struct._lwm2m_transaction_* %transacP, i8* %message) #0 !dbg !10588 {
entry:
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  %message.addr = alloca i8*, align 8
  %dataP = alloca %struct.dm_data_t*, align 8
  %packet = alloca %struct.coap_packet_t*, align 8
  %locationString = alloca i8*, align 8
  %result = alloca i32, align 4
  %locationUri = alloca %struct.lwm2m_uri_t, align 2
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !10589, metadata !1190), !dbg !10590
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !10591, metadata !1190), !dbg !10592
  call void @llvm.dbg.declare(metadata %struct.dm_data_t** %dataP, metadata !10593, metadata !1190), !dbg !10594
  %0 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !10595
  %userData = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %0, i32 0, i32 11, !dbg !10596
  %1 = load i8*, i8** %userData, align 8, !dbg !10596
  %2 = bitcast i8* %1 to %struct.dm_data_t*, !dbg !10597
  store %struct.dm_data_t* %2, %struct.dm_data_t** %dataP, align 8, !dbg !10594
  %3 = load i8*, i8** %message.addr, align 8, !dbg !10598
  %cmp = icmp eq i8* %3, null, !dbg !10600
  br i1 %cmp, label %if.then, label %if.else, !dbg !10601

if.then:                                          ; preds = %entry
  %4 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10602
  %callback = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %4, i32 0, i32 2, !dbg !10604
  %5 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback, align 8, !dbg !10604
  %6 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10605
  %clientID = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %6, i32 0, i32 0, !dbg !10606
  %7 = load i16, i16* %clientID, align 8, !dbg !10606
  %8 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10607
  %uri = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %8, i32 0, i32 1, !dbg !10608
  %9 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10609
  %userData1 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %9, i32 0, i32 3, !dbg !10610
  %10 = load i8*, i8** %userData1, align 8, !dbg !10610
  call void %5(i16 zeroext %7, %struct.lwm2m_uri_t* %uri, i32 163, i32 0, i8* null, i32 0, i8* %10), !dbg !10602
  br label %if.end32, !dbg !10611

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %packet, metadata !10612, metadata !1190), !dbg !10614
  %11 = load i8*, i8** %message.addr, align 8, !dbg !10615
  %12 = bitcast i8* %11 to %struct.coap_packet_t*, !dbg !10616
  store %struct.coap_packet_t* %12, %struct.coap_packet_t** %packet, align 8, !dbg !10614
  %13 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10617
  %code = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %13, i32 0, i32 3, !dbg !10619
  %14 = load i8, i8* %code, align 8, !dbg !10619
  %conv = zext i8 %14 to i32, !dbg !10617
  %cmp2 = icmp eq i32 %conv, 65, !dbg !10620
  br i1 %cmp2, label %land.lhs.true, label %if.end23, !dbg !10621

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10622
  %location_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %15, i32 0, i32 14, !dbg !10623
  %16 = load %struct._multi_option_t*, %struct._multi_option_t** %location_path, align 8, !dbg !10623
  %cmp4 = icmp ne %struct._multi_option_t* %16, null, !dbg !10624
  br i1 %cmp4, label %if.then6, label %if.end23, !dbg !10625

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %locationString, metadata !10626, metadata !1190), !dbg !10628
  store i8* null, i8** %locationString, align 8, !dbg !10628
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10629, metadata !1190), !dbg !10630
  store i32 0, i32* %result, align 4, !dbg !10630
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %locationUri, metadata !10631, metadata !1190), !dbg !10632
  %17 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10633
  %location_path7 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %17, i32 0, i32 14, !dbg !10634
  %18 = load %struct._multi_option_t*, %struct._multi_option_t** %location_path7, align 8, !dbg !10634
  %call = call i8* @coap_get_multi_option_as_string(%struct._multi_option_t* %18), !dbg !10635
  store i8* %call, i8** %locationString, align 8, !dbg !10636
  %19 = load i8*, i8** %locationString, align 8, !dbg !10637
  %cmp8 = icmp eq i8* %19, null, !dbg !10639
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !10640

if.then10:                                        ; preds = %if.then6
  br label %return, !dbg !10641

if.end:                                           ; preds = %if.then6
  %20 = load i8*, i8** %locationString, align 8, !dbg !10643
  %21 = load i8*, i8** %locationString, align 8, !dbg !10644
  %call11 = call i64 @strlen(i8* %21) #9, !dbg !10645
  %call12 = call i32 @lwm2m_stringToUri(i8* %20, i64 %call11, %struct.lwm2m_uri_t* %locationUri), !dbg !10646
  store i32 %call12, i32* %result, align 4, !dbg !10647
  %22 = load i32, i32* %result, align 4, !dbg !10648
  %cmp13 = icmp eq i32 %22, 0, !dbg !10650
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10651

if.then15:                                        ; preds = %if.end
  %23 = load i8*, i8** %locationString, align 8, !dbg !10652
  call void @lwm2m_free(i8* %23), !dbg !10654
  br label %return, !dbg !10655

if.end16:                                         ; preds = %if.end
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %locationUri, i32 0, i32 2, !dbg !10656
  %24 = load i16, i16* %instanceId, align 2, !dbg !10656
  %25 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !10657
  %userData17 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %25, i32 0, i32 11, !dbg !10658
  %26 = load i8*, i8** %userData17, align 8, !dbg !10658
  %27 = bitcast i8* %26 to %struct.dm_data_t*, !dbg !10659
  %uri18 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %27, i32 0, i32 1, !dbg !10660
  %instanceId19 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri18, i32 0, i32 2, !dbg !10661
  store i16 %24, i16* %instanceId19, align 2, !dbg !10662
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %locationUri, i32 0, i32 0, !dbg !10663
  %28 = load i8, i8* %flag, align 2, !dbg !10663
  %29 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !10664
  %userData20 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %29, i32 0, i32 11, !dbg !10665
  %30 = load i8*, i8** %userData20, align 8, !dbg !10665
  %31 = bitcast i8* %30 to %struct.dm_data_t*, !dbg !10666
  %uri21 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %31, i32 0, i32 1, !dbg !10667
  %flag22 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri21, i32 0, i32 0, !dbg !10668
  store i8 %28, i8* %flag22, align 2, !dbg !10669
  %32 = load i8*, i8** %locationString, align 8, !dbg !10670
  call void @lwm2m_free(i8* %32), !dbg !10671
  br label %if.end23, !dbg !10672

if.end23:                                         ; preds = %if.end16, %land.lhs.true, %if.else
  %33 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10673
  %callback24 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %33, i32 0, i32 2, !dbg !10674
  %34 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback24, align 8, !dbg !10674
  %35 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10675
  %clientID25 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %35, i32 0, i32 0, !dbg !10676
  %36 = load i16, i16* %clientID25, align 8, !dbg !10676
  %37 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10677
  %uri26 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %37, i32 0, i32 1, !dbg !10678
  %38 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10679
  %code27 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %38, i32 0, i32 3, !dbg !10680
  %39 = load i8, i8* %code27, align 8, !dbg !10680
  %conv28 = zext i8 %39 to i32, !dbg !10679
  %40 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10681
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %40, i32 0, i32 6, !dbg !10682
  %41 = load i32, i32* %content_type, align 4, !dbg !10682
  %call29 = call i32 @utils_convertMediaType(i32 %41), !dbg !10683
  %42 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10684
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %42, i32 0, i32 38, !dbg !10685
  %43 = load i8*, i8** %payload, align 8, !dbg !10685
  %44 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !10686
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %44, i32 0, i32 37, !dbg !10687
  %45 = load i16, i16* %payload_len, align 2, !dbg !10687
  %conv30 = zext i16 %45 to i32, !dbg !10686
  %46 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10688
  %userData31 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %46, i32 0, i32 3, !dbg !10689
  %47 = load i8*, i8** %userData31, align 8, !dbg !10689
  call void %34(i16 zeroext %36, %struct.lwm2m_uri_t* %uri26, i32 %conv28, i32 %call29, i8* %43, i32 %conv30, i8* %47), !dbg !10673
  br label %if.end32

if.end32:                                         ; preds = %if.end23, %if.then
  %48 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10690
  %49 = bitcast %struct.dm_data_t* %48 to i8*, !dbg !10690
  call void @lwm2m_free(i8* %49), !dbg !10691
  br label %return, !dbg !10692

return:                                           ; preds = %if.end32, %if.then15, %if.then10
  ret void, !dbg !10692
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_write(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %format, i8* %buffer, i32 %length, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10693 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %format.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10696, metadata !1190), !dbg !10697
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10698, metadata !1190), !dbg !10699
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10700, metadata !1190), !dbg !10701
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !10702, metadata !1190), !dbg !10703
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10704, metadata !1190), !dbg !10705
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10706, metadata !1190), !dbg !10707
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10708, metadata !1190), !dbg !10709
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10710, metadata !1190), !dbg !10711
  %0 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10712
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %0, i32 0, i32 0, !dbg !10712
  %1 = load i8, i8* %flag, align 2, !dbg !10712
  %conv = zext i8 %1 to i32, !dbg !10712
  %and = and i32 %conv, 2, !dbg !10712
  %cmp = icmp ne i32 %and, 0, !dbg !10712
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !10714

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %length.addr, align 4, !dbg !10715
  %cmp2 = icmp eq i32 %2, 0, !dbg !10716
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10717

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 128, i32* %retval, align 4, !dbg !10718
  br label %return, !dbg !10718

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10720
  %flag4 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %3, i32 0, i32 0, !dbg !10720
  %4 = load i8, i8* %flag4, align 2, !dbg !10720
  %conv5 = zext i8 %4 to i32, !dbg !10720
  %and6 = and i32 %conv5, 1, !dbg !10720
  %cmp7 = icmp ne i32 %and6, 0, !dbg !10720
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !10722

if.then9:                                         ; preds = %if.end
  %5 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10723
  %6 = load i16, i16* %clientID.addr, align 2, !dbg !10725
  %7 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10726
  %8 = load i32, i32* %format.addr, align 4, !dbg !10727
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !10728
  %10 = load i32, i32* %length.addr, align 4, !dbg !10729
  %11 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10730
  %12 = load i8*, i8** %userData.addr, align 8, !dbg !10731
  %call = call i32 @prv_makeOperation(%struct.lwm2m_context_t* %5, i16 zeroext %6, %struct.lwm2m_uri_t* %7, i32 3, i32 %8, i8* %9, i32 %10, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %11, i8* %12), !dbg !10732
  store i32 %call, i32* %retval, align 4, !dbg !10733
  br label %return, !dbg !10733

if.else:                                          ; preds = %if.end
  %13 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10734
  %14 = load i16, i16* %clientID.addr, align 2, !dbg !10736
  %15 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10737
  %16 = load i32, i32* %format.addr, align 4, !dbg !10738
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !10739
  %18 = load i32, i32* %length.addr, align 4, !dbg !10740
  %19 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10741
  %20 = load i8*, i8** %userData.addr, align 8, !dbg !10742
  %call10 = call i32 @prv_makeOperation(%struct.lwm2m_context_t* %13, i16 zeroext %14, %struct.lwm2m_uri_t* %15, i32 2, i32 %16, i8* %17, i32 %18, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %19, i8* %20), !dbg !10743
  store i32 %call10, i32* %retval, align 4, !dbg !10744
  br label %return, !dbg !10744

return:                                           ; preds = %if.else, %if.then9, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !10745
  ret i32 %21, !dbg !10745
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_execute(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %format, i8* %buffer, i32 %length, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10746 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %format.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10747, metadata !1190), !dbg !10748
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10749, metadata !1190), !dbg !10750
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10751, metadata !1190), !dbg !10752
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !10753, metadata !1190), !dbg !10754
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10755, metadata !1190), !dbg !10756
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10757, metadata !1190), !dbg !10758
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10759, metadata !1190), !dbg !10760
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10761, metadata !1190), !dbg !10762
  %0 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10763
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %0, i32 0, i32 0, !dbg !10763
  %1 = load i8, i8* %flag, align 2, !dbg !10763
  %conv = zext i8 %1 to i32, !dbg !10763
  %and = and i32 %conv, 1, !dbg !10763
  %cmp = icmp ne i32 %and, 0, !dbg !10763
  br i1 %cmp, label %if.end, label %if.then, !dbg !10765

if.then:                                          ; preds = %entry
  store i32 128, i32* %retval, align 4, !dbg !10766
  br label %return, !dbg !10766

if.end:                                           ; preds = %entry
  %2 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10768
  %3 = load i16, i16* %clientID.addr, align 2, !dbg !10769
  %4 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10770
  %5 = load i32, i32* %format.addr, align 4, !dbg !10771
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !10772
  %7 = load i32, i32* %length.addr, align 4, !dbg !10773
  %8 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10774
  %9 = load i8*, i8** %userData.addr, align 8, !dbg !10775
  %call = call i32 @prv_makeOperation(%struct.lwm2m_context_t* %2, i16 zeroext %3, %struct.lwm2m_uri_t* %4, i32 2, i32 %5, i8* %6, i32 %7, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %8, i8* %9), !dbg !10776
  store i32 %call, i32* %retval, align 4, !dbg !10777
  br label %return, !dbg !10777

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10778
  ret i32 %10, !dbg !10778
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_create(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, i32 %format, i8* %buffer, i32 %length, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10779 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %format.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10780, metadata !1190), !dbg !10781
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10782, metadata !1190), !dbg !10783
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10784, metadata !1190), !dbg !10785
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !10786, metadata !1190), !dbg !10787
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10788, metadata !1190), !dbg !10789
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10790, metadata !1190), !dbg !10791
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10792, metadata !1190), !dbg !10793
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10794, metadata !1190), !dbg !10795
  %0 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10796
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %0, i32 0, i32 0, !dbg !10796
  %1 = load i8, i8* %flag, align 2, !dbg !10796
  %conv = zext i8 %1 to i32, !dbg !10796
  %and = and i32 %conv, 2, !dbg !10796
  %cmp = icmp ne i32 %and, 0, !dbg !10796
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10798

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %length.addr, align 4, !dbg !10799
  %cmp2 = icmp eq i32 %2, 0, !dbg !10800
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10801

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 128, i32* %retval, align 4, !dbg !10802
  br label %return, !dbg !10802

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10804
  %4 = load i16, i16* %clientID.addr, align 2, !dbg !10805
  %5 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10806
  %6 = load i32, i32* %format.addr, align 4, !dbg !10807
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !10808
  %8 = load i32, i32* %length.addr, align 4, !dbg !10809
  %9 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10810
  %10 = load i8*, i8** %userData.addr, align 8, !dbg !10811
  %call = call i32 @prv_makeOperation(%struct.lwm2m_context_t* %3, i16 zeroext %4, %struct.lwm2m_uri_t* %5, i32 2, i32 %6, i8* %7, i32 %8, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %9, i8* %10), !dbg !10812
  store i32 %call, i32* %retval, align 4, !dbg !10813
  br label %return, !dbg !10813

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10814
  ret i32 %11, !dbg !10814
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_delete(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10815 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10816, metadata !1190), !dbg !10817
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10818, metadata !1190), !dbg !10819
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10820, metadata !1190), !dbg !10821
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10822, metadata !1190), !dbg !10823
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10824, metadata !1190), !dbg !10825
  %0 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10826
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %0, i32 0, i32 0, !dbg !10826
  %1 = load i8, i8* %flag, align 2, !dbg !10826
  %conv = zext i8 %1 to i32, !dbg !10826
  %and = and i32 %conv, 2, !dbg !10826
  %cmp = icmp ne i32 %and, 0, !dbg !10826
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !10828

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10829
  %flag2 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %2, i32 0, i32 0, !dbg !10829
  %3 = load i8, i8* %flag2, align 2, !dbg !10829
  %conv3 = zext i8 %3 to i32, !dbg !10829
  %and4 = and i32 %conv3, 1, !dbg !10829
  %cmp5 = icmp ne i32 %and4, 0, !dbg !10829
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10830

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 128, i32* %retval, align 4, !dbg !10831
  br label %return, !dbg !10831

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10833
  %5 = load i16, i16* %clientID.addr, align 2, !dbg !10834
  %6 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10835
  %7 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10836
  %8 = load i8*, i8** %userData.addr, align 8, !dbg !10837
  %call = call i32 @prv_makeOperation(%struct.lwm2m_context_t* %4, i16 zeroext %5, %struct.lwm2m_uri_t* %6, i32 4, i32 0, i8* null, i32 0, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %7, i8* %8), !dbg !10838
  store i32 %call, i32* %retval, align 4, !dbg !10839
  br label %return, !dbg !10839

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10840
  ret i32 %9, !dbg !10840
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_write_attributes(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_attributes_t* %attrP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !10841 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %attrP.addr = alloca %struct.lwm2m_attributes_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %transaction = alloca %struct._lwm2m_transaction_*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %buffer = alloca [32 x i8], align 16
  %length = alloca i64, align 8
  %dataP = alloca %struct.dm_data_t*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !10855, metadata !1190), !dbg !10856
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !10857, metadata !1190), !dbg !10858
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !10859, metadata !1190), !dbg !10860
  store %struct.lwm2m_attributes_t* %attrP, %struct.lwm2m_attributes_t** %attrP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_attributes_t** %attrP.addr, metadata !10861, metadata !1190), !dbg !10862
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !10863, metadata !1190), !dbg !10864
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10865, metadata !1190), !dbg !10866
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !10867, metadata !1190), !dbg !10868
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transaction, metadata !10869, metadata !1190), !dbg !10870
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !10871, metadata !1190), !dbg !10872
  call void @llvm.dbg.declare(metadata [32 x i8]* %buffer, metadata !10873, metadata !1190), !dbg !10874
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10875, metadata !1190), !dbg !10876
  %0 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10877
  %cmp = icmp eq %struct.lwm2m_attributes_t* %0, null, !dbg !10879
  br i1 %cmp, label %if.then, label %if.end, !dbg !10880

if.then:                                          ; preds = %entry
  store i32 128, i32* %retval, align 4, !dbg !10881
  br label %return, !dbg !10881

if.end:                                           ; preds = %entry
  %1 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10882
  %toSet = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %1, i32 0, i32 0, !dbg !10884
  %2 = load i8, i8* %toSet, align 8, !dbg !10884
  %conv = zext i8 %2 to i32, !dbg !10882
  %3 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10885
  %toClear = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %3, i32 0, i32 1, !dbg !10886
  %4 = load i8, i8* %toClear, align 1, !dbg !10886
  %conv1 = zext i8 %4 to i32, !dbg !10885
  %and = and i32 %conv, %conv1, !dbg !10887
  %cmp2 = icmp ne i32 0, %and, !dbg !10888
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10889

if.then4:                                         ; preds = %if.end
  store i32 128, i32* %retval, align 4, !dbg !10890
  br label %return, !dbg !10890

if.end5:                                          ; preds = %if.end
  %5 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10891
  %toSet6 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %5, i32 0, i32 0, !dbg !10893
  %6 = load i8, i8* %toSet6, align 8, !dbg !10893
  %conv7 = zext i8 %6 to i32, !dbg !10891
  %and8 = and i32 %conv7, 28, !dbg !10894
  %cmp9 = icmp ne i32 0, %and8, !dbg !10895
  br i1 %cmp9, label %land.lhs.true, label %if.end16, !dbg !10896

land.lhs.true:                                    ; preds = %if.end5
  %7 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10897
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %7, i32 0, i32 0, !dbg !10897
  %8 = load i8, i8* %flag, align 2, !dbg !10897
  %conv11 = zext i8 %8 to i32, !dbg !10897
  %and12 = and i32 %conv11, 1, !dbg !10897
  %cmp13 = icmp ne i32 %and12, 0, !dbg !10897
  br i1 %cmp13, label %if.end16, label %if.then15, !dbg !10898

if.then15:                                        ; preds = %land.lhs.true
  store i32 128, i32* %retval, align 4, !dbg !10899
  br label %return, !dbg !10899

if.end16:                                         ; preds = %land.lhs.true, %if.end5
  %9 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10900
  %toSet17 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %9, i32 0, i32 0, !dbg !10902
  %10 = load i8, i8* %toSet17, align 8, !dbg !10902
  %conv18 = zext i8 %10 to i32, !dbg !10900
  %and19 = and i32 %conv18, 28, !dbg !10903
  %cmp20 = icmp eq i32 28, %and19, !dbg !10904
  br i1 %cmp20, label %land.lhs.true22, label %if.end26, !dbg !10905

land.lhs.true22:                                  ; preds = %if.end16
  %11 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10906
  %lessThan = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %11, i32 0, i32 5, !dbg !10907
  %12 = load double, double* %lessThan, align 8, !dbg !10907
  %13 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10908
  %step = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %13, i32 0, i32 6, !dbg !10909
  %14 = load double, double* %step, align 8, !dbg !10909
  %mul = fmul double 2.000000e+00, %14, !dbg !10910
  %add = fadd double %12, %mul, !dbg !10911
  %15 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10912
  %greaterThan = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %15, i32 0, i32 4, !dbg !10913
  %16 = load double, double* %greaterThan, align 8, !dbg !10913
  %cmp23 = fcmp oge double %add, %16, !dbg !10914
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10915

if.then25:                                        ; preds = %land.lhs.true22
  store i32 128, i32* %retval, align 4, !dbg !10916
  br label %return, !dbg !10916

if.end26:                                         ; preds = %land.lhs.true22, %if.end16
  %17 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10917
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %17, i32 0, i32 0, !dbg !10918
  %18 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !10918
  %19 = bitcast %struct._lwm2m_client_* %18 to %struct._lwm2m_list_t*, !dbg !10919
  %20 = load i16, i16* %clientID.addr, align 2, !dbg !10920
  %call = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %19, i16 zeroext %20), !dbg !10921
  %21 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !10922
  store %struct._lwm2m_client_* %21, %struct._lwm2m_client_** %clientP, align 8, !dbg !10923
  %22 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10924
  %cmp27 = icmp eq %struct._lwm2m_client_* %22, null, !dbg !10926
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !10927

if.then29:                                        ; preds = %if.end26
  store i32 132, i32* %retval, align 4, !dbg !10928
  br label %return, !dbg !10928

if.end30:                                         ; preds = %if.end26
  %23 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10929
  %sessionH = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %23, i32 0, i32 9, !dbg !10930
  %24 = load i8*, i8** %sessionH, align 8, !dbg !10930
  %25 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10931
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %25, i32 0, i32 5, !dbg !10932
  %26 = load i8*, i8** %altPath, align 8, !dbg !10932
  %27 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10933
  %28 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !10934
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %28, i32 0, i32 3, !dbg !10935
  %29 = load i16, i16* %nextMID, align 8, !dbg !10936
  %inc = add i16 %29, 1, !dbg !10936
  store i16 %inc, i16* %nextMID, align 8, !dbg !10936
  %call31 = call %struct._lwm2m_transaction_* @transaction_new(i8* %24, i32 3, i8* %26, %struct.lwm2m_uri_t* %27, i16 zeroext %29, i8 zeroext 4, i8* null), !dbg !10937
  store %struct._lwm2m_transaction_* %call31, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10938
  %30 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10939
  %cmp32 = icmp eq %struct._lwm2m_transaction_* %30, null, !dbg !10941
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !10942

if.then34:                                        ; preds = %if.end30
  store i32 160, i32* %retval, align 4, !dbg !10943
  br label %return, !dbg !10943

if.end35:                                         ; preds = %if.end30
  %31 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10944
  %cmp36 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %31, null, !dbg !10946
  br i1 %cmp36, label %if.then38, label %if.end49, !dbg !10947

if.then38:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata %struct.dm_data_t** %dataP, metadata !10948, metadata !1190), !dbg !10950
  %call39 = call i8* @lwm2m_malloc(i64 32), !dbg !10951
  %32 = bitcast i8* %call39 to %struct.dm_data_t*, !dbg !10952
  store %struct.dm_data_t* %32, %struct.dm_data_t** %dataP, align 8, !dbg !10953
  %33 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10954
  %cmp40 = icmp eq %struct.dm_data_t* %33, null, !dbg !10956
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !10957

if.then42:                                        ; preds = %if.then38
  %34 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10958
  call void @transaction_free(%struct._lwm2m_transaction_* %34), !dbg !10960
  store i32 160, i32* %retval, align 4, !dbg !10961
  br label %return, !dbg !10961

if.end43:                                         ; preds = %if.then38
  %35 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10962
  %uri = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %35, i32 0, i32 1, !dbg !10963
  %36 = bitcast %struct.lwm2m_uri_t* %uri to i8*, !dbg !10964
  %37 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !10965
  %38 = bitcast %struct.lwm2m_uri_t* %37 to i8*, !dbg !10964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %38, i64 8, i32 2, i1 false), !dbg !10964
  %39 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !10966
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %39, i32 0, i32 1, !dbg !10967
  %40 = load i16, i16* %internalID, align 8, !dbg !10967
  %41 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10968
  %clientID44 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %41, i32 0, i32 0, !dbg !10969
  store i16 %40, i16* %clientID44, align 8, !dbg !10970
  %42 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !10971
  %43 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10972
  %callback45 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %43, i32 0, i32 2, !dbg !10973
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %42, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback45, align 8, !dbg !10974
  %44 = load i8*, i8** %userData.addr, align 8, !dbg !10975
  %45 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10976
  %userData46 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %45, i32 0, i32 3, !dbg !10977
  store i8* %44, i8** %userData46, align 8, !dbg !10978
  %46 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10979
  %callback47 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %46, i32 0, i32 10, !dbg !10980
  store void (%struct._lwm2m_transaction_*, i8*)* @prv_resultCallback, void (%struct._lwm2m_transaction_*, i8*)** %callback47, align 8, !dbg !10981
  %47 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !10982
  %48 = bitcast %struct.dm_data_t* %47 to i8*, !dbg !10983
  %49 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10984
  %userData48 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %49, i32 0, i32 11, !dbg !10985
  store i8* %48, i8** %userData48, align 8, !dbg !10986
  br label %if.end49, !dbg !10987

if.end49:                                         ; preds = %if.end43, %if.end35
  %50 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !10988
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %50, i32 0, i32 7, !dbg !10989
  %51 = load i8*, i8** %message, align 8, !dbg !10989
  %52 = bitcast i8* %51 to %struct.coap_packet_t*, !dbg !10990
  store %struct.coap_packet_t* %52, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !10991
  %53 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !10992
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %53, i32 0, i32 35, !dbg !10993
  %54 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_query, align 8, !dbg !10993
  call void @free_multi_option(%struct._multi_option_t* %54), !dbg !10994
  %55 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !10995
  %toSet50 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %55, i32 0, i32 0, !dbg !10997
  %56 = load i8, i8* %toSet50, align 8, !dbg !10997
  %conv51 = zext i8 %56 to i32, !dbg !10995
  %and52 = and i32 %conv51, 1, !dbg !10998
  %tobool = icmp ne i32 %and52, 0, !dbg !10998
  br i1 %tobool, label %if.then53, label %if.end66, !dbg !10999

if.then53:                                        ; preds = %if.end49
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), i64 5, i32 1, i1 false), !dbg !11000
  %57 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11002
  %minPeriod = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %57, i32 0, i32 2, !dbg !11003
  %58 = load i32, i32* %minPeriod, align 4, !dbg !11003
  %conv54 = zext i32 %58 to i64, !dbg !11002
  %arraydecay55 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11004
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay55, i64 5, !dbg !11005
  %call56 = call i64 @utils_intToText(i64 %conv54, i8* %add.ptr, i64 27), !dbg !11006
  store i64 %call56, i64* %length, align 8, !dbg !11007
  %59 = load i64, i64* %length, align 8, !dbg !11008
  %cmp57 = icmp eq i64 %59, 0, !dbg !11010
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !11011

if.then59:                                        ; preds = %if.then53
  %60 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11012
  call void @transaction_free(%struct._lwm2m_transaction_* %60), !dbg !11014
  store i32 160, i32* %retval, align 4, !dbg !11015
  br label %return, !dbg !11015

if.end60:                                         ; preds = %if.then53
  %61 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11016
  %uri_query61 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %61, i32 0, i32 35, !dbg !11017
  %arraydecay62 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11018
  %62 = load i64, i64* %length, align 8, !dbg !11019
  %add63 = add i64 5, %62, !dbg !11020
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query61, i8* %arraydecay62, i64 %add63, i8 zeroext 0), !dbg !11021
  %63 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11022
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %63, i32 0, i32 5, !dbg !11022
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !11022
  %64 = load i8, i8* %arrayidx, align 1, !dbg !11022
  %conv64 = zext i8 %64 to i32, !dbg !11022
  %or = or i32 %conv64, 128, !dbg !11022
  %conv65 = trunc i32 %or to i8, !dbg !11022
  store i8 %conv65, i8* %arrayidx, align 1, !dbg !11022
  br label %if.end66, !dbg !11026

if.end66:                                         ; preds = %if.end60, %if.end49
  %65 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11027
  %toSet67 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %65, i32 0, i32 0, !dbg !11029
  %66 = load i8, i8* %toSet67, align 8, !dbg !11029
  %conv68 = zext i8 %66 to i32, !dbg !11027
  %and69 = and i32 %conv68, 2, !dbg !11030
  %tobool70 = icmp ne i32 %and69, 0, !dbg !11030
  br i1 %tobool70, label %if.then71, label %if.end89, !dbg !11031

if.then71:                                        ; preds = %if.end66
  %arraydecay72 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay72, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.147, i32 0, i32 0), i64 5, i32 1, i1 false), !dbg !11032
  %67 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11034
  %maxPeriod = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %67, i32 0, i32 3, !dbg !11035
  %68 = load i32, i32* %maxPeriod, align 8, !dbg !11035
  %conv73 = zext i32 %68 to i64, !dbg !11034
  %arraydecay74 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11036
  %add.ptr75 = getelementptr inbounds i8, i8* %arraydecay74, i64 5, !dbg !11037
  %call76 = call i64 @utils_intToText(i64 %conv73, i8* %add.ptr75, i64 27), !dbg !11038
  store i64 %call76, i64* %length, align 8, !dbg !11039
  %69 = load i64, i64* %length, align 8, !dbg !11040
  %cmp77 = icmp eq i64 %69, 0, !dbg !11042
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !11043

if.then79:                                        ; preds = %if.then71
  %70 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11044
  call void @transaction_free(%struct._lwm2m_transaction_* %70), !dbg !11046
  store i32 160, i32* %retval, align 4, !dbg !11047
  br label %return, !dbg !11047

if.end80:                                         ; preds = %if.then71
  %71 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11048
  %uri_query81 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %71, i32 0, i32 35, !dbg !11049
  %arraydecay82 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11050
  %72 = load i64, i64* %length, align 8, !dbg !11051
  %add83 = add i64 5, %72, !dbg !11052
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query81, i8* %arraydecay82, i64 %add83, i8 zeroext 0), !dbg !11053
  %73 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11054
  %options84 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %73, i32 0, i32 5, !dbg !11054
  %arrayidx85 = getelementptr inbounds [5 x i8], [5 x i8]* %options84, i64 0, i64 1, !dbg !11054
  %74 = load i8, i8* %arrayidx85, align 1, !dbg !11054
  %conv86 = zext i8 %74 to i32, !dbg !11054
  %or87 = or i32 %conv86, 128, !dbg !11054
  %conv88 = trunc i32 %or87 to i8, !dbg !11054
  store i8 %conv88, i8* %arrayidx85, align 1, !dbg !11054
  br label %if.end89, !dbg !11058

if.end89:                                         ; preds = %if.end80, %if.end66
  %75 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11059
  %toSet90 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %75, i32 0, i32 0, !dbg !11061
  %76 = load i8, i8* %toSet90, align 8, !dbg !11061
  %conv91 = zext i8 %76 to i32, !dbg !11059
  %and92 = and i32 %conv91, 4, !dbg !11062
  %tobool93 = icmp ne i32 %and92, 0, !dbg !11062
  br i1 %tobool93, label %if.then94, label %if.end112, !dbg !11063

if.then94:                                        ; preds = %if.end89
  %arraydecay95 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11064
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.148, i32 0, i32 0), i64 3, i32 1, i1 false), !dbg !11064
  %77 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11066
  %greaterThan96 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %77, i32 0, i32 4, !dbg !11067
  %78 = load double, double* %greaterThan96, align 8, !dbg !11067
  %arraydecay97 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11068
  %add.ptr98 = getelementptr inbounds i8, i8* %arraydecay97, i64 3, !dbg !11069
  %call99 = call i64 @utils_floatToText(double %78, i8* %add.ptr98, i64 29), !dbg !11070
  store i64 %call99, i64* %length, align 8, !dbg !11071
  %79 = load i64, i64* %length, align 8, !dbg !11072
  %cmp100 = icmp eq i64 %79, 0, !dbg !11074
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !11075

if.then102:                                       ; preds = %if.then94
  %80 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11076
  call void @transaction_free(%struct._lwm2m_transaction_* %80), !dbg !11078
  store i32 160, i32* %retval, align 4, !dbg !11079
  br label %return, !dbg !11079

if.end103:                                        ; preds = %if.then94
  %81 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11080
  %uri_query104 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %81, i32 0, i32 35, !dbg !11081
  %arraydecay105 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11082
  %82 = load i64, i64* %length, align 8, !dbg !11083
  %add106 = add i64 3, %82, !dbg !11084
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query104, i8* %arraydecay105, i64 %add106, i8 zeroext 0), !dbg !11085
  %83 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11086
  %options107 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %83, i32 0, i32 5, !dbg !11086
  %arrayidx108 = getelementptr inbounds [5 x i8], [5 x i8]* %options107, i64 0, i64 1, !dbg !11086
  %84 = load i8, i8* %arrayidx108, align 1, !dbg !11086
  %conv109 = zext i8 %84 to i32, !dbg !11086
  %or110 = or i32 %conv109, 128, !dbg !11086
  %conv111 = trunc i32 %or110 to i8, !dbg !11086
  store i8 %conv111, i8* %arrayidx108, align 1, !dbg !11086
  br label %if.end112, !dbg !11090

if.end112:                                        ; preds = %if.end103, %if.end89
  %85 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11091
  %toSet113 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %85, i32 0, i32 0, !dbg !11093
  %86 = load i8, i8* %toSet113, align 8, !dbg !11093
  %conv114 = zext i8 %86 to i32, !dbg !11091
  %and115 = and i32 %conv114, 8, !dbg !11094
  %tobool116 = icmp ne i32 %and115, 0, !dbg !11094
  br i1 %tobool116, label %if.then117, label %if.end135, !dbg !11095

if.then117:                                       ; preds = %if.end112
  %arraydecay118 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.149, i32 0, i32 0), i64 3, i32 1, i1 false), !dbg !11096
  %87 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11098
  %lessThan119 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %87, i32 0, i32 5, !dbg !11099
  %88 = load double, double* %lessThan119, align 8, !dbg !11099
  %arraydecay120 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11100
  %add.ptr121 = getelementptr inbounds i8, i8* %arraydecay120, i64 3, !dbg !11101
  %call122 = call i64 @utils_floatToText(double %88, i8* %add.ptr121, i64 29), !dbg !11102
  store i64 %call122, i64* %length, align 8, !dbg !11103
  %89 = load i64, i64* %length, align 8, !dbg !11104
  %cmp123 = icmp eq i64 %89, 0, !dbg !11106
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !11107

if.then125:                                       ; preds = %if.then117
  %90 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11108
  call void @transaction_free(%struct._lwm2m_transaction_* %90), !dbg !11110
  store i32 160, i32* %retval, align 4, !dbg !11111
  br label %return, !dbg !11111

if.end126:                                        ; preds = %if.then117
  %91 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11112
  %uri_query127 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %91, i32 0, i32 35, !dbg !11113
  %arraydecay128 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11114
  %92 = load i64, i64* %length, align 8, !dbg !11115
  %add129 = add i64 3, %92, !dbg !11116
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query127, i8* %arraydecay128, i64 %add129, i8 zeroext 0), !dbg !11117
  %93 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11118
  %options130 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %93, i32 0, i32 5, !dbg !11118
  %arrayidx131 = getelementptr inbounds [5 x i8], [5 x i8]* %options130, i64 0, i64 1, !dbg !11118
  %94 = load i8, i8* %arrayidx131, align 1, !dbg !11118
  %conv132 = zext i8 %94 to i32, !dbg !11118
  %or133 = or i32 %conv132, 128, !dbg !11118
  %conv134 = trunc i32 %or133 to i8, !dbg !11118
  store i8 %conv134, i8* %arrayidx131, align 1, !dbg !11118
  br label %if.end135, !dbg !11122

if.end135:                                        ; preds = %if.end126, %if.end112
  %95 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11123
  %toSet136 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %95, i32 0, i32 0, !dbg !11125
  %96 = load i8, i8* %toSet136, align 8, !dbg !11125
  %conv137 = zext i8 %96 to i32, !dbg !11123
  %and138 = and i32 %conv137, 16, !dbg !11126
  %tobool139 = icmp ne i32 %and138, 0, !dbg !11126
  br i1 %tobool139, label %if.then140, label %if.end158, !dbg !11127

if.then140:                                       ; preds = %if.end135
  %arraydecay141 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.150, i32 0, i32 0), i64 3, i32 1, i1 false), !dbg !11128
  %97 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11130
  %step142 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %97, i32 0, i32 6, !dbg !11131
  %98 = load double, double* %step142, align 8, !dbg !11131
  %arraydecay143 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11132
  %add.ptr144 = getelementptr inbounds i8, i8* %arraydecay143, i64 3, !dbg !11133
  %call145 = call i64 @utils_floatToText(double %98, i8* %add.ptr144, i64 29), !dbg !11134
  store i64 %call145, i64* %length, align 8, !dbg !11135
  %99 = load i64, i64* %length, align 8, !dbg !11136
  %cmp146 = icmp eq i64 %99, 0, !dbg !11138
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !11139

if.then148:                                       ; preds = %if.then140
  %100 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11140
  call void @transaction_free(%struct._lwm2m_transaction_* %100), !dbg !11142
  store i32 160, i32* %retval, align 4, !dbg !11143
  br label %return, !dbg !11143

if.end149:                                        ; preds = %if.then140
  %101 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11144
  %uri_query150 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %101, i32 0, i32 35, !dbg !11145
  %arraydecay151 = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i32 0, i32 0, !dbg !11146
  %102 = load i64, i64* %length, align 8, !dbg !11147
  %add152 = add i64 3, %102, !dbg !11148
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query150, i8* %arraydecay151, i64 %add152, i8 zeroext 0), !dbg !11149
  %103 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11150
  %options153 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %103, i32 0, i32 5, !dbg !11150
  %arrayidx154 = getelementptr inbounds [5 x i8], [5 x i8]* %options153, i64 0, i64 1, !dbg !11150
  %104 = load i8, i8* %arrayidx154, align 1, !dbg !11150
  %conv155 = zext i8 %104 to i32, !dbg !11150
  %or156 = or i32 %conv155, 128, !dbg !11150
  %conv157 = trunc i32 %or156 to i8, !dbg !11150
  store i8 %conv157, i8* %arrayidx154, align 1, !dbg !11150
  br label %if.end158, !dbg !11154

if.end158:                                        ; preds = %if.end149, %if.end135
  %105 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11155
  %toClear159 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %105, i32 0, i32 1, !dbg !11157
  %106 = load i8, i8* %toClear159, align 1, !dbg !11157
  %conv160 = zext i8 %106 to i32, !dbg !11155
  %and161 = and i32 %conv160, 1, !dbg !11158
  %tobool162 = icmp ne i32 %and161, 0, !dbg !11158
  br i1 %tobool162, label %if.then163, label %if.end170, !dbg !11159

if.then163:                                       ; preds = %if.end158
  %107 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11160
  %uri_query164 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %107, i32 0, i32 35, !dbg !11162
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query164, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), i64 4, i8 zeroext 0), !dbg !11163
  %108 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11164
  %options165 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %108, i32 0, i32 5, !dbg !11164
  %arrayidx166 = getelementptr inbounds [5 x i8], [5 x i8]* %options165, i64 0, i64 1, !dbg !11164
  %109 = load i8, i8* %arrayidx166, align 1, !dbg !11164
  %conv167 = zext i8 %109 to i32, !dbg !11164
  %or168 = or i32 %conv167, 128, !dbg !11164
  %conv169 = trunc i32 %or168 to i8, !dbg !11164
  store i8 %conv169, i8* %arrayidx166, align 1, !dbg !11164
  br label %if.end170, !dbg !11168

if.end170:                                        ; preds = %if.then163, %if.end158
  %110 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11169
  %toClear171 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %110, i32 0, i32 1, !dbg !11171
  %111 = load i8, i8* %toClear171, align 1, !dbg !11171
  %conv172 = zext i8 %111 to i32, !dbg !11169
  %and173 = and i32 %conv172, 2, !dbg !11172
  %tobool174 = icmp ne i32 %and173, 0, !dbg !11172
  br i1 %tobool174, label %if.then175, label %if.end182, !dbg !11173

if.then175:                                       ; preds = %if.end170
  %112 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11174
  %uri_query176 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %112, i32 0, i32 35, !dbg !11176
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query176, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.147, i32 0, i32 0), i64 4, i8 zeroext 0), !dbg !11177
  %113 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11178
  %options177 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %113, i32 0, i32 5, !dbg !11178
  %arrayidx178 = getelementptr inbounds [5 x i8], [5 x i8]* %options177, i64 0, i64 1, !dbg !11178
  %114 = load i8, i8* %arrayidx178, align 1, !dbg !11178
  %conv179 = zext i8 %114 to i32, !dbg !11178
  %or180 = or i32 %conv179, 128, !dbg !11178
  %conv181 = trunc i32 %or180 to i8, !dbg !11178
  store i8 %conv181, i8* %arrayidx178, align 1, !dbg !11178
  br label %if.end182, !dbg !11182

if.end182:                                        ; preds = %if.then175, %if.end170
  %115 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11183
  %toClear183 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %115, i32 0, i32 1, !dbg !11185
  %116 = load i8, i8* %toClear183, align 1, !dbg !11185
  %conv184 = zext i8 %116 to i32, !dbg !11183
  %and185 = and i32 %conv184, 4, !dbg !11186
  %tobool186 = icmp ne i32 %and185, 0, !dbg !11186
  br i1 %tobool186, label %if.then187, label %if.end194, !dbg !11187

if.then187:                                       ; preds = %if.end182
  %117 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11188
  %uri_query188 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %117, i32 0, i32 35, !dbg !11190
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query188, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.148, i32 0, i32 0), i64 2, i8 zeroext 0), !dbg !11191
  %118 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11192
  %options189 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %118, i32 0, i32 5, !dbg !11192
  %arrayidx190 = getelementptr inbounds [5 x i8], [5 x i8]* %options189, i64 0, i64 1, !dbg !11192
  %119 = load i8, i8* %arrayidx190, align 1, !dbg !11192
  %conv191 = zext i8 %119 to i32, !dbg !11192
  %or192 = or i32 %conv191, 128, !dbg !11192
  %conv193 = trunc i32 %or192 to i8, !dbg !11192
  store i8 %conv193, i8* %arrayidx190, align 1, !dbg !11192
  br label %if.end194, !dbg !11196

if.end194:                                        ; preds = %if.then187, %if.end182
  %120 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11197
  %toClear195 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %120, i32 0, i32 1, !dbg !11199
  %121 = load i8, i8* %toClear195, align 1, !dbg !11199
  %conv196 = zext i8 %121 to i32, !dbg !11197
  %and197 = and i32 %conv196, 8, !dbg !11200
  %tobool198 = icmp ne i32 %and197, 0, !dbg !11200
  br i1 %tobool198, label %if.then199, label %if.end206, !dbg !11201

if.then199:                                       ; preds = %if.end194
  %122 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11202
  %uri_query200 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %122, i32 0, i32 35, !dbg !11204
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query200, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.149, i32 0, i32 0), i64 2, i8 zeroext 0), !dbg !11205
  %123 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11206
  %options201 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %123, i32 0, i32 5, !dbg !11206
  %arrayidx202 = getelementptr inbounds [5 x i8], [5 x i8]* %options201, i64 0, i64 1, !dbg !11206
  %124 = load i8, i8* %arrayidx202, align 1, !dbg !11206
  %conv203 = zext i8 %124 to i32, !dbg !11206
  %or204 = or i32 %conv203, 128, !dbg !11206
  %conv205 = trunc i32 %or204 to i8, !dbg !11206
  store i8 %conv205, i8* %arrayidx202, align 1, !dbg !11206
  br label %if.end206, !dbg !11210

if.end206:                                        ; preds = %if.then199, %if.end194
  %125 = load %struct.lwm2m_attributes_t*, %struct.lwm2m_attributes_t** %attrP.addr, align 8, !dbg !11211
  %toClear207 = getelementptr inbounds %struct.lwm2m_attributes_t, %struct.lwm2m_attributes_t* %125, i32 0, i32 1, !dbg !11213
  %126 = load i8, i8* %toClear207, align 1, !dbg !11213
  %conv208 = zext i8 %126 to i32, !dbg !11211
  %and209 = and i32 %conv208, 16, !dbg !11214
  %tobool210 = icmp ne i32 %and209, 0, !dbg !11214
  br i1 %tobool210, label %if.then211, label %if.end218, !dbg !11215

if.then211:                                       ; preds = %if.end206
  %127 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11216
  %uri_query212 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %127, i32 0, i32 35, !dbg !11218
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query212, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.150, i32 0, i32 0), i64 2, i8 zeroext 0), !dbg !11219
  %128 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !11220
  %options213 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %128, i32 0, i32 5, !dbg !11220
  %arrayidx214 = getelementptr inbounds [5 x i8], [5 x i8]* %options213, i64 0, i64 1, !dbg !11220
  %129 = load i8, i8* %arrayidx214, align 1, !dbg !11220
  %conv215 = zext i8 %129 to i32, !dbg !11220
  %or216 = or i32 %conv215, 128, !dbg !11220
  %conv217 = trunc i32 %or216 to i8, !dbg !11220
  store i8 %conv217, i8* %arrayidx214, align 1, !dbg !11220
  br label %if.end218, !dbg !11224

if.end218:                                        ; preds = %if.then211, %if.end206
  %130 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11225
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %130, i32 0, i32 4, !dbg !11225
  %131 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !11225
  %132 = bitcast %struct._lwm2m_transaction_* %131 to %struct._lwm2m_list_t*, !dbg !11225
  %133 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11225
  %134 = bitcast %struct._lwm2m_transaction_* %133 to %struct._lwm2m_list_t*, !dbg !11225
  %call219 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %132, %struct._lwm2m_list_t* %134), !dbg !11225
  %135 = bitcast %struct._lwm2m_list_t* %call219 to %struct._lwm2m_transaction_*, !dbg !11226
  %136 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11227
  %transactionList220 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %136, i32 0, i32 4, !dbg !11228
  store %struct._lwm2m_transaction_* %135, %struct._lwm2m_transaction_** %transactionList220, align 8, !dbg !11229
  %137 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11230
  %138 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11231
  %call221 = call i32 @transaction_send(%struct.lwm2m_context_t* %137, %struct._lwm2m_transaction_* %138), !dbg !11232
  store i32 %call221, i32* %retval, align 4, !dbg !11233
  br label %return, !dbg !11233

return:                                           ; preds = %if.end218, %if.then148, %if.then125, %if.then102, %if.then79, %if.then59, %if.then42, %if.then34, %if.then29, %if.then25, %if.then15, %if.then4, %if.then
  %139 = load i32, i32* %retval, align 4, !dbg !11234
  ret i32 %139, !dbg !11234
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_dm_discover(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !11235 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %transaction = alloca %struct._lwm2m_transaction_*, align 8
  %dataP = alloca %struct.dm_data_t*, align 8
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !11236, metadata !1190), !dbg !11237
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !11238, metadata !1190), !dbg !11239
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !11240, metadata !1190), !dbg !11241
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !11242, metadata !1190), !dbg !11243
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !11244, metadata !1190), !dbg !11245
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !11246, metadata !1190), !dbg !11247
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transaction, metadata !11248, metadata !1190), !dbg !11249
  call void @llvm.dbg.declare(metadata %struct.dm_data_t** %dataP, metadata !11250, metadata !1190), !dbg !11251
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11252
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !11253
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !11253
  %2 = bitcast %struct._lwm2m_client_* %1 to %struct._lwm2m_list_t*, !dbg !11254
  %3 = load i16, i16* %clientID.addr, align 2, !dbg !11255
  %call = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %2, i16 zeroext %3), !dbg !11256
  %4 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !11257
  store %struct._lwm2m_client_* %4, %struct._lwm2m_client_** %clientP, align 8, !dbg !11258
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11259
  %cmp = icmp eq %struct._lwm2m_client_* %5, null, !dbg !11261
  br i1 %cmp, label %if.then, label %if.end, !dbg !11262

if.then:                                          ; preds = %entry
  store i32 132, i32* %retval, align 4, !dbg !11263
  br label %return, !dbg !11263

if.end:                                           ; preds = %entry
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11264
  %sessionH = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %6, i32 0, i32 9, !dbg !11265
  %7 = load i8*, i8** %sessionH, align 8, !dbg !11265
  %8 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11266
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %8, i32 0, i32 5, !dbg !11267
  %9 = load i8*, i8** %altPath, align 8, !dbg !11267
  %10 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11268
  %11 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11269
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %11, i32 0, i32 3, !dbg !11270
  %12 = load i16, i16* %nextMID, align 8, !dbg !11271
  %inc = add i16 %12, 1, !dbg !11271
  store i16 %inc, i16* %nextMID, align 8, !dbg !11271
  %call1 = call %struct._lwm2m_transaction_* @transaction_new(i8* %7, i32 1, i8* %9, %struct.lwm2m_uri_t* %10, i16 zeroext %12, i8 zeroext 4, i8* null), !dbg !11272
  store %struct._lwm2m_transaction_* %call1, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11273
  %13 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11274
  %cmp2 = icmp eq %struct._lwm2m_transaction_* %13, null, !dbg !11276
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11277

if.then3:                                         ; preds = %if.end
  store i32 160, i32* %retval, align 4, !dbg !11278
  br label %return, !dbg !11278

if.end4:                                          ; preds = %if.end
  %14 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11279
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %14, i32 0, i32 7, !dbg !11280
  %15 = load i8*, i8** %message, align 8, !dbg !11280
  %call5 = call i32 @coap_set_header_accept(i8* %15, i16 zeroext 40), !dbg !11281
  %16 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !11282
  %cmp6 = icmp ne void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %16, null, !dbg !11284
  br i1 %cmp6, label %if.then7, label %if.end17, !dbg !11285

if.then7:                                         ; preds = %if.end4
  %call8 = call i8* @lwm2m_malloc(i64 32), !dbg !11286
  %17 = bitcast i8* %call8 to %struct.dm_data_t*, !dbg !11288
  store %struct.dm_data_t* %17, %struct.dm_data_t** %dataP, align 8, !dbg !11289
  %18 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !11290
  %cmp9 = icmp eq %struct.dm_data_t* %18, null, !dbg !11292
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !11293

if.then10:                                        ; preds = %if.then7
  %19 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11294
  call void @transaction_free(%struct._lwm2m_transaction_* %19), !dbg !11296
  store i32 160, i32* %retval, align 4, !dbg !11297
  br label %return, !dbg !11297

if.end11:                                         ; preds = %if.then7
  %20 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !11298
  %uri = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %20, i32 0, i32 1, !dbg !11299
  %21 = bitcast %struct.lwm2m_uri_t* %uri to i8*, !dbg !11300
  %22 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11301
  %23 = bitcast %struct.lwm2m_uri_t* %22 to i8*, !dbg !11300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %23, i64 8, i32 2, i1 false), !dbg !11300
  %24 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11302
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %24, i32 0, i32 1, !dbg !11303
  %25 = load i16, i16* %internalID, align 8, !dbg !11303
  %26 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !11304
  %clientID12 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %26, i32 0, i32 0, !dbg !11305
  store i16 %25, i16* %clientID12, align 8, !dbg !11306
  %27 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !11307
  %28 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !11308
  %callback13 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %28, i32 0, i32 2, !dbg !11309
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %27, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback13, align 8, !dbg !11310
  %29 = load i8*, i8** %userData.addr, align 8, !dbg !11311
  %30 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !11312
  %userData14 = getelementptr inbounds %struct.dm_data_t, %struct.dm_data_t* %30, i32 0, i32 3, !dbg !11313
  store i8* %29, i8** %userData14, align 8, !dbg !11314
  %31 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11315
  %callback15 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %31, i32 0, i32 10, !dbg !11316
  store void (%struct._lwm2m_transaction_*, i8*)* @prv_resultCallback, void (%struct._lwm2m_transaction_*, i8*)** %callback15, align 8, !dbg !11317
  %32 = load %struct.dm_data_t*, %struct.dm_data_t** %dataP, align 8, !dbg !11318
  %33 = bitcast %struct.dm_data_t* %32 to i8*, !dbg !11319
  %34 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11320
  %userData16 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %34, i32 0, i32 11, !dbg !11321
  store i8* %33, i8** %userData16, align 8, !dbg !11322
  br label %if.end17, !dbg !11323

if.end17:                                         ; preds = %if.end11, %if.end4
  %35 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11324
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %35, i32 0, i32 4, !dbg !11324
  %36 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !11324
  %37 = bitcast %struct._lwm2m_transaction_* %36 to %struct._lwm2m_list_t*, !dbg !11324
  %38 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11324
  %39 = bitcast %struct._lwm2m_transaction_* %38 to %struct._lwm2m_list_t*, !dbg !11324
  %call18 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %37, %struct._lwm2m_list_t* %39), !dbg !11324
  %40 = bitcast %struct._lwm2m_list_t* %call18 to %struct._lwm2m_transaction_*, !dbg !11325
  %41 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11326
  %transactionList19 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %41, i32 0, i32 4, !dbg !11327
  store %struct._lwm2m_transaction_* %40, %struct._lwm2m_transaction_** %transactionList19, align 8, !dbg !11328
  %42 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11329
  %43 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transaction, align 8, !dbg !11330
  %call20 = call i32 @transaction_send(%struct.lwm2m_context_t* %42, %struct._lwm2m_transaction_* %43), !dbg !11331
  store i32 %call20, i32* %retval, align 4, !dbg !11332
  br label %return, !dbg !11332

return:                                           ; preds = %if.end17, %if.then10, %if.then3, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !11333
  ret i32 %44, !dbg !11333
}

; Function Attrs: noinline nounwind uwtable
define void @observe_remove(%struct._lwm2m_observation_* %observationP) #0 !dbg !11334 {
entry:
  %observationP.addr = alloca %struct._lwm2m_observation_*, align 8
  store %struct._lwm2m_observation_* %observationP, %struct._lwm2m_observation_** %observationP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %observationP.addr, metadata !11337, metadata !1190), !dbg !11338
  %0 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP.addr, align 8, !dbg !11339
  %clientP = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %0, i32 0, i32 2, !dbg !11339
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11339
  %observationList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %1, i32 0, i32 11, !dbg !11339
  %2 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList, align 8, !dbg !11339
  %3 = bitcast %struct._lwm2m_observation_* %2 to %struct._lwm2m_list_t*, !dbg !11339
  %4 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP.addr, align 8, !dbg !11339
  %id = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %4, i32 0, i32 1, !dbg !11339
  %5 = load i16, i16* %id, align 8, !dbg !11339
  %call = call %struct._lwm2m_list_t* @lwm2m_list_remove(%struct._lwm2m_list_t* %3, i16 zeroext %5, %struct._lwm2m_list_t** null), !dbg !11339
  %6 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_observation_*, !dbg !11340
  %7 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP.addr, align 8, !dbg !11341
  %clientP1 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %7, i32 0, i32 2, !dbg !11342
  %8 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP1, align 8, !dbg !11342
  %observationList2 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %8, i32 0, i32 11, !dbg !11343
  store %struct._lwm2m_observation_* %6, %struct._lwm2m_observation_** %observationList2, align 8, !dbg !11344
  %9 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP.addr, align 8, !dbg !11345
  %10 = bitcast %struct._lwm2m_observation_* %9 to i8*, !dbg !11345
  call void @lwm2m_free(i8* %10), !dbg !11346
  ret void, !dbg !11347
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_observe(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !11348 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %transactionP = alloca %struct._lwm2m_transaction_*, align 8
  %observationP = alloca %struct._lwm2m_observation_*, align 8
  %token = alloca [4 x i8], align 1
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !11361, metadata !1190), !dbg !11362
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !11363, metadata !1190), !dbg !11364
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !11365, metadata !1190), !dbg !11366
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !11367, metadata !1190), !dbg !11368
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !11369, metadata !1190), !dbg !11370
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !11371, metadata !1190), !dbg !11372
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transactionP, metadata !11373, metadata !1190), !dbg !11374
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %observationP, metadata !11375, metadata !1190), !dbg !11376
  call void @llvm.dbg.declare(metadata [4 x i8]* %token, metadata !11377, metadata !1190), !dbg !11378
  %0 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11379
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %0, i32 0, i32 0, !dbg !11379
  %1 = load i8, i8* %flag, align 2, !dbg !11379
  %conv = zext i8 %1 to i32, !dbg !11379
  %and = and i32 %conv, 2, !dbg !11379
  %cmp = icmp ne i32 %and, 0, !dbg !11379
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11381

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11382
  %flag2 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %2, i32 0, i32 0, !dbg !11382
  %3 = load i8, i8* %flag2, align 2, !dbg !11382
  %conv3 = zext i8 %3 to i32, !dbg !11382
  %and4 = and i32 %conv3, 1, !dbg !11382
  %cmp5 = icmp ne i32 %and4, 0, !dbg !11382
  br i1 %cmp5, label %if.then, label %if.end, !dbg !11383

if.then:                                          ; preds = %land.lhs.true
  store i32 128, i32* %retval, align 4, !dbg !11384
  br label %return, !dbg !11384

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11385
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %4, i32 0, i32 0, !dbg !11386
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !11386
  %6 = bitcast %struct._lwm2m_client_* %5 to %struct._lwm2m_list_t*, !dbg !11387
  %7 = load i16, i16* %clientID.addr, align 2, !dbg !11388
  %call = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %6, i16 zeroext %7), !dbg !11389
  %8 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !11390
  store %struct._lwm2m_client_* %8, %struct._lwm2m_client_** %clientP, align 8, !dbg !11391
  %9 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11392
  %cmp7 = icmp eq %struct._lwm2m_client_* %9, null, !dbg !11394
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !11395

if.then9:                                         ; preds = %if.end
  store i32 132, i32* %retval, align 4, !dbg !11396
  br label %return, !dbg !11396

if.end10:                                         ; preds = %if.end
  %10 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11397
  %observationList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %10, i32 0, i32 11, !dbg !11399
  %11 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList, align 8, !dbg !11399
  store %struct._lwm2m_observation_* %11, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11400
  br label %for.cond, !dbg !11401

for.cond:                                         ; preds = %for.inc, %if.end10
  %12 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11402
  %cmp11 = icmp ne %struct._lwm2m_observation_* %12, null, !dbg !11404
  br i1 %cmp11, label %for.body, label %for.end, !dbg !11405

for.body:                                         ; preds = %for.cond
  %13 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11406
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %13, i32 0, i32 1, !dbg !11409
  %14 = load i16, i16* %objectId, align 2, !dbg !11409
  %conv13 = zext i16 %14 to i32, !dbg !11406
  %15 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11410
  %uri = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %15, i32 0, i32 3, !dbg !11411
  %objectId14 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri, i32 0, i32 1, !dbg !11412
  %16 = load i16, i16* %objectId14, align 2, !dbg !11412
  %conv15 = zext i16 %16 to i32, !dbg !11410
  %cmp16 = icmp eq i32 %conv13, %conv15, !dbg !11413
  br i1 %cmp16, label %land.lhs.true18, label %if.end48, !dbg !11414

land.lhs.true18:                                  ; preds = %for.body
  %17 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11415
  %flag19 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %17, i32 0, i32 0, !dbg !11415
  %18 = load i8, i8* %flag19, align 2, !dbg !11415
  %conv20 = zext i8 %18 to i32, !dbg !11415
  %and21 = and i32 %conv20, 2, !dbg !11415
  %cmp22 = icmp ne i32 %and21, 0, !dbg !11415
  %conv23 = zext i1 %cmp22 to i32, !dbg !11415
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !11416
  br i1 %cmp24, label %land.lhs.true32, label %lor.lhs.false, !dbg !11417

lor.lhs.false:                                    ; preds = %land.lhs.true18
  %19 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11418
  %uri26 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %19, i32 0, i32 3, !dbg !11419
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri26, i32 0, i32 2, !dbg !11420
  %20 = load i16, i16* %instanceId, align 4, !dbg !11420
  %conv27 = zext i16 %20 to i32, !dbg !11418
  %21 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11421
  %instanceId28 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %21, i32 0, i32 2, !dbg !11422
  %22 = load i16, i16* %instanceId28, align 2, !dbg !11422
  %conv29 = zext i16 %22 to i32, !dbg !11421
  %cmp30 = icmp eq i32 %conv27, %conv29, !dbg !11423
  br i1 %cmp30, label %land.lhs.true32, label %if.end48, !dbg !11424

land.lhs.true32:                                  ; preds = %lor.lhs.false, %land.lhs.true18
  %23 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11425
  %flag33 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %23, i32 0, i32 0, !dbg !11425
  %24 = load i8, i8* %flag33, align 2, !dbg !11425
  %conv34 = zext i8 %24 to i32, !dbg !11425
  %and35 = and i32 %conv34, 1, !dbg !11425
  %cmp36 = icmp ne i32 %and35, 0, !dbg !11425
  %conv37 = zext i1 %cmp36 to i32, !dbg !11425
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !11426
  br i1 %cmp38, label %if.then47, label %lor.lhs.false40, !dbg !11427

lor.lhs.false40:                                  ; preds = %land.lhs.true32
  %25 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11428
  %uri41 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %25, i32 0, i32 3, !dbg !11429
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri41, i32 0, i32 3, !dbg !11430
  %26 = load i16, i16* %resourceId, align 2, !dbg !11430
  %conv42 = zext i16 %26 to i32, !dbg !11428
  %27 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11431
  %resourceId43 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %27, i32 0, i32 3, !dbg !11432
  %28 = load i16, i16* %resourceId43, align 2, !dbg !11432
  %conv44 = zext i16 %28 to i32, !dbg !11431
  %cmp45 = icmp eq i32 %conv42, %conv44, !dbg !11433
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !11434

if.then47:                                        ; preds = %lor.lhs.false40, %land.lhs.true32
  br label %for.end, !dbg !11435

if.end48:                                         ; preds = %lor.lhs.false40, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !11437

for.inc:                                          ; preds = %if.end48
  %29 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11438
  %next = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %29, i32 0, i32 0, !dbg !11439
  %30 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %next, align 8, !dbg !11439
  store %struct._lwm2m_observation_* %30, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11440
  br label %for.cond, !dbg !11441, !llvm.loop !11442

for.end:                                          ; preds = %if.then47, %for.cond
  %31 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11444
  %cmp49 = icmp eq %struct._lwm2m_observation_* %31, null, !dbg !11446
  br i1 %cmp49, label %if.then51, label %if.end66, !dbg !11447

if.then51:                                        ; preds = %for.end
  %call52 = call i8* @lwm2m_malloc(i64 56), !dbg !11448
  %32 = bitcast i8* %call52 to %struct._lwm2m_observation_*, !dbg !11450
  store %struct._lwm2m_observation_* %32, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11451
  %33 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11452
  %cmp53 = icmp eq %struct._lwm2m_observation_* %33, null, !dbg !11454
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !11455

if.then55:                                        ; preds = %if.then51
  store i32 160, i32* %retval, align 4, !dbg !11456
  br label %return, !dbg !11456

if.end56:                                         ; preds = %if.then51
  %34 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11457
  %35 = bitcast %struct._lwm2m_observation_* %34 to i8*, !dbg !11458
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 56, i32 8, i1 false), !dbg !11458
  %36 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11459
  %observationList57 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %36, i32 0, i32 11, !dbg !11460
  %37 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList57, align 8, !dbg !11460
  %38 = bitcast %struct._lwm2m_observation_* %37 to %struct._lwm2m_list_t*, !dbg !11461
  %call58 = call zeroext i16 @lwm2m_list_newId(%struct._lwm2m_list_t* %38), !dbg !11462
  %39 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11463
  %id = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %39, i32 0, i32 1, !dbg !11464
  store i16 %call58, i16* %id, align 8, !dbg !11465
  %40 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11466
  %uri59 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %40, i32 0, i32 3, !dbg !11467
  %41 = bitcast %struct.lwm2m_uri_t* %uri59 to i8*, !dbg !11468
  %42 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11469
  %43 = bitcast %struct.lwm2m_uri_t* %42 to i8*, !dbg !11468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %43, i64 8, i32 2, i1 false), !dbg !11468
  %44 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11470
  %45 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11471
  %clientP60 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %45, i32 0, i32 2, !dbg !11472
  store %struct._lwm2m_client_* %44, %struct._lwm2m_client_** %clientP60, align 8, !dbg !11473
  %46 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11474
  %clientP61 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %46, i32 0, i32 2, !dbg !11474
  %47 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP61, align 8, !dbg !11474
  %observationList62 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %47, i32 0, i32 11, !dbg !11474
  %48 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList62, align 8, !dbg !11474
  %49 = bitcast %struct._lwm2m_observation_* %48 to %struct._lwm2m_list_t*, !dbg !11474
  %50 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11474
  %51 = bitcast %struct._lwm2m_observation_* %50 to %struct._lwm2m_list_t*, !dbg !11474
  %call63 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %49, %struct._lwm2m_list_t* %51), !dbg !11474
  %52 = bitcast %struct._lwm2m_list_t* %call63 to %struct._lwm2m_observation_*, !dbg !11475
  %53 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11476
  %clientP64 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %53, i32 0, i32 2, !dbg !11477
  %54 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP64, align 8, !dbg !11477
  %observationList65 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %54, i32 0, i32 11, !dbg !11478
  store %struct._lwm2m_observation_* %52, %struct._lwm2m_observation_** %observationList65, align 8, !dbg !11479
  br label %if.end66, !dbg !11480

if.end66:                                         ; preds = %if.end56, %for.end
  %55 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11481
  %status = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %55, i32 0, i32 4, !dbg !11482
  store i32 1, i32* %status, align 8, !dbg !11483
  %56 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !11484
  %57 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11485
  %callback67 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %57, i32 0, i32 5, !dbg !11486
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %56, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback67, align 8, !dbg !11487
  %58 = load i8*, i8** %userData.addr, align 8, !dbg !11488
  %59 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11489
  %userData68 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %59, i32 0, i32 6, !dbg !11490
  store i8* %58, i8** %userData68, align 8, !dbg !11491
  %60 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11492
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %60, i32 0, i32 1, !dbg !11493
  %61 = load i16, i16* %internalID, align 8, !dbg !11493
  %conv69 = zext i16 %61 to i32, !dbg !11492
  %shr = ashr i32 %conv69, 8, !dbg !11494
  %conv70 = trunc i32 %shr to i8, !dbg !11492
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 0, !dbg !11495
  store i8 %conv70, i8* %arrayidx, align 1, !dbg !11496
  %62 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11497
  %internalID71 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %62, i32 0, i32 1, !dbg !11498
  %63 = load i16, i16* %internalID71, align 8, !dbg !11498
  %conv72 = zext i16 %63 to i32, !dbg !11497
  %and73 = and i32 %conv72, 255, !dbg !11499
  %conv74 = trunc i32 %and73 to i8, !dbg !11497
  %arrayidx75 = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 1, !dbg !11500
  store i8 %conv74, i8* %arrayidx75, align 1, !dbg !11501
  %64 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11502
  %id76 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %64, i32 0, i32 1, !dbg !11503
  %65 = load i16, i16* %id76, align 8, !dbg !11503
  %conv77 = zext i16 %65 to i32, !dbg !11502
  %shr78 = ashr i32 %conv77, 8, !dbg !11504
  %conv79 = trunc i32 %shr78 to i8, !dbg !11502
  %arrayidx80 = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 2, !dbg !11505
  store i8 %conv79, i8* %arrayidx80, align 1, !dbg !11506
  %66 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11507
  %id81 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %66, i32 0, i32 1, !dbg !11508
  %67 = load i16, i16* %id81, align 8, !dbg !11508
  %conv82 = zext i16 %67 to i32, !dbg !11507
  %and83 = and i32 %conv82, 255, !dbg !11509
  %conv84 = trunc i32 %and83 to i8, !dbg !11507
  %arrayidx85 = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 3, !dbg !11510
  store i8 %conv84, i8* %arrayidx85, align 1, !dbg !11511
  %68 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11512
  %sessionH = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %68, i32 0, i32 9, !dbg !11513
  %69 = load i8*, i8** %sessionH, align 8, !dbg !11513
  %70 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11514
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %70, i32 0, i32 5, !dbg !11515
  %71 = load i8*, i8** %altPath, align 8, !dbg !11515
  %72 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11516
  %73 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11517
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %73, i32 0, i32 3, !dbg !11518
  %74 = load i16, i16* %nextMID, align 8, !dbg !11519
  %inc = add i16 %74, 1, !dbg !11519
  store i16 %inc, i16* %nextMID, align 8, !dbg !11519
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %token, i32 0, i32 0, !dbg !11520
  %call86 = call %struct._lwm2m_transaction_* @transaction_new(i8* %69, i32 1, i8* %71, %struct.lwm2m_uri_t* %72, i16 zeroext %74, i8 zeroext 4, i8* %arraydecay), !dbg !11521
  store %struct._lwm2m_transaction_* %call86, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11522
  %75 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11523
  %cmp87 = icmp eq %struct._lwm2m_transaction_* %75, null, !dbg !11525
  br i1 %cmp87, label %if.then89, label %if.end96, !dbg !11526

if.then89:                                        ; preds = %if.end66
  %76 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11527
  %clientP90 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %76, i32 0, i32 2, !dbg !11527
  %77 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP90, align 8, !dbg !11527
  %observationList91 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %77, i32 0, i32 11, !dbg !11527
  %78 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList91, align 8, !dbg !11527
  %79 = bitcast %struct._lwm2m_observation_* %78 to %struct._lwm2m_list_t*, !dbg !11527
  %80 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11527
  %id92 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %80, i32 0, i32 1, !dbg !11527
  %81 = load i16, i16* %id92, align 8, !dbg !11527
  %call93 = call %struct._lwm2m_list_t* @lwm2m_list_remove(%struct._lwm2m_list_t* %79, i16 zeroext %81, %struct._lwm2m_list_t** null), !dbg !11527
  %82 = bitcast %struct._lwm2m_list_t* %call93 to %struct._lwm2m_observation_*, !dbg !11529
  %83 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11530
  %clientP94 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %83, i32 0, i32 2, !dbg !11531
  %84 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP94, align 8, !dbg !11531
  %observationList95 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %84, i32 0, i32 11, !dbg !11532
  store %struct._lwm2m_observation_* %82, %struct._lwm2m_observation_** %observationList95, align 8, !dbg !11533
  %85 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11534
  %86 = bitcast %struct._lwm2m_observation_* %85 to i8*, !dbg !11534
  call void @lwm2m_free(i8* %86), !dbg !11535
  store i32 160, i32* %retval, align 4, !dbg !11536
  br label %return, !dbg !11536

if.end96:                                         ; preds = %if.end66
  %87 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11537
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %87, i32 0, i32 7, !dbg !11538
  %88 = load i8*, i8** %message, align 8, !dbg !11538
  %call97 = call i32 @coap_set_header_observe(i8* %88, i32 0), !dbg !11539
  %89 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11540
  %supportJSON = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %89, i32 0, i32 6, !dbg !11542
  %90 = load i8, i8* %supportJSON, align 8, !dbg !11542
  %tobool = trunc i8 %90 to i1, !dbg !11542
  %conv98 = zext i1 %tobool to i32, !dbg !11540
  %cmp99 = icmp eq i32 %conv98, 1, !dbg !11543
  br i1 %cmp99, label %if.then101, label %if.else, !dbg !11544

if.then101:                                       ; preds = %if.end96
  %91 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11545
  %message102 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %91, i32 0, i32 7, !dbg !11547
  %92 = load i8*, i8** %message102, align 8, !dbg !11547
  %call103 = call i32 @coap_set_header_accept(i8* %92, i16 zeroext 11543), !dbg !11548
  br label %if.end106, !dbg !11549

if.else:                                          ; preds = %if.end96
  %93 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11550
  %message104 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %93, i32 0, i32 7, !dbg !11552
  %94 = load i8*, i8** %message104, align 8, !dbg !11552
  %call105 = call i32 @coap_set_header_accept(i8* %94, i16 zeroext 11542), !dbg !11553
  br label %if.end106

if.end106:                                        ; preds = %if.else, %if.then101
  %95 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11554
  %callback107 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %95, i32 0, i32 10, !dbg !11555
  store void (%struct._lwm2m_transaction_*, i8*)* @prv_obsRequestCallback, void (%struct._lwm2m_transaction_*, i8*)** %callback107, align 8, !dbg !11556
  %96 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11557
  %97 = bitcast %struct._lwm2m_observation_* %96 to i8*, !dbg !11558
  %98 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11559
  %userData108 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %98, i32 0, i32 11, !dbg !11560
  store i8* %97, i8** %userData108, align 8, !dbg !11561
  %99 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11562
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %99, i32 0, i32 4, !dbg !11562
  %100 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !11562
  %101 = bitcast %struct._lwm2m_transaction_* %100 to %struct._lwm2m_list_t*, !dbg !11562
  %102 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11562
  %103 = bitcast %struct._lwm2m_transaction_* %102 to %struct._lwm2m_list_t*, !dbg !11562
  %call109 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %101, %struct._lwm2m_list_t* %103), !dbg !11562
  %104 = bitcast %struct._lwm2m_list_t* %call109 to %struct._lwm2m_transaction_*, !dbg !11563
  %105 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11564
  %transactionList110 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %105, i32 0, i32 4, !dbg !11565
  store %struct._lwm2m_transaction_* %104, %struct._lwm2m_transaction_** %transactionList110, align 8, !dbg !11566
  %106 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11567
  %107 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11568
  %call111 = call i32 @transaction_send(%struct.lwm2m_context_t* %106, %struct._lwm2m_transaction_* %107), !dbg !11569
  store i32 %call111, i32* %retval, align 4, !dbg !11570
  br label %return, !dbg !11570

return:                                           ; preds = %if.end106, %if.then89, %if.then55, %if.then9, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !11571
  ret i32 %108, !dbg !11571
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_obsRequestCallback(%struct._lwm2m_transaction_* %transacP, i8* %message) #0 !dbg !11572 {
entry:
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  %message.addr = alloca i8*, align 8
  %observationP = alloca %struct._lwm2m_observation_*, align 8
  %packet = alloca %struct.coap_packet_t*, align 8
  %code = alloca i8, align 1
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !11573, metadata !1190), !dbg !11574
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !11575, metadata !1190), !dbg !11576
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %observationP, metadata !11577, metadata !1190), !dbg !11578
  %0 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !11579
  %userData = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %0, i32 0, i32 11, !dbg !11580
  %1 = load i8*, i8** %userData, align 8, !dbg !11580
  %2 = bitcast i8* %1 to %struct._lwm2m_observation_*, !dbg !11581
  store %struct._lwm2m_observation_* %2, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11578
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %packet, metadata !11582, metadata !1190), !dbg !11583
  %3 = load i8*, i8** %message.addr, align 8, !dbg !11584
  %4 = bitcast i8* %3 to %struct.coap_packet_t*, !dbg !11585
  store %struct.coap_packet_t* %4, %struct.coap_packet_t** %packet, align 8, !dbg !11583
  call void @llvm.dbg.declare(metadata i8* %code, metadata !11586, metadata !1190), !dbg !11587
  %5 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11588
  %status = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %5, i32 0, i32 4, !dbg !11589
  %6 = load i32, i32* %status, align 8, !dbg !11589
  switch i32 %6, label %sw.default [
    i32 7, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !11590

sw.bb:                                            ; preds = %entry
  %7 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11591
  call void @observe_remove(%struct._lwm2m_observation_* %7), !dbg !11593
  br label %if.end24, !dbg !11594

sw.bb1:                                           ; preds = %entry
  %8 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11595
  %status2 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %8, i32 0, i32 4, !dbg !11596
  store i32 2, i32* %status2, align 8, !dbg !11597
  br label %sw.epilog, !dbg !11598

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !11599

sw.epilog:                                        ; preds = %sw.default, %sw.bb1
  %9 = load i8*, i8** %message.addr, align 8, !dbg !11600
  %cmp = icmp eq i8* %9, null, !dbg !11602
  br i1 %cmp, label %if.then, label %if.else, !dbg !11603

if.then:                                          ; preds = %sw.epilog
  store i8 -93, i8* %code, align 1, !dbg !11604
  br label %if.end10, !dbg !11606

if.else:                                          ; preds = %sw.epilog
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11607
  %code3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 3, !dbg !11609
  %11 = load i8, i8* %code3, align 8, !dbg !11609
  %conv = zext i8 %11 to i32, !dbg !11607
  %cmp4 = icmp eq i32 %conv, 69, !dbg !11610
  br i1 %cmp4, label %land.lhs.true, label %if.else8, !dbg !11611

land.lhs.true:                                    ; preds = %if.else
  br i1 true, label %cond.true, label %cond.false, !dbg !11612

cond.true:                                        ; preds = %land.lhs.true
  %12 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11613
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %12, i32 0, i32 5, !dbg !11613
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !11613
  %13 = load i8, i8* %arrayidx, align 4, !dbg !11613
  %conv6 = zext i8 %13 to i32, !dbg !11613
  %and = and i32 %conv6, 64, !dbg !11613
  %tobool = icmp ne i32 %and, 0, !dbg !11613
  br i1 %tobool, label %if.else8, label %if.then7, !dbg !11613

cond.false:                                       ; preds = %land.lhs.true
  br i1 false, label %if.else8, label %if.then7, !dbg !11612

if.then7:                                         ; preds = %cond.false, %cond.true
  store i8 -123, i8* %code, align 1, !dbg !11614
  br label %if.end, !dbg !11616

if.else8:                                         ; preds = %cond.false, %cond.true, %if.else
  %14 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11617
  %code9 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %14, i32 0, i32 3, !dbg !11619
  %15 = load i8, i8* %code9, align 8, !dbg !11619
  store i8 %15, i8* %code, align 1, !dbg !11620
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %16 = load i8, i8* %code, align 1, !dbg !11621
  %conv11 = zext i8 %16 to i32, !dbg !11621
  %cmp12 = icmp ne i32 %conv11, 69, !dbg !11623
  br i1 %cmp12, label %if.then14, label %if.else17, !dbg !11624

if.then14:                                        ; preds = %if.end10
  %17 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11625
  %callback = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %17, i32 0, i32 5, !dbg !11627
  %18 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback, align 8, !dbg !11627
  %19 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11628
  %clientP = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %19, i32 0, i32 2, !dbg !11629
  %20 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11629
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %20, i32 0, i32 1, !dbg !11630
  %21 = load i16, i16* %internalID, align 8, !dbg !11630
  %22 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11631
  %uri = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %22, i32 0, i32 3, !dbg !11632
  %23 = load i8, i8* %code, align 1, !dbg !11633
  %conv15 = zext i8 %23 to i32, !dbg !11633
  %24 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11634
  %userData16 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %24, i32 0, i32 6, !dbg !11635
  %25 = load i8*, i8** %userData16, align 8, !dbg !11635
  call void %18(i16 zeroext %21, %struct.lwm2m_uri_t* %uri, i32 %conv15, i32 0, i8* null, i32 0, i8* %25), !dbg !11625
  %26 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11636
  call void @observe_remove(%struct._lwm2m_observation_* %26), !dbg !11637
  br label %if.end24, !dbg !11638

if.else17:                                        ; preds = %if.end10
  %27 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11639
  %callback18 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %27, i32 0, i32 5, !dbg !11641
  %28 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback18, align 8, !dbg !11641
  %29 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11642
  %clientP19 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %29, i32 0, i32 2, !dbg !11643
  %30 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP19, align 8, !dbg !11643
  %internalID20 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %30, i32 0, i32 1, !dbg !11644
  %31 = load i16, i16* %internalID20, align 8, !dbg !11644
  %32 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11645
  %uri21 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %32, i32 0, i32 3, !dbg !11646
  %33 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11647
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %33, i32 0, i32 6, !dbg !11648
  %34 = load i32, i32* %content_type, align 4, !dbg !11648
  %35 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11649
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %35, i32 0, i32 38, !dbg !11650
  %36 = load i8*, i8** %payload, align 8, !dbg !11650
  %37 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11651
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %37, i32 0, i32 37, !dbg !11652
  %38 = load i16, i16* %payload_len, align 2, !dbg !11652
  %conv22 = zext i16 %38 to i32, !dbg !11651
  %39 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11653
  %userData23 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %39, i32 0, i32 6, !dbg !11654
  %40 = load i8*, i8** %userData23, align 8, !dbg !11654
  call void %28(i16 zeroext %31, %struct.lwm2m_uri_t* %uri21, i32 0, i32 %34, i8* %36, i32 %conv22, i8* %40), !dbg !11639
  br label %if.end24

if.end24:                                         ; preds = %if.else17, %if.then14, %sw.bb
  ret void, !dbg !11655
}

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_observe_cancel(%struct.lwm2m_context_t* %contextP, i16 zeroext %clientID, %struct.lwm2m_uri_t* %uriP, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, i8* %userData) #0 !dbg !11656 {
entry:
  %retval = alloca i32, align 4
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %clientID.addr = alloca i16, align 2
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %callback.addr = alloca void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %observationP = alloca %struct._lwm2m_observation_*, align 8
  %transactionP = alloca %struct._lwm2m_transaction_*, align 8
  %cancelP = alloca %struct.cancellation_data_t*, align 8
  %token = alloca [4 x i8], align 1
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !11657, metadata !1190), !dbg !11658
  store i16 %clientID, i16* %clientID.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clientID.addr, metadata !11659, metadata !1190), !dbg !11660
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !11661, metadata !1190), !dbg !11662
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %callback, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, metadata !11663, metadata !1190), !dbg !11664
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !11665, metadata !1190), !dbg !11666
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !11667, metadata !1190), !dbg !11668
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %observationP, metadata !11669, metadata !1190), !dbg !11670
  %0 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11671
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %0, i32 0, i32 0, !dbg !11672
  %1 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !11672
  %2 = bitcast %struct._lwm2m_client_* %1 to %struct._lwm2m_list_t*, !dbg !11673
  %3 = load i16, i16* %clientID.addr, align 2, !dbg !11674
  %call = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %2, i16 zeroext %3), !dbg !11675
  %4 = bitcast %struct._lwm2m_list_t* %call to %struct._lwm2m_client_*, !dbg !11676
  store %struct._lwm2m_client_* %4, %struct._lwm2m_client_** %clientP, align 8, !dbg !11677
  %5 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11678
  %cmp = icmp eq %struct._lwm2m_client_* %5, null, !dbg !11680
  br i1 %cmp, label %if.then, label %if.end, !dbg !11681

if.then:                                          ; preds = %entry
  store i32 132, i32* %retval, align 4, !dbg !11682
  br label %return, !dbg !11682

if.end:                                           ; preds = %entry
  %6 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11683
  %7 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11684
  %call1 = call %struct._lwm2m_observation_* @prv_findObservationByURI(%struct._lwm2m_client_* %6, %struct.lwm2m_uri_t* %7), !dbg !11685
  store %struct._lwm2m_observation_* %call1, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11686
  %8 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11687
  %cmp2 = icmp eq %struct._lwm2m_observation_* %8, null, !dbg !11689
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11690

if.then3:                                         ; preds = %if.end
  store i32 132, i32* %retval, align 4, !dbg !11691
  br label %return, !dbg !11691

if.end4:                                          ; preds = %if.end
  %9 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11692
  %status = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %9, i32 0, i32 4, !dbg !11693
  %10 = load i32, i32* %status, align 8, !dbg !11693
  switch i32 %10, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb36
  ], !dbg !11694

sw.bb:                                            ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transactionP, metadata !11695, metadata !1190), !dbg !11698
  call void @llvm.dbg.declare(metadata %struct.cancellation_data_t** %cancelP, metadata !11699, metadata !1190), !dbg !11700
  call void @llvm.dbg.declare(metadata [4 x i8]* %token, metadata !11701, metadata !1190), !dbg !11702
  %11 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11703
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %11, i32 0, i32 1, !dbg !11704
  %12 = load i16, i16* %internalID, align 8, !dbg !11704
  %conv = zext i16 %12 to i32, !dbg !11703
  %shr = ashr i32 %conv, 8, !dbg !11705
  %conv5 = trunc i32 %shr to i8, !dbg !11703
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 0, !dbg !11706
  store i8 %conv5, i8* %arrayidx, align 1, !dbg !11707
  %13 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11708
  %internalID6 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %13, i32 0, i32 1, !dbg !11709
  %14 = load i16, i16* %internalID6, align 8, !dbg !11709
  %conv7 = zext i16 %14 to i32, !dbg !11708
  %and = and i32 %conv7, 255, !dbg !11710
  %conv8 = trunc i32 %and to i8, !dbg !11708
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 1, !dbg !11711
  store i8 %conv8, i8* %arrayidx9, align 1, !dbg !11712
  %15 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11713
  %id = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %15, i32 0, i32 1, !dbg !11714
  %16 = load i16, i16* %id, align 8, !dbg !11714
  %conv10 = zext i16 %16 to i32, !dbg !11713
  %shr11 = ashr i32 %conv10, 8, !dbg !11715
  %conv12 = trunc i32 %shr11 to i8, !dbg !11713
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 2, !dbg !11716
  store i8 %conv12, i8* %arrayidx13, align 1, !dbg !11717
  %17 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11718
  %id14 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %17, i32 0, i32 1, !dbg !11719
  %18 = load i16, i16* %id14, align 8, !dbg !11719
  %conv15 = zext i16 %18 to i32, !dbg !11718
  %and16 = and i32 %conv15, 255, !dbg !11720
  %conv17 = trunc i32 %and16 to i8, !dbg !11718
  %arrayidx18 = getelementptr inbounds [4 x i8], [4 x i8]* %token, i64 0, i64 3, !dbg !11721
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !11722
  %19 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11723
  %sessionH = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %19, i32 0, i32 9, !dbg !11724
  %20 = load i8*, i8** %sessionH, align 8, !dbg !11724
  %21 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11725
  %altPath = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %21, i32 0, i32 5, !dbg !11726
  %22 = load i8*, i8** %altPath, align 8, !dbg !11726
  %23 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11727
  %24 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11728
  %nextMID = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %24, i32 0, i32 3, !dbg !11729
  %25 = load i16, i16* %nextMID, align 8, !dbg !11730
  %inc = add i16 %25, 1, !dbg !11730
  store i16 %inc, i16* %nextMID, align 8, !dbg !11730
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %token, i32 0, i32 0, !dbg !11731
  %call19 = call %struct._lwm2m_transaction_* @transaction_new(i8* %20, i32 1, i8* %22, %struct.lwm2m_uri_t* %23, i16 zeroext %25, i8 zeroext 4, i8* %arraydecay), !dbg !11732
  store %struct._lwm2m_transaction_* %call19, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11733
  %26 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11734
  %cmp20 = icmp eq %struct._lwm2m_transaction_* %26, null, !dbg !11736
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !11737

if.then22:                                        ; preds = %sw.bb
  store i32 160, i32* %retval, align 4, !dbg !11738
  br label %return, !dbg !11738

if.end23:                                         ; preds = %sw.bb
  %call24 = call i8* @lwm2m_malloc(i64 24), !dbg !11740
  %27 = bitcast i8* %call24 to %struct.cancellation_data_t*, !dbg !11741
  store %struct.cancellation_data_t* %27, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11742
  %28 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11743
  %cmp25 = icmp eq %struct.cancellation_data_t* %28, null, !dbg !11745
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11746

if.then27:                                        ; preds = %if.end23
  %29 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11747
  %30 = bitcast %struct._lwm2m_transaction_* %29 to i8*, !dbg !11747
  call void @lwm2m_free(i8* %30), !dbg !11749
  store i32 160, i32* %retval, align 4, !dbg !11750
  br label %return, !dbg !11750

if.end28:                                         ; preds = %if.end23
  %31 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11751
  %message = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %31, i32 0, i32 7, !dbg !11752
  %32 = load i8*, i8** %message, align 8, !dbg !11752
  %call29 = call i32 @coap_set_header_observe(i8* %32, i32 1), !dbg !11753
  %33 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11754
  %34 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11755
  %observationP30 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %34, i32 0, i32 0, !dbg !11756
  store %struct._lwm2m_observation_* %33, %struct._lwm2m_observation_** %observationP30, align 8, !dbg !11757
  %35 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback.addr, align 8, !dbg !11758
  %36 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11759
  %callbackP = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %36, i32 0, i32 1, !dbg !11760
  store void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)* %35, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callbackP, align 8, !dbg !11761
  %37 = load i8*, i8** %userData.addr, align 8, !dbg !11762
  %38 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11763
  %userDataP = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %38, i32 0, i32 2, !dbg !11764
  store i8* %37, i8** %userDataP, align 8, !dbg !11765
  %39 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11766
  %callback31 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %39, i32 0, i32 10, !dbg !11767
  store void (%struct._lwm2m_transaction_*, i8*)* @prv_obsCancelRequestCallback, void (%struct._lwm2m_transaction_*, i8*)** %callback31, align 8, !dbg !11768
  %40 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11769
  %41 = bitcast %struct.cancellation_data_t* %40 to i8*, !dbg !11770
  %42 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11771
  %userData32 = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %42, i32 0, i32 11, !dbg !11772
  store i8* %41, i8** %userData32, align 8, !dbg !11773
  %43 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11774
  %transactionList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %43, i32 0, i32 4, !dbg !11774
  %44 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionList, align 8, !dbg !11774
  %45 = bitcast %struct._lwm2m_transaction_* %44 to %struct._lwm2m_list_t*, !dbg !11774
  %46 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11774
  %47 = bitcast %struct._lwm2m_transaction_* %46 to %struct._lwm2m_list_t*, !dbg !11774
  %call33 = call %struct._lwm2m_list_t* @lwm2m_list_add(%struct._lwm2m_list_t* %45, %struct._lwm2m_list_t* %47), !dbg !11774
  %48 = bitcast %struct._lwm2m_list_t* %call33 to %struct._lwm2m_transaction_*, !dbg !11775
  %49 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11776
  %transactionList34 = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %49, i32 0, i32 4, !dbg !11777
  store %struct._lwm2m_transaction_* %48, %struct._lwm2m_transaction_** %transactionList34, align 8, !dbg !11778
  %50 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11779
  %51 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transactionP, align 8, !dbg !11780
  %call35 = call i32 @transaction_send(%struct.lwm2m_context_t* %50, %struct._lwm2m_transaction_* %51), !dbg !11781
  store i32 %call35, i32* %retval, align 4, !dbg !11782
  br label %return, !dbg !11782

sw.bb36:                                          ; preds = %if.end4
  %52 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11783
  %status37 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %52, i32 0, i32 4, !dbg !11784
  store i32 7, i32* %status37, align 8, !dbg !11785
  br label %sw.epilog, !dbg !11786

sw.default:                                       ; preds = %if.end4
  br label %sw.epilog, !dbg !11787

sw.epilog:                                        ; preds = %sw.default, %sw.bb36
  store i32 0, i32* %retval, align 4, !dbg !11788
  br label %return, !dbg !11788

return:                                           ; preds = %sw.epilog, %if.end28, %if.then27, %if.then22, %if.then3, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !11789
  ret i32 %53, !dbg !11789
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._lwm2m_observation_* @prv_findObservationByURI(%struct._lwm2m_client_* %clientP, %struct.lwm2m_uri_t* %uriP) #0 !dbg !11790 {
entry:
  %retval = alloca %struct._lwm2m_observation_*, align 8
  %clientP.addr = alloca %struct._lwm2m_client_*, align 8
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %targetP = alloca %struct._lwm2m_observation_*, align 8
  store %struct._lwm2m_client_* %clientP, %struct._lwm2m_client_** %clientP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP.addr, metadata !11793, metadata !1190), !dbg !11794
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !11795, metadata !1190), !dbg !11796
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %targetP, metadata !11797, metadata !1190), !dbg !11798
  %0 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP.addr, align 8, !dbg !11799
  %observationList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %0, i32 0, i32 11, !dbg !11800
  %1 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList, align 8, !dbg !11800
  store %struct._lwm2m_observation_* %1, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11801
  br label %while.cond, !dbg !11802

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11803
  %cmp = icmp ne %struct._lwm2m_observation_* %2, null, !dbg !11804
  br i1 %cmp, label %while.body, label %while.end, !dbg !11802

while.body:                                       ; preds = %while.cond
  %3 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11805
  %uri = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %3, i32 0, i32 3, !dbg !11808
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri, i32 0, i32 1, !dbg !11809
  %4 = load i16, i16* %objectId, align 2, !dbg !11809
  %conv = zext i16 %4 to i32, !dbg !11805
  %5 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11810
  %objectId1 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %5, i32 0, i32 1, !dbg !11811
  %6 = load i16, i16* %objectId1, align 2, !dbg !11811
  %conv2 = zext i16 %6 to i32, !dbg !11810
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !11812
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !11813

land.lhs.true:                                    ; preds = %while.body
  %7 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11814
  %uri5 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %7, i32 0, i32 3, !dbg !11815
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri5, i32 0, i32 0, !dbg !11816
  %8 = load i8, i8* %flag, align 8, !dbg !11816
  %conv6 = zext i8 %8 to i32, !dbg !11814
  %9 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11817
  %flag7 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %9, i32 0, i32 0, !dbg !11818
  %10 = load i8, i8* %flag7, align 2, !dbg !11818
  %conv8 = zext i8 %10 to i32, !dbg !11817
  %cmp9 = icmp eq i32 %conv6, %conv8, !dbg !11819
  br i1 %cmp9, label %land.lhs.true11, label %if.end, !dbg !11820

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11821
  %uri12 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %11, i32 0, i32 3, !dbg !11822
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri12, i32 0, i32 2, !dbg !11823
  %12 = load i16, i16* %instanceId, align 4, !dbg !11823
  %conv13 = zext i16 %12 to i32, !dbg !11821
  %13 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11824
  %instanceId14 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %13, i32 0, i32 2, !dbg !11825
  %14 = load i16, i16* %instanceId14, align 2, !dbg !11825
  %conv15 = zext i16 %14 to i32, !dbg !11824
  %cmp16 = icmp eq i32 %conv13, %conv15, !dbg !11826
  br i1 %cmp16, label %land.lhs.true18, label %if.end, !dbg !11827

land.lhs.true18:                                  ; preds = %land.lhs.true11
  %15 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11828
  %uri19 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %15, i32 0, i32 3, !dbg !11829
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %uri19, i32 0, i32 3, !dbg !11830
  %16 = load i16, i16* %resourceId, align 2, !dbg !11830
  %conv20 = zext i16 %16 to i32, !dbg !11828
  %17 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !11831
  %resourceId21 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %17, i32 0, i32 3, !dbg !11832
  %18 = load i16, i16* %resourceId21, align 2, !dbg !11832
  %conv22 = zext i16 %18 to i32, !dbg !11831
  %cmp23 = icmp eq i32 %conv20, %conv22, !dbg !11833
  br i1 %cmp23, label %if.then, label %if.end, !dbg !11834

if.then:                                          ; preds = %land.lhs.true18
  %19 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11835
  store %struct._lwm2m_observation_* %19, %struct._lwm2m_observation_** %retval, align 8, !dbg !11837
  br label %return, !dbg !11837

if.end:                                           ; preds = %land.lhs.true18, %land.lhs.true11, %land.lhs.true, %while.body
  %20 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11838
  %next = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %20, i32 0, i32 0, !dbg !11839
  %21 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %next, align 8, !dbg !11839
  store %struct._lwm2m_observation_* %21, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11840
  br label %while.cond, !dbg !11802, !llvm.loop !11841

while.end:                                        ; preds = %while.cond
  %22 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %targetP, align 8, !dbg !11843
  store %struct._lwm2m_observation_* %22, %struct._lwm2m_observation_** %retval, align 8, !dbg !11844
  br label %return, !dbg !11844

return:                                           ; preds = %while.end, %if.then
  %23 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %retval, align 8, !dbg !11845
  ret %struct._lwm2m_observation_* %23, !dbg !11845
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_obsCancelRequestCallback(%struct._lwm2m_transaction_* %transacP, i8* %message) #0 !dbg !11846 {
entry:
  %transacP.addr = alloca %struct._lwm2m_transaction_*, align 8
  %message.addr = alloca i8*, align 8
  %cancelP = alloca %struct.cancellation_data_t*, align 8
  %packet = alloca %struct.coap_packet_t*, align 8
  %code = alloca i8, align 1
  store %struct._lwm2m_transaction_* %transacP, %struct._lwm2m_transaction_** %transacP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_transaction_** %transacP.addr, metadata !11847, metadata !1190), !dbg !11848
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !11849, metadata !1190), !dbg !11850
  call void @llvm.dbg.declare(metadata %struct.cancellation_data_t** %cancelP, metadata !11851, metadata !1190), !dbg !11852
  %0 = load %struct._lwm2m_transaction_*, %struct._lwm2m_transaction_** %transacP.addr, align 8, !dbg !11853
  %userData = getelementptr inbounds %struct._lwm2m_transaction_, %struct._lwm2m_transaction_* %0, i32 0, i32 11, !dbg !11854
  %1 = load i8*, i8** %userData, align 8, !dbg !11854
  %2 = bitcast i8* %1 to %struct.cancellation_data_t*, !dbg !11855
  store %struct.cancellation_data_t* %2, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11852
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %packet, metadata !11856, metadata !1190), !dbg !11857
  %3 = load i8*, i8** %message.addr, align 8, !dbg !11858
  %4 = bitcast i8* %3 to %struct.coap_packet_t*, !dbg !11859
  store %struct.coap_packet_t* %4, %struct.coap_packet_t** %packet, align 8, !dbg !11857
  call void @llvm.dbg.declare(metadata i8* %code, metadata !11860, metadata !1190), !dbg !11861
  %5 = load i8*, i8** %message.addr, align 8, !dbg !11862
  %cmp = icmp eq i8* %5, null, !dbg !11864
  br i1 %cmp, label %if.then, label %if.else, !dbg !11865

if.then:                                          ; preds = %entry
  store i8 -93, i8* %code, align 1, !dbg !11866
  br label %if.end, !dbg !11868

if.else:                                          ; preds = %entry
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11869
  %code1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 3, !dbg !11871
  %7 = load i8, i8* %code1, align 8, !dbg !11871
  store i8 %7, i8* %code, align 1, !dbg !11872
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i8, i8* %code, align 1, !dbg !11873
  %conv = zext i8 %8 to i32, !dbg !11873
  %cmp2 = icmp ne i32 %conv, 69, !dbg !11875
  br i1 %cmp2, label %if.then4, label %if.else7, !dbg !11876

if.then4:                                         ; preds = %if.end
  %9 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11877
  %callbackP = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %9, i32 0, i32 1, !dbg !11879
  %10 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callbackP, align 8, !dbg !11879
  %11 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11880
  %observationP = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %11, i32 0, i32 0, !dbg !11881
  %12 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11881
  %clientP = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %12, i32 0, i32 2, !dbg !11882
  %13 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11882
  %internalID = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %13, i32 0, i32 1, !dbg !11883
  %14 = load i16, i16* %internalID, align 8, !dbg !11883
  %15 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11884
  %observationP5 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %15, i32 0, i32 0, !dbg !11885
  %16 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP5, align 8, !dbg !11885
  %uri = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %16, i32 0, i32 3, !dbg !11886
  %17 = load i8, i8* %code, align 1, !dbg !11887
  %conv6 = zext i8 %17 to i32, !dbg !11887
  %18 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11888
  %userDataP = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %18, i32 0, i32 2, !dbg !11889
  %19 = load i8*, i8** %userDataP, align 8, !dbg !11889
  call void %10(i16 zeroext %14, %struct.lwm2m_uri_t* %uri, i32 %conv6, i32 0, i8* null, i32 0, i8* %19), !dbg !11877
  br label %if.end16, !dbg !11890

if.else7:                                         ; preds = %if.end
  %20 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11891
  %callbackP8 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %20, i32 0, i32 1, !dbg !11893
  %21 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callbackP8, align 8, !dbg !11893
  %22 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11894
  %observationP9 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %22, i32 0, i32 0, !dbg !11895
  %23 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP9, align 8, !dbg !11895
  %clientP10 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %23, i32 0, i32 2, !dbg !11896
  %24 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP10, align 8, !dbg !11896
  %internalID11 = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %24, i32 0, i32 1, !dbg !11897
  %25 = load i16, i16* %internalID11, align 8, !dbg !11897
  %26 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11898
  %observationP12 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %26, i32 0, i32 0, !dbg !11899
  %27 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP12, align 8, !dbg !11899
  %uri13 = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %27, i32 0, i32 3, !dbg !11900
  %28 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11901
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %28, i32 0, i32 6, !dbg !11902
  %29 = load i32, i32* %content_type, align 4, !dbg !11902
  %30 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11903
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %30, i32 0, i32 38, !dbg !11904
  %31 = load i8*, i8** %payload, align 8, !dbg !11904
  %32 = load %struct.coap_packet_t*, %struct.coap_packet_t** %packet, align 8, !dbg !11905
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %32, i32 0, i32 37, !dbg !11906
  %33 = load i16, i16* %payload_len, align 2, !dbg !11906
  %conv14 = zext i16 %33 to i32, !dbg !11905
  %34 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11907
  %userDataP15 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %34, i32 0, i32 2, !dbg !11908
  %35 = load i8*, i8** %userDataP15, align 8, !dbg !11908
  call void %21(i16 zeroext %25, %struct.lwm2m_uri_t* %uri13, i32 0, i32 %29, i8* %31, i32 %conv14, i8* %35), !dbg !11891
  br label %if.end16

if.end16:                                         ; preds = %if.else7, %if.then4
  %36 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11909
  %observationP17 = getelementptr inbounds %struct.cancellation_data_t, %struct.cancellation_data_t* %36, i32 0, i32 0, !dbg !11910
  %37 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP17, align 8, !dbg !11910
  call void @observe_remove(%struct._lwm2m_observation_* %37), !dbg !11911
  %38 = load %struct.cancellation_data_t*, %struct.cancellation_data_t** %cancelP, align 8, !dbg !11912
  %39 = bitcast %struct.cancellation_data_t* %38 to i8*, !dbg !11912
  call void @lwm2m_free(i8* %39), !dbg !11913
  ret void, !dbg !11914
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @observe_handleNotify(%struct.lwm2m_context_t* %contextP, i8* %fromSessionH, %struct.coap_packet_t* %message, %struct.coap_packet_t* %response) #0 !dbg !11915 {
entry:
  %retval = alloca i1, align 1
  %contextP.addr = alloca %struct.lwm2m_context_t*, align 8
  %fromSessionH.addr = alloca i8*, align 8
  %message.addr = alloca %struct.coap_packet_t*, align 8
  %response.addr = alloca %struct.coap_packet_t*, align 8
  %tokenP = alloca i8*, align 8
  %token_len = alloca i32, align 4
  %clientID = alloca i16, align 2
  %obsID = alloca i16, align 2
  %clientP = alloca %struct._lwm2m_client_*, align 8
  %observationP = alloca %struct._lwm2m_observation_*, align 8
  %count = alloca i32, align 4
  store %struct.lwm2m_context_t* %contextP, %struct.lwm2m_context_t** %contextP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_context_t** %contextP.addr, metadata !11918, metadata !1190), !dbg !11919
  store i8* %fromSessionH, i8** %fromSessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromSessionH.addr, metadata !11920, metadata !1190), !dbg !11921
  store %struct.coap_packet_t* %message, %struct.coap_packet_t** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %message.addr, metadata !11922, metadata !1190), !dbg !11923
  store %struct.coap_packet_t* %response, %struct.coap_packet_t** %response.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %response.addr, metadata !11924, metadata !1190), !dbg !11925
  call void @llvm.dbg.declare(metadata i8** %tokenP, metadata !11926, metadata !1190), !dbg !11927
  call void @llvm.dbg.declare(metadata i32* %token_len, metadata !11928, metadata !1190), !dbg !11929
  call void @llvm.dbg.declare(metadata i16* %clientID, metadata !11930, metadata !1190), !dbg !11931
  call void @llvm.dbg.declare(metadata i16* %obsID, metadata !11932, metadata !1190), !dbg !11933
  call void @llvm.dbg.declare(metadata %struct._lwm2m_client_** %clientP, metadata !11934, metadata !1190), !dbg !11935
  call void @llvm.dbg.declare(metadata %struct._lwm2m_observation_** %observationP, metadata !11936, metadata !1190), !dbg !11937
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11938, metadata !1190), !dbg !11939
  %0 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !11940
  %1 = bitcast %struct.coap_packet_t* %0 to i8*, !dbg !11940
  %call = call i32 @coap_get_header_token(i8* %1, i8** %tokenP), !dbg !11941
  store i32 %call, i32* %token_len, align 4, !dbg !11942
  %2 = load i32, i32* %token_len, align 4, !dbg !11943
  %conv = sext i32 %2 to i64, !dbg !11943
  %cmp = icmp ne i64 %conv, 4, !dbg !11945
  br i1 %cmp, label %if.then, label %if.end, !dbg !11946

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11947
  br label %return, !dbg !11947

if.end:                                           ; preds = %entry
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !11948
  %4 = bitcast %struct.coap_packet_t* %3 to i8*, !dbg !11948
  %call2 = call i32 @coap_get_header_observe(i8* %4, i32* %count), !dbg !11950
  %cmp3 = icmp ne i32 1, %call2, !dbg !11951
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11952

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11953
  br label %return, !dbg !11953

if.end6:                                          ; preds = %if.end
  %5 = load i8*, i8** %tokenP, align 8, !dbg !11954
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !11954
  %6 = load i8, i8* %arrayidx, align 1, !dbg !11954
  %conv7 = zext i8 %6 to i32, !dbg !11954
  %shl = shl i32 %conv7, 8, !dbg !11955
  %7 = load i8*, i8** %tokenP, align 8, !dbg !11956
  %arrayidx8 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !11956
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !11956
  %conv9 = zext i8 %8 to i32, !dbg !11956
  %or = or i32 %shl, %conv9, !dbg !11957
  %conv10 = trunc i32 %or to i16, !dbg !11958
  store i16 %conv10, i16* %clientID, align 2, !dbg !11959
  %9 = load i8*, i8** %tokenP, align 8, !dbg !11960
  %arrayidx11 = getelementptr inbounds i8, i8* %9, i64 2, !dbg !11960
  %10 = load i8, i8* %arrayidx11, align 1, !dbg !11960
  %conv12 = zext i8 %10 to i32, !dbg !11960
  %shl13 = shl i32 %conv12, 8, !dbg !11961
  %11 = load i8*, i8** %tokenP, align 8, !dbg !11962
  %arrayidx14 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !11962
  %12 = load i8, i8* %arrayidx14, align 1, !dbg !11962
  %conv15 = zext i8 %12 to i32, !dbg !11962
  %or16 = or i32 %shl13, %conv15, !dbg !11963
  %conv17 = trunc i32 %or16 to i16, !dbg !11964
  store i16 %conv17, i16* %obsID, align 2, !dbg !11965
  %13 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11966
  %clientList = getelementptr inbounds %struct.lwm2m_context_t, %struct.lwm2m_context_t* %13, i32 0, i32 0, !dbg !11967
  %14 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientList, align 8, !dbg !11967
  %15 = bitcast %struct._lwm2m_client_* %14 to %struct._lwm2m_list_t*, !dbg !11968
  %16 = load i16, i16* %clientID, align 2, !dbg !11969
  %call18 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %15, i16 zeroext %16), !dbg !11970
  %17 = bitcast %struct._lwm2m_list_t* %call18 to %struct._lwm2m_client_*, !dbg !11971
  store %struct._lwm2m_client_* %17, %struct._lwm2m_client_** %clientP, align 8, !dbg !11972
  %18 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11973
  %cmp19 = icmp eq %struct._lwm2m_client_* %18, null, !dbg !11975
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !11976

if.then21:                                        ; preds = %if.end6
  store i1 false, i1* %retval, align 1, !dbg !11977
  br label %return, !dbg !11977

if.end22:                                         ; preds = %if.end6
  %19 = load %struct._lwm2m_client_*, %struct._lwm2m_client_** %clientP, align 8, !dbg !11978
  %observationList = getelementptr inbounds %struct._lwm2m_client_, %struct._lwm2m_client_* %19, i32 0, i32 11, !dbg !11979
  %20 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationList, align 8, !dbg !11979
  %21 = bitcast %struct._lwm2m_observation_* %20 to %struct._lwm2m_list_t*, !dbg !11980
  %22 = load i16, i16* %obsID, align 2, !dbg !11981
  %call23 = call %struct._lwm2m_list_t* @lwm2m_list_find(%struct._lwm2m_list_t* %21, i16 zeroext %22), !dbg !11982
  %23 = bitcast %struct._lwm2m_list_t* %call23 to %struct._lwm2m_observation_*, !dbg !11983
  store %struct._lwm2m_observation_* %23, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11984
  %24 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !11985
  %cmp24 = icmp eq %struct._lwm2m_observation_* %24, null, !dbg !11987
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !11988

if.then26:                                        ; preds = %if.end22
  %25 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !11989
  %26 = bitcast %struct.coap_packet_t* %25 to i8*, !dbg !11989
  %27 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !11991
  %mid = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %27, i32 0, i32 4, !dbg !11992
  %28 = load i16, i16* %mid, align 2, !dbg !11992
  call void @coap_init_message(i8* %26, i32 3, i8 zeroext 0, i16 zeroext %28), !dbg !11993
  %29 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !11994
  %30 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !11995
  %31 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !11996
  %call27 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %29, %struct.coap_packet_t* %30, i8* %31), !dbg !11997
  br label %if.end35, !dbg !11998

if.else:                                          ; preds = %if.end22
  %32 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !11999
  %type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %32, i32 0, i32 2, !dbg !12002
  %33 = load i32, i32* %type, align 4, !dbg !12002
  %cmp28 = icmp eq i32 %33, 0, !dbg !12003
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !12004

if.then30:                                        ; preds = %if.else
  %34 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !12005
  %35 = bitcast %struct.coap_packet_t* %34 to i8*, !dbg !12005
  %36 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !12007
  %mid31 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %36, i32 0, i32 4, !dbg !12008
  %37 = load i16, i16* %mid31, align 2, !dbg !12008
  call void @coap_init_message(i8* %35, i32 2, i8 zeroext 0, i16 zeroext %37), !dbg !12009
  %38 = load %struct.lwm2m_context_t*, %struct.lwm2m_context_t** %contextP.addr, align 8, !dbg !12010
  %39 = load %struct.coap_packet_t*, %struct.coap_packet_t** %response.addr, align 8, !dbg !12011
  %40 = load i8*, i8** %fromSessionH.addr, align 8, !dbg !12012
  %call32 = call zeroext i8 @message_send(%struct.lwm2m_context_t* %38, %struct.coap_packet_t* %39, i8* %40), !dbg !12013
  br label %if.end33, !dbg !12014

if.end33:                                         ; preds = %if.then30, %if.else
  %41 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !12015
  %callback = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %41, i32 0, i32 5, !dbg !12016
  %42 = load void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)*, void (i16, %struct.lwm2m_uri_t*, i32, i32, i8*, i32, i8*)** %callback, align 8, !dbg !12016
  %43 = load i16, i16* %clientID, align 2, !dbg !12017
  %44 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !12018
  %uri = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %44, i32 0, i32 3, !dbg !12019
  %45 = load i32, i32* %count, align 4, !dbg !12020
  %46 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !12021
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %46, i32 0, i32 6, !dbg !12022
  %47 = load i32, i32* %content_type, align 4, !dbg !12022
  %48 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !12023
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %48, i32 0, i32 38, !dbg !12024
  %49 = load i8*, i8** %payload, align 8, !dbg !12024
  %50 = load %struct.coap_packet_t*, %struct.coap_packet_t** %message.addr, align 8, !dbg !12025
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %50, i32 0, i32 37, !dbg !12026
  %51 = load i16, i16* %payload_len, align 2, !dbg !12026
  %conv34 = zext i16 %51 to i32, !dbg !12025
  %52 = load %struct._lwm2m_observation_*, %struct._lwm2m_observation_** %observationP, align 8, !dbg !12027
  %userData = getelementptr inbounds %struct._lwm2m_observation_, %struct._lwm2m_observation_* %52, i32 0, i32 6, !dbg !12028
  %53 = load i8*, i8** %userData, align 8, !dbg !12028
  call void %42(i16 zeroext %43, %struct.lwm2m_uri_t* %uri, i32 %45, i32 %47, i8* %49, i32 %conv34, i8* %53), !dbg !12015
  br label %if.end35

if.end35:                                         ; preds = %if.end33, %if.then26
  store i1 true, i1* %retval, align 1, !dbg !12029
  br label %return, !dbg !12029

return:                                           ; preds = %if.end35, %if.then21, %if.then5, %if.then
  %54 = load i1, i1* %retval, align 1, !dbg !12030
  ret i1 %54, !dbg !12030
}

; Function Attrs: noinline nounwind uwtable
define i32 @json_parse(%struct.lwm2m_uri_t* %uriP, i8* %buffer, i64 %bufferLen, %struct._lwm2m_data_t** %dataP) #0 !dbg !12031 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %dataP.addr = alloca %struct._lwm2m_data_t**, align 8
  %index = alloca i64, align 8
  %count = alloca i32, align 4
  %eFound = alloca i8, align 1
  %bnFound = alloca i8, align 1
  %btFound = alloca i8, align 1
  %bnStart = alloca i32, align 4
  %bnLen = alloca i32, align 4
  %recordArray = alloca %struct._record_t*, align 8
  %parsedP = alloca %struct._lwm2m_data_t*, align 8
  %recordIndex = alloca i32, align 4
  %itemLen = alloca i32, align 4
  %next = alloca i32, align 4
  %tokenStart = alloca i32, align 4
  %tokenLen = alloca i32, align 4
  %itemLen197 = alloca i32, align 4
  %baseURI = alloca %struct.lwm2m_uri_t, align 2
  %baseUriP = alloca %struct.lwm2m_uri_t*, align 8
  %resultP = alloca %struct._lwm2m_data_t*, align 8
  %size = alloca i32, align 4
  %res = alloca i32, align 4
  %i = alloca i32, align 4
  %targetP = alloca %struct._lwm2m_data_t*, align 8
  %resP = alloca %struct._lwm2m_data_t*, align 8
  %targetP402 = alloca %struct._lwm2m_data_t*, align 8
  %tempP = alloca %struct._lwm2m_data_t*, align 8
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !12070, metadata !1190), !dbg !12071
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !12072, metadata !1190), !dbg !12073
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !12074, metadata !1190), !dbg !12075
  store %struct._lwm2m_data_t** %dataP, %struct._lwm2m_data_t*** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t*** %dataP.addr, metadata !12076, metadata !1190), !dbg !12077
  call void @llvm.dbg.declare(metadata i64* %index, metadata !12078, metadata !1190), !dbg !12079
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12080, metadata !1190), !dbg !12081
  store i32 0, i32* %count, align 4, !dbg !12081
  call void @llvm.dbg.declare(metadata i8* %eFound, metadata !12082, metadata !1190), !dbg !12083
  store i8 0, i8* %eFound, align 1, !dbg !12083
  call void @llvm.dbg.declare(metadata i8* %bnFound, metadata !12084, metadata !1190), !dbg !12085
  store i8 0, i8* %bnFound, align 1, !dbg !12085
  call void @llvm.dbg.declare(metadata i8* %btFound, metadata !12086, metadata !1190), !dbg !12087
  store i8 0, i8* %btFound, align 1, !dbg !12087
  call void @llvm.dbg.declare(metadata i32* %bnStart, metadata !12088, metadata !1190), !dbg !12089
  call void @llvm.dbg.declare(metadata i32* %bnLen, metadata !12090, metadata !1190), !dbg !12091
  call void @llvm.dbg.declare(metadata %struct._record_t** %recordArray, metadata !12092, metadata !1190), !dbg !12093
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %parsedP, metadata !12094, metadata !1190), !dbg !12095
  %0 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !12096
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %0, align 8, !dbg !12097
  store %struct._record_t* null, %struct._record_t** %recordArray, align 8, !dbg !12098
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12099
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !12100
  %2 = load i64, i64* %bufferLen.addr, align 8, !dbg !12101
  %call = call i64 @prv_skipSpace(i8* %1, i64 %2), !dbg !12102
  store i64 %call, i64* %index, align 8, !dbg !12103
  %3 = load i64, i64* %index, align 8, !dbg !12104
  %4 = load i64, i64* %bufferLen.addr, align 8, !dbg !12106
  %cmp = icmp eq i64 %3, %4, !dbg !12107
  br i1 %cmp, label %if.then, label %if.end, !dbg !12108

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12109
  br label %return, !dbg !12109

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !12110
  %6 = load i64, i64* %index, align 8, !dbg !12112
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !12110
  %7 = load i8, i8* %arrayidx, align 1, !dbg !12110
  %conv = zext i8 %7 to i32, !dbg !12110
  %cmp1 = icmp ne i32 %conv, 123, !dbg !12113
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !12114

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !12115
  br label %return, !dbg !12115

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !12116, !llvm.loop !12117

do.body:                                          ; preds = %do.cond, %if.end4
  %8 = load i64, i64* %index, align 8, !dbg !12119
  %inc = add i64 %8, 1, !dbg !12119
  store i64 %inc, i64* %index, align 8, !dbg !12119
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !12119
  %10 = load i64, i64* %index, align 8, !dbg !12119
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !12119
  %11 = load i64, i64* %bufferLen.addr, align 8, !dbg !12119
  %12 = load i64, i64* %index, align 8, !dbg !12119
  %sub = sub i64 %11, %12, !dbg !12119
  %call5 = call i64 @prv_skipSpace(i8* %add.ptr, i64 %sub), !dbg !12119
  %13 = load i64, i64* %index, align 8, !dbg !12119
  %add = add i64 %13, %call5, !dbg !12119
  store i64 %add, i64* %index, align 8, !dbg !12119
  %14 = load i64, i64* %index, align 8, !dbg !12122
  %15 = load i64, i64* %bufferLen.addr, align 8, !dbg !12122
  %cmp6 = icmp eq i64 %14, %15, !dbg !12122
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !12119

if.then8:                                         ; preds = %do.body
  br label %error, !dbg !12122

if.end9:                                          ; preds = %do.body
  %16 = load i8*, i8** %buffer.addr, align 8, !dbg !12124
  %17 = load i64, i64* %index, align 8, !dbg !12126
  %arrayidx10 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !12124
  %18 = load i8, i8* %arrayidx10, align 1, !dbg !12124
  %conv11 = zext i8 %18 to i32, !dbg !12124
  %cmp12 = icmp ne i32 %conv11, 34, !dbg !12127
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !12128

if.then14:                                        ; preds = %if.end9
  br label %error, !dbg !12129

if.end15:                                         ; preds = %if.end9
  %19 = load i64, i64* %index, align 8, !dbg !12130
  %inc16 = add i64 %19, 1, !dbg !12130
  store i64 %inc16, i64* %index, align 8, !dbg !12130
  %20 = load i64, i64* %bufferLen.addr, align 8, !dbg !12132
  %cmp17 = icmp uge i64 %19, %20, !dbg !12133
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !12134

if.then19:                                        ; preds = %if.end15
  br label %error, !dbg !12135

if.end20:                                         ; preds = %if.end15
  %21 = load i8*, i8** %buffer.addr, align 8, !dbg !12136
  %22 = load i64, i64* %index, align 8, !dbg !12137
  %arrayidx21 = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !12136
  %23 = load i8, i8* %arrayidx21, align 1, !dbg !12136
  %conv22 = zext i8 %23 to i32, !dbg !12136
  switch i32 %conv22, label %sw.default256 [
    i32 101, label %sw.bb
    i32 98, label %sw.bb155
  ], !dbg !12138

sw.bb:                                            ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %recordIndex, metadata !12139, metadata !1190), !dbg !12142
  %24 = load i64, i64* %bufferLen.addr, align 8, !dbg !12143
  %25 = load i64, i64* %index, align 8, !dbg !12145
  %sub23 = sub i64 %24, %25, !dbg !12146
  %cmp24 = icmp ult i64 %sub23, 21, !dbg !12147
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !12148

if.then26:                                        ; preds = %sw.bb
  br label %error, !dbg !12149

if.end27:                                         ; preds = %sw.bb
  %26 = load i64, i64* %index, align 8, !dbg !12150
  %inc28 = add i64 %26, 1, !dbg !12150
  store i64 %inc28, i64* %index, align 8, !dbg !12150
  %27 = load i8*, i8** %buffer.addr, align 8, !dbg !12151
  %28 = load i64, i64* %index, align 8, !dbg !12153
  %arrayidx29 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !12151
  %29 = load i8, i8* %arrayidx29, align 1, !dbg !12151
  %conv30 = zext i8 %29 to i32, !dbg !12151
  %cmp31 = icmp ne i32 %conv30, 34, !dbg !12154
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !12155

if.then33:                                        ; preds = %if.end27
  br label %error, !dbg !12156

if.end34:                                         ; preds = %if.end27
  %30 = load i8, i8* %eFound, align 1, !dbg !12157
  %tobool = trunc i8 %30 to i1, !dbg !12157
  %conv35 = zext i1 %tobool to i32, !dbg !12157
  %cmp36 = icmp eq i32 %conv35, 1, !dbg !12159
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12160

if.then38:                                        ; preds = %if.end34
  br label %error, !dbg !12161

if.end39:                                         ; preds = %if.end34
  store i8 1, i8* %eFound, align 1, !dbg !12162
  %31 = load i64, i64* %index, align 8, !dbg !12163
  %inc40 = add i64 %31, 1, !dbg !12163
  store i64 %inc40, i64* %index, align 8, !dbg !12163
  %32 = load i8*, i8** %buffer.addr, align 8, !dbg !12163
  %33 = load i64, i64* %index, align 8, !dbg !12163
  %add.ptr41 = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !12163
  %34 = load i64, i64* %bufferLen.addr, align 8, !dbg !12163
  %35 = load i64, i64* %index, align 8, !dbg !12163
  %sub42 = sub i64 %34, %35, !dbg !12163
  %call43 = call i64 @prv_skipSpace(i8* %add.ptr41, i64 %sub42), !dbg !12163
  %36 = load i64, i64* %index, align 8, !dbg !12163
  %add44 = add i64 %36, %call43, !dbg !12163
  store i64 %add44, i64* %index, align 8, !dbg !12163
  %37 = load i64, i64* %index, align 8, !dbg !12165
  %38 = load i64, i64* %bufferLen.addr, align 8, !dbg !12165
  %cmp45 = icmp eq i64 %37, %38, !dbg !12165
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !12163

if.then47:                                        ; preds = %if.end39
  br label %error, !dbg !12165

if.end48:                                         ; preds = %if.end39
  %39 = load i8*, i8** %buffer.addr, align 8, !dbg !12167
  %40 = load i64, i64* %index, align 8, !dbg !12169
  %arrayidx49 = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !12167
  %41 = load i8, i8* %arrayidx49, align 1, !dbg !12167
  %conv50 = zext i8 %41 to i32, !dbg !12167
  %cmp51 = icmp ne i32 %conv50, 58, !dbg !12170
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !12171

if.then53:                                        ; preds = %if.end48
  br label %error, !dbg !12172

if.end54:                                         ; preds = %if.end48
  %42 = load i64, i64* %index, align 8, !dbg !12173
  %inc55 = add i64 %42, 1, !dbg !12173
  store i64 %inc55, i64* %index, align 8, !dbg !12173
  %43 = load i8*, i8** %buffer.addr, align 8, !dbg !12173
  %44 = load i64, i64* %index, align 8, !dbg !12173
  %add.ptr56 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !12173
  %45 = load i64, i64* %bufferLen.addr, align 8, !dbg !12173
  %46 = load i64, i64* %index, align 8, !dbg !12173
  %sub57 = sub i64 %45, %46, !dbg !12173
  %call58 = call i64 @prv_skipSpace(i8* %add.ptr56, i64 %sub57), !dbg !12173
  %47 = load i64, i64* %index, align 8, !dbg !12173
  %add59 = add i64 %47, %call58, !dbg !12173
  store i64 %add59, i64* %index, align 8, !dbg !12173
  %48 = load i64, i64* %index, align 8, !dbg !12175
  %49 = load i64, i64* %bufferLen.addr, align 8, !dbg !12175
  %cmp60 = icmp eq i64 %48, %49, !dbg !12175
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !12173

if.then62:                                        ; preds = %if.end54
  br label %error, !dbg !12175

if.end63:                                         ; preds = %if.end54
  %50 = load i8*, i8** %buffer.addr, align 8, !dbg !12177
  %51 = load i64, i64* %index, align 8, !dbg !12179
  %arrayidx64 = getelementptr inbounds i8, i8* %50, i64 %51, !dbg !12177
  %52 = load i8, i8* %arrayidx64, align 1, !dbg !12177
  %conv65 = zext i8 %52 to i32, !dbg !12177
  %cmp66 = icmp ne i32 %conv65, 91, !dbg !12180
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !12181

if.then68:                                        ; preds = %if.end63
  br label %error, !dbg !12182

if.end69:                                         ; preds = %if.end63
  %53 = load i64, i64* %index, align 8, !dbg !12183
  %inc70 = add i64 %53, 1, !dbg !12183
  store i64 %inc70, i64* %index, align 8, !dbg !12183
  %54 = load i8*, i8** %buffer.addr, align 8, !dbg !12183
  %55 = load i64, i64* %index, align 8, !dbg !12183
  %add.ptr71 = getelementptr inbounds i8, i8* %54, i64 %55, !dbg !12183
  %56 = load i64, i64* %bufferLen.addr, align 8, !dbg !12183
  %57 = load i64, i64* %index, align 8, !dbg !12183
  %sub72 = sub i64 %56, %57, !dbg !12183
  %call73 = call i64 @prv_skipSpace(i8* %add.ptr71, i64 %sub72), !dbg !12183
  %58 = load i64, i64* %index, align 8, !dbg !12183
  %add74 = add i64 %58, %call73, !dbg !12183
  store i64 %add74, i64* %index, align 8, !dbg !12183
  %59 = load i64, i64* %index, align 8, !dbg !12185
  %60 = load i64, i64* %bufferLen.addr, align 8, !dbg !12185
  %cmp75 = icmp eq i64 %59, %60, !dbg !12185
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !12183

if.then77:                                        ; preds = %if.end69
  br label %error, !dbg !12185

if.end78:                                         ; preds = %if.end69
  %61 = load i8*, i8** %buffer.addr, align 8, !dbg !12187
  %62 = load i64, i64* %index, align 8, !dbg !12188
  %add.ptr79 = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !12189
  %63 = load i64, i64* %bufferLen.addr, align 8, !dbg !12190
  %64 = load i64, i64* %index, align 8, !dbg !12191
  %sub80 = sub i64 %63, %64, !dbg !12192
  %call81 = call i32 @prv_countItems(i8* %add.ptr79, i64 %sub80), !dbg !12193
  store i32 %call81, i32* %count, align 4, !dbg !12194
  %65 = load i32, i32* %count, align 4, !dbg !12195
  %cmp82 = icmp sle i32 %65, 0, !dbg !12197
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !12198

if.then84:                                        ; preds = %if.end78
  br label %error, !dbg !12199

if.end85:                                         ; preds = %if.end78
  %66 = load i32, i32* %count, align 4, !dbg !12200
  %conv86 = sext i32 %66 to i64, !dbg !12200
  %mul = mul i64 %conv86, 32, !dbg !12201
  %call87 = call i8* @lwm2m_malloc(i64 %mul), !dbg !12202
  %67 = bitcast i8* %call87 to %struct._record_t*, !dbg !12203
  store %struct._record_t* %67, %struct._record_t** %recordArray, align 8, !dbg !12204
  %68 = load %struct._record_t*, %struct._record_t** %recordArray, align 8, !dbg !12205
  %cmp88 = icmp eq %struct._record_t* %68, null, !dbg !12207
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !12208

if.then90:                                        ; preds = %if.end85
  br label %error, !dbg !12209

if.end91:                                         ; preds = %if.end85
  store i32 0, i32* %recordIndex, align 4, !dbg !12210
  br label %while.cond, !dbg !12211

while.cond:                                       ; preds = %sw.epilog, %if.end91
  %69 = load i32, i32* %recordIndex, align 4, !dbg !12212
  %70 = load i32, i32* %count, align 4, !dbg !12213
  %cmp92 = icmp slt i32 %69, %70, !dbg !12214
  br i1 %cmp92, label %while.body, label %while.end148, !dbg !12211

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %itemLen, metadata !12215, metadata !1190), !dbg !12217
  %71 = load i8*, i8** %buffer.addr, align 8, !dbg !12218
  %72 = load i64, i64* %index, align 8, !dbg !12220
  %arrayidx94 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !12218
  %73 = load i8, i8* %arrayidx94, align 1, !dbg !12218
  %conv95 = zext i8 %73 to i32, !dbg !12218
  %cmp96 = icmp ne i32 %conv95, 123, !dbg !12221
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !12222

if.then98:                                        ; preds = %while.body
  br label %error, !dbg !12223

if.end99:                                         ; preds = %while.body
  store i32 0, i32* %itemLen, align 4, !dbg !12224
  br label %while.cond100, !dbg !12225

while.cond100:                                    ; preds = %while.body107, %if.end99
  %74 = load i8*, i8** %buffer.addr, align 8, !dbg !12226
  %75 = load i64, i64* %index, align 8, !dbg !12227
  %76 = load i32, i32* %itemLen, align 4, !dbg !12228
  %conv101 = sext i32 %76 to i64, !dbg !12228
  %add102 = add i64 %75, %conv101, !dbg !12229
  %arrayidx103 = getelementptr inbounds i8, i8* %74, i64 %add102, !dbg !12226
  %77 = load i8, i8* %arrayidx103, align 1, !dbg !12226
  %conv104 = zext i8 %77 to i32, !dbg !12226
  %cmp105 = icmp ne i32 %conv104, 125, !dbg !12230
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !12225

while.body107:                                    ; preds = %while.cond100
  %78 = load i32, i32* %itemLen, align 4, !dbg !12231
  %inc108 = add nsw i32 %78, 1, !dbg !12231
  store i32 %inc108, i32* %itemLen, align 4, !dbg !12231
  br label %while.cond100, !dbg !12225, !llvm.loop !12232

while.end:                                        ; preds = %while.cond100
  %79 = load i8*, i8** %buffer.addr, align 8, !dbg !12233
  %80 = load i64, i64* %index, align 8, !dbg !12235
  %add.ptr109 = getelementptr inbounds i8, i8* %79, i64 %80, !dbg !12236
  %add.ptr110 = getelementptr inbounds i8, i8* %add.ptr109, i64 1, !dbg !12237
  %81 = load i32, i32* %itemLen, align 4, !dbg !12238
  %sub111 = sub nsw i32 %81, 1, !dbg !12239
  %conv112 = sext i32 %sub111 to i64, !dbg !12238
  %82 = load %struct._record_t*, %struct._record_t** %recordArray, align 8, !dbg !12240
  %83 = load i32, i32* %recordIndex, align 4, !dbg !12241
  %idx.ext = sext i32 %83 to i64, !dbg !12242
  %add.ptr113 = getelementptr inbounds %struct._record_t, %struct._record_t* %82, i64 %idx.ext, !dbg !12242
  %call114 = call i32 @prv_parseItem(i8* %add.ptr110, i64 %conv112, %struct._record_t* %add.ptr113), !dbg !12243
  %cmp115 = icmp ne i32 0, %call114, !dbg !12244
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !12245

if.then117:                                       ; preds = %while.end
  br label %error, !dbg !12246

if.end118:                                        ; preds = %while.end
  %84 = load i32, i32* %recordIndex, align 4, !dbg !12248
  %inc119 = add nsw i32 %84, 1, !dbg !12248
  store i32 %inc119, i32* %recordIndex, align 4, !dbg !12248
  %85 = load i32, i32* %itemLen, align 4, !dbg !12249
  %conv120 = sext i32 %85 to i64, !dbg !12249
  %86 = load i64, i64* %index, align 8, !dbg !12250
  %add121 = add i64 %86, %conv120, !dbg !12250
  store i64 %add121, i64* %index, align 8, !dbg !12250
  %87 = load i64, i64* %index, align 8, !dbg !12251
  %inc122 = add i64 %87, 1, !dbg !12251
  store i64 %inc122, i64* %index, align 8, !dbg !12251
  %88 = load i8*, i8** %buffer.addr, align 8, !dbg !12251
  %89 = load i64, i64* %index, align 8, !dbg !12251
  %add.ptr123 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !12251
  %90 = load i64, i64* %bufferLen.addr, align 8, !dbg !12251
  %91 = load i64, i64* %index, align 8, !dbg !12251
  %sub124 = sub i64 %90, %91, !dbg !12251
  %call125 = call i64 @prv_skipSpace(i8* %add.ptr123, i64 %sub124), !dbg !12251
  %92 = load i64, i64* %index, align 8, !dbg !12251
  %add126 = add i64 %92, %call125, !dbg !12251
  store i64 %add126, i64* %index, align 8, !dbg !12251
  %93 = load i64, i64* %index, align 8, !dbg !12253
  %94 = load i64, i64* %bufferLen.addr, align 8, !dbg !12253
  %cmp127 = icmp eq i64 %93, %94, !dbg !12253
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !12251

if.then129:                                       ; preds = %if.end118
  br label %error, !dbg !12253

if.end130:                                        ; preds = %if.end118
  %95 = load i8*, i8** %buffer.addr, align 8, !dbg !12255
  %96 = load i64, i64* %index, align 8, !dbg !12256
  %arrayidx131 = getelementptr inbounds i8, i8* %95, i64 %96, !dbg !12255
  %97 = load i8, i8* %arrayidx131, align 1, !dbg !12255
  %conv132 = zext i8 %97 to i32, !dbg !12255
  switch i32 %conv132, label %sw.default [
    i32 44, label %sw.bb133
    i32 93, label %sw.bb143
  ], !dbg !12257

sw.bb133:                                         ; preds = %if.end130
  %98 = load i64, i64* %index, align 8, !dbg !12258
  %inc134 = add i64 %98, 1, !dbg !12258
  store i64 %inc134, i64* %index, align 8, !dbg !12258
  %99 = load i8*, i8** %buffer.addr, align 8, !dbg !12258
  %100 = load i64, i64* %index, align 8, !dbg !12258
  %add.ptr135 = getelementptr inbounds i8, i8* %99, i64 %100, !dbg !12258
  %101 = load i64, i64* %bufferLen.addr, align 8, !dbg !12258
  %102 = load i64, i64* %index, align 8, !dbg !12258
  %sub136 = sub i64 %101, %102, !dbg !12258
  %call137 = call i64 @prv_skipSpace(i8* %add.ptr135, i64 %sub136), !dbg !12258
  %103 = load i64, i64* %index, align 8, !dbg !12258
  %add138 = add i64 %103, %call137, !dbg !12258
  store i64 %add138, i64* %index, align 8, !dbg !12258
  %104 = load i64, i64* %index, align 8, !dbg !12261
  %105 = load i64, i64* %bufferLen.addr, align 8, !dbg !12261
  %cmp139 = icmp eq i64 %104, %105, !dbg !12261
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !12258

if.then141:                                       ; preds = %sw.bb133
  br label %error, !dbg !12261

if.end142:                                        ; preds = %sw.bb133
  br label %sw.epilog, !dbg !12263

sw.bb143:                                         ; preds = %if.end130
  %106 = load i32, i32* %recordIndex, align 4, !dbg !12264
  %107 = load i32, i32* %count, align 4, !dbg !12266
  %cmp144 = icmp eq i32 %106, %107, !dbg !12267
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !12268

if.then146:                                       ; preds = %sw.bb143
  br label %sw.epilog, !dbg !12269

if.end147:                                        ; preds = %sw.bb143
  br label %sw.default, !dbg !12266

sw.default:                                       ; preds = %if.end147, %if.end130
  br label %error, !dbg !12270

sw.epilog:                                        ; preds = %if.then146, %if.end142
  br label %while.cond, !dbg !12211, !llvm.loop !12271

while.end148:                                     ; preds = %while.cond
  %108 = load i8*, i8** %buffer.addr, align 8, !dbg !12273
  %109 = load i64, i64* %index, align 8, !dbg !12275
  %arrayidx149 = getelementptr inbounds i8, i8* %108, i64 %109, !dbg !12273
  %110 = load i8, i8* %arrayidx149, align 1, !dbg !12273
  %conv150 = zext i8 %110 to i32, !dbg !12273
  %cmp151 = icmp ne i32 %conv150, 93, !dbg !12276
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !12277

if.then153:                                       ; preds = %while.end148
  br label %error, !dbg !12278

if.end154:                                        ; preds = %while.end148
  br label %sw.epilog257, !dbg !12279

sw.bb155:                                         ; preds = %if.end20
  %111 = load i64, i64* %bufferLen.addr, align 8, !dbg !12280
  %112 = load i64, i64* %index, align 8, !dbg !12282
  %sub156 = sub i64 %111, %112, !dbg !12283
  %cmp157 = icmp ult i64 %sub156, 5, !dbg !12284
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !12285

if.then159:                                       ; preds = %sw.bb155
  br label %error, !dbg !12286

if.end160:                                        ; preds = %sw.bb155
  %113 = load i64, i64* %index, align 8, !dbg !12287
  %inc161 = add i64 %113, 1, !dbg !12287
  store i64 %inc161, i64* %index, align 8, !dbg !12287
  %114 = load i8*, i8** %buffer.addr, align 8, !dbg !12288
  %115 = load i64, i64* %index, align 8, !dbg !12289
  %arrayidx162 = getelementptr inbounds i8, i8* %114, i64 %115, !dbg !12288
  %116 = load i8, i8* %arrayidx162, align 1, !dbg !12288
  %conv163 = zext i8 %116 to i32, !dbg !12288
  switch i32 %conv163, label %sw.default254 [
    i32 116, label %sw.bb164
    i32 110, label %sw.bb196
  ], !dbg !12290

sw.bb164:                                         ; preds = %if.end160
  %117 = load i64, i64* %index, align 8, !dbg !12291
  %inc165 = add i64 %117, 1, !dbg !12291
  store i64 %inc165, i64* %index, align 8, !dbg !12291
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !12293
  %119 = load i64, i64* %index, align 8, !dbg !12295
  %arrayidx166 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !12293
  %120 = load i8, i8* %arrayidx166, align 1, !dbg !12293
  %conv167 = zext i8 %120 to i32, !dbg !12293
  %cmp168 = icmp ne i32 %conv167, 34, !dbg !12296
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !12297

if.then170:                                       ; preds = %sw.bb164
  br label %error, !dbg !12298

if.end171:                                        ; preds = %sw.bb164
  %121 = load i8, i8* %btFound, align 1, !dbg !12299
  %tobool172 = trunc i8 %121 to i1, !dbg !12299
  %conv173 = zext i1 %tobool172 to i32, !dbg !12299
  %cmp174 = icmp eq i32 %conv173, 1, !dbg !12301
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !12302

if.then176:                                       ; preds = %if.end171
  br label %error, !dbg !12303

if.end177:                                        ; preds = %if.end171
  store i8 1, i8* %btFound, align 1, !dbg !12304
  br label %while.cond178, !dbg !12305

while.cond178:                                    ; preds = %while.body189, %if.end177
  %122 = load i64, i64* %index, align 8, !dbg !12306
  %123 = load i64, i64* %bufferLen.addr, align 8, !dbg !12307
  %cmp179 = icmp ult i64 %122, %123, !dbg !12308
  br i1 %cmp179, label %land.lhs.true, label %land.end, !dbg !12309

land.lhs.true:                                    ; preds = %while.cond178
  %124 = load i8*, i8** %buffer.addr, align 8, !dbg !12310
  %125 = load i64, i64* %index, align 8, !dbg !12311
  %arrayidx181 = getelementptr inbounds i8, i8* %124, i64 %125, !dbg !12310
  %126 = load i8, i8* %arrayidx181, align 1, !dbg !12310
  %conv182 = zext i8 %126 to i32, !dbg !12310
  %cmp183 = icmp ne i32 %conv182, 44, !dbg !12312
  br i1 %cmp183, label %land.rhs, label %land.end, !dbg !12313

land.rhs:                                         ; preds = %land.lhs.true
  %127 = load i8*, i8** %buffer.addr, align 8, !dbg !12314
  %128 = load i64, i64* %index, align 8, !dbg !12315
  %arrayidx185 = getelementptr inbounds i8, i8* %127, i64 %128, !dbg !12314
  %129 = load i8, i8* %arrayidx185, align 1, !dbg !12314
  %conv186 = zext i8 %129 to i32, !dbg !12314
  %cmp187 = icmp ne i32 %conv186, 125, !dbg !12316
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond178
  %130 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond178 ], [ %cmp187, %land.rhs ]
  br i1 %130, label %while.body189, label %while.end191, !dbg !12305

while.body189:                                    ; preds = %land.end
  %131 = load i64, i64* %index, align 8, !dbg !12317
  %inc190 = add i64 %131, 1, !dbg !12317
  store i64 %inc190, i64* %index, align 8, !dbg !12317
  br label %while.cond178, !dbg !12305, !llvm.loop !12318

while.end191:                                     ; preds = %land.end
  %132 = load i64, i64* %index, align 8, !dbg !12319
  %133 = load i64, i64* %bufferLen.addr, align 8, !dbg !12321
  %cmp192 = icmp eq i64 %132, %133, !dbg !12322
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !12323

if.then194:                                       ; preds = %while.end191
  br label %error, !dbg !12324

if.end195:                                        ; preds = %while.end191
  %134 = load i64, i64* %index, align 8, !dbg !12325
  %dec = add i64 %134, -1, !dbg !12325
  store i64 %dec, i64* %index, align 8, !dbg !12325
  br label %sw.epilog255, !dbg !12326

sw.bb196:                                         ; preds = %if.end160
  call void @llvm.dbg.declare(metadata i32* %next, metadata !12327, metadata !1190), !dbg !12329
  call void @llvm.dbg.declare(metadata i32* %tokenStart, metadata !12330, metadata !1190), !dbg !12331
  call void @llvm.dbg.declare(metadata i32* %tokenLen, metadata !12332, metadata !1190), !dbg !12333
  call void @llvm.dbg.declare(metadata i32* %itemLen197, metadata !12334, metadata !1190), !dbg !12335
  %135 = load i64, i64* %index, align 8, !dbg !12336
  %inc198 = add i64 %135, 1, !dbg !12336
  store i64 %inc198, i64* %index, align 8, !dbg !12336
  %136 = load i8*, i8** %buffer.addr, align 8, !dbg !12337
  %137 = load i64, i64* %index, align 8, !dbg !12339
  %arrayidx199 = getelementptr inbounds i8, i8* %136, i64 %137, !dbg !12337
  %138 = load i8, i8* %arrayidx199, align 1, !dbg !12337
  %conv200 = zext i8 %138 to i32, !dbg !12337
  %cmp201 = icmp ne i32 %conv200, 34, !dbg !12340
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !12341

if.then203:                                       ; preds = %sw.bb196
  br label %error, !dbg !12342

if.end204:                                        ; preds = %sw.bb196
  %139 = load i8, i8* %bnFound, align 1, !dbg !12343
  %tobool205 = trunc i8 %139 to i1, !dbg !12343
  %conv206 = zext i1 %tobool205 to i32, !dbg !12343
  %cmp207 = icmp eq i32 %conv206, 1, !dbg !12345
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !12346

if.then209:                                       ; preds = %if.end204
  br label %error, !dbg !12347

if.end210:                                        ; preds = %if.end204
  store i8 1, i8* %bnFound, align 1, !dbg !12348
  %140 = load i64, i64* %index, align 8, !dbg !12349
  %sub211 = sub i64 %140, 3, !dbg !12349
  store i64 %sub211, i64* %index, align 8, !dbg !12349
  store i32 0, i32* %itemLen197, align 4, !dbg !12350
  br label %while.cond212, !dbg !12351

while.cond212:                                    ; preds = %while.body232, %if.end210
  %141 = load i8*, i8** %buffer.addr, align 8, !dbg !12352
  %142 = load i64, i64* %index, align 8, !dbg !12353
  %143 = load i32, i32* %itemLen197, align 4, !dbg !12354
  %conv213 = sext i32 %143 to i64, !dbg !12354
  %add214 = add i64 %142, %conv213, !dbg !12355
  %arrayidx215 = getelementptr inbounds i8, i8* %141, i64 %add214, !dbg !12352
  %144 = load i8, i8* %arrayidx215, align 1, !dbg !12352
  %conv216 = zext i8 %144 to i32, !dbg !12352
  %cmp217 = icmp ne i32 %conv216, 125, !dbg !12356
  br i1 %cmp217, label %land.lhs.true219, label %land.end231, !dbg !12357

land.lhs.true219:                                 ; preds = %while.cond212
  %145 = load i8*, i8** %buffer.addr, align 8, !dbg !12358
  %146 = load i64, i64* %index, align 8, !dbg !12359
  %147 = load i32, i32* %itemLen197, align 4, !dbg !12360
  %conv220 = sext i32 %147 to i64, !dbg !12360
  %add221 = add i64 %146, %conv220, !dbg !12361
  %arrayidx222 = getelementptr inbounds i8, i8* %145, i64 %add221, !dbg !12358
  %148 = load i8, i8* %arrayidx222, align 1, !dbg !12358
  %conv223 = zext i8 %148 to i32, !dbg !12358
  %cmp224 = icmp ne i32 %conv223, 44, !dbg !12362
  br i1 %cmp224, label %land.rhs226, label %land.end231, !dbg !12363

land.rhs226:                                      ; preds = %land.lhs.true219
  %149 = load i64, i64* %index, align 8, !dbg !12364
  %150 = load i32, i32* %itemLen197, align 4, !dbg !12365
  %conv227 = sext i32 %150 to i64, !dbg !12365
  %add228 = add i64 %149, %conv227, !dbg !12366
  %151 = load i64, i64* %bufferLen.addr, align 8, !dbg !12367
  %cmp229 = icmp ult i64 %add228, %151, !dbg !12368
  br label %land.end231

land.end231:                                      ; preds = %land.rhs226, %land.lhs.true219, %while.cond212
  %152 = phi i1 [ false, %land.lhs.true219 ], [ false, %while.cond212 ], [ %cmp229, %land.rhs226 ]
  br i1 %152, label %while.body232, label %while.end234, !dbg !12351

while.body232:                                    ; preds = %land.end231
  %153 = load i32, i32* %itemLen197, align 4, !dbg !12369
  %inc233 = add nsw i32 %153, 1, !dbg !12369
  store i32 %inc233, i32* %itemLen197, align 4, !dbg !12369
  br label %while.cond212, !dbg !12351, !llvm.loop !12371

while.end234:                                     ; preds = %land.end231
  %154 = load i64, i64* %index, align 8, !dbg !12373
  %155 = load i32, i32* %itemLen197, align 4, !dbg !12375
  %conv235 = sext i32 %155 to i64, !dbg !12375
  %add236 = add i64 %154, %conv235, !dbg !12376
  %156 = load i64, i64* %bufferLen.addr, align 8, !dbg !12377
  %cmp237 = icmp eq i64 %add236, %156, !dbg !12378
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !12379

if.then239:                                       ; preds = %while.end234
  br label %error, !dbg !12380

if.end240:                                        ; preds = %while.end234
  %157 = load i8*, i8** %buffer.addr, align 8, !dbg !12381
  %158 = load i64, i64* %index, align 8, !dbg !12382
  %add.ptr241 = getelementptr inbounds i8, i8* %157, i64 %158, !dbg !12383
  %159 = load i32, i32* %itemLen197, align 4, !dbg !12384
  %conv242 = sext i32 %159 to i64, !dbg !12384
  %call243 = call i32 @prv_split(i8* %add.ptr241, i64 %conv242, i32* %tokenStart, i32* %tokenLen, i32* %bnStart, i32* %bnLen), !dbg !12385
  store i32 %call243, i32* %next, align 4, !dbg !12386
  %160 = load i32, i32* %next, align 4, !dbg !12387
  %cmp244 = icmp slt i32 %160, 0, !dbg !12389
  br i1 %cmp244, label %if.then246, label %if.end247, !dbg !12390

if.then246:                                       ; preds = %if.end240
  br label %error, !dbg !12391

if.end247:                                        ; preds = %if.end240
  %161 = load i64, i64* %index, align 8, !dbg !12392
  %162 = load i32, i32* %bnStart, align 4, !dbg !12393
  %conv248 = sext i32 %162 to i64, !dbg !12393
  %add249 = add i64 %conv248, %161, !dbg !12393
  %conv250 = trunc i64 %add249 to i32, !dbg !12393
  store i32 %conv250, i32* %bnStart, align 4, !dbg !12393
  %163 = load i32, i32* %next, align 4, !dbg !12394
  %sub251 = sub nsw i32 %163, 1, !dbg !12395
  %conv252 = sext i32 %sub251 to i64, !dbg !12394
  %164 = load i64, i64* %index, align 8, !dbg !12396
  %add253 = add i64 %164, %conv252, !dbg !12396
  store i64 %add253, i64* %index, align 8, !dbg !12396
  br label %sw.epilog255, !dbg !12397

sw.default254:                                    ; preds = %if.end160
  br label %error, !dbg !12398

sw.epilog255:                                     ; preds = %if.end247, %if.end195
  br label %sw.epilog257, !dbg !12399

sw.default256:                                    ; preds = %if.end20
  br label %error, !dbg !12400

sw.epilog257:                                     ; preds = %sw.epilog255, %if.end154
  %165 = load i64, i64* %index, align 8, !dbg !12401
  %inc258 = add i64 %165, 1, !dbg !12401
  store i64 %inc258, i64* %index, align 8, !dbg !12401
  %166 = load i8*, i8** %buffer.addr, align 8, !dbg !12401
  %167 = load i64, i64* %index, align 8, !dbg !12401
  %add.ptr259 = getelementptr inbounds i8, i8* %166, i64 %167, !dbg !12401
  %168 = load i64, i64* %bufferLen.addr, align 8, !dbg !12401
  %169 = load i64, i64* %index, align 8, !dbg !12401
  %sub260 = sub i64 %168, %169, !dbg !12401
  %call261 = call i64 @prv_skipSpace(i8* %add.ptr259, i64 %sub260), !dbg !12401
  %170 = load i64, i64* %index, align 8, !dbg !12401
  %add262 = add i64 %170, %call261, !dbg !12401
  store i64 %add262, i64* %index, align 8, !dbg !12401
  %171 = load i64, i64* %index, align 8, !dbg !12403
  %172 = load i64, i64* %bufferLen.addr, align 8, !dbg !12403
  %cmp263 = icmp eq i64 %171, %172, !dbg !12403
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !12401

if.then265:                                       ; preds = %sw.epilog257
  br label %error, !dbg !12403

if.end266:                                        ; preds = %sw.epilog257
  br label %do.cond, !dbg !12405

do.cond:                                          ; preds = %if.end266
  %173 = load i8*, i8** %buffer.addr, align 8, !dbg !12406
  %174 = load i64, i64* %index, align 8, !dbg !12407
  %arrayidx267 = getelementptr inbounds i8, i8* %173, i64 %174, !dbg !12406
  %175 = load i8, i8* %arrayidx267, align 1, !dbg !12406
  %conv268 = zext i8 %175 to i32, !dbg !12406
  %cmp269 = icmp eq i32 %conv268, 44, !dbg !12408
  br i1 %cmp269, label %do.body, label %do.end, !dbg !12405, !llvm.loop !12117

do.end:                                           ; preds = %do.cond
  %176 = load i8*, i8** %buffer.addr, align 8, !dbg !12409
  %177 = load i64, i64* %index, align 8, !dbg !12411
  %arrayidx271 = getelementptr inbounds i8, i8* %176, i64 %177, !dbg !12409
  %178 = load i8, i8* %arrayidx271, align 1, !dbg !12409
  %conv272 = zext i8 %178 to i32, !dbg !12409
  %cmp273 = icmp ne i32 %conv272, 125, !dbg !12412
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !12413

if.then275:                                       ; preds = %do.end
  br label %error, !dbg !12414

if.end276:                                        ; preds = %do.end
  %179 = load i8, i8* %eFound, align 1, !dbg !12415
  %tobool277 = trunc i8 %179 to i1, !dbg !12415
  %conv278 = zext i1 %tobool277 to i32, !dbg !12415
  %cmp279 = icmp eq i32 %conv278, 1, !dbg !12417
  br i1 %cmp279, label %if.then281, label %if.end450, !dbg !12418

if.then281:                                       ; preds = %if.end276
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t* %baseURI, metadata !12419, metadata !1190), !dbg !12421
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %baseUriP, metadata !12422, metadata !1190), !dbg !12423
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %resultP, metadata !12424, metadata !1190), !dbg !12425
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12426, metadata !1190), !dbg !12427
  %180 = bitcast %struct.lwm2m_uri_t* %baseURI to i8*, !dbg !12428
  call void @llvm.memset.p0i8.i64(i8* %180, i8 0, i64 8, i32 2, i1 false), !dbg !12428
  %181 = load i8, i8* %bnFound, align 1, !dbg !12429
  %tobool282 = trunc i8 %181 to i1, !dbg !12429
  %conv283 = zext i1 %tobool282 to i32, !dbg !12429
  %cmp284 = icmp eq i32 %conv283, 0, !dbg !12431
  br i1 %cmp284, label %if.then286, label %if.else, !dbg !12432

if.then286:                                       ; preds = %if.then281
  %182 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12433
  store %struct.lwm2m_uri_t* %182, %struct.lwm2m_uri_t** %baseUriP, align 8, !dbg !12435
  br label %if.end328, !dbg !12436

if.else:                                          ; preds = %if.then281
  call void @llvm.dbg.declare(metadata i32* %res, metadata !12437, metadata !1190), !dbg !12439
  %183 = load i32, i32* %bnLen, align 4, !dbg !12440
  %cmp287 = icmp slt i32 %183, 3, !dbg !12442
  br i1 %cmp287, label %if.then301, label %lor.lhs.false, !dbg !12443

lor.lhs.false:                                    ; preds = %if.else
  %184 = load i8*, i8** %buffer.addr, align 8, !dbg !12444
  %185 = load i32, i32* %bnStart, align 4, !dbg !12445
  %idxprom = sext i32 %185 to i64, !dbg !12444
  %arrayidx289 = getelementptr inbounds i8, i8* %184, i64 %idxprom, !dbg !12444
  %186 = load i8, i8* %arrayidx289, align 1, !dbg !12444
  %conv290 = zext i8 %186 to i32, !dbg !12444
  %cmp291 = icmp ne i32 %conv290, 34, !dbg !12446
  br i1 %cmp291, label %if.then301, label %lor.lhs.false293, !dbg !12447

lor.lhs.false293:                                 ; preds = %lor.lhs.false
  %187 = load i8*, i8** %buffer.addr, align 8, !dbg !12448
  %188 = load i32, i32* %bnStart, align 4, !dbg !12449
  %189 = load i32, i32* %bnLen, align 4, !dbg !12450
  %add294 = add nsw i32 %188, %189, !dbg !12451
  %sub295 = sub nsw i32 %add294, 1, !dbg !12452
  %idxprom296 = sext i32 %sub295 to i64, !dbg !12448
  %arrayidx297 = getelementptr inbounds i8, i8* %187, i64 %idxprom296, !dbg !12448
  %190 = load i8, i8* %arrayidx297, align 1, !dbg !12448
  %conv298 = zext i8 %190 to i32, !dbg !12448
  %cmp299 = icmp ne i32 %conv298, 34, !dbg !12453
  br i1 %cmp299, label %if.then301, label %if.end302, !dbg !12454

if.then301:                                       ; preds = %lor.lhs.false293, %lor.lhs.false, %if.else
  br label %error, !dbg !12455

if.end302:                                        ; preds = %lor.lhs.false293
  %191 = load i32, i32* %bnStart, align 4, !dbg !12457
  %add303 = add nsw i32 %191, 1, !dbg !12457
  store i32 %add303, i32* %bnStart, align 4, !dbg !12457
  %192 = load i32, i32* %bnLen, align 4, !dbg !12458
  %sub304 = sub nsw i32 %192, 2, !dbg !12458
  store i32 %sub304, i32* %bnLen, align 4, !dbg !12458
  %193 = load i32, i32* %bnLen, align 4, !dbg !12459
  %cmp305 = icmp eq i32 %193, 1, !dbg !12461
  br i1 %cmp305, label %if.then307, label %if.else315, !dbg !12462

if.then307:                                       ; preds = %if.end302
  %194 = load i8*, i8** %buffer.addr, align 8, !dbg !12463
  %195 = load i32, i32* %bnStart, align 4, !dbg !12466
  %idxprom308 = sext i32 %195 to i64, !dbg !12463
  %arrayidx309 = getelementptr inbounds i8, i8* %194, i64 %idxprom308, !dbg !12463
  %196 = load i8, i8* %arrayidx309, align 1, !dbg !12463
  %conv310 = zext i8 %196 to i32, !dbg !12463
  %cmp311 = icmp ne i32 %conv310, 47, !dbg !12467
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !12468

if.then313:                                       ; preds = %if.then307
  br label %error, !dbg !12469

if.end314:                                        ; preds = %if.then307
  store %struct.lwm2m_uri_t* null, %struct.lwm2m_uri_t** %baseUriP, align 8, !dbg !12470
  br label %if.end327, !dbg !12471

if.else315:                                       ; preds = %if.end302
  %197 = load i8*, i8** %buffer.addr, align 8, !dbg !12472
  %198 = load i32, i32* %bnStart, align 4, !dbg !12474
  %idx.ext316 = sext i32 %198 to i64, !dbg !12475
  %add.ptr317 = getelementptr inbounds i8, i8* %197, i64 %idx.ext316, !dbg !12475
  %199 = load i32, i32* %bnLen, align 4, !dbg !12476
  %conv318 = sext i32 %199 to i64, !dbg !12476
  %call319 = call i32 @lwm2m_stringToUri(i8* %add.ptr317, i64 %conv318, %struct.lwm2m_uri_t* %baseURI), !dbg !12477
  store i32 %call319, i32* %res, align 4, !dbg !12478
  %200 = load i32, i32* %res, align 4, !dbg !12479
  %cmp320 = icmp slt i32 %200, 0, !dbg !12481
  br i1 %cmp320, label %if.then325, label %lor.lhs.false322, !dbg !12482

lor.lhs.false322:                                 ; preds = %if.else315
  %201 = load i32, i32* %res, align 4, !dbg !12483
  %202 = load i32, i32* %bnLen, align 4, !dbg !12484
  %cmp323 = icmp ne i32 %201, %202, !dbg !12485
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !12486

if.then325:                                       ; preds = %lor.lhs.false322, %if.else315
  br label %error, !dbg !12487

if.end326:                                        ; preds = %lor.lhs.false322
  store %struct.lwm2m_uri_t* %baseURI, %struct.lwm2m_uri_t** %baseUriP, align 8, !dbg !12488
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.end314
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then286
  %203 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %baseUriP, align 8, !dbg !12489
  %204 = load %struct._record_t*, %struct._record_t** %recordArray, align 8, !dbg !12490
  %205 = load i32, i32* %count, align 4, !dbg !12491
  %call329 = call i32 @prv_convertRecord(%struct.lwm2m_uri_t* %203, %struct._record_t* %204, i32 %205, %struct._lwm2m_data_t** %parsedP), !dbg !12492
  store i32 %call329, i32* %count, align 4, !dbg !12493
  %206 = load %struct._record_t*, %struct._record_t** %recordArray, align 8, !dbg !12494
  %207 = bitcast %struct._record_t* %206 to i8*, !dbg !12494
  call void @lwm2m_free(i8* %207), !dbg !12495
  store %struct._record_t* null, %struct._record_t** %recordArray, align 8, !dbg !12496
  %208 = load i32, i32* %count, align 4, !dbg !12497
  %cmp330 = icmp sgt i32 %208, 0, !dbg !12499
  br i1 %cmp330, label %land.lhs.true332, label %if.else439, !dbg !12500

land.lhs.true332:                                 ; preds = %if.end328
  %209 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12501
  %cmp333 = icmp ne %struct.lwm2m_uri_t* %209, null, !dbg !12502
  br i1 %cmp333, label %if.then335, label %if.else439, !dbg !12503

if.then335:                                       ; preds = %land.lhs.true332
  %210 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12504
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %210, i32 0, i32 0, !dbg !12507
  %211 = load i32, i32* %type, align 8, !dbg !12507
  %cmp336 = icmp ne i32 %211, 1, !dbg !12508
  br i1 %cmp336, label %if.then343, label %lor.lhs.false338, !dbg !12509

lor.lhs.false338:                                 ; preds = %if.then335
  %212 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12510
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %212, i32 0, i32 1, !dbg !12511
  %213 = load i16, i16* %id, align 4, !dbg !12511
  %conv339 = zext i16 %213 to i32, !dbg !12510
  %214 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12512
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %214, i32 0, i32 1, !dbg !12513
  %215 = load i16, i16* %objectId, align 2, !dbg !12513
  %conv340 = zext i16 %215 to i32, !dbg !12512
  %cmp341 = icmp ne i32 %conv339, %conv340, !dbg !12514
  br i1 %cmp341, label %if.then343, label %if.end344, !dbg !12515

if.then343:                                       ; preds = %lor.lhs.false338, %if.then335
  br label %error, !dbg !12516

if.end344:                                        ; preds = %lor.lhs.false338
  %216 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12517
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %216, i32 0, i32 0, !dbg !12517
  %217 = load i8, i8* %flag, align 2, !dbg !12517
  %conv345 = zext i8 %217 to i32, !dbg !12517
  %and = and i32 %conv345, 2, !dbg !12517
  %cmp346 = icmp ne i32 %and, 0, !dbg !12517
  br i1 %cmp346, label %if.else353, label %if.then348, !dbg !12519

if.then348:                                       ; preds = %if.end344
  %218 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12520
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %218, i32 0, i32 2, !dbg !12522
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !12523
  %count349 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !12524
  %219 = load i64, i64* %count349, align 8, !dbg !12524
  %conv350 = trunc i64 %219 to i32, !dbg !12520
  store i32 %conv350, i32* %size, align 4, !dbg !12525
  %220 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12526
  %value351 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %220, i32 0, i32 2, !dbg !12527
  %asChildren352 = bitcast %union.anon.0* %value351 to %struct.anon.0*, !dbg !12528
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren352, i32 0, i32 1, !dbg !12529
  %221 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !12529
  store %struct._lwm2m_data_t* %221, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12530
  br label %if.end438, !dbg !12531

if.else353:                                       ; preds = %if.end344
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12532, metadata !1190), !dbg !12534
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12535
  store i32 0, i32* %i, align 4, !dbg !12536
  br label %for.cond, !dbg !12538

for.cond:                                         ; preds = %for.inc, %if.else353
  %222 = load i32, i32* %i, align 4, !dbg !12539
  %223 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12541
  %value354 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %223, i32 0, i32 2, !dbg !12542
  %asChildren355 = bitcast %union.anon.0* %value354 to %struct.anon.0*, !dbg !12543
  %count356 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren355, i32 0, i32 0, !dbg !12544
  %224 = load i64, i64* %count356, align 8, !dbg !12544
  %conv357 = trunc i64 %224 to i32, !dbg !12545
  %cmp358 = icmp slt i32 %222, %conv357, !dbg !12546
  br i1 %cmp358, label %land.rhs360, label %land.end363, !dbg !12547

land.rhs360:                                      ; preds = %for.cond
  %225 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12548
  %cmp361 = icmp eq %struct._lwm2m_data_t* %225, null, !dbg !12549
  br label %land.end363

land.end363:                                      ; preds = %land.rhs360, %for.cond
  %226 = phi i1 [ false, %for.cond ], [ %cmp361, %land.rhs360 ]
  br i1 %226, label %for.body, label %for.end, !dbg !12550

for.body:                                         ; preds = %land.end363
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %targetP, metadata !12551, metadata !1190), !dbg !12553
  %227 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12554
  %value364 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %227, i32 0, i32 2, !dbg !12555
  %asChildren365 = bitcast %union.anon.0* %value364 to %struct.anon.0*, !dbg !12556
  %array366 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren365, i32 0, i32 1, !dbg !12557
  %228 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array366, align 8, !dbg !12557
  %229 = load i32, i32* %i, align 4, !dbg !12558
  %idx.ext367 = sext i32 %229 to i64, !dbg !12559
  %add.ptr368 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %228, i64 %idx.ext367, !dbg !12559
  store %struct._lwm2m_data_t* %add.ptr368, %struct._lwm2m_data_t** %targetP, align 8, !dbg !12560
  %230 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !12561
  %id369 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %230, i32 0, i32 1, !dbg !12563
  %231 = load i16, i16* %id369, align 4, !dbg !12563
  %conv370 = zext i16 %231 to i32, !dbg !12561
  %232 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12564
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %232, i32 0, i32 2, !dbg !12565
  %233 = load i16, i16* %instanceId, align 2, !dbg !12565
  %conv371 = zext i16 %233 to i32, !dbg !12564
  %cmp372 = icmp eq i32 %conv370, %conv371, !dbg !12566
  br i1 %cmp372, label %if.then374, label %if.end382, !dbg !12567

if.then374:                                       ; preds = %for.body
  %234 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !12568
  %value375 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %234, i32 0, i32 2, !dbg !12570
  %asChildren376 = bitcast %union.anon.0* %value375 to %struct.anon.0*, !dbg !12571
  %array377 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren376, i32 0, i32 1, !dbg !12572
  %235 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array377, align 8, !dbg !12572
  store %struct._lwm2m_data_t* %235, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12573
  %236 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !12574
  %value378 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %236, i32 0, i32 2, !dbg !12575
  %asChildren379 = bitcast %union.anon.0* %value378 to %struct.anon.0*, !dbg !12576
  %count380 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren379, i32 0, i32 0, !dbg !12577
  %237 = load i64, i64* %count380, align 8, !dbg !12577
  %conv381 = trunc i64 %237 to i32, !dbg !12574
  store i32 %conv381, i32* %size, align 4, !dbg !12578
  br label %if.end382, !dbg !12579

if.end382:                                        ; preds = %if.then374, %for.body
  br label %for.inc, !dbg !12580

for.inc:                                          ; preds = %if.end382
  %238 = load i32, i32* %i, align 4, !dbg !12581
  %inc383 = add nsw i32 %238, 1, !dbg !12581
  store i32 %inc383, i32* %i, align 4, !dbg !12581
  br label %for.cond, !dbg !12582, !llvm.loop !12583

for.end:                                          ; preds = %land.end363
  %239 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12585
  %cmp384 = icmp eq %struct._lwm2m_data_t* %239, null, !dbg !12587
  br i1 %cmp384, label %if.then386, label %if.end387, !dbg !12588

if.then386:                                       ; preds = %for.end
  br label %error, !dbg !12589

if.end387:                                        ; preds = %for.end
  %240 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12590
  %flag388 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %240, i32 0, i32 0, !dbg !12590
  %241 = load i8, i8* %flag388, align 2, !dbg !12590
  %conv389 = zext i8 %241 to i32, !dbg !12590
  %and390 = and i32 %conv389, 1, !dbg !12590
  %cmp391 = icmp ne i32 %and390, 0, !dbg !12590
  br i1 %cmp391, label %if.then393, label %if.end437, !dbg !12592

if.then393:                                       ; preds = %if.end387
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %resP, metadata !12593, metadata !1190), !dbg !12595
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %resP, align 8, !dbg !12596
  store i32 0, i32* %i, align 4, !dbg !12597
  br label %for.cond394, !dbg !12599

for.cond394:                                      ; preds = %for.inc430, %if.then393
  %242 = load i32, i32* %i, align 4, !dbg !12600
  %243 = load i32, i32* %size, align 4, !dbg !12602
  %cmp395 = icmp slt i32 %242, %243, !dbg !12603
  br i1 %cmp395, label %land.rhs397, label %land.end400, !dbg !12604

land.rhs397:                                      ; preds = %for.cond394
  %244 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resP, align 8, !dbg !12605
  %cmp398 = icmp eq %struct._lwm2m_data_t* %244, null, !dbg !12606
  br label %land.end400

land.end400:                                      ; preds = %land.rhs397, %for.cond394
  %245 = phi i1 [ false, %for.cond394 ], [ %cmp398, %land.rhs397 ]
  br i1 %245, label %for.body401, label %for.end432, !dbg !12607

for.body401:                                      ; preds = %land.end400
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %targetP402, metadata !12608, metadata !1190), !dbg !12610
  %246 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12611
  %247 = load i32, i32* %i, align 4, !dbg !12612
  %idx.ext403 = sext i32 %247 to i64, !dbg !12613
  %add.ptr404 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %246, i64 %idx.ext403, !dbg !12613
  store %struct._lwm2m_data_t* %add.ptr404, %struct._lwm2m_data_t** %targetP402, align 8, !dbg !12614
  %248 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP402, align 8, !dbg !12615
  %id405 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %248, i32 0, i32 1, !dbg !12617
  %249 = load i16, i16* %id405, align 4, !dbg !12617
  %conv406 = zext i16 %249 to i32, !dbg !12615
  %250 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !12618
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %250, i32 0, i32 3, !dbg !12619
  %251 = load i16, i16* %resourceId, align 2, !dbg !12619
  %conv407 = zext i16 %251 to i32, !dbg !12618
  %cmp408 = icmp eq i32 %conv406, %conv407, !dbg !12620
  br i1 %cmp408, label %if.then410, label %if.end429, !dbg !12621

if.then410:                                       ; preds = %for.body401
  %252 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP402, align 8, !dbg !12622
  %type411 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %252, i32 0, i32 0, !dbg !12625
  %253 = load i32, i32* %type411, align 8, !dbg !12625
  %cmp412 = icmp eq i32 %253, 3, !dbg !12626
  br i1 %cmp412, label %if.then414, label %if.else422, !dbg !12627

if.then414:                                       ; preds = %if.then410
  %254 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP402, align 8, !dbg !12628
  %value415 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %254, i32 0, i32 2, !dbg !12630
  %asChildren416 = bitcast %union.anon.0* %value415 to %struct.anon.0*, !dbg !12631
  %array417 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren416, i32 0, i32 1, !dbg !12632
  %255 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array417, align 8, !dbg !12632
  store %struct._lwm2m_data_t* %255, %struct._lwm2m_data_t** %resP, align 8, !dbg !12633
  %256 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP402, align 8, !dbg !12634
  %value418 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %256, i32 0, i32 2, !dbg !12635
  %asChildren419 = bitcast %union.anon.0* %value418 to %struct.anon.0*, !dbg !12636
  %count420 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren419, i32 0, i32 0, !dbg !12637
  %257 = load i64, i64* %count420, align 8, !dbg !12637
  %conv421 = trunc i64 %257 to i32, !dbg !12634
  store i32 %conv421, i32* %size, align 4, !dbg !12638
  br label %if.end428, !dbg !12639

if.else422:                                       ; preds = %if.then410
  %258 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP402, align 8, !dbg !12640
  %call423 = call i32 @prv_dataStrip(i32 1, %struct._lwm2m_data_t* %258, %struct._lwm2m_data_t** %resP), !dbg !12642
  store i32 %call423, i32* %size, align 4, !dbg !12643
  %259 = load i32, i32* %size, align 4, !dbg !12644
  %cmp424 = icmp sle i32 %259, 0, !dbg !12646
  br i1 %cmp424, label %if.then426, label %if.end427, !dbg !12647

if.then426:                                       ; preds = %if.else422
  br label %error, !dbg !12648

if.end427:                                        ; preds = %if.else422
  %260 = load i32, i32* %count, align 4, !dbg !12649
  %261 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12650
  call void @lwm2m_data_free(i32 %260, %struct._lwm2m_data_t* %261), !dbg !12651
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12652
  br label %if.end428

if.end428:                                        ; preds = %if.end427, %if.then414
  br label %if.end429, !dbg !12653

if.end429:                                        ; preds = %if.end428, %for.body401
  br label %for.inc430, !dbg !12654

for.inc430:                                       ; preds = %if.end429
  %262 = load i32, i32* %i, align 4, !dbg !12655
  %inc431 = add nsw i32 %262, 1, !dbg !12655
  store i32 %inc431, i32* %i, align 4, !dbg !12655
  br label %for.cond394, !dbg !12656, !llvm.loop !12657

for.end432:                                       ; preds = %land.end400
  %263 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resP, align 8, !dbg !12659
  %cmp433 = icmp eq %struct._lwm2m_data_t* %263, null, !dbg !12661
  br i1 %cmp433, label %if.then435, label %if.end436, !dbg !12662

if.then435:                                       ; preds = %for.end432
  br label %error, !dbg !12663

if.end436:                                        ; preds = %for.end432
  %264 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resP, align 8, !dbg !12664
  store %struct._lwm2m_data_t* %264, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12665
  br label %if.end437, !dbg !12666

if.end437:                                        ; preds = %if.end436, %if.end387
  br label %if.end438

if.end438:                                        ; preds = %if.end437, %if.then348
  br label %if.end440, !dbg !12667

if.else439:                                       ; preds = %land.lhs.true332, %if.end328
  %265 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12668
  store %struct._lwm2m_data_t* %265, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12670
  %266 = load i32, i32* %count, align 4, !dbg !12671
  store i32 %266, i32* %size, align 4, !dbg !12672
  br label %if.end440

if.end440:                                        ; preds = %if.else439, %if.end438
  %267 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12673
  %cmp441 = icmp ne %struct._lwm2m_data_t* %267, null, !dbg !12675
  br i1 %cmp441, label %if.then443, label %if.end449, !dbg !12676

if.then443:                                       ; preds = %if.end440
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %tempP, metadata !12677, metadata !1190), !dbg !12679
  %268 = load i32, i32* %size, align 4, !dbg !12680
  %269 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12681
  %call444 = call i32 @prv_dataStrip(i32 %268, %struct._lwm2m_data_t* %269, %struct._lwm2m_data_t** %tempP), !dbg !12682
  store i32 %call444, i32* %size, align 4, !dbg !12683
  %270 = load i32, i32* %size, align 4, !dbg !12684
  %cmp445 = icmp sle i32 %270, 0, !dbg !12686
  br i1 %cmp445, label %if.then447, label %if.end448, !dbg !12687

if.then447:                                       ; preds = %if.then443
  br label %error, !dbg !12688

if.end448:                                        ; preds = %if.then443
  %271 = load i32, i32* %count, align 4, !dbg !12689
  %272 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12690
  call void @lwm2m_data_free(i32 %271, %struct._lwm2m_data_t* %272), !dbg !12691
  %273 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tempP, align 8, !dbg !12692
  store %struct._lwm2m_data_t* %273, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12693
  br label %if.end449, !dbg !12694

if.end449:                                        ; preds = %if.end448, %if.end440
  %274 = load i32, i32* %size, align 4, !dbg !12695
  store i32 %274, i32* %count, align 4, !dbg !12696
  %275 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %resultP, align 8, !dbg !12697
  %276 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !12698
  store %struct._lwm2m_data_t* %275, %struct._lwm2m_data_t** %276, align 8, !dbg !12699
  br label %if.end450, !dbg !12700

if.end450:                                        ; preds = %if.end449, %if.end276
  %277 = load i32, i32* %count, align 4, !dbg !12701
  store i32 %277, i32* %retval, align 4, !dbg !12702
  br label %return, !dbg !12702

error:                                            ; preds = %if.then447, %if.then435, %if.then426, %if.then386, %if.then343, %if.then325, %if.then313, %if.then301, %if.then275, %if.then265, %sw.default256, %sw.default254, %if.then246, %if.then239, %if.then209, %if.then203, %if.then194, %if.then176, %if.then170, %if.then159, %if.then153, %sw.default, %if.then141, %if.then129, %if.then117, %if.then98, %if.then90, %if.then84, %if.then77, %if.then68, %if.then62, %if.then53, %if.then47, %if.then38, %if.then33, %if.then26, %if.then19, %if.then14, %if.then8
  %278 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12703
  %cmp451 = icmp ne %struct._lwm2m_data_t* %278, null, !dbg !12705
  br i1 %cmp451, label %if.then453, label %if.end454, !dbg !12706

if.then453:                                       ; preds = %error
  %279 = load i32, i32* %count, align 4, !dbg !12707
  %280 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12709
  call void @lwm2m_data_free(i32 %279, %struct._lwm2m_data_t* %280), !dbg !12710
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %parsedP, align 8, !dbg !12711
  br label %if.end454, !dbg !12712

if.end454:                                        ; preds = %if.then453, %error
  %281 = load %struct._record_t*, %struct._record_t** %recordArray, align 8, !dbg !12713
  %cmp455 = icmp ne %struct._record_t* %281, null, !dbg !12715
  br i1 %cmp455, label %if.then457, label %if.end458, !dbg !12716

if.then457:                                       ; preds = %if.end454
  %282 = load %struct._record_t*, %struct._record_t** %recordArray, align 8, !dbg !12717
  %283 = bitcast %struct._record_t* %282 to i8*, !dbg !12717
  call void @lwm2m_free(i8* %283), !dbg !12719
  br label %if.end458, !dbg !12720

if.end458:                                        ; preds = %if.then457, %if.end454
  store i32 -1, i32* %retval, align 4, !dbg !12721
  br label %return, !dbg !12721

return:                                           ; preds = %if.end458, %if.end450, %if.then3, %if.then
  %284 = load i32, i32* %retval, align 4, !dbg !12722
  ret i32 %284, !dbg !12722
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @prv_skipSpace(i8* %buffer, i64 %bufferLen) #0 !dbg !12723 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !12726, metadata !1190), !dbg !12727
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !12728, metadata !1190), !dbg !12729
  call void @llvm.dbg.declare(metadata i64* %i, metadata !12730, metadata !1190), !dbg !12731
  store i64 0, i64* %i, align 8, !dbg !12732
  br label %while.cond, !dbg !12733

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %i, align 8, !dbg !12734
  %1 = load i64, i64* %bufferLen.addr, align 8, !dbg !12735
  %cmp = icmp ult i64 %0, %1, !dbg !12736
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12737

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !12738
  %3 = load i64, i64* %i, align 8, !dbg !12739
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %3, !dbg !12738
  %4 = load i8, i8* %arrayidx, align 1, !dbg !12738
  %call = call i32 @prv_isWhiteSpace(i8 zeroext %4), !dbg !12740
  %tobool = icmp ne i32 %call, 0, !dbg !12737
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %5, label %while.body, label %while.end, !dbg !12733

while.body:                                       ; preds = %land.end
  %6 = load i64, i64* %i, align 8, !dbg !12741
  %inc = add i64 %6, 1, !dbg !12741
  store i64 %inc, i64* %i, align 8, !dbg !12741
  br label %while.cond, !dbg !12733, !llvm.loop !12743

while.end:                                        ; preds = %land.end
  %7 = load i64, i64* %i, align 8, !dbg !12745
  ret i64 %7, !dbg !12746
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_countItems(i8* %buffer, i64 %bufferLen) #0 !dbg !12747 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %count = alloca i32, align 4
  %index = alloca i64, align 8
  %in = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !12748, metadata !1190), !dbg !12749
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !12750, metadata !1190), !dbg !12751
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12752, metadata !1190), !dbg !12753
  call void @llvm.dbg.declare(metadata i64* %index, metadata !12754, metadata !1190), !dbg !12755
  call void @llvm.dbg.declare(metadata i32* %in, metadata !12756, metadata !1190), !dbg !12757
  store i32 0, i32* %count, align 4, !dbg !12758
  store i64 0, i64* %index, align 8, !dbg !12759
  store i32 0, i32* %in, align 4, !dbg !12760
  br label %while.cond, !dbg !12761

while.cond:                                       ; preds = %if.end62, %entry
  %0 = load i64, i64* %index, align 8, !dbg !12762
  %1 = load i64, i64* %bufferLen.addr, align 8, !dbg !12763
  %cmp = icmp ult i64 %0, %1, !dbg !12764
  br i1 %cmp, label %while.body, label %while.end, !dbg !12761

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %in, align 4, !dbg !12765
  %cmp1 = icmp eq i32 %2, 0, !dbg !12768
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12769

if.then:                                          ; preds = %while.body
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !12770
  %4 = load i64, i64* %index, align 8, !dbg !12773
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !12770
  %5 = load i8, i8* %arrayidx, align 1, !dbg !12770
  %conv = zext i8 %5 to i32, !dbg !12770
  %cmp2 = icmp ne i32 %conv, 123, !dbg !12774
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !12775

if.then4:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !12776
  br label %return, !dbg !12776

if.end:                                           ; preds = %if.then
  store i32 1, i32* %in, align 4, !dbg !12777
  %6 = load i64, i64* %index, align 8, !dbg !12778
  %inc = add i64 %6, 1, !dbg !12778
  store i64 %inc, i64* %index, align 8, !dbg !12778
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !12778
  %8 = load i64, i64* %index, align 8, !dbg !12778
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !12778
  %9 = load i64, i64* %bufferLen.addr, align 8, !dbg !12778
  %10 = load i64, i64* %index, align 8, !dbg !12778
  %sub = sub i64 %9, %10, !dbg !12778
  %call = call i64 @prv_skipSpace(i8* %add.ptr, i64 %sub), !dbg !12778
  %11 = load i64, i64* %index, align 8, !dbg !12778
  %add = add i64 %11, %call, !dbg !12778
  store i64 %add, i64* %index, align 8, !dbg !12778
  %12 = load i64, i64* %index, align 8, !dbg !12780
  %13 = load i64, i64* %bufferLen.addr, align 8, !dbg !12780
  %cmp5 = icmp eq i64 %12, %13, !dbg !12780
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12778

if.then7:                                         ; preds = %if.end
  br label %error, !dbg !12780

if.end8:                                          ; preds = %if.end
  br label %if.end62, !dbg !12782

if.else:                                          ; preds = %while.body
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !12783
  %15 = load i64, i64* %index, align 8, !dbg !12786
  %arrayidx9 = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !12783
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !12783
  %conv10 = zext i8 %16 to i32, !dbg !12783
  %cmp11 = icmp eq i32 %conv10, 123, !dbg !12787
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !12788

if.then13:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !12789
  br label %return, !dbg !12789

if.end14:                                         ; preds = %if.else
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !12790
  %18 = load i64, i64* %index, align 8, !dbg !12792
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !12790
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !12790
  %conv16 = zext i8 %19 to i32, !dbg !12790
  %cmp17 = icmp eq i32 %conv16, 125, !dbg !12793
  br i1 %cmp17, label %if.then19, label %if.else51, !dbg !12794

if.then19:                                        ; preds = %if.end14
  store i32 0, i32* %in, align 4, !dbg !12795
  %20 = load i32, i32* %count, align 4, !dbg !12797
  %inc20 = add nsw i32 %20, 1, !dbg !12797
  store i32 %inc20, i32* %count, align 4, !dbg !12797
  %21 = load i64, i64* %index, align 8, !dbg !12798
  %inc21 = add i64 %21, 1, !dbg !12798
  store i64 %inc21, i64* %index, align 8, !dbg !12798
  %22 = load i8*, i8** %buffer.addr, align 8, !dbg !12798
  %23 = load i64, i64* %index, align 8, !dbg !12798
  %add.ptr22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !12798
  %24 = load i64, i64* %bufferLen.addr, align 8, !dbg !12798
  %25 = load i64, i64* %index, align 8, !dbg !12798
  %sub23 = sub i64 %24, %25, !dbg !12798
  %call24 = call i64 @prv_skipSpace(i8* %add.ptr22, i64 %sub23), !dbg !12798
  %26 = load i64, i64* %index, align 8, !dbg !12798
  %add25 = add i64 %26, %call24, !dbg !12798
  store i64 %add25, i64* %index, align 8, !dbg !12798
  %27 = load i64, i64* %index, align 8, !dbg !12800
  %28 = load i64, i64* %bufferLen.addr, align 8, !dbg !12800
  %cmp26 = icmp eq i64 %27, %28, !dbg !12800
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !12798

if.then28:                                        ; preds = %if.then19
  br label %error, !dbg !12800

if.end29:                                         ; preds = %if.then19
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !12802
  %30 = load i64, i64* %index, align 8, !dbg !12804
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !12802
  %31 = load i8, i8* %arrayidx30, align 1, !dbg !12802
  %conv31 = zext i8 %31 to i32, !dbg !12802
  %cmp32 = icmp eq i32 %conv31, 93, !dbg !12805
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !12806

if.then34:                                        ; preds = %if.end29
  br label %while.end, !dbg !12807

if.end35:                                         ; preds = %if.end29
  %32 = load i8*, i8** %buffer.addr, align 8, !dbg !12809
  %33 = load i64, i64* %index, align 8, !dbg !12811
  %arrayidx36 = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !12809
  %34 = load i8, i8* %arrayidx36, align 1, !dbg !12809
  %conv37 = zext i8 %34 to i32, !dbg !12809
  %cmp38 = icmp ne i32 %conv37, 44, !dbg !12812
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !12813

if.then40:                                        ; preds = %if.end35
  store i32 -1, i32* %retval, align 4, !dbg !12814
  br label %return, !dbg !12814

if.end41:                                         ; preds = %if.end35
  %35 = load i64, i64* %index, align 8, !dbg !12815
  %inc42 = add i64 %35, 1, !dbg !12815
  store i64 %inc42, i64* %index, align 8, !dbg !12815
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !12815
  %37 = load i64, i64* %index, align 8, !dbg !12815
  %add.ptr43 = getelementptr inbounds i8, i8* %36, i64 %37, !dbg !12815
  %38 = load i64, i64* %bufferLen.addr, align 8, !dbg !12815
  %39 = load i64, i64* %index, align 8, !dbg !12815
  %sub44 = sub i64 %38, %39, !dbg !12815
  %call45 = call i64 @prv_skipSpace(i8* %add.ptr43, i64 %sub44), !dbg !12815
  %40 = load i64, i64* %index, align 8, !dbg !12815
  %add46 = add i64 %40, %call45, !dbg !12815
  store i64 %add46, i64* %index, align 8, !dbg !12815
  %41 = load i64, i64* %index, align 8, !dbg !12817
  %42 = load i64, i64* %bufferLen.addr, align 8, !dbg !12817
  %cmp47 = icmp eq i64 %41, %42, !dbg !12817
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !12815

if.then49:                                        ; preds = %if.end41
  br label %error, !dbg !12817

if.end50:                                         ; preds = %if.end41
  br label %if.end61, !dbg !12819

if.else51:                                        ; preds = %if.end14
  %43 = load i64, i64* %index, align 8, !dbg !12820
  %inc52 = add i64 %43, 1, !dbg !12820
  store i64 %inc52, i64* %index, align 8, !dbg !12820
  %44 = load i8*, i8** %buffer.addr, align 8, !dbg !12820
  %45 = load i64, i64* %index, align 8, !dbg !12820
  %add.ptr53 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !12820
  %46 = load i64, i64* %bufferLen.addr, align 8, !dbg !12820
  %47 = load i64, i64* %index, align 8, !dbg !12820
  %sub54 = sub i64 %46, %47, !dbg !12820
  %call55 = call i64 @prv_skipSpace(i8* %add.ptr53, i64 %sub54), !dbg !12820
  %48 = load i64, i64* %index, align 8, !dbg !12820
  %add56 = add i64 %48, %call55, !dbg !12820
  store i64 %add56, i64* %index, align 8, !dbg !12820
  %49 = load i64, i64* %index, align 8, !dbg !12823
  %50 = load i64, i64* %bufferLen.addr, align 8, !dbg !12823
  %cmp57 = icmp eq i64 %49, %50, !dbg !12823
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !12820

if.then59:                                        ; preds = %if.else51
  br label %error, !dbg !12823

if.end60:                                         ; preds = %if.else51
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end50
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end8
  br label %while.cond, !dbg !12761, !llvm.loop !12825

while.end:                                        ; preds = %if.then34, %while.cond
  %51 = load i32, i32* %in, align 4, !dbg !12827
  %cmp63 = icmp eq i32 %51, 1, !dbg !12829
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !12830

if.then65:                                        ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !12831
  br label %return, !dbg !12831

if.end66:                                         ; preds = %while.end
  %52 = load i32, i32* %count, align 4, !dbg !12832
  store i32 %52, i32* %retval, align 4, !dbg !12833
  br label %return, !dbg !12833

error:                                            ; preds = %if.then59, %if.then49, %if.then28, %if.then7
  store i32 -1, i32* %retval, align 4, !dbg !12834
  br label %return, !dbg !12834

return:                                           ; preds = %error, %if.end66, %if.then65, %if.then40, %if.then13, %if.then4
  %53 = load i32, i32* %retval, align 4, !dbg !12835
  ret i32 %53, !dbg !12835
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_parseItem(i8* %buffer, i64 %bufferLen, %struct._record_t* %recordP) #0 !dbg !12836 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %recordP.addr = alloca %struct._record_t*, align 8
  %index = alloca i64, align 8
  %tokenStart = alloca i32, align 4
  %tokenLen = alloca i32, align 4
  %valueStart = alloca i32, align 4
  %valueLen1 = alloca i32, align 4
  %next = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %readId = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !12839, metadata !1190), !dbg !12840
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !12841, metadata !1190), !dbg !12842
  store %struct._record_t* %recordP, %struct._record_t** %recordP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._record_t** %recordP.addr, metadata !12843, metadata !1190), !dbg !12844
  call void @llvm.dbg.declare(metadata i64* %index, metadata !12845, metadata !1190), !dbg !12846
  %0 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !12847
  %ids = getelementptr inbounds %struct._record_t, %struct._record_t* %0, i32 0, i32 0, !dbg !12848
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %ids, i32 0, i32 0, !dbg !12849
  %1 = bitcast i16* %arraydecay to i8*, !dbg !12849
  call void @llvm.memset.p0i8.i64(i8* %1, i8 -1, i64 8, i32 8, i1 false), !dbg !12849
  %2 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !12850
  %type = getelementptr inbounds %struct._record_t, %struct._record_t* %2, i32 0, i32 1, !dbg !12851
  store i32 0, i32* %type, align 8, !dbg !12852
  %3 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !12853
  %value = getelementptr inbounds %struct._record_t, %struct._record_t* %3, i32 0, i32 2, !dbg !12854
  store i8* null, i8** %value, align 8, !dbg !12855
  %4 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !12856
  %valueLen = getelementptr inbounds %struct._record_t, %struct._record_t* %4, i32 0, i32 3, !dbg !12857
  store i64 0, i64* %valueLen, align 8, !dbg !12858
  store i64 0, i64* %index, align 8, !dbg !12859
  br label %do.body, !dbg !12860, !llvm.loop !12861

do.body:                                          ; preds = %do.cond217, %entry
  call void @llvm.dbg.declare(metadata i32* %tokenStart, metadata !12863, metadata !1190), !dbg !12865
  call void @llvm.dbg.declare(metadata i32* %tokenLen, metadata !12866, metadata !1190), !dbg !12867
  call void @llvm.dbg.declare(metadata i32* %valueStart, metadata !12868, metadata !1190), !dbg !12869
  call void @llvm.dbg.declare(metadata i32* %valueLen1, metadata !12870, metadata !1190), !dbg !12871
  call void @llvm.dbg.declare(metadata i32* %next, metadata !12872, metadata !1190), !dbg !12873
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !12874
  %6 = load i64, i64* %index, align 8, !dbg !12875
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !12876
  %7 = load i64, i64* %bufferLen.addr, align 8, !dbg !12877
  %8 = load i64, i64* %index, align 8, !dbg !12878
  %sub = sub i64 %7, %8, !dbg !12879
  %call = call i32 @prv_split(i8* %add.ptr, i64 %sub, i32* %tokenStart, i32* %tokenLen, i32* %valueStart, i32* %valueLen1), !dbg !12880
  store i32 %call, i32* %next, align 4, !dbg !12881
  %9 = load i32, i32* %next, align 4, !dbg !12882
  %cmp = icmp slt i32 %9, 0, !dbg !12884
  br i1 %cmp, label %if.then, label %if.end, !dbg !12885

if.then:                                          ; preds = %do.body
  store i32 -1, i32* %retval, align 4, !dbg !12886
  br label %return, !dbg !12886

if.end:                                           ; preds = %do.body
  %10 = load i32, i32* %tokenLen, align 4, !dbg !12887
  switch i32 %10, label %sw.default212 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb127
  ], !dbg !12888

sw.bb:                                            ; preds = %if.end
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !12889
  %12 = load i64, i64* %index, align 8, !dbg !12892
  %13 = load i32, i32* %tokenStart, align 4, !dbg !12893
  %conv = sext i32 %13 to i64, !dbg !12893
  %add = add i64 %12, %conv, !dbg !12894
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %add, !dbg !12889
  %14 = load i8, i8* %arrayidx, align 1, !dbg !12889
  %conv2 = zext i8 %14 to i32, !dbg !12889
  switch i32 %conv2, label %sw.default [
    i32 110, label %sw.bb3
    i32 118, label %sw.bb114
    i32 116, label %sw.bb126
  ], !dbg !12895

sw.bb3:                                           ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12896, metadata !1190), !dbg !12899
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12900, metadata !1190), !dbg !12901
  %15 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !12902
  %ids4 = getelementptr inbounds %struct._record_t, %struct._record_t* %15, i32 0, i32 0, !dbg !12904
  %arrayidx5 = getelementptr inbounds [4 x i16], [4 x i16]* %ids4, i64 0, i64 0, !dbg !12902
  %16 = load i16, i16* %arrayidx5, align 8, !dbg !12902
  %conv6 = zext i16 %16 to i32, !dbg !12902
  %cmp7 = icmp ne i32 %conv6, 65535, !dbg !12905
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12906

if.then9:                                         ; preds = %sw.bb3
  store i32 -1, i32* %retval, align 4, !dbg !12907
  br label %return, !dbg !12907

if.end10:                                         ; preds = %sw.bb3
  %17 = load i32, i32* %valueLen1, align 4, !dbg !12908
  %cmp11 = icmp slt i32 %17, 3, !dbg !12910
  br i1 %cmp11, label %if.then29, label %lor.lhs.false, !dbg !12911

lor.lhs.false:                                    ; preds = %if.end10
  %18 = load i8*, i8** %buffer.addr, align 8, !dbg !12912
  %19 = load i64, i64* %index, align 8, !dbg !12913
  %20 = load i32, i32* %valueStart, align 4, !dbg !12914
  %conv13 = sext i32 %20 to i64, !dbg !12914
  %add14 = add i64 %19, %conv13, !dbg !12915
  %arrayidx15 = getelementptr inbounds i8, i8* %18, i64 %add14, !dbg !12912
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !12912
  %conv16 = zext i8 %21 to i32, !dbg !12912
  %cmp17 = icmp ne i32 %conv16, 34, !dbg !12916
  br i1 %cmp17, label %if.then29, label %lor.lhs.false19, !dbg !12917

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %22 = load i8*, i8** %buffer.addr, align 8, !dbg !12918
  %23 = load i64, i64* %index, align 8, !dbg !12919
  %24 = load i32, i32* %valueStart, align 4, !dbg !12920
  %conv20 = sext i32 %24 to i64, !dbg !12920
  %add21 = add i64 %23, %conv20, !dbg !12921
  %25 = load i32, i32* %valueLen1, align 4, !dbg !12922
  %conv22 = sext i32 %25 to i64, !dbg !12922
  %add23 = add i64 %add21, %conv22, !dbg !12923
  %sub24 = sub i64 %add23, 1, !dbg !12924
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %sub24, !dbg !12918
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !12918
  %conv26 = zext i8 %26 to i32, !dbg !12918
  %cmp27 = icmp ne i32 %conv26, 34, !dbg !12925
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !12926

if.then29:                                        ; preds = %lor.lhs.false19, %lor.lhs.false, %if.end10
  store i32 -1, i32* %retval, align 4, !dbg !12927
  br label %return, !dbg !12927

if.end30:                                         ; preds = %lor.lhs.false19
  %27 = load i8*, i8** %buffer.addr, align 8, !dbg !12929
  %28 = load i64, i64* %index, align 8, !dbg !12931
  %29 = load i32, i32* %valueStart, align 4, !dbg !12932
  %conv31 = sext i32 %29 to i64, !dbg !12932
  %add32 = add i64 %28, %conv31, !dbg !12933
  %add33 = add i64 %add32, 1, !dbg !12934
  %arrayidx34 = getelementptr inbounds i8, i8* %27, i64 %add33, !dbg !12929
  %30 = load i8, i8* %arrayidx34, align 1, !dbg !12929
  %conv35 = zext i8 %30 to i32, !dbg !12929
  %cmp36 = icmp eq i32 %conv35, 47, !dbg !12935
  br i1 %cmp36, label %if.then38, label %if.end45, !dbg !12936

if.then38:                                        ; preds = %if.end30
  %31 = load i32, i32* %valueLen1, align 4, !dbg !12937
  %cmp39 = icmp slt i32 %31, 4, !dbg !12940
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !12941

if.then41:                                        ; preds = %if.then38
  store i32 -1, i32* %retval, align 4, !dbg !12942
  br label %return, !dbg !12942

if.end42:                                         ; preds = %if.then38
  %32 = load i32, i32* %valueStart, align 4, !dbg !12944
  %add43 = add nsw i32 %32, 1, !dbg !12944
  store i32 %add43, i32* %valueStart, align 4, !dbg !12944
  %33 = load i32, i32* %valueLen1, align 4, !dbg !12945
  %sub44 = sub nsw i32 %33, 1, !dbg !12945
  store i32 %sub44, i32* %valueLen1, align 4, !dbg !12945
  br label %if.end45, !dbg !12946

if.end45:                                         ; preds = %if.end42, %if.end30
  store i32 0, i32* %i, align 4, !dbg !12947
  store i32 0, i32* %j, align 4, !dbg !12948
  br label %do.body46, !dbg !12949, !llvm.loop !12950

do.body46:                                        ; preds = %land.end108, %if.end45
  call void @llvm.dbg.declare(metadata i32* %readId, metadata !12952, metadata !1190), !dbg !12954
  store i32 0, i32* %readId, align 4, !dbg !12955
  %34 = load i32, i32* %i, align 4, !dbg !12956
  %inc = add nsw i32 %34, 1, !dbg !12956
  store i32 %inc, i32* %i, align 4, !dbg !12956
  br label %while.cond, !dbg !12957

while.cond:                                       ; preds = %if.end88, %do.body46
  %35 = load i32, i32* %i, align 4, !dbg !12958
  %36 = load i32, i32* %valueLen1, align 4, !dbg !12959
  %sub47 = sub nsw i32 %36, 1, !dbg !12960
  %cmp48 = icmp slt i32 %35, %sub47, !dbg !12961
  br i1 %cmp48, label %land.rhs, label %land.end, !dbg !12962

land.rhs:                                         ; preds = %while.cond
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !12963
  %38 = load i64, i64* %index, align 8, !dbg !12964
  %39 = load i32, i32* %valueStart, align 4, !dbg !12965
  %conv50 = sext i32 %39 to i64, !dbg !12965
  %add51 = add i64 %38, %conv50, !dbg !12966
  %40 = load i32, i32* %i, align 4, !dbg !12967
  %conv52 = sext i32 %40 to i64, !dbg !12967
  %add53 = add i64 %add51, %conv52, !dbg !12968
  %arrayidx54 = getelementptr inbounds i8, i8* %37, i64 %add53, !dbg !12963
  %41 = load i8, i8* %arrayidx54, align 1, !dbg !12963
  %conv55 = zext i8 %41 to i32, !dbg !12963
  %cmp56 = icmp ne i32 %conv55, 47, !dbg !12969
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %42 = phi i1 [ false, %while.cond ], [ %cmp56, %land.rhs ]
  br i1 %42, label %while.body, label %while.end, !dbg !12957

while.body:                                       ; preds = %land.end
  %43 = load i8*, i8** %buffer.addr, align 8, !dbg !12970
  %44 = load i64, i64* %index, align 8, !dbg !12973
  %45 = load i32, i32* %valueStart, align 4, !dbg !12974
  %conv58 = sext i32 %45 to i64, !dbg !12974
  %add59 = add i64 %44, %conv58, !dbg !12975
  %46 = load i32, i32* %i, align 4, !dbg !12976
  %conv60 = sext i32 %46 to i64, !dbg !12976
  %add61 = add i64 %add59, %conv60, !dbg !12977
  %arrayidx62 = getelementptr inbounds i8, i8* %43, i64 %add61, !dbg !12970
  %47 = load i8, i8* %arrayidx62, align 1, !dbg !12970
  %conv63 = zext i8 %47 to i32, !dbg !12970
  %cmp64 = icmp slt i32 %conv63, 48, !dbg !12978
  br i1 %cmp64, label %if.then75, label %lor.lhs.false66, !dbg !12979

lor.lhs.false66:                                  ; preds = %while.body
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !12980
  %49 = load i64, i64* %index, align 8, !dbg !12981
  %50 = load i32, i32* %valueStart, align 4, !dbg !12982
  %conv67 = sext i32 %50 to i64, !dbg !12982
  %add68 = add i64 %49, %conv67, !dbg !12983
  %51 = load i32, i32* %i, align 4, !dbg !12984
  %conv69 = sext i32 %51 to i64, !dbg !12984
  %add70 = add i64 %add68, %conv69, !dbg !12985
  %arrayidx71 = getelementptr inbounds i8, i8* %48, i64 %add70, !dbg !12980
  %52 = load i8, i8* %arrayidx71, align 1, !dbg !12980
  %conv72 = zext i8 %52 to i32, !dbg !12980
  %cmp73 = icmp sgt i32 %conv72, 57, !dbg !12986
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !12987

if.then75:                                        ; preds = %lor.lhs.false66, %while.body
  store i32 -1, i32* %retval, align 4, !dbg !12988
  br label %return, !dbg !12988

if.end76:                                         ; preds = %lor.lhs.false66
  %53 = load i32, i32* %readId, align 4, !dbg !12990
  %mul = mul i32 %53, 10, !dbg !12990
  store i32 %mul, i32* %readId, align 4, !dbg !12990
  %54 = load i8*, i8** %buffer.addr, align 8, !dbg !12991
  %55 = load i64, i64* %index, align 8, !dbg !12992
  %56 = load i32, i32* %valueStart, align 4, !dbg !12993
  %conv77 = sext i32 %56 to i64, !dbg !12993
  %add78 = add i64 %55, %conv77, !dbg !12994
  %57 = load i32, i32* %i, align 4, !dbg !12995
  %conv79 = sext i32 %57 to i64, !dbg !12995
  %add80 = add i64 %add78, %conv79, !dbg !12996
  %arrayidx81 = getelementptr inbounds i8, i8* %54, i64 %add80, !dbg !12991
  %58 = load i8, i8* %arrayidx81, align 1, !dbg !12991
  %conv82 = zext i8 %58 to i32, !dbg !12991
  %sub83 = sub nsw i32 %conv82, 48, !dbg !12997
  %59 = load i32, i32* %readId, align 4, !dbg !12998
  %add84 = add i32 %59, %sub83, !dbg !12998
  store i32 %add84, i32* %readId, align 4, !dbg !12998
  %60 = load i32, i32* %readId, align 4, !dbg !12999
  %cmp85 = icmp ugt i32 %60, 65535, !dbg !13001
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !13002

if.then87:                                        ; preds = %if.end76
  store i32 -1, i32* %retval, align 4, !dbg !13003
  br label %return, !dbg !13003

if.end88:                                         ; preds = %if.end76
  %61 = load i32, i32* %i, align 4, !dbg !13004
  %inc89 = add nsw i32 %61, 1, !dbg !13004
  store i32 %inc89, i32* %i, align 4, !dbg !13004
  br label %while.cond, !dbg !12957, !llvm.loop !13005

while.end:                                        ; preds = %land.end
  %62 = load i32, i32* %readId, align 4, !dbg !13007
  %conv90 = trunc i32 %62 to i16, !dbg !13007
  %63 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13008
  %ids91 = getelementptr inbounds %struct._record_t, %struct._record_t* %63, i32 0, i32 0, !dbg !13009
  %64 = load i32, i32* %j, align 4, !dbg !13010
  %idxprom = sext i32 %64 to i64, !dbg !13008
  %arrayidx92 = getelementptr inbounds [4 x i16], [4 x i16]* %ids91, i64 0, i64 %idxprom, !dbg !13008
  store i16 %conv90, i16* %arrayidx92, align 2, !dbg !13011
  %65 = load i32, i32* %j, align 4, !dbg !13012
  %inc93 = add nsw i32 %65, 1, !dbg !13012
  store i32 %inc93, i32* %j, align 4, !dbg !13012
  br label %do.cond, !dbg !13013

do.cond:                                          ; preds = %while.end
  %66 = load i32, i32* %i, align 4, !dbg !13014
  %67 = load i32, i32* %valueLen1, align 4, !dbg !13015
  %sub94 = sub nsw i32 %67, 1, !dbg !13016
  %cmp95 = icmp slt i32 %66, %sub94, !dbg !13017
  br i1 %cmp95, label %land.lhs.true, label %land.end108, !dbg !13018

land.lhs.true:                                    ; preds = %do.cond
  %68 = load i32, i32* %j, align 4, !dbg !13019
  %cmp97 = icmp slt i32 %68, 4, !dbg !13020
  br i1 %cmp97, label %land.rhs99, label %land.end108, !dbg !13021

land.rhs99:                                       ; preds = %land.lhs.true
  %69 = load i8*, i8** %buffer.addr, align 8, !dbg !13022
  %70 = load i64, i64* %index, align 8, !dbg !13023
  %71 = load i32, i32* %valueStart, align 4, !dbg !13024
  %conv100 = sext i32 %71 to i64, !dbg !13024
  %add101 = add i64 %70, %conv100, !dbg !13025
  %72 = load i32, i32* %i, align 4, !dbg !13026
  %conv102 = sext i32 %72 to i64, !dbg !13026
  %add103 = add i64 %add101, %conv102, !dbg !13027
  %arrayidx104 = getelementptr inbounds i8, i8* %69, i64 %add103, !dbg !13022
  %73 = load i8, i8* %arrayidx104, align 1, !dbg !13022
  %conv105 = zext i8 %73 to i32, !dbg !13022
  %cmp106 = icmp eq i32 %conv105, 47, !dbg !13028
  br label %land.end108

land.end108:                                      ; preds = %land.rhs99, %land.lhs.true, %do.cond
  %74 = phi i1 [ false, %land.lhs.true ], [ false, %do.cond ], [ %cmp106, %land.rhs99 ]
  br i1 %74, label %do.body46, label %do.end, !dbg !13013, !llvm.loop !12950

do.end:                                           ; preds = %land.end108
  %75 = load i32, i32* %i, align 4, !dbg !13029
  %76 = load i32, i32* %valueLen1, align 4, !dbg !13031
  %sub109 = sub nsw i32 %76, 1, !dbg !13032
  %cmp110 = icmp slt i32 %75, %sub109, !dbg !13033
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !13034

if.then112:                                       ; preds = %do.end
  store i32 -1, i32* %retval, align 4, !dbg !13035
  br label %return, !dbg !13035

if.end113:                                        ; preds = %do.end
  br label %sw.epilog, !dbg !13036

sw.bb114:                                         ; preds = %sw.bb
  %77 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13037
  %type115 = getelementptr inbounds %struct._record_t, %struct._record_t* %77, i32 0, i32 1, !dbg !13039
  %78 = load i32, i32* %type115, align 8, !dbg !13039
  %cmp116 = icmp ne i32 %78, 0, !dbg !13040
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !13041

if.then118:                                       ; preds = %sw.bb114
  store i32 -1, i32* %retval, align 4, !dbg !13042
  br label %return, !dbg !13042

if.end119:                                        ; preds = %sw.bb114
  %79 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13043
  %type120 = getelementptr inbounds %struct._record_t, %struct._record_t* %79, i32 0, i32 1, !dbg !13044
  store i32 3, i32* %type120, align 8, !dbg !13045
  %80 = load i8*, i8** %buffer.addr, align 8, !dbg !13046
  %81 = load i64, i64* %index, align 8, !dbg !13047
  %add.ptr121 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !13048
  %82 = load i32, i32* %valueStart, align 4, !dbg !13049
  %idx.ext = sext i32 %82 to i64, !dbg !13050
  %add.ptr122 = getelementptr inbounds i8, i8* %add.ptr121, i64 %idx.ext, !dbg !13050
  %83 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13051
  %value123 = getelementptr inbounds %struct._record_t, %struct._record_t* %83, i32 0, i32 2, !dbg !13052
  store i8* %add.ptr122, i8** %value123, align 8, !dbg !13053
  %84 = load i32, i32* %valueLen1, align 4, !dbg !13054
  %conv124 = sext i32 %84 to i64, !dbg !13054
  %85 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13055
  %valueLen125 = getelementptr inbounds %struct._record_t, %struct._record_t* %85, i32 0, i32 3, !dbg !13056
  store i64 %conv124, i64* %valueLen125, align 8, !dbg !13057
  br label %sw.epilog, !dbg !13058

sw.bb126:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !13059

sw.default:                                       ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !13060
  br label %return, !dbg !13060

sw.epilog:                                        ; preds = %sw.bb126, %if.end119, %if.end113
  br label %sw.epilog213, !dbg !13061

sw.bb127:                                         ; preds = %if.end
  %86 = load i8*, i8** %buffer.addr, align 8, !dbg !13062
  %87 = load i64, i64* %index, align 8, !dbg !13065
  %88 = load i32, i32* %tokenStart, align 4, !dbg !13066
  %conv128 = sext i32 %88 to i64, !dbg !13066
  %add129 = add i64 %87, %conv128, !dbg !13067
  %add130 = add i64 %add129, 1, !dbg !13068
  %arrayidx131 = getelementptr inbounds i8, i8* %86, i64 %add130, !dbg !13062
  %89 = load i8, i8* %arrayidx131, align 1, !dbg !13062
  %conv132 = zext i8 %89 to i32, !dbg !13062
  %cmp133 = icmp ne i32 %conv132, 118, !dbg !13069
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !13070

if.then135:                                       ; preds = %sw.bb127
  store i32 -1, i32* %retval, align 4, !dbg !13071
  br label %return, !dbg !13071

if.end136:                                        ; preds = %sw.bb127
  %90 = load i8*, i8** %buffer.addr, align 8, !dbg !13072
  %91 = load i64, i64* %index, align 8, !dbg !13073
  %92 = load i32, i32* %tokenStart, align 4, !dbg !13074
  %conv137 = sext i32 %92 to i64, !dbg !13074
  %add138 = add i64 %91, %conv137, !dbg !13075
  %arrayidx139 = getelementptr inbounds i8, i8* %90, i64 %add138, !dbg !13072
  %93 = load i8, i8* %arrayidx139, align 1, !dbg !13072
  %conv140 = zext i8 %93 to i32, !dbg !13072
  switch i32 %conv140, label %sw.default210 [
    i32 98, label %sw.bb141
    i32 111, label %sw.bb168
    i32 115, label %sw.bb174
  ], !dbg !13076

sw.bb141:                                         ; preds = %if.end136
  %94 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13077
  %type142 = getelementptr inbounds %struct._record_t, %struct._record_t* %94, i32 0, i32 1, !dbg !13080
  %95 = load i32, i32* %type142, align 8, !dbg !13080
  %cmp143 = icmp ne i32 %95, 0, !dbg !13081
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13082

if.then145:                                       ; preds = %sw.bb141
  store i32 -1, i32* %retval, align 4, !dbg !13083
  br label %return, !dbg !13083

if.end146:                                        ; preds = %sw.bb141
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13084
  %97 = load i64, i64* %index, align 8, !dbg !13086
  %add.ptr147 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13087
  %98 = load i32, i32* %valueStart, align 4, !dbg !13088
  %idx.ext148 = sext i32 %98 to i64, !dbg !13089
  %add.ptr149 = getelementptr inbounds i8, i8* %add.ptr147, i64 %idx.ext148, !dbg !13089
  %99 = load i32, i32* %valueLen1, align 4, !dbg !13090
  %conv150 = sext i32 %99 to i64, !dbg !13090
  %call151 = call i32 @lwm2m_strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.163, i32 0, i32 0), i8* %add.ptr149, i64 %conv150), !dbg !13091
  %cmp152 = icmp eq i32 0, %call151, !dbg !13092
  br i1 %cmp152, label %if.then154, label %if.else, !dbg !13093

if.then154:                                       ; preds = %if.end146
  %100 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13094
  %type155 = getelementptr inbounds %struct._record_t, %struct._record_t* %100, i32 0, i32 1, !dbg !13096
  store i32 2, i32* %type155, align 8, !dbg !13097
  br label %if.end167, !dbg !13098

if.else:                                          ; preds = %if.end146
  %101 = load i8*, i8** %buffer.addr, align 8, !dbg !13099
  %102 = load i64, i64* %index, align 8, !dbg !13101
  %add.ptr156 = getelementptr inbounds i8, i8* %101, i64 %102, !dbg !13102
  %103 = load i32, i32* %valueStart, align 4, !dbg !13103
  %idx.ext157 = sext i32 %103 to i64, !dbg !13104
  %add.ptr158 = getelementptr inbounds i8, i8* %add.ptr156, i64 %idx.ext157, !dbg !13104
  %104 = load i32, i32* %valueLen1, align 4, !dbg !13105
  %conv159 = sext i32 %104 to i64, !dbg !13105
  %call160 = call i32 @lwm2m_strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.164, i32 0, i32 0), i8* %add.ptr158, i64 %conv159), !dbg !13106
  %cmp161 = icmp eq i32 0, %call160, !dbg !13107
  br i1 %cmp161, label %if.then163, label %if.else165, !dbg !13108

if.then163:                                       ; preds = %if.else
  %105 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13109
  %type164 = getelementptr inbounds %struct._record_t, %struct._record_t* %105, i32 0, i32 1, !dbg !13111
  store i32 1, i32* %type164, align 8, !dbg !13112
  br label %if.end166, !dbg !13113

if.else165:                                       ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !13114
  br label %return, !dbg !13114

if.end166:                                        ; preds = %if.then163
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then154
  br label %sw.epilog211, !dbg !13116

sw.bb168:                                         ; preds = %if.end136
  %106 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13117
  %type169 = getelementptr inbounds %struct._record_t, %struct._record_t* %106, i32 0, i32 1, !dbg !13119
  %107 = load i32, i32* %type169, align 8, !dbg !13119
  %cmp170 = icmp ne i32 %107, 0, !dbg !13120
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !13121

if.then172:                                       ; preds = %sw.bb168
  store i32 -1, i32* %retval, align 4, !dbg !13122
  br label %return, !dbg !13122

if.end173:                                        ; preds = %sw.bb168
  br label %sw.epilog211, !dbg !13123

sw.bb174:                                         ; preds = %if.end136
  %108 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13124
  %type175 = getelementptr inbounds %struct._record_t, %struct._record_t* %108, i32 0, i32 1, !dbg !13126
  %109 = load i32, i32* %type175, align 8, !dbg !13126
  %cmp176 = icmp ne i32 %109, 0, !dbg !13127
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !13128

if.then178:                                       ; preds = %sw.bb174
  store i32 -1, i32* %retval, align 4, !dbg !13129
  br label %return, !dbg !13129

if.end179:                                        ; preds = %sw.bb174
  %110 = load i32, i32* %valueLen1, align 4, !dbg !13130
  %cmp180 = icmp slt i32 %110, 2, !dbg !13132
  br i1 %cmp180, label %if.then199, label %lor.lhs.false182, !dbg !13133

lor.lhs.false182:                                 ; preds = %if.end179
  %111 = load i8*, i8** %buffer.addr, align 8, !dbg !13134
  %112 = load i64, i64* %index, align 8, !dbg !13135
  %113 = load i32, i32* %valueStart, align 4, !dbg !13136
  %conv183 = sext i32 %113 to i64, !dbg !13136
  %add184 = add i64 %112, %conv183, !dbg !13137
  %arrayidx185 = getelementptr inbounds i8, i8* %111, i64 %add184, !dbg !13134
  %114 = load i8, i8* %arrayidx185, align 1, !dbg !13134
  %conv186 = zext i8 %114 to i32, !dbg !13134
  %cmp187 = icmp ne i32 %conv186, 34, !dbg !13138
  br i1 %cmp187, label %if.then199, label %lor.lhs.false189, !dbg !13139

lor.lhs.false189:                                 ; preds = %lor.lhs.false182
  %115 = load i8*, i8** %buffer.addr, align 8, !dbg !13140
  %116 = load i64, i64* %index, align 8, !dbg !13141
  %117 = load i32, i32* %valueStart, align 4, !dbg !13142
  %conv190 = sext i32 %117 to i64, !dbg !13142
  %add191 = add i64 %116, %conv190, !dbg !13143
  %118 = load i32, i32* %valueLen1, align 4, !dbg !13144
  %conv192 = sext i32 %118 to i64, !dbg !13144
  %add193 = add i64 %add191, %conv192, !dbg !13145
  %sub194 = sub i64 %add193, 1, !dbg !13146
  %arrayidx195 = getelementptr inbounds i8, i8* %115, i64 %sub194, !dbg !13140
  %119 = load i8, i8* %arrayidx195, align 1, !dbg !13140
  %conv196 = zext i8 %119 to i32, !dbg !13140
  %cmp197 = icmp ne i32 %conv196, 34, !dbg !13147
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !13148

if.then199:                                       ; preds = %lor.lhs.false189, %lor.lhs.false182, %if.end179
  store i32 -1, i32* %retval, align 4, !dbg !13149
  br label %return, !dbg !13149

if.end200:                                        ; preds = %lor.lhs.false189
  %120 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13151
  %type201 = getelementptr inbounds %struct._record_t, %struct._record_t* %120, i32 0, i32 1, !dbg !13152
  store i32 4, i32* %type201, align 8, !dbg !13153
  %121 = load i8*, i8** %buffer.addr, align 8, !dbg !13154
  %122 = load i64, i64* %index, align 8, !dbg !13155
  %add.ptr202 = getelementptr inbounds i8, i8* %121, i64 %122, !dbg !13156
  %123 = load i32, i32* %valueStart, align 4, !dbg !13157
  %idx.ext203 = sext i32 %123 to i64, !dbg !13158
  %add.ptr204 = getelementptr inbounds i8, i8* %add.ptr202, i64 %idx.ext203, !dbg !13158
  %add.ptr205 = getelementptr inbounds i8, i8* %add.ptr204, i64 1, !dbg !13159
  %124 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13160
  %value206 = getelementptr inbounds %struct._record_t, %struct._record_t* %124, i32 0, i32 2, !dbg !13161
  store i8* %add.ptr205, i8** %value206, align 8, !dbg !13162
  %125 = load i32, i32* %valueLen1, align 4, !dbg !13163
  %sub207 = sub nsw i32 %125, 2, !dbg !13164
  %conv208 = sext i32 %sub207 to i64, !dbg !13163
  %126 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !13165
  %valueLen209 = getelementptr inbounds %struct._record_t, %struct._record_t* %126, i32 0, i32 3, !dbg !13166
  store i64 %conv208, i64* %valueLen209, align 8, !dbg !13167
  br label %sw.epilog211, !dbg !13168

sw.default210:                                    ; preds = %if.end136
  store i32 -1, i32* %retval, align 4, !dbg !13169
  br label %return, !dbg !13169

sw.epilog211:                                     ; preds = %if.end200, %if.end173, %if.end167
  br label %sw.epilog213, !dbg !13170

sw.default212:                                    ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !13171
  br label %return, !dbg !13171

sw.epilog213:                                     ; preds = %sw.epilog211, %sw.epilog
  %127 = load i32, i32* %next, align 4, !dbg !13172
  %add214 = add nsw i32 %127, 1, !dbg !13173
  %conv215 = sext i32 %add214 to i64, !dbg !13172
  %128 = load i64, i64* %index, align 8, !dbg !13174
  %add216 = add i64 %128, %conv215, !dbg !13174
  store i64 %add216, i64* %index, align 8, !dbg !13174
  br label %do.cond217, !dbg !13175

do.cond217:                                       ; preds = %sw.epilog213
  %129 = load i64, i64* %index, align 8, !dbg !13176
  %130 = load i64, i64* %bufferLen.addr, align 8, !dbg !13177
  %cmp218 = icmp ult i64 %129, %130, !dbg !13178
  br i1 %cmp218, label %do.body, label %do.end220, !dbg !13175, !llvm.loop !12861

do.end220:                                        ; preds = %do.cond217
  store i32 0, i32* %retval, align 4, !dbg !13179
  br label %return, !dbg !13179

return:                                           ; preds = %do.end220, %sw.default212, %sw.default210, %if.then199, %if.then178, %if.then172, %if.else165, %if.then145, %if.then135, %sw.default, %if.then118, %if.then112, %if.then87, %if.then75, %if.then41, %if.then29, %if.then9, %if.then
  %131 = load i32, i32* %retval, align 4, !dbg !13180
  ret i32 %131, !dbg !13180
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_split(i8* %buffer, i64 %bufferLen, i32* %tokenStartP, i32* %tokenLenP, i32* %valueStartP, i32* %valueLenP) #0 !dbg !13181 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %tokenStartP.addr = alloca i32*, align 8
  %tokenLenP.addr = alloca i32*, align 8
  %valueStartP.addr = alloca i32*, align 8
  %valueLenP.addr = alloca i32*, align 8
  %index = alloca i64, align 8
  %step = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13185, metadata !1190), !dbg !13186
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !13187, metadata !1190), !dbg !13188
  store i32* %tokenStartP, i32** %tokenStartP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tokenStartP.addr, metadata !13189, metadata !1190), !dbg !13190
  store i32* %tokenLenP, i32** %tokenLenP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tokenLenP.addr, metadata !13191, metadata !1190), !dbg !13192
  store i32* %valueStartP, i32** %valueStartP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %valueStartP.addr, metadata !13193, metadata !1190), !dbg !13194
  store i32* %valueLenP, i32** %valueLenP.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %valueLenP.addr, metadata !13195, metadata !1190), !dbg !13196
  call void @llvm.dbg.declare(metadata i64* %index, metadata !13197, metadata !1190), !dbg !13198
  call void @llvm.dbg.declare(metadata i32* %step, metadata !13199, metadata !1190), !dbg !13201
  store i64 0, i64* %index, align 8, !dbg !13202
  store i32 0, i32* %step, align 4, !dbg !13203
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !13204
  %1 = load i64, i64* %index, align 8, !dbg !13205
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1, !dbg !13206
  %2 = load i64, i64* %bufferLen.addr, align 8, !dbg !13207
  %3 = load i64, i64* %index, align 8, !dbg !13208
  %sub = sub i64 %2, %3, !dbg !13209
  %call = call i64 @prv_skipSpace(i8* %add.ptr, i64 %sub), !dbg !13210
  store i64 %call, i64* %index, align 8, !dbg !13211
  %4 = load i64, i64* %index, align 8, !dbg !13212
  %5 = load i64, i64* %bufferLen.addr, align 8, !dbg !13214
  %cmp = icmp eq i64 %4, %5, !dbg !13215
  br i1 %cmp, label %if.then, label %if.end, !dbg !13216

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13217
  br label %return, !dbg !13217

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !13218

while.cond:                                       ; preds = %if.end83, %if.end
  %6 = load i64, i64* %index, align 8, !dbg !13219
  %7 = load i64, i64* %bufferLen.addr, align 8, !dbg !13220
  %cmp1 = icmp ult i64 %6, %7, !dbg !13221
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !13222

land.rhs:                                         ; preds = %while.cond
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !13223
  %9 = load i64, i64* %index, align 8, !dbg !13224
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !13223
  %10 = load i8, i8* %arrayidx, align 1, !dbg !13223
  %conv = zext i8 %10 to i32, !dbg !13223
  %cmp2 = icmp ne i32 %conv, 44, !dbg !13225
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !13218

while.body:                                       ; preds = %land.end
  %12 = load i32, i32* %step, align 4, !dbg !13226
  switch i32 %12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 2, label %sw.bb21
    i32 3, label %sw.bb28
    i32 4, label %sw.bb42
    i32 5, label %sw.bb58
    i32 6, label %sw.bb67
  ], !dbg !13228

sw.bb:                                            ; preds = %while.body
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !13229
  %14 = load i64, i64* %index, align 8, !dbg !13232
  %arrayidx4 = getelementptr inbounds i8, i8* %13, i64 %14, !dbg !13229
  %15 = load i8, i8* %arrayidx4, align 1, !dbg !13229
  %conv5 = zext i8 %15 to i32, !dbg !13229
  %cmp6 = icmp ne i32 %conv5, 34, !dbg !13233
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !13234

if.then8:                                         ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !13235
  br label %return, !dbg !13235

if.end9:                                          ; preds = %sw.bb
  %16 = load i64, i64* %index, align 8, !dbg !13236
  %add = add i64 %16, 1, !dbg !13237
  %conv10 = trunc i64 %add to i32, !dbg !13236
  %17 = load i32*, i32** %tokenStartP.addr, align 8, !dbg !13238
  store i32 %conv10, i32* %17, align 4, !dbg !13239
  store i32 1, i32* %step, align 4, !dbg !13240
  br label %sw.epilog, !dbg !13241

sw.bb11:                                          ; preds = %while.body
  %18 = load i8*, i8** %buffer.addr, align 8, !dbg !13242
  %19 = load i64, i64* %index, align 8, !dbg !13244
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !13242
  %20 = load i8, i8* %arrayidx12, align 1, !dbg !13242
  %conv13 = zext i8 %20 to i32, !dbg !13242
  %cmp14 = icmp eq i32 %conv13, 34, !dbg !13245
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !13246

if.then16:                                        ; preds = %sw.bb11
  %21 = load i64, i64* %index, align 8, !dbg !13247
  %22 = load i32*, i32** %tokenStartP.addr, align 8, !dbg !13249
  %23 = load i32, i32* %22, align 4, !dbg !13250
  %conv17 = sext i32 %23 to i64, !dbg !13250
  %sub18 = sub i64 %21, %conv17, !dbg !13251
  %conv19 = trunc i64 %sub18 to i32, !dbg !13247
  %24 = load i32*, i32** %tokenLenP.addr, align 8, !dbg !13252
  store i32 %conv19, i32* %24, align 4, !dbg !13253
  store i32 2, i32* %step, align 4, !dbg !13254
  br label %if.end20, !dbg !13255

if.end20:                                         ; preds = %if.then16, %sw.bb11
  br label %sw.epilog, !dbg !13256

sw.bb21:                                          ; preds = %while.body
  %25 = load i8*, i8** %buffer.addr, align 8, !dbg !13257
  %26 = load i64, i64* %index, align 8, !dbg !13259
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !13257
  %27 = load i8, i8* %arrayidx22, align 1, !dbg !13257
  %conv23 = zext i8 %27 to i32, !dbg !13257
  %cmp24 = icmp ne i32 %conv23, 58, !dbg !13260
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !13261

if.then26:                                        ; preds = %sw.bb21
  store i32 -1, i32* %retval, align 4, !dbg !13262
  br label %return, !dbg !13262

if.end27:                                         ; preds = %sw.bb21
  store i32 3, i32* %step, align 4, !dbg !13263
  br label %sw.epilog, !dbg !13264

sw.bb28:                                          ; preds = %while.body
  %28 = load i8*, i8** %buffer.addr, align 8, !dbg !13265
  %29 = load i64, i64* %index, align 8, !dbg !13267
  %arrayidx29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !13265
  %30 = load i8, i8* %arrayidx29, align 1, !dbg !13265
  %conv30 = zext i8 %30 to i32, !dbg !13265
  %cmp31 = icmp eq i32 %conv30, 34, !dbg !13268
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !13269

if.then33:                                        ; preds = %sw.bb28
  %31 = load i64, i64* %index, align 8, !dbg !13270
  %conv34 = trunc i64 %31 to i32, !dbg !13270
  %32 = load i32*, i32** %valueStartP.addr, align 8, !dbg !13272
  store i32 %conv34, i32* %32, align 4, !dbg !13273
  store i32 4, i32* %step, align 4, !dbg !13274
  br label %if.end41, !dbg !13275

if.else:                                          ; preds = %sw.bb28
  %33 = load i8*, i8** %buffer.addr, align 8, !dbg !13276
  %34 = load i64, i64* %index, align 8, !dbg !13278
  %arrayidx35 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13276
  %35 = load i8, i8* %arrayidx35, align 1, !dbg !13276
  %call36 = call i32 @prv_isReserved(i8 signext %35), !dbg !13279
  %tobool = icmp ne i32 %call36, 0, !dbg !13279
  br i1 %tobool, label %if.else39, label %if.then37, !dbg !13280

if.then37:                                        ; preds = %if.else
  %36 = load i64, i64* %index, align 8, !dbg !13281
  %conv38 = trunc i64 %36 to i32, !dbg !13281
  %37 = load i32*, i32** %valueStartP.addr, align 8, !dbg !13283
  store i32 %conv38, i32* %37, align 4, !dbg !13284
  store i32 5, i32* %step, align 4, !dbg !13285
  br label %if.end40, !dbg !13286

if.else39:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !13287
  br label %return, !dbg !13287

if.end40:                                         ; preds = %if.then37
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %sw.epilog, !dbg !13289

sw.bb42:                                          ; preds = %while.body
  %38 = load i8*, i8** %buffer.addr, align 8, !dbg !13290
  %39 = load i64, i64* %index, align 8, !dbg !13292
  %arrayidx43 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !13290
  %40 = load i8, i8* %arrayidx43, align 1, !dbg !13290
  %conv44 = zext i8 %40 to i32, !dbg !13290
  %cmp45 = icmp eq i32 %conv44, 34, !dbg !13293
  br i1 %cmp45, label %land.lhs.true, label %if.end57, !dbg !13294

land.lhs.true:                                    ; preds = %sw.bb42
  %41 = load i8*, i8** %buffer.addr, align 8, !dbg !13295
  %42 = load i64, i64* %index, align 8, !dbg !13296
  %sub47 = sub i64 %42, 1, !dbg !13297
  %arrayidx48 = getelementptr inbounds i8, i8* %41, i64 %sub47, !dbg !13295
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !13295
  %conv49 = zext i8 %43 to i32, !dbg !13295
  %cmp50 = icmp ne i32 %conv49, 92, !dbg !13298
  br i1 %cmp50, label %if.then52, label %if.end57, !dbg !13299

if.then52:                                        ; preds = %land.lhs.true
  %44 = load i64, i64* %index, align 8, !dbg !13300
  %45 = load i32*, i32** %valueStartP.addr, align 8, !dbg !13302
  %46 = load i32, i32* %45, align 4, !dbg !13303
  %conv53 = sext i32 %46 to i64, !dbg !13303
  %sub54 = sub i64 %44, %conv53, !dbg !13304
  %add55 = add i64 %sub54, 1, !dbg !13305
  %conv56 = trunc i64 %add55 to i32, !dbg !13300
  %47 = load i32*, i32** %valueLenP.addr, align 8, !dbg !13306
  store i32 %conv56, i32* %47, align 4, !dbg !13307
  store i32 6, i32* %step, align 4, !dbg !13308
  br label %if.end57, !dbg !13309

if.end57:                                         ; preds = %if.then52, %land.lhs.true, %sw.bb42
  br label %sw.epilog, !dbg !13310

sw.bb58:                                          ; preds = %while.body
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !13311
  %49 = load i64, i64* %index, align 8, !dbg !13313
  %arrayidx59 = getelementptr inbounds i8, i8* %48, i64 %49, !dbg !13311
  %50 = load i8, i8* %arrayidx59, align 1, !dbg !13311
  %call60 = call i32 @prv_isWhiteSpace(i8 zeroext %50), !dbg !13314
  %tobool61 = icmp ne i32 %call60, 0, !dbg !13314
  br i1 %tobool61, label %if.then62, label %if.end66, !dbg !13315

if.then62:                                        ; preds = %sw.bb58
  %51 = load i64, i64* %index, align 8, !dbg !13316
  %52 = load i32*, i32** %valueStartP.addr, align 8, !dbg !13318
  %53 = load i32, i32* %52, align 4, !dbg !13319
  %conv63 = sext i32 %53 to i64, !dbg !13319
  %sub64 = sub i64 %51, %conv63, !dbg !13320
  %conv65 = trunc i64 %sub64 to i32, !dbg !13316
  %54 = load i32*, i32** %valueLenP.addr, align 8, !dbg !13321
  store i32 %conv65, i32* %54, align 4, !dbg !13322
  store i32 6, i32* %step, align 4, !dbg !13323
  br label %if.end66, !dbg !13324

if.end66:                                         ; preds = %if.then62, %sw.bb58
  br label %sw.epilog, !dbg !13325

sw.bb67:                                          ; preds = %while.body
  br label %sw.default, !dbg !13325

sw.default:                                       ; preds = %sw.bb67, %while.body
  store i32 -1, i32* %retval, align 4, !dbg !13326
  br label %return, !dbg !13326

sw.epilog:                                        ; preds = %if.end66, %if.end57, %if.end41, %if.end27, %if.end20, %if.end9
  %55 = load i64, i64* %index, align 8, !dbg !13327
  %inc = add i64 %55, 1, !dbg !13327
  store i64 %inc, i64* %index, align 8, !dbg !13327
  %56 = load i32, i32* %step, align 4, !dbg !13328
  %cmp68 = icmp eq i32 %56, 0, !dbg !13330
  br i1 %cmp68, label %if.then78, label %lor.lhs.false, !dbg !13331

lor.lhs.false:                                    ; preds = %sw.epilog
  %57 = load i32, i32* %step, align 4, !dbg !13332
  %cmp70 = icmp eq i32 %57, 2, !dbg !13333
  br i1 %cmp70, label %if.then78, label %lor.lhs.false72, !dbg !13334

lor.lhs.false72:                                  ; preds = %lor.lhs.false
  %58 = load i32, i32* %step, align 4, !dbg !13335
  %cmp73 = icmp eq i32 %58, 3, !dbg !13336
  br i1 %cmp73, label %if.then78, label %lor.lhs.false75, !dbg !13337

lor.lhs.false75:                                  ; preds = %lor.lhs.false72
  %59 = load i32, i32* %step, align 4, !dbg !13338
  %cmp76 = icmp eq i32 %59, 6, !dbg !13339
  br i1 %cmp76, label %if.then78, label %if.end83, !dbg !13340

if.then78:                                        ; preds = %lor.lhs.false75, %lor.lhs.false72, %lor.lhs.false, %sw.epilog
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !13341
  %61 = load i64, i64* %index, align 8, !dbg !13343
  %add.ptr79 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !13344
  %62 = load i64, i64* %bufferLen.addr, align 8, !dbg !13345
  %63 = load i64, i64* %index, align 8, !dbg !13346
  %sub80 = sub i64 %62, %63, !dbg !13347
  %call81 = call i64 @prv_skipSpace(i8* %add.ptr79, i64 %sub80), !dbg !13348
  %64 = load i64, i64* %index, align 8, !dbg !13349
  %add82 = add i64 %64, %call81, !dbg !13349
  store i64 %add82, i64* %index, align 8, !dbg !13349
  br label %if.end83, !dbg !13350

if.end83:                                         ; preds = %if.then78, %lor.lhs.false75
  br label %while.cond, !dbg !13218, !llvm.loop !13351

while.end:                                        ; preds = %land.end
  %65 = load i32, i32* %step, align 4, !dbg !13353
  %cmp84 = icmp eq i32 %65, 5, !dbg !13355
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !13356

if.then86:                                        ; preds = %while.end
  %66 = load i64, i64* %index, align 8, !dbg !13357
  %67 = load i32*, i32** %valueStartP.addr, align 8, !dbg !13359
  %68 = load i32, i32* %67, align 4, !dbg !13360
  %conv87 = sext i32 %68 to i64, !dbg !13360
  %sub88 = sub i64 %66, %conv87, !dbg !13361
  %conv89 = trunc i64 %sub88 to i32, !dbg !13357
  %69 = load i32*, i32** %valueLenP.addr, align 8, !dbg !13362
  store i32 %conv89, i32* %69, align 4, !dbg !13363
  store i32 6, i32* %step, align 4, !dbg !13364
  br label %if.end90, !dbg !13365

if.end90:                                         ; preds = %if.then86, %while.end
  %70 = load i32, i32* %step, align 4, !dbg !13366
  %cmp91 = icmp ne i32 %70, 6, !dbg !13368
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !13369

if.then93:                                        ; preds = %if.end90
  store i32 -1, i32* %retval, align 4, !dbg !13370
  br label %return, !dbg !13370

if.end94:                                         ; preds = %if.end90
  %71 = load i64, i64* %index, align 8, !dbg !13371
  %conv95 = trunc i64 %71 to i32, !dbg !13372
  store i32 %conv95, i32* %retval, align 4, !dbg !13373
  br label %return, !dbg !13373

return:                                           ; preds = %if.end94, %if.then93, %sw.default, %if.else39, %if.then26, %if.then8, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !13374
  ret i32 %72, !dbg !13374
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_convertRecord(%struct.lwm2m_uri_t* %uriP, %struct._record_t* %recordArray, i32 %count, %struct._lwm2m_data_t** %dataP) #0 !dbg !13375 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %recordArray.addr = alloca %struct._record_t*, align 8
  %count.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t**, align 8
  %index = alloca i32, align 4
  %freeIndex = alloca i32, align 4
  %rootP = alloca %struct._lwm2m_data_t*, align 8
  %size = alloca i32, align 4
  %rootLevel = alloca i32, align 4
  %parentP = alloca %struct._lwm2m_data_t*, align 8
  %targetP = alloca %struct._lwm2m_data_t*, align 8
  %resSegmentIndex = alloca i32, align 4
  %i = alloca i32, align 4
  %parentP127 = alloca %struct._lwm2m_data_t*, align 8
  %level = alloca i32, align 4
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !13378, metadata !1190), !dbg !13379
  store %struct._record_t* %recordArray, %struct._record_t** %recordArray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._record_t** %recordArray.addr, metadata !13380, metadata !1190), !dbg !13381
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13382, metadata !1190), !dbg !13383
  store %struct._lwm2m_data_t** %dataP, %struct._lwm2m_data_t*** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t*** %dataP.addr, metadata !13384, metadata !1190), !dbg !13385
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13386, metadata !1190), !dbg !13387
  call void @llvm.dbg.declare(metadata i32* %freeIndex, metadata !13388, metadata !1190), !dbg !13389
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %rootP, metadata !13390, metadata !1190), !dbg !13391
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13392, metadata !1190), !dbg !13393
  call void @llvm.dbg.declare(metadata i32* %rootLevel, metadata !13394, metadata !1190), !dbg !13395
  %0 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !13396
  %cmp = icmp eq %struct.lwm2m_uri_t* %0, null, !dbg !13398
  br i1 %cmp, label %if.then, label %if.else, !dbg !13399

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %count.addr, align 4, !dbg !13400
  store i32 %1, i32* %size, align 4, !dbg !13402
  %2 = load i32, i32* %count.addr, align 4, !dbg !13403
  %call = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 %2), !dbg !13404
  %3 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13405
  store %struct._lwm2m_data_t* %call, %struct._lwm2m_data_t** %3, align 8, !dbg !13406
  %4 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13407
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %4, align 8, !dbg !13409
  %cmp1 = icmp eq %struct._lwm2m_data_t* null, %5, !dbg !13410
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !13411

if.then2:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !13412
  br label %return, !dbg !13412

if.end:                                           ; preds = %if.then
  store i32 0, i32* %rootLevel, align 4, !dbg !13413
  %6 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13414
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %6, align 8, !dbg !13415
  store %struct._lwm2m_data_t* %7, %struct._lwm2m_data_t** %rootP, align 8, !dbg !13416
  br label %if.end71, !dbg !13417

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %parentP, metadata !13418, metadata !1190), !dbg !13420
  store i32 1, i32* %size, align 4, !dbg !13421
  %call3 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 1), !dbg !13422
  %8 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13423
  store %struct._lwm2m_data_t* %call3, %struct._lwm2m_data_t** %8, align 8, !dbg !13424
  %9 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13425
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %9, align 8, !dbg !13427
  %cmp4 = icmp eq %struct._lwm2m_data_t* null, %10, !dbg !13428
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !13429

if.then5:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !13430
  br label %return, !dbg !13430

if.end6:                                          ; preds = %if.else
  %11 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13431
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %11, align 8, !dbg !13432
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 0, !dbg !13433
  store i32 1, i32* %type, align 8, !dbg !13434
  %13 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !13435
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %13, i32 0, i32 1, !dbg !13436
  %14 = load i16, i16* %objectId, align 2, !dbg !13436
  %15 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13437
  %16 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %15, align 8, !dbg !13438
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %16, i32 0, i32 1, !dbg !13439
  store i16 %14, i16* %id, align 4, !dbg !13440
  store i32 1, i32* %rootLevel, align 4, !dbg !13441
  %17 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13442
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %17, align 8, !dbg !13443
  store %struct._lwm2m_data_t* %18, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13444
  %19 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !13445
  %flag = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %19, i32 0, i32 0, !dbg !13445
  %20 = load i8, i8* %flag, align 2, !dbg !13445
  %conv = zext i8 %20 to i32, !dbg !13445
  %and = and i32 %conv, 2, !dbg !13445
  %cmp7 = icmp ne i32 %and, 0, !dbg !13445
  br i1 %cmp7, label %if.then9, label %if.end52, !dbg !13447

if.then9:                                         ; preds = %if.end6
  %21 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13448
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %21, i32 0, i32 2, !dbg !13450
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !13451
  %count10 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !13452
  store i64 1, i64* %count10, align 8, !dbg !13453
  %call11 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 1), !dbg !13454
  %22 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13455
  %value12 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %22, i32 0, i32 2, !dbg !13456
  %asChildren13 = bitcast %union.anon.0* %value12 to %struct.anon.0*, !dbg !13457
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren13, i32 0, i32 1, !dbg !13458
  store %struct._lwm2m_data_t* %call11, %struct._lwm2m_data_t** %array, align 8, !dbg !13459
  %23 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13460
  %value14 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %23, i32 0, i32 2, !dbg !13462
  %asChildren15 = bitcast %union.anon.0* %value14 to %struct.anon.0*, !dbg !13463
  %array16 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren15, i32 0, i32 1, !dbg !13464
  %24 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array16, align 8, !dbg !13464
  %cmp17 = icmp eq %struct._lwm2m_data_t* null, %24, !dbg !13465
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !13466

if.then19:                                        ; preds = %if.then9
  br label %error, !dbg !13467

if.end20:                                         ; preds = %if.then9
  %25 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13468
  %value21 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %25, i32 0, i32 2, !dbg !13469
  %asChildren22 = bitcast %union.anon.0* %value21 to %struct.anon.0*, !dbg !13470
  %array23 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren22, i32 0, i32 1, !dbg !13471
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array23, align 8, !dbg !13471
  store %struct._lwm2m_data_t* %26, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13472
  %27 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13473
  %type24 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %27, i32 0, i32 0, !dbg !13474
  store i32 2, i32* %type24, align 8, !dbg !13475
  %28 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !13476
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %28, i32 0, i32 2, !dbg !13477
  %29 = load i16, i16* %instanceId, align 2, !dbg !13477
  %30 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13478
  %id25 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %30, i32 0, i32 1, !dbg !13479
  store i16 %29, i16* %id25, align 4, !dbg !13480
  store i32 2, i32* %rootLevel, align 4, !dbg !13481
  %31 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !13482
  %flag26 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %31, i32 0, i32 0, !dbg !13482
  %32 = load i8, i8* %flag26, align 2, !dbg !13482
  %conv27 = zext i8 %32 to i32, !dbg !13482
  %and28 = and i32 %conv27, 1, !dbg !13482
  %cmp29 = icmp ne i32 %and28, 0, !dbg !13482
  br i1 %cmp29, label %if.then31, label %if.end51, !dbg !13484

if.then31:                                        ; preds = %if.end20
  %33 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13485
  %value32 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %33, i32 0, i32 2, !dbg !13487
  %asChildren33 = bitcast %union.anon.0* %value32 to %struct.anon.0*, !dbg !13488
  %count34 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren33, i32 0, i32 0, !dbg !13489
  store i64 1, i64* %count34, align 8, !dbg !13490
  %call35 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 1), !dbg !13491
  %34 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13492
  %value36 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %34, i32 0, i32 2, !dbg !13493
  %asChildren37 = bitcast %union.anon.0* %value36 to %struct.anon.0*, !dbg !13494
  %array38 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren37, i32 0, i32 1, !dbg !13495
  store %struct._lwm2m_data_t* %call35, %struct._lwm2m_data_t** %array38, align 8, !dbg !13496
  %35 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13497
  %value39 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %35, i32 0, i32 2, !dbg !13499
  %asChildren40 = bitcast %union.anon.0* %value39 to %struct.anon.0*, !dbg !13500
  %array41 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren40, i32 0, i32 1, !dbg !13501
  %36 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array41, align 8, !dbg !13501
  %cmp42 = icmp eq %struct._lwm2m_data_t* null, %36, !dbg !13502
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !13503

if.then44:                                        ; preds = %if.then31
  br label %error, !dbg !13504

if.end45:                                         ; preds = %if.then31
  %37 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13505
  %value46 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %37, i32 0, i32 2, !dbg !13506
  %asChildren47 = bitcast %union.anon.0* %value46 to %struct.anon.0*, !dbg !13507
  %array48 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren47, i32 0, i32 1, !dbg !13508
  %38 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array48, align 8, !dbg !13508
  store %struct._lwm2m_data_t* %38, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13509
  %39 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13510
  %type49 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %39, i32 0, i32 0, !dbg !13511
  store i32 0, i32* %type49, align 8, !dbg !13512
  %40 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !13513
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %40, i32 0, i32 3, !dbg !13514
  %41 = load i16, i16* %resourceId, align 2, !dbg !13514
  %42 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13515
  %id50 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %42, i32 0, i32 1, !dbg !13516
  store i16 %41, i16* %id50, align 4, !dbg !13517
  store i32 3, i32* %rootLevel, align 4, !dbg !13518
  br label %if.end51, !dbg !13519

if.end51:                                         ; preds = %if.end45, %if.end20
  br label %if.end52, !dbg !13520

if.end52:                                         ; preds = %if.end51, %if.end6
  %43 = load i32, i32* %count.addr, align 4, !dbg !13521
  %conv53 = sext i32 %43 to i64, !dbg !13521
  %44 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13522
  %value54 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %44, i32 0, i32 2, !dbg !13523
  %asChildren55 = bitcast %union.anon.0* %value54 to %struct.anon.0*, !dbg !13524
  %count56 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren55, i32 0, i32 0, !dbg !13525
  store i64 %conv53, i64* %count56, align 8, !dbg !13526
  %45 = load i32, i32* %count.addr, align 4, !dbg !13527
  %call57 = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 %45), !dbg !13528
  %46 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13529
  %value58 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %46, i32 0, i32 2, !dbg !13530
  %asChildren59 = bitcast %union.anon.0* %value58 to %struct.anon.0*, !dbg !13531
  %array60 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren59, i32 0, i32 1, !dbg !13532
  store %struct._lwm2m_data_t* %call57, %struct._lwm2m_data_t** %array60, align 8, !dbg !13533
  %47 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13534
  %value61 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %47, i32 0, i32 2, !dbg !13536
  %asChildren62 = bitcast %union.anon.0* %value61 to %struct.anon.0*, !dbg !13537
  %array63 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren62, i32 0, i32 1, !dbg !13538
  %48 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array63, align 8, !dbg !13538
  %cmp64 = icmp eq %struct._lwm2m_data_t* null, %48, !dbg !13539
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !13540

if.then66:                                        ; preds = %if.end52
  br label %error, !dbg !13541

if.end67:                                         ; preds = %if.end52
  %49 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP, align 8, !dbg !13542
  %value68 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %49, i32 0, i32 2, !dbg !13543
  %asChildren69 = bitcast %union.anon.0* %value68 to %struct.anon.0*, !dbg !13544
  %array70 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren69, i32 0, i32 1, !dbg !13545
  %50 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array70, align 8, !dbg !13545
  store %struct._lwm2m_data_t* %50, %struct._lwm2m_data_t** %rootP, align 8, !dbg !13546
  br label %if.end71

if.end71:                                         ; preds = %if.end67, %if.end
  store i32 0, i32* %freeIndex, align 4, !dbg !13547
  store i32 0, i32* %index, align 4, !dbg !13548
  br label %for.cond, !dbg !13550

for.cond:                                         ; preds = %for.inc201, %if.end71
  %51 = load i32, i32* %index, align 4, !dbg !13551
  %52 = load i32, i32* %count.addr, align 4, !dbg !13553
  %cmp72 = icmp slt i32 %51, %52, !dbg !13554
  br i1 %cmp72, label %for.body, label %for.end203, !dbg !13555

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %targetP, metadata !13556, metadata !1190), !dbg !13558
  call void @llvm.dbg.declare(metadata i32* %resSegmentIndex, metadata !13559, metadata !1190), !dbg !13560
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13561, metadata !1190), !dbg !13562
  %53 = load i32, i32* %rootLevel, align 4, !dbg !13563
  switch i32 %53, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb74
    i32 2, label %sw.bb75
    i32 3, label %sw.bb76
  ], !dbg !13564

sw.bb:                                            ; preds = %for.body
  store i32 2, i32* %resSegmentIndex, align 4, !dbg !13565
  br label %sw.epilog, !dbg !13567

sw.bb74:                                          ; preds = %for.body
  store i32 1, i32* %resSegmentIndex, align 4, !dbg !13568
  br label %sw.epilog, !dbg !13569

sw.bb75:                                          ; preds = %for.body
  store i32 0, i32* %resSegmentIndex, align 4, !dbg !13570
  br label %sw.epilog, !dbg !13571

sw.bb76:                                          ; preds = %for.body
  store i32 -1, i32* %resSegmentIndex, align 4, !dbg !13572
  br label %sw.epilog, !dbg !13573

sw.default:                                       ; preds = %for.body
  br label %error, !dbg !13574

sw.epilog:                                        ; preds = %sw.bb76, %sw.bb75, %sw.bb74, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !13575
  br label %for.cond77, !dbg !13577

for.cond77:                                       ; preds = %for.inc, %sw.epilog
  %54 = load i32, i32* %i, align 4, !dbg !13578
  %55 = load i32, i32* %resSegmentIndex, align 4, !dbg !13580
  %cmp78 = icmp sle i32 %54, %55, !dbg !13581
  br i1 %cmp78, label %for.body80, label %for.end, !dbg !13582

for.body80:                                       ; preds = %for.cond77
  %56 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13583
  %57 = load i32, i32* %index, align 4, !dbg !13586
  %idxprom = sext i32 %57 to i64, !dbg !13583
  %arrayidx = getelementptr inbounds %struct._record_t, %struct._record_t* %56, i64 %idxprom, !dbg !13583
  %ids = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx, i32 0, i32 0, !dbg !13587
  %58 = load i32, i32* %i, align 4, !dbg !13588
  %idxprom81 = sext i32 %58 to i64, !dbg !13583
  %arrayidx82 = getelementptr inbounds [4 x i16], [4 x i16]* %ids, i64 0, i64 %idxprom81, !dbg !13583
  %59 = load i16, i16* %arrayidx82, align 2, !dbg !13583
  %conv83 = zext i16 %59 to i32, !dbg !13583
  %cmp84 = icmp eq i32 %conv83, 65535, !dbg !13589
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !13590

if.then86:                                        ; preds = %for.body80
  br label %error, !dbg !13591

if.end87:                                         ; preds = %for.body80
  br label %for.inc, !dbg !13592

for.inc:                                          ; preds = %if.end87
  %60 = load i32, i32* %i, align 4, !dbg !13593
  %inc = add nsw i32 %60, 1, !dbg !13593
  store i32 %inc, i32* %i, align 4, !dbg !13593
  br label %for.cond77, !dbg !13594, !llvm.loop !13595

for.end:                                          ; preds = %for.cond77
  %61 = load i32, i32* %resSegmentIndex, align 4, !dbg !13597
  %cmp88 = icmp slt i32 %61, 2, !dbg !13599
  br i1 %cmp88, label %if.then90, label %if.end101, !dbg !13600

if.then90:                                        ; preds = %for.end
  %62 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13601
  %63 = load i32, i32* %index, align 4, !dbg !13604
  %idxprom91 = sext i32 %63 to i64, !dbg !13601
  %arrayidx92 = getelementptr inbounds %struct._record_t, %struct._record_t* %62, i64 %idxprom91, !dbg !13601
  %ids93 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx92, i32 0, i32 0, !dbg !13605
  %64 = load i32, i32* %resSegmentIndex, align 4, !dbg !13606
  %add = add nsw i32 %64, 2, !dbg !13607
  %idxprom94 = sext i32 %add to i64, !dbg !13601
  %arrayidx95 = getelementptr inbounds [4 x i16], [4 x i16]* %ids93, i64 0, i64 %idxprom94, !dbg !13601
  %65 = load i16, i16* %arrayidx95, align 2, !dbg !13601
  %conv96 = zext i16 %65 to i32, !dbg !13601
  %cmp97 = icmp ne i32 %conv96, 65535, !dbg !13608
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !13609

if.then99:                                        ; preds = %if.then90
  br label %error, !dbg !13610

if.end100:                                        ; preds = %if.then90
  br label %if.end101, !dbg !13611

if.end101:                                        ; preds = %if.end100, %for.end
  %66 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %rootP, align 8, !dbg !13612
  %67 = load i32, i32* %count.addr, align 4, !dbg !13613
  %68 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13614
  %69 = load i32, i32* %index, align 4, !dbg !13615
  %idxprom102 = sext i32 %69 to i64, !dbg !13614
  %arrayidx103 = getelementptr inbounds %struct._record_t, %struct._record_t* %68, i64 %idxprom102, !dbg !13614
  %ids104 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx103, i32 0, i32 0, !dbg !13616
  %arrayidx105 = getelementptr inbounds [4 x i16], [4 x i16]* %ids104, i64 0, i64 0, !dbg !13614
  %70 = load i16, i16* %arrayidx105, align 8, !dbg !13614
  %call106 = call %struct._lwm2m_data_t* @prv_findDataItem(%struct._lwm2m_data_t* %66, i32 %67, i16 zeroext %70), !dbg !13617
  store %struct._lwm2m_data_t* %call106, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13618
  %71 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13619
  %cmp107 = icmp eq %struct._lwm2m_data_t* %71, null, !dbg !13621
  br i1 %cmp107, label %if.then109, label %if.end118, !dbg !13622

if.then109:                                       ; preds = %if.end101
  %72 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %rootP, align 8, !dbg !13623
  %73 = load i32, i32* %freeIndex, align 4, !dbg !13625
  %idx.ext = sext i32 %73 to i64, !dbg !13626
  %add.ptr = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %72, i64 %idx.ext, !dbg !13626
  store %struct._lwm2m_data_t* %add.ptr, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13627
  %74 = load i32, i32* %freeIndex, align 4, !dbg !13628
  %inc110 = add nsw i32 %74, 1, !dbg !13628
  store i32 %inc110, i32* %freeIndex, align 4, !dbg !13628
  %75 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13629
  %76 = load i32, i32* %index, align 4, !dbg !13630
  %idxprom111 = sext i32 %76 to i64, !dbg !13629
  %arrayidx112 = getelementptr inbounds %struct._record_t, %struct._record_t* %75, i64 %idxprom111, !dbg !13629
  %ids113 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx112, i32 0, i32 0, !dbg !13631
  %arrayidx114 = getelementptr inbounds [4 x i16], [4 x i16]* %ids113, i64 0, i64 0, !dbg !13629
  %77 = load i16, i16* %arrayidx114, align 8, !dbg !13629
  %78 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13632
  %id115 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %78, i32 0, i32 1, !dbg !13633
  store i16 %77, i16* %id115, align 4, !dbg !13634
  %79 = load i32, i32* %rootLevel, align 4, !dbg !13635
  %call116 = call i32 @utils_depthToDatatype(i32 %79), !dbg !13636
  %80 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13637
  %type117 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %80, i32 0, i32 0, !dbg !13638
  store i32 %call116, i32* %type117, align 8, !dbg !13639
  br label %if.end118, !dbg !13640

if.end118:                                        ; preds = %if.then109, %if.end101
  %81 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13641
  %82 = load i32, i32* %index, align 4, !dbg !13643
  %idxprom119 = sext i32 %82 to i64, !dbg !13641
  %arrayidx120 = getelementptr inbounds %struct._record_t, %struct._record_t* %81, i64 %idxprom119, !dbg !13641
  %ids121 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx120, i32 0, i32 0, !dbg !13644
  %arrayidx122 = getelementptr inbounds [4 x i16], [4 x i16]* %ids121, i64 0, i64 1, !dbg !13641
  %83 = load i16, i16* %arrayidx122, align 2, !dbg !13641
  %conv123 = zext i16 %83 to i32, !dbg !13641
  %cmp124 = icmp ne i32 %conv123, 65535, !dbg !13645
  br i1 %cmp124, label %if.then126, label %if.end192, !dbg !13646

if.then126:                                       ; preds = %if.end118
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %parentP127, metadata !13647, metadata !1190), !dbg !13649
  call void @llvm.dbg.declare(metadata i32* %level, metadata !13650, metadata !1190), !dbg !13651
  %84 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13652
  store %struct._lwm2m_data_t* %84, %struct._lwm2m_data_t** %parentP127, align 8, !dbg !13653
  %85 = load i32, i32* %rootLevel, align 4, !dbg !13654
  %call128 = call i32 @prv_decreaseLevel(i32 %85), !dbg !13655
  store i32 %call128, i32* %level, align 4, !dbg !13656
  store i32 1, i32* %i, align 4, !dbg !13657
  br label %for.cond129, !dbg !13659

for.cond129:                                      ; preds = %for.inc164, %if.then126
  %86 = load i32, i32* %i, align 4, !dbg !13660
  %87 = load i32, i32* %resSegmentIndex, align 4, !dbg !13662
  %cmp130 = icmp sle i32 %86, %87, !dbg !13663
  br i1 %cmp130, label %for.body132, label %for.end166, !dbg !13664

for.body132:                                      ; preds = %for.cond129
  %88 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP127, align 8, !dbg !13665
  %value133 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %88, i32 0, i32 2, !dbg !13667
  %asChildren134 = bitcast %union.anon.0* %value133 to %struct.anon.0*, !dbg !13668
  %array135 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren134, i32 0, i32 1, !dbg !13669
  %89 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array135, align 8, !dbg !13669
  %90 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP127, align 8, !dbg !13670
  %value136 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %90, i32 0, i32 2, !dbg !13671
  %asChildren137 = bitcast %union.anon.0* %value136 to %struct.anon.0*, !dbg !13672
  %count138 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren137, i32 0, i32 0, !dbg !13673
  %91 = load i64, i64* %count138, align 8, !dbg !13673
  %conv139 = trunc i64 %91 to i32, !dbg !13670
  %92 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13674
  %93 = load i32, i32* %index, align 4, !dbg !13675
  %idxprom140 = sext i32 %93 to i64, !dbg !13674
  %arrayidx141 = getelementptr inbounds %struct._record_t, %struct._record_t* %92, i64 %idxprom140, !dbg !13674
  %ids142 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx141, i32 0, i32 0, !dbg !13676
  %94 = load i32, i32* %i, align 4, !dbg !13677
  %idxprom143 = sext i32 %94 to i64, !dbg !13674
  %arrayidx144 = getelementptr inbounds [4 x i16], [4 x i16]* %ids142, i64 0, i64 %idxprom143, !dbg !13674
  %95 = load i16, i16* %arrayidx144, align 2, !dbg !13674
  %call145 = call %struct._lwm2m_data_t* @prv_findDataItem(%struct._lwm2m_data_t* %89, i32 %conv139, i16 zeroext %95), !dbg !13678
  store %struct._lwm2m_data_t* %call145, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13679
  %96 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13680
  %cmp146 = icmp eq %struct._lwm2m_data_t* %96, null, !dbg !13682
  br i1 %cmp146, label %if.then148, label %if.end162, !dbg !13683

if.then148:                                       ; preds = %for.body132
  %97 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP127, align 8, !dbg !13684
  %call149 = call %struct._lwm2m_data_t* @prv_extendData(%struct._lwm2m_data_t* %97), !dbg !13686
  store %struct._lwm2m_data_t* %call149, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13687
  %98 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13688
  %cmp150 = icmp eq %struct._lwm2m_data_t* %98, null, !dbg !13690
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !13691

if.then152:                                       ; preds = %if.then148
  br label %error, !dbg !13692

if.end153:                                        ; preds = %if.then148
  %99 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13693
  %100 = load i32, i32* %index, align 4, !dbg !13694
  %idxprom154 = sext i32 %100 to i64, !dbg !13693
  %arrayidx155 = getelementptr inbounds %struct._record_t, %struct._record_t* %99, i64 %idxprom154, !dbg !13693
  %ids156 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx155, i32 0, i32 0, !dbg !13695
  %101 = load i32, i32* %i, align 4, !dbg !13696
  %idxprom157 = sext i32 %101 to i64, !dbg !13693
  %arrayidx158 = getelementptr inbounds [4 x i16], [4 x i16]* %ids156, i64 0, i64 %idxprom157, !dbg !13693
  %102 = load i16, i16* %arrayidx158, align 2, !dbg !13693
  %103 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13697
  %id159 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %103, i32 0, i32 1, !dbg !13698
  store i16 %102, i16* %id159, align 4, !dbg !13699
  %104 = load i32, i32* %level, align 4, !dbg !13700
  %call160 = call i32 @utils_depthToDatatype(i32 %104), !dbg !13701
  %105 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13702
  %type161 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %105, i32 0, i32 0, !dbg !13703
  store i32 %call160, i32* %type161, align 8, !dbg !13704
  br label %if.end162, !dbg !13705

if.end162:                                        ; preds = %if.end153, %for.body132
  %106 = load i32, i32* %level, align 4, !dbg !13706
  %call163 = call i32 @prv_decreaseLevel(i32 %106), !dbg !13707
  store i32 %call163, i32* %level, align 4, !dbg !13708
  %107 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13709
  store %struct._lwm2m_data_t* %107, %struct._lwm2m_data_t** %parentP127, align 8, !dbg !13710
  br label %for.inc164, !dbg !13711

for.inc164:                                       ; preds = %if.end162
  %108 = load i32, i32* %i, align 4, !dbg !13712
  %inc165 = add nsw i32 %108, 1, !dbg !13712
  store i32 %inc165, i32* %i, align 4, !dbg !13712
  br label %for.cond129, !dbg !13713, !llvm.loop !13714

for.end166:                                       ; preds = %for.cond129
  %109 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13716
  %110 = load i32, i32* %index, align 4, !dbg !13718
  %idxprom167 = sext i32 %110 to i64, !dbg !13716
  %arrayidx168 = getelementptr inbounds %struct._record_t, %struct._record_t* %109, i64 %idxprom167, !dbg !13716
  %ids169 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx168, i32 0, i32 0, !dbg !13719
  %111 = load i32, i32* %resSegmentIndex, align 4, !dbg !13720
  %add170 = add nsw i32 %111, 1, !dbg !13721
  %idxprom171 = sext i32 %add170 to i64, !dbg !13716
  %arrayidx172 = getelementptr inbounds [4 x i16], [4 x i16]* %ids169, i64 0, i64 %idxprom171, !dbg !13716
  %112 = load i16, i16* %arrayidx172, align 2, !dbg !13716
  %conv173 = zext i16 %112 to i32, !dbg !13716
  %cmp174 = icmp ne i32 %conv173, 65535, !dbg !13722
  br i1 %cmp174, label %if.then176, label %if.end191, !dbg !13723

if.then176:                                       ; preds = %for.end166
  %113 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13724
  %type177 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %113, i32 0, i32 0, !dbg !13726
  store i32 3, i32* %type177, align 8, !dbg !13727
  %114 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13728
  %call178 = call %struct._lwm2m_data_t* @prv_extendData(%struct._lwm2m_data_t* %114), !dbg !13729
  store %struct._lwm2m_data_t* %call178, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13730
  %115 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13731
  %cmp179 = icmp eq %struct._lwm2m_data_t* %115, null, !dbg !13733
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !13734

if.then181:                                       ; preds = %if.then176
  br label %error, !dbg !13735

if.end182:                                        ; preds = %if.then176
  %116 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13736
  %117 = load i32, i32* %index, align 4, !dbg !13737
  %idxprom183 = sext i32 %117 to i64, !dbg !13736
  %arrayidx184 = getelementptr inbounds %struct._record_t, %struct._record_t* %116, i64 %idxprom183, !dbg !13736
  %ids185 = getelementptr inbounds %struct._record_t, %struct._record_t* %arrayidx184, i32 0, i32 0, !dbg !13738
  %118 = load i32, i32* %resSegmentIndex, align 4, !dbg !13739
  %add186 = add nsw i32 %118, 1, !dbg !13740
  %idxprom187 = sext i32 %add186 to i64, !dbg !13736
  %arrayidx188 = getelementptr inbounds [4 x i16], [4 x i16]* %ids185, i64 0, i64 %idxprom187, !dbg !13736
  %119 = load i16, i16* %arrayidx188, align 2, !dbg !13736
  %120 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13741
  %id189 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %120, i32 0, i32 1, !dbg !13742
  store i16 %119, i16* %id189, align 4, !dbg !13743
  %121 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13744
  %type190 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %121, i32 0, i32 0, !dbg !13745
  store i32 0, i32* %type190, align 8, !dbg !13746
  br label %if.end191, !dbg !13747

if.end191:                                        ; preds = %if.end182, %for.end166
  br label %if.end192, !dbg !13748

if.end192:                                        ; preds = %if.end191, %if.end118
  %122 = load %struct._record_t*, %struct._record_t** %recordArray.addr, align 8, !dbg !13749
  %123 = load i32, i32* %index, align 4, !dbg !13751
  %idx.ext193 = sext i32 %123 to i64, !dbg !13752
  %add.ptr194 = getelementptr inbounds %struct._record_t, %struct._record_t* %122, i64 %idx.ext193, !dbg !13752
  %124 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !13753
  %call195 = call zeroext i1 @prv_convertValue(%struct._record_t* %add.ptr194, %struct._lwm2m_data_t* %124), !dbg !13754
  %conv196 = zext i1 %call195 to i32, !dbg !13754
  %cmp197 = icmp ne i32 1, %conv196, !dbg !13755
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !13756

if.then199:                                       ; preds = %if.end192
  br label %error, !dbg !13757

if.end200:                                        ; preds = %if.end192
  br label %for.inc201, !dbg !13758

for.inc201:                                       ; preds = %if.end200
  %125 = load i32, i32* %index, align 4, !dbg !13759
  %inc202 = add nsw i32 %125, 1, !dbg !13759
  store i32 %inc202, i32* %index, align 4, !dbg !13759
  br label %for.cond, !dbg !13760, !llvm.loop !13761

for.end203:                                       ; preds = %for.cond
  %126 = load i32, i32* %size, align 4, !dbg !13763
  store i32 %126, i32* %retval, align 4, !dbg !13764
  br label %return, !dbg !13764

error:                                            ; preds = %if.then199, %if.then181, %if.then152, %if.then99, %if.then86, %sw.default, %if.then66, %if.then44, %if.then19
  %127 = load i32, i32* %size, align 4, !dbg !13765
  %128 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13766
  %129 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %128, align 8, !dbg !13767
  call void @lwm2m_data_free(i32 %127, %struct._lwm2m_data_t* %129), !dbg !13768
  %130 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %dataP.addr, align 8, !dbg !13769
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %130, align 8, !dbg !13770
  store i32 -1, i32* %retval, align 4, !dbg !13771
  br label %return, !dbg !13771

return:                                           ; preds = %error, %for.end203, %if.then5, %if.then2
  %131 = load i32, i32* %retval, align 4, !dbg !13772
  ret i32 %131, !dbg !13772
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_dataStrip(i32 %size, %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %resultP) #0 !dbg !13773 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %resultP.addr = alloca %struct._lwm2m_data_t**, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %realSize = alloca i32, align 4
  %childLen = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13776, metadata !1190), !dbg !13777
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !13778, metadata !1190), !dbg !13779
  store %struct._lwm2m_data_t** %resultP, %struct._lwm2m_data_t*** %resultP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t*** %resultP.addr, metadata !13780, metadata !1190), !dbg !13781
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13782, metadata !1190), !dbg !13783
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13784, metadata !1190), !dbg !13785
  call void @llvm.dbg.declare(metadata i32* %realSize, metadata !13786, metadata !1190), !dbg !13787
  store i32 0, i32* %realSize, align 4, !dbg !13788
  store i32 0, i32* %i, align 4, !dbg !13789
  br label %for.cond, !dbg !13791

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13792
  %1 = load i32, i32* %size.addr, align 4, !dbg !13794
  %cmp = icmp slt i32 %0, %1, !dbg !13795
  br i1 %cmp, label %for.body, label %for.end, !dbg !13796

for.body:                                         ; preds = %for.cond
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13797
  %3 = load i32, i32* %i, align 4, !dbg !13800
  %idxprom = sext i32 %3 to i64, !dbg !13797
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i64 %idxprom, !dbg !13797
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !13801
  %4 = load i32, i32* %type, align 8, !dbg !13801
  %cmp1 = icmp ne i32 %4, 0, !dbg !13802
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13803

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %realSize, align 4, !dbg !13804
  %inc = add nsw i32 %5, 1, !dbg !13804
  store i32 %inc, i32* %realSize, align 4, !dbg !13804
  br label %if.end, !dbg !13806

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !13807

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !13808
  %inc2 = add nsw i32 %6, 1, !dbg !13808
  store i32 %inc2, i32* %i, align 4, !dbg !13808
  br label %for.cond, !dbg !13809, !llvm.loop !13810

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %realSize, align 4, !dbg !13812
  %call = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 %7), !dbg !13813
  %8 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %resultP.addr, align 8, !dbg !13814
  store %struct._lwm2m_data_t* %call, %struct._lwm2m_data_t** %8, align 8, !dbg !13815
  %9 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %resultP.addr, align 8, !dbg !13816
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %9, align 8, !dbg !13818
  %cmp3 = icmp eq %struct._lwm2m_data_t* %10, null, !dbg !13819
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13820

if.then4:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !13821
  br label %return, !dbg !13821

if.end5:                                          ; preds = %for.end
  store i32 0, i32* %j, align 4, !dbg !13822
  store i32 0, i32* %i, align 4, !dbg !13823
  br label %for.cond6, !dbg !13825

for.cond6:                                        ; preds = %for.inc59, %if.end5
  %11 = load i32, i32* %i, align 4, !dbg !13826
  %12 = load i32, i32* %size.addr, align 4, !dbg !13828
  %cmp7 = icmp slt i32 %11, %12, !dbg !13829
  br i1 %cmp7, label %for.body8, label %for.end61, !dbg !13830

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13831
  %14 = load i32, i32* %i, align 4, !dbg !13834
  %idxprom9 = sext i32 %14 to i64, !dbg !13831
  %arrayidx10 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %13, i64 %idxprom9, !dbg !13831
  %type11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx10, i32 0, i32 0, !dbg !13835
  %15 = load i32, i32* %type11, align 8, !dbg !13835
  %cmp12 = icmp ne i32 %15, 0, !dbg !13836
  br i1 %cmp12, label %if.then13, label %if.end58, !dbg !13837

if.then13:                                        ; preds = %for.body8
  %16 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %resultP.addr, align 8, !dbg !13838
  %17 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %16, align 8, !dbg !13840
  %18 = load i32, i32* %j, align 4, !dbg !13841
  %idx.ext = sext i32 %18 to i64, !dbg !13842
  %add.ptr = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %17, i64 %idx.ext, !dbg !13842
  %19 = bitcast %struct._lwm2m_data_t* %add.ptr to i8*, !dbg !13843
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13844
  %21 = load i32, i32* %i, align 4, !dbg !13845
  %idx.ext14 = sext i32 %21 to i64, !dbg !13846
  %add.ptr15 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %20, i64 %idx.ext14, !dbg !13846
  %22 = bitcast %struct._lwm2m_data_t* %add.ptr15 to i8*, !dbg !13843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %22, i64 24, i32 8, i1 false), !dbg !13843
  %23 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13847
  %24 = load i32, i32* %i, align 4, !dbg !13849
  %idxprom16 = sext i32 %24 to i64, !dbg !13847
  %arrayidx17 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %23, i64 %idxprom16, !dbg !13847
  %type18 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx17, i32 0, i32 0, !dbg !13850
  %25 = load i32, i32* %type18, align 8, !dbg !13850
  %cmp19 = icmp eq i32 %25, 1, !dbg !13851
  br i1 %cmp19, label %if.then29, label %lor.lhs.false, !dbg !13852

lor.lhs.false:                                    ; preds = %if.then13
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13853
  %27 = load i32, i32* %i, align 4, !dbg !13854
  %idxprom20 = sext i32 %27 to i64, !dbg !13853
  %arrayidx21 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %26, i64 %idxprom20, !dbg !13853
  %type22 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx21, i32 0, i32 0, !dbg !13855
  %28 = load i32, i32* %type22, align 8, !dbg !13855
  %cmp23 = icmp eq i32 %28, 2, !dbg !13856
  br i1 %cmp23, label %if.then29, label %lor.lhs.false24, !dbg !13857

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %29 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13858
  %30 = load i32, i32* %i, align 4, !dbg !13859
  %idxprom25 = sext i32 %30 to i64, !dbg !13858
  %arrayidx26 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %29, i64 %idxprom25, !dbg !13858
  %type27 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx26, i32 0, i32 0, !dbg !13860
  %31 = load i32, i32* %type27, align 8, !dbg !13860
  %cmp28 = icmp eq i32 %31, 3, !dbg !13861
  br i1 %cmp28, label %if.then29, label %if.else52, !dbg !13862

if.then29:                                        ; preds = %lor.lhs.false24, %lor.lhs.false, %if.then13
  call void @llvm.dbg.declare(metadata i32* %childLen, metadata !13863, metadata !1190), !dbg !13865
  %32 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13866
  %33 = load i32, i32* %i, align 4, !dbg !13867
  %idxprom30 = sext i32 %33 to i64, !dbg !13866
  %arrayidx31 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %32, i64 %idxprom30, !dbg !13866
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx31, i32 0, i32 2, !dbg !13868
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !13869
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !13870
  %34 = load i64, i64* %count, align 8, !dbg !13870
  %conv = trunc i64 %34 to i32, !dbg !13866
  %35 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13871
  %36 = load i32, i32* %i, align 4, !dbg !13872
  %idxprom32 = sext i32 %36 to i64, !dbg !13871
  %arrayidx33 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %35, i64 %idxprom32, !dbg !13871
  %value34 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx33, i32 0, i32 2, !dbg !13873
  %asChildren35 = bitcast %union.anon.0* %value34 to %struct.anon.0*, !dbg !13874
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren35, i32 0, i32 1, !dbg !13875
  %37 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !13875
  %38 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %resultP.addr, align 8, !dbg !13876
  %39 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %38, align 8, !dbg !13877
  %40 = load i32, i32* %j, align 4, !dbg !13878
  %idxprom36 = sext i32 %40 to i64, !dbg !13879
  %arrayidx37 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %39, i64 %idxprom36, !dbg !13879
  %value38 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx37, i32 0, i32 2, !dbg !13880
  %asChildren39 = bitcast %union.anon.0* %value38 to %struct.anon.0*, !dbg !13881
  %array40 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren39, i32 0, i32 1, !dbg !13882
  %call41 = call i32 @prv_dataStrip(i32 %conv, %struct._lwm2m_data_t* %37, %struct._lwm2m_data_t** %array40), !dbg !13883
  store i32 %call41, i32* %childLen, align 4, !dbg !13884
  %41 = load i32, i32* %childLen, align 4, !dbg !13885
  %cmp42 = icmp sle i32 %41, 0, !dbg !13887
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !13888

if.then44:                                        ; preds = %if.then29
  %42 = load i32, i32* %j, align 4, !dbg !13889
  %dec = add nsw i32 %42, -1, !dbg !13889
  store i32 %dec, i32* %j, align 4, !dbg !13889
  br label %if.end51, !dbg !13891

if.else:                                          ; preds = %if.then29
  %43 = load i32, i32* %childLen, align 4, !dbg !13892
  %conv45 = sext i32 %43 to i64, !dbg !13892
  %44 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %resultP.addr, align 8, !dbg !13894
  %45 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %44, align 8, !dbg !13895
  %46 = load i32, i32* %j, align 4, !dbg !13896
  %idxprom46 = sext i32 %46 to i64, !dbg !13897
  %arrayidx47 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %45, i64 %idxprom46, !dbg !13897
  %value48 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx47, i32 0, i32 2, !dbg !13898
  %asChildren49 = bitcast %union.anon.0* %value48 to %struct.anon.0*, !dbg !13899
  %count50 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren49, i32 0, i32 0, !dbg !13900
  store i64 %conv45, i64* %count50, align 8, !dbg !13901
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then44
  br label %if.end56, !dbg !13902

if.else52:                                        ; preds = %lor.lhs.false24
  %47 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !13903
  %48 = load i32, i32* %i, align 4, !dbg !13905
  %idxprom53 = sext i32 %48 to i64, !dbg !13903
  %arrayidx54 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %47, i64 %idxprom53, !dbg !13903
  %value55 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx54, i32 0, i32 2, !dbg !13906
  %asBuffer = bitcast %union.anon.0* %value55 to %struct.anon*, !dbg !13907
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 1, !dbg !13908
  store i8* null, i8** %buffer, align 8, !dbg !13909
  br label %if.end56

if.end56:                                         ; preds = %if.else52, %if.end51
  %49 = load i32, i32* %j, align 4, !dbg !13910
  %inc57 = add nsw i32 %49, 1, !dbg !13910
  store i32 %inc57, i32* %j, align 4, !dbg !13910
  br label %if.end58, !dbg !13911

if.end58:                                         ; preds = %if.end56, %for.body8
  br label %for.inc59, !dbg !13912

for.inc59:                                        ; preds = %if.end58
  %50 = load i32, i32* %i, align 4, !dbg !13913
  %inc60 = add nsw i32 %50, 1, !dbg !13913
  store i32 %inc60, i32* %i, align 4, !dbg !13913
  br label %for.cond6, !dbg !13914, !llvm.loop !13915

for.end61:                                        ; preds = %for.cond6
  %51 = load i32, i32* %realSize, align 4, !dbg !13917
  store i32 %51, i32* %retval, align 4, !dbg !13918
  br label %return, !dbg !13918

return:                                           ; preds = %for.end61, %if.then4
  %52 = load i32, i32* %retval, align 4, !dbg !13919
  ret i32 %52, !dbg !13919
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._lwm2m_data_t* @prv_findDataItem(%struct._lwm2m_data_t* %listP, i32 %count, i16 zeroext %id) #0 !dbg !13920 {
entry:
  %retval = alloca %struct._lwm2m_data_t*, align 8
  %listP.addr = alloca %struct._lwm2m_data_t*, align 8
  %count.addr = alloca i32, align 4
  %id.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct._lwm2m_data_t* %listP, %struct._lwm2m_data_t** %listP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %listP.addr, metadata !13923, metadata !1190), !dbg !13924
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13925, metadata !1190), !dbg !13926
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !13927, metadata !1190), !dbg !13928
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13929, metadata !1190), !dbg !13930
  store i32 0, i32* %i, align 4, !dbg !13931
  br label %while.cond, !dbg !13932

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13933
  %1 = load i32, i32* %count.addr, align 4, !dbg !13934
  %cmp = icmp slt i32 %0, %1, !dbg !13935
  br i1 %cmp, label %while.body, label %while.end, !dbg !13932

while.body:                                       ; preds = %while.cond
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %listP.addr, align 8, !dbg !13936
  %3 = load i32, i32* %i, align 4, !dbg !13939
  %idxprom = sext i32 %3 to i64, !dbg !13936
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i64 %idxprom, !dbg !13936
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !13940
  %4 = load i32, i32* %type, align 8, !dbg !13940
  %cmp1 = icmp ne i32 %4, 0, !dbg !13941
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !13942

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %listP.addr, align 8, !dbg !13943
  %6 = load i32, i32* %i, align 4, !dbg !13944
  %idxprom2 = sext i32 %6 to i64, !dbg !13943
  %arrayidx3 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %5, i64 %idxprom2, !dbg !13943
  %id4 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx3, i32 0, i32 1, !dbg !13945
  %7 = load i16, i16* %id4, align 4, !dbg !13945
  %conv = zext i16 %7 to i32, !dbg !13943
  %8 = load i16, i16* %id.addr, align 2, !dbg !13946
  %conv5 = zext i16 %8 to i32, !dbg !13946
  %cmp6 = icmp eq i32 %conv, %conv5, !dbg !13947
  br i1 %cmp6, label %if.then, label %if.end, !dbg !13948

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %listP.addr, align 8, !dbg !13949
  %10 = load i32, i32* %i, align 4, !dbg !13951
  %idx.ext = sext i32 %10 to i64, !dbg !13952
  %add.ptr = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %9, i64 %idx.ext, !dbg !13952
  store %struct._lwm2m_data_t* %add.ptr, %struct._lwm2m_data_t** %retval, align 8, !dbg !13953
  br label %return, !dbg !13953

if.end:                                           ; preds = %land.lhs.true, %while.body
  %11 = load i32, i32* %i, align 4, !dbg !13954
  %inc = add nsw i32 %11, 1, !dbg !13954
  store i32 %inc, i32* %i, align 4, !dbg !13954
  br label %while.cond, !dbg !13932, !llvm.loop !13955

while.end:                                        ; preds = %while.cond
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %retval, align 8, !dbg !13957
  br label %return, !dbg !13957

return:                                           ; preds = %while.end, %if.then
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %retval, align 8, !dbg !13958
  ret %struct._lwm2m_data_t* %12, !dbg !13958
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_decreaseLevel(i32 %level) #0 !dbg !13959 {
entry:
  %retval = alloca i32, align 4
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !13962, metadata !1190), !dbg !13963
  %0 = load i32, i32* %level.addr, align 4, !dbg !13964
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !13965

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !13966
  br label %return, !dbg !13966

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !13968
  br label %return, !dbg !13968

sw.bb2:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !13969
  br label %return, !dbg !13969

sw.bb3:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !13970
  br label %return, !dbg !13970

sw.default:                                       ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !13971
  br label %return, !dbg !13971

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !13972
  ret i32 %1, !dbg !13972
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._lwm2m_data_t* @prv_extendData(%struct._lwm2m_data_t* %parentP) #0 !dbg !13973 {
entry:
  %retval = alloca %struct._lwm2m_data_t*, align 8
  %parentP.addr = alloca %struct._lwm2m_data_t*, align 8
  %newP = alloca %struct._lwm2m_data_t*, align 8
  store %struct._lwm2m_data_t* %parentP, %struct._lwm2m_data_t** %parentP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %parentP.addr, metadata !13976, metadata !1190), !dbg !13977
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %newP, metadata !13978, metadata !1190), !dbg !13979
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !13980
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 2, !dbg !13981
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !13982
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !13983
  %1 = load i64, i64* %count, align 8, !dbg !13983
  %add = add i64 %1, 1, !dbg !13984
  %conv = trunc i64 %add to i32, !dbg !13980
  %call = call %struct._lwm2m_data_t* @lwm2m_data_new(i32 %conv), !dbg !13985
  store %struct._lwm2m_data_t* %call, %struct._lwm2m_data_t** %newP, align 8, !dbg !13986
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newP, align 8, !dbg !13987
  %cmp = icmp eq %struct._lwm2m_data_t* %2, null, !dbg !13989
  br i1 %cmp, label %if.then, label %if.end, !dbg !13990

if.then:                                          ; preds = %entry
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %retval, align 8, !dbg !13991
  br label %return, !dbg !13991

if.end:                                           ; preds = %entry
  %3 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !13992
  %value2 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %3, i32 0, i32 2, !dbg !13994
  %asChildren3 = bitcast %union.anon.0* %value2 to %struct.anon.0*, !dbg !13995
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren3, i32 0, i32 1, !dbg !13996
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !13996
  %cmp4 = icmp ne %struct._lwm2m_data_t* %4, null, !dbg !13997
  br i1 %cmp4, label %if.then6, label %if.end16, !dbg !13998

if.then6:                                         ; preds = %if.end
  %5 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newP, align 8, !dbg !13999
  %6 = bitcast %struct._lwm2m_data_t* %5 to i8*, !dbg !14001
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !14002
  %value7 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 2, !dbg !14003
  %asChildren8 = bitcast %union.anon.0* %value7 to %struct.anon.0*, !dbg !14004
  %array9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren8, i32 0, i32 1, !dbg !14005
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array9, align 8, !dbg !14005
  %9 = bitcast %struct._lwm2m_data_t* %8 to i8*, !dbg !14001
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !14006
  %value10 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i32 0, i32 2, !dbg !14007
  %asChildren11 = bitcast %union.anon.0* %value10 to %struct.anon.0*, !dbg !14008
  %count12 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren11, i32 0, i32 0, !dbg !14009
  %11 = load i64, i64* %count12, align 8, !dbg !14009
  %mul = mul i64 %11, 24, !dbg !14010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %9, i64 %mul, i32 8, i1 false), !dbg !14001
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !14011
  %value13 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 2, !dbg !14012
  %asChildren14 = bitcast %union.anon.0* %value13 to %struct.anon.0*, !dbg !14013
  %array15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren14, i32 0, i32 1, !dbg !14014
  %13 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array15, align 8, !dbg !14014
  %14 = bitcast %struct._lwm2m_data_t* %13 to i8*, !dbg !14011
  call void @lwm2m_free(i8* %14), !dbg !14015
  br label %if.end16, !dbg !14016

if.end16:                                         ; preds = %if.then6, %if.end
  %15 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newP, align 8, !dbg !14017
  %16 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !14018
  %value17 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %16, i32 0, i32 2, !dbg !14019
  %asChildren18 = bitcast %union.anon.0* %value17 to %struct.anon.0*, !dbg !14020
  %array19 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren18, i32 0, i32 1, !dbg !14021
  store %struct._lwm2m_data_t* %15, %struct._lwm2m_data_t** %array19, align 8, !dbg !14022
  %17 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !14023
  %value20 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %17, i32 0, i32 2, !dbg !14024
  %asChildren21 = bitcast %union.anon.0* %value20 to %struct.anon.0*, !dbg !14025
  %count22 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren21, i32 0, i32 0, !dbg !14026
  %18 = load i64, i64* %count22, align 8, !dbg !14027
  %add23 = add i64 %18, 1, !dbg !14027
  store i64 %add23, i64* %count22, align 8, !dbg !14027
  %19 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %newP, align 8, !dbg !14028
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %parentP.addr, align 8, !dbg !14029
  %value24 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %20, i32 0, i32 2, !dbg !14030
  %asChildren25 = bitcast %union.anon.0* %value24 to %struct.anon.0*, !dbg !14031
  %count26 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren25, i32 0, i32 0, !dbg !14032
  %21 = load i64, i64* %count26, align 8, !dbg !14032
  %add.ptr = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %19, i64 %21, !dbg !14033
  %add.ptr27 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %add.ptr, i64 -1, !dbg !14034
  store %struct._lwm2m_data_t* %add.ptr27, %struct._lwm2m_data_t** %retval, align 8, !dbg !14035
  br label %return, !dbg !14035

return:                                           ; preds = %if.end16, %if.then
  %22 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %retval, align 8, !dbg !14036
  ret %struct._lwm2m_data_t* %22, !dbg !14036
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @prv_convertValue(%struct._record_t* %recordP, %struct._lwm2m_data_t* %targetP) #0 !dbg !14037 {
entry:
  %retval = alloca i1, align 1
  %recordP.addr = alloca %struct._record_t*, align 8
  %targetP.addr = alloca %struct._lwm2m_data_t*, align 8
  %i = alloca i64, align 8
  %value8 = alloca i64, align 8
  %value15 = alloca double, align 8
  store %struct._record_t* %recordP, %struct._record_t** %recordP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._record_t** %recordP.addr, metadata !14040, metadata !1190), !dbg !14041
  store %struct._lwm2m_data_t* %targetP, %struct._lwm2m_data_t** %targetP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %targetP.addr, metadata !14042, metadata !1190), !dbg !14043
  %0 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14044
  %type = getelementptr inbounds %struct._record_t, %struct._record_t* %0, i32 0, i32 1, !dbg !14045
  %1 = load i32, i32* %type, align 8, !dbg !14045
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb25
    i32 0, label %sw.bb29
  ], !dbg !14046

sw.bb:                                            ; preds = %entry
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP.addr, align 8, !dbg !14047
  call void @lwm2m_data_encode_bool(i1 zeroext false, %struct._lwm2m_data_t* %2), !dbg !14049
  br label %sw.epilog, !dbg !14050

sw.bb1:                                           ; preds = %entry
  %3 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP.addr, align 8, !dbg !14051
  call void @lwm2m_data_encode_bool(i1 zeroext true, %struct._lwm2m_data_t* %3), !dbg !14052
  br label %sw.epilog, !dbg !14053

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14054, metadata !1190), !dbg !14056
  store i64 0, i64* %i, align 8, !dbg !14057
  br label %while.cond, !dbg !14058

while.cond:                                       ; preds = %while.body, %sw.bb2
  %4 = load i64, i64* %i, align 8, !dbg !14059
  %5 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14060
  %valueLen = getelementptr inbounds %struct._record_t, %struct._record_t* %5, i32 0, i32 3, !dbg !14061
  %6 = load i64, i64* %valueLen, align 8, !dbg !14061
  %cmp = icmp ult i64 %4, %6, !dbg !14062
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14063

land.rhs:                                         ; preds = %while.cond
  %7 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14064
  %value = getelementptr inbounds %struct._record_t, %struct._record_t* %7, i32 0, i32 2, !dbg !14065
  %8 = load i8*, i8** %value, align 8, !dbg !14065
  %9 = load i64, i64* %i, align 8, !dbg !14066
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !14064
  %10 = load i8, i8* %arrayidx, align 1, !dbg !14064
  %conv = zext i8 %10 to i32, !dbg !14064
  %cmp3 = icmp ne i32 %conv, 46, !dbg !14067
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !14058

while.body:                                       ; preds = %land.end
  %12 = load i64, i64* %i, align 8, !dbg !14068
  %inc = add i64 %12, 1, !dbg !14068
  store i64 %inc, i64* %i, align 8, !dbg !14068
  br label %while.cond, !dbg !14058, !llvm.loop !14070

while.end:                                        ; preds = %land.end
  %13 = load i64, i64* %i, align 8, !dbg !14072
  %14 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14074
  %valueLen5 = getelementptr inbounds %struct._record_t, %struct._record_t* %14, i32 0, i32 3, !dbg !14075
  %15 = load i64, i64* %valueLen5, align 8, !dbg !14075
  %cmp6 = icmp eq i64 %13, %15, !dbg !14076
  br i1 %cmp6, label %if.then, label %if.else, !dbg !14077

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata i64* %value8, metadata !14078, metadata !1190), !dbg !14080
  %16 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14081
  %value9 = getelementptr inbounds %struct._record_t, %struct._record_t* %16, i32 0, i32 2, !dbg !14083
  %17 = load i8*, i8** %value9, align 8, !dbg !14083
  %18 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14084
  %valueLen10 = getelementptr inbounds %struct._record_t, %struct._record_t* %18, i32 0, i32 3, !dbg !14085
  %19 = load i64, i64* %valueLen10, align 8, !dbg !14085
  %conv11 = trunc i64 %19 to i32, !dbg !14084
  %call = call i32 @utils_textToInt(i8* %17, i32 %conv11, i64* %value8), !dbg !14086
  %cmp12 = icmp ne i32 1, %call, !dbg !14087
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !14088

if.then14:                                        ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !14089
  br label %return, !dbg !14089

if.end:                                           ; preds = %if.then
  %20 = load i64, i64* %value8, align 8, !dbg !14091
  %21 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP.addr, align 8, !dbg !14092
  call void @lwm2m_data_encode_int(i64 %20, %struct._lwm2m_data_t* %21), !dbg !14093
  br label %if.end24, !dbg !14094

if.else:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata double* %value15, metadata !14095, metadata !1190), !dbg !14097
  %22 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14098
  %value16 = getelementptr inbounds %struct._record_t, %struct._record_t* %22, i32 0, i32 2, !dbg !14100
  %23 = load i8*, i8** %value16, align 8, !dbg !14100
  %24 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14101
  %valueLen17 = getelementptr inbounds %struct._record_t, %struct._record_t* %24, i32 0, i32 3, !dbg !14102
  %25 = load i64, i64* %valueLen17, align 8, !dbg !14102
  %conv18 = trunc i64 %25 to i32, !dbg !14101
  %call19 = call i32 @utils_textToFloat(i8* %23, i32 %conv18, double* %value15), !dbg !14103
  %cmp20 = icmp ne i32 1, %call19, !dbg !14104
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !14105

if.then22:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !14106
  br label %return, !dbg !14106

if.end23:                                         ; preds = %if.else
  %26 = load double, double* %value15, align 8, !dbg !14108
  %27 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP.addr, align 8, !dbg !14109
  call void @lwm2m_data_encode_float(double %26, %struct._lwm2m_data_t* %27), !dbg !14110
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  br label %sw.epilog, !dbg !14111

sw.bb25:                                          ; preds = %entry
  %28 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14112
  %value26 = getelementptr inbounds %struct._record_t, %struct._record_t* %28, i32 0, i32 2, !dbg !14113
  %29 = load i8*, i8** %value26, align 8, !dbg !14113
  %30 = load %struct._record_t*, %struct._record_t** %recordP.addr, align 8, !dbg !14114
  %valueLen27 = getelementptr inbounds %struct._record_t, %struct._record_t* %30, i32 0, i32 3, !dbg !14115
  %31 = load i64, i64* %valueLen27, align 8, !dbg !14115
  %32 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP.addr, align 8, !dbg !14116
  call void @lwm2m_data_encode_opaque(i8* %29, i64 %31, %struct._lwm2m_data_t* %32), !dbg !14117
  %33 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP.addr, align 8, !dbg !14118
  %type28 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %33, i32 0, i32 0, !dbg !14119
  store i32 4, i32* %type28, align 8, !dbg !14120
  br label %sw.epilog, !dbg !14121

sw.bb29:                                          ; preds = %entry
  br label %sw.default, !dbg !14121

sw.default:                                       ; preds = %sw.bb29, %entry
  store i1 false, i1* %retval, align 1, !dbg !14122
  br label %return, !dbg !14122

sw.epilog:                                        ; preds = %sw.bb25, %if.end24, %sw.bb1, %sw.bb
  store i1 true, i1* %retval, align 1, !dbg !14123
  br label %return, !dbg !14123

return:                                           ; preds = %sw.epilog, %sw.default, %if.then22, %if.then14
  %34 = load i1, i1* %retval, align 1, !dbg !14124
  ret i1 %34, !dbg !14124
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_isReserved(i8 signext %sign) #0 !dbg !14125 {
entry:
  %retval = alloca i32, align 4
  %sign.addr = alloca i8, align 1
  store i8 %sign, i8* %sign.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sign.addr, metadata !14128, metadata !1190), !dbg !14129
  %0 = load i8, i8* %sign.addr, align 1, !dbg !14130
  %conv = sext i8 %0 to i32, !dbg !14130
  %cmp = icmp eq i32 %conv, 91, !dbg !14132
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14133

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %sign.addr, align 1, !dbg !14134
  %conv2 = sext i8 %1 to i32, !dbg !14134
  %cmp3 = icmp eq i32 %conv2, 123, !dbg !14135
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !14136

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %2 = load i8, i8* %sign.addr, align 1, !dbg !14137
  %conv6 = sext i8 %2 to i32, !dbg !14137
  %cmp7 = icmp eq i32 %conv6, 93, !dbg !14138
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !14139

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %3 = load i8, i8* %sign.addr, align 1, !dbg !14140
  %conv10 = sext i8 %3 to i32, !dbg !14140
  %cmp11 = icmp eq i32 %conv10, 125, !dbg !14141
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !14142

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %4 = load i8, i8* %sign.addr, align 1, !dbg !14143
  %conv14 = sext i8 %4 to i32, !dbg !14143
  %cmp15 = icmp eq i32 %conv14, 58, !dbg !14144
  br i1 %cmp15, label %if.then, label %lor.lhs.false17, !dbg !14145

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %5 = load i8, i8* %sign.addr, align 1, !dbg !14146
  %conv18 = sext i8 %5 to i32, !dbg !14146
  %cmp19 = icmp eq i32 %conv18, 44, !dbg !14147
  br i1 %cmp19, label %if.then, label %lor.lhs.false21, !dbg !14148

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %6 = load i8, i8* %sign.addr, align 1, !dbg !14149
  %conv22 = sext i8 %6 to i32, !dbg !14149
  %cmp23 = icmp eq i32 %conv22, 34, !dbg !14150
  br i1 %cmp23, label %if.then, label %if.end, !dbg !14151

if.then:                                          ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !14152
  br label %return, !dbg !14152

if.end:                                           ; preds = %lor.lhs.false21
  store i32 0, i32* %retval, align 4, !dbg !14154
  br label %return, !dbg !14154

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !14155
  ret i32 %7, !dbg !14155
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_isWhiteSpace(i8 zeroext %sign) #0 !dbg !14156 {
entry:
  %retval = alloca i32, align 4
  %sign.addr = alloca i8, align 1
  store i8 %sign, i8* %sign.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sign.addr, metadata !14159, metadata !1190), !dbg !14160
  %0 = load i8, i8* %sign.addr, align 1, !dbg !14161
  %conv = zext i8 %0 to i32, !dbg !14161
  %cmp = icmp eq i32 %conv, 32, !dbg !14163
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14164

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %sign.addr, align 1, !dbg !14165
  %conv2 = zext i8 %1 to i32, !dbg !14165
  %cmp3 = icmp eq i32 %conv2, 9, !dbg !14166
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !14167

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %2 = load i8, i8* %sign.addr, align 1, !dbg !14168
  %conv6 = zext i8 %2 to i32, !dbg !14168
  %cmp7 = icmp eq i32 %conv6, 10, !dbg !14169
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !14170

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %3 = load i8, i8* %sign.addr, align 1, !dbg !14171
  %conv10 = zext i8 %3 to i32, !dbg !14171
  %cmp11 = icmp eq i32 %conv10, 13, !dbg !14172
  br i1 %cmp11, label %if.then, label %if.end, !dbg !14173

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !14174
  br label %return, !dbg !14174

if.end:                                           ; preds = %lor.lhs.false9
  store i32 0, i32* %retval, align 4, !dbg !14176
  br label %return, !dbg !14176

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !14177
  ret i32 %4, !dbg !14177
}

; Function Attrs: noinline nounwind uwtable
define i32 @prv_serializeData(%struct._lwm2m_data_t* %tlvP, i8* %parentUriStr, i64 %parentUriLen, i8* %buffer, i64 %bufferLen) #0 !dbg !14178 {
entry:
  %retval = alloca i32, align 4
  %tlvP.addr = alloca %struct._lwm2m_data_t*, align 8
  %parentUriStr.addr = alloca i8*, align 8
  %parentUriLen.addr = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %head = alloca i32, align 4
  %res = alloca i32, align 4
  %uriStr = alloca [18 x i8], align 16
  %uriLen = alloca i64, align 8
  %index = alloca i64, align 8
  store %struct._lwm2m_data_t* %tlvP, %struct._lwm2m_data_t** %tlvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %tlvP.addr, metadata !14181, metadata !1190), !dbg !14182
  store i8* %parentUriStr, i8** %parentUriStr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %parentUriStr.addr, metadata !14183, metadata !1190), !dbg !14184
  store i64 %parentUriLen, i64* %parentUriLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %parentUriLen.addr, metadata !14185, metadata !1190), !dbg !14186
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14187, metadata !1190), !dbg !14188
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !14189, metadata !1190), !dbg !14190
  call void @llvm.dbg.declare(metadata i32* %head, metadata !14191, metadata !1190), !dbg !14192
  call void @llvm.dbg.declare(metadata i32* %res, metadata !14193, metadata !1190), !dbg !14194
  store i32 0, i32* %head, align 4, !dbg !14195
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14196
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !14197
  %1 = load i32, i32* %type, align 8, !dbg !14197
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
  ], !dbg !14198

sw.bb:                                            ; preds = %entry, %entry, %entry
  call void @llvm.dbg.declare(metadata [18 x i8]* %uriStr, metadata !14199, metadata !1190), !dbg !14205
  call void @llvm.dbg.declare(metadata i64* %uriLen, metadata !14206, metadata !1190), !dbg !14207
  call void @llvm.dbg.declare(metadata i64* %index, metadata !14208, metadata !1190), !dbg !14209
  %2 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14210
  %cmp = icmp ugt i64 %2, 0, !dbg !14212
  br i1 %cmp, label %if.then, label %if.else, !dbg !14213

if.then:                                          ; preds = %sw.bb
  %3 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14214
  %cmp1 = icmp ult i64 18, %3, !dbg !14217
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14218

if.then2:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !14219
  br label %return, !dbg !14219

if.end:                                           ; preds = %if.then
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %uriStr, i32 0, i32 0, !dbg !14220
  %4 = load i8*, i8** %parentUriStr.addr, align 8, !dbg !14221
  %5 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %4, i64 %5, i32 1, i1 false), !dbg !14220
  %6 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14223
  store i64 %6, i64* %uriLen, align 8, !dbg !14224
  br label %if.end3, !dbg !14225

if.else:                                          ; preds = %sw.bb
  store i64 0, i64* %uriLen, align 8, !dbg !14226
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14228
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %7, i32 0, i32 1, !dbg !14229
  %8 = load i16, i16* %id, align 4, !dbg !14229
  %conv = zext i16 %8 to i64, !dbg !14228
  %arraydecay4 = getelementptr inbounds [18 x i8], [18 x i8]* %uriStr, i32 0, i32 0, !dbg !14230
  %9 = load i64, i64* %uriLen, align 8, !dbg !14231
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay4, i64 %9, !dbg !14232
  %10 = load i64, i64* %uriLen, align 8, !dbg !14233
  %sub = sub i64 18, %10, !dbg !14234
  %call = call i64 @utils_intToText(i64 %conv, i8* %add.ptr, i64 %sub), !dbg !14235
  %conv5 = trunc i64 %call to i32, !dbg !14235
  store i32 %conv5, i32* %res, align 4, !dbg !14236
  %11 = load i32, i32* %res, align 4, !dbg !14237
  %cmp6 = icmp sle i32 %11, 0, !dbg !14239
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !14240

if.then8:                                         ; preds = %if.end3
  store i32 -1, i32* %retval, align 4, !dbg !14241
  br label %return, !dbg !14241

if.end9:                                          ; preds = %if.end3
  %12 = load i32, i32* %res, align 4, !dbg !14242
  %conv10 = sext i32 %12 to i64, !dbg !14242
  %13 = load i64, i64* %uriLen, align 8, !dbg !14243
  %add = add i64 %13, %conv10, !dbg !14243
  store i64 %add, i64* %uriLen, align 8, !dbg !14243
  %14 = load i64, i64* %uriLen, align 8, !dbg !14244
  %arrayidx = getelementptr inbounds [18 x i8], [18 x i8]* %uriStr, i64 0, i64 %14, !dbg !14245
  store i8 47, i8* %arrayidx, align 1, !dbg !14246
  %15 = load i64, i64* %uriLen, align 8, !dbg !14247
  %inc = add i64 %15, 1, !dbg !14247
  store i64 %inc, i64* %uriLen, align 8, !dbg !14247
  store i32 0, i32* %head, align 4, !dbg !14248
  store i64 0, i64* %index, align 8, !dbg !14249
  br label %for.cond, !dbg !14251

for.cond:                                         ; preds = %for.inc, %if.end9
  %16 = load i64, i64* %index, align 8, !dbg !14252
  %17 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14254
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %17, i32 0, i32 2, !dbg !14255
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !14256
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !14257
  %18 = load i64, i64* %count, align 8, !dbg !14257
  %cmp11 = icmp ult i64 %16, %18, !dbg !14258
  br i1 %cmp11, label %for.body, label %for.end, !dbg !14259

for.body:                                         ; preds = %for.cond
  %19 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14260
  %value13 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %19, i32 0, i32 2, !dbg !14262
  %asChildren14 = bitcast %union.anon.0* %value13 to %struct.anon.0*, !dbg !14263
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren14, i32 0, i32 1, !dbg !14264
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !14264
  %21 = load i64, i64* %index, align 8, !dbg !14265
  %add.ptr15 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %20, i64 %21, !dbg !14266
  %arraydecay16 = getelementptr inbounds [18 x i8], [18 x i8]* %uriStr, i32 0, i32 0, !dbg !14267
  %22 = load i64, i64* %uriLen, align 8, !dbg !14268
  %23 = load i8*, i8** %buffer.addr, align 8, !dbg !14269
  %24 = load i32, i32* %head, align 4, !dbg !14270
  %idx.ext = sext i32 %24 to i64, !dbg !14271
  %add.ptr17 = getelementptr inbounds i8, i8* %23, i64 %idx.ext, !dbg !14271
  %25 = load i64, i64* %bufferLen.addr, align 8, !dbg !14272
  %26 = load i32, i32* %head, align 4, !dbg !14273
  %conv18 = sext i32 %26 to i64, !dbg !14273
  %sub19 = sub i64 %25, %conv18, !dbg !14274
  %call20 = call i32 @prv_serializeData(%struct._lwm2m_data_t* %add.ptr15, i8* %arraydecay16, i64 %22, i8* %add.ptr17, i64 %sub19), !dbg !14275
  store i32 %call20, i32* %res, align 4, !dbg !14276
  %27 = load i32, i32* %res, align 4, !dbg !14277
  %cmp21 = icmp slt i32 %27, 0, !dbg !14279
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !14280

if.then23:                                        ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !14281
  br label %return, !dbg !14281

if.end24:                                         ; preds = %for.body
  %28 = load i32, i32* %res, align 4, !dbg !14282
  %29 = load i32, i32* %head, align 4, !dbg !14283
  %add25 = add nsw i32 %29, %28, !dbg !14283
  store i32 %add25, i32* %head, align 4, !dbg !14283
  br label %for.inc, !dbg !14284

for.inc:                                          ; preds = %if.end24
  %30 = load i64, i64* %index, align 8, !dbg !14285
  %inc26 = add i64 %30, 1, !dbg !14285
  store i64 %inc26, i64* %index, align 8, !dbg !14285
  br label %for.cond, !dbg !14286, !llvm.loop !14287

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !14289

sw.default:                                       ; preds = %entry
  %31 = load i64, i64* %bufferLen.addr, align 8, !dbg !14290
  %cmp27 = icmp ult i64 %31, 6, !dbg !14292
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !14293

if.then29:                                        ; preds = %sw.default
  store i32 -1, i32* %retval, align 4, !dbg !14294
  br label %return, !dbg !14294

if.end30:                                         ; preds = %sw.default
  %32 = load i8*, i8** %buffer.addr, align 8, !dbg !14295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i64 6, i32 1, i1 false), !dbg !14296
  store i32 6, i32* %head, align 4, !dbg !14297
  %33 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14298
  %cmp31 = icmp ugt i64 %33, 0, !dbg !14300
  br i1 %cmp31, label %if.then33, label %if.end45, !dbg !14301

if.then33:                                        ; preds = %if.end30
  %34 = load i64, i64* %bufferLen.addr, align 8, !dbg !14302
  %35 = load i32, i32* %head, align 4, !dbg !14305
  %conv34 = sext i32 %35 to i64, !dbg !14305
  %sub35 = sub i64 %34, %conv34, !dbg !14306
  %36 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14307
  %cmp36 = icmp ult i64 %sub35, %36, !dbg !14308
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !14309

if.then38:                                        ; preds = %if.then33
  store i32 -1, i32* %retval, align 4, !dbg !14310
  br label %return, !dbg !14310

if.end39:                                         ; preds = %if.then33
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !14311
  %38 = load i32, i32* %head, align 4, !dbg !14312
  %idx.ext40 = sext i32 %38 to i64, !dbg !14313
  %add.ptr41 = getelementptr inbounds i8, i8* %37, i64 %idx.ext40, !dbg !14313
  %39 = load i8*, i8** %parentUriStr.addr, align 8, !dbg !14314
  %40 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr41, i8* %39, i64 %40, i32 1, i1 false), !dbg !14316
  %41 = load i64, i64* %parentUriLen.addr, align 8, !dbg !14317
  %42 = load i32, i32* %head, align 4, !dbg !14318
  %conv42 = sext i32 %42 to i64, !dbg !14318
  %add43 = add i64 %conv42, %41, !dbg !14318
  %conv44 = trunc i64 %add43 to i32, !dbg !14318
  store i32 %conv44, i32* %head, align 4, !dbg !14318
  br label %if.end45, !dbg !14319

if.end45:                                         ; preds = %if.end39, %if.end30
  %43 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14320
  %id46 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %43, i32 0, i32 1, !dbg !14321
  %44 = load i16, i16* %id46, align 4, !dbg !14321
  %conv47 = zext i16 %44 to i64, !dbg !14320
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !14322
  %46 = load i32, i32* %head, align 4, !dbg !14323
  %idx.ext48 = sext i32 %46 to i64, !dbg !14324
  %add.ptr49 = getelementptr inbounds i8, i8* %45, i64 %idx.ext48, !dbg !14324
  %47 = load i64, i64* %bufferLen.addr, align 8, !dbg !14325
  %48 = load i32, i32* %head, align 4, !dbg !14326
  %conv50 = sext i32 %48 to i64, !dbg !14326
  %sub51 = sub i64 %47, %conv50, !dbg !14327
  %call52 = call i64 @utils_intToText(i64 %conv47, i8* %add.ptr49, i64 %sub51), !dbg !14328
  %conv53 = trunc i64 %call52 to i32, !dbg !14328
  store i32 %conv53, i32* %res, align 4, !dbg !14329
  %49 = load i32, i32* %res, align 4, !dbg !14330
  %cmp54 = icmp sle i32 %49, 0, !dbg !14332
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !14333

if.then56:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !14334
  br label %return, !dbg !14334

if.end57:                                         ; preds = %if.end45
  %50 = load i32, i32* %res, align 4, !dbg !14335
  %51 = load i32, i32* %head, align 4, !dbg !14336
  %add58 = add nsw i32 %51, %50, !dbg !14336
  store i32 %add58, i32* %head, align 4, !dbg !14336
  %52 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14337
  %53 = load i8*, i8** %buffer.addr, align 8, !dbg !14338
  %54 = load i32, i32* %head, align 4, !dbg !14339
  %idx.ext59 = sext i32 %54 to i64, !dbg !14340
  %add.ptr60 = getelementptr inbounds i8, i8* %53, i64 %idx.ext59, !dbg !14340
  %55 = load i64, i64* %bufferLen.addr, align 8, !dbg !14341
  %56 = load i32, i32* %head, align 4, !dbg !14342
  %conv61 = sext i32 %56 to i64, !dbg !14342
  %sub62 = sub i64 %55, %conv61, !dbg !14343
  %call63 = call i32 @prv_serializeValue(%struct._lwm2m_data_t* %52, i8* %add.ptr60, i64 %sub62), !dbg !14344
  store i32 %call63, i32* %res, align 4, !dbg !14345
  %57 = load i32, i32* %res, align 4, !dbg !14346
  %cmp64 = icmp slt i32 %57, 0, !dbg !14348
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !14349

if.then66:                                        ; preds = %if.end57
  store i32 -1, i32* %retval, align 4, !dbg !14350
  br label %return, !dbg !14350

if.end67:                                         ; preds = %if.end57
  %58 = load i32, i32* %res, align 4, !dbg !14351
  %59 = load i32, i32* %head, align 4, !dbg !14352
  %add68 = add nsw i32 %59, %58, !dbg !14352
  store i32 %add68, i32* %head, align 4, !dbg !14352
  br label %sw.epilog, !dbg !14353

sw.epilog:                                        ; preds = %if.end67, %for.end
  %60 = load i32, i32* %head, align 4, !dbg !14354
  store i32 %60, i32* %retval, align 4, !dbg !14355
  br label %return, !dbg !14355

return:                                           ; preds = %sw.epilog, %if.then66, %if.then56, %if.then38, %if.then29, %if.then23, %if.then8, %if.then2
  %61 = load i32, i32* %retval, align 4, !dbg !14356
  ret i32 %61, !dbg !14356
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_serializeValue(%struct._lwm2m_data_t* %tlvP, i8* %buffer, i64 %bufferLen) #0 !dbg !14357 {
entry:
  %retval = alloca i32, align 4
  %tlvP.addr = alloca %struct._lwm2m_data_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %bufferLen.addr = alloca i64, align 8
  %res = alloca i32, align 4
  %head = alloca i32, align 4
  %value26 = alloca i64, align 8
  %value56 = alloca double, align 8
  %value87 = alloca i8, align 1
  store %struct._lwm2m_data_t* %tlvP, %struct._lwm2m_data_t** %tlvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %tlvP.addr, metadata !14360, metadata !1190), !dbg !14361
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14362, metadata !1190), !dbg !14363
  store i64 %bufferLen, i64* %bufferLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufferLen.addr, metadata !14364, metadata !1190), !dbg !14365
  call void @llvm.dbg.declare(metadata i32* %res, metadata !14366, metadata !1190), !dbg !14367
  call void @llvm.dbg.declare(metadata i32* %head, metadata !14368, metadata !1190), !dbg !14369
  %0 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14370
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %0, i32 0, i32 0, !dbg !14371
  %1 = load i32, i32* %type, align 8, !dbg !14371
  switch i32 %1, label %sw.default [
    i32 4, label %sw.bb
    i32 6, label %sw.bb25
    i32 7, label %sw.bb55
    i32 8, label %sw.bb86
    i32 5, label %sw.bb106
    i32 9, label %sw.bb137
  ], !dbg !14372

sw.bb:                                            ; preds = %entry
  %2 = load i64, i64* %bufferLen.addr, align 8, !dbg !14373
  %cmp = icmp ult i64 %2, 8, !dbg !14376
  br i1 %cmp, label %if.then, label %if.end, !dbg !14377

if.then:                                          ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !14378
  br label %return, !dbg !14378

if.end:                                           ; preds = %sw.bb
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !14379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.166, i32 0, i32 0), i64 8, i32 1, i1 false), !dbg !14380
  store i32 8, i32* %head, align 4, !dbg !14381
  %4 = load i64, i64* %bufferLen.addr, align 8, !dbg !14382
  %5 = load i32, i32* %head, align 4, !dbg !14384
  %conv = sext i32 %5 to i64, !dbg !14384
  %sub = sub i64 %4, %conv, !dbg !14385
  %6 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14386
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %6, i32 0, i32 2, !dbg !14387
  %asBuffer = bitcast %union.anon.0* %value to %struct.anon*, !dbg !14388
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !14389
  %7 = load i64, i64* %length, align 8, !dbg !14389
  %cmp1 = icmp ult i64 %sub, %7, !dbg !14390
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !14391

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !14392
  br label %return, !dbg !14392

if.end4:                                          ; preds = %if.end
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !14393
  %9 = load i32, i32* %head, align 4, !dbg !14394
  %idx.ext = sext i32 %9 to i64, !dbg !14395
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !14395
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14396
  %value5 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i32 0, i32 2, !dbg !14397
  %asBuffer6 = bitcast %union.anon.0* %value5 to %struct.anon*, !dbg !14398
  %buffer7 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer6, i32 0, i32 1, !dbg !14399
  %11 = load i8*, i8** %buffer7, align 8, !dbg !14399
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14400
  %value8 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 2, !dbg !14401
  %asBuffer9 = bitcast %union.anon.0* %value8 to %struct.anon*, !dbg !14402
  %length10 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer9, i32 0, i32 0, !dbg !14403
  %13 = load i64, i64* %length10, align 8, !dbg !14403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %11, i64 %13, i32 1, i1 false), !dbg !14404
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14405
  %value11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %14, i32 0, i32 2, !dbg !14406
  %asBuffer12 = bitcast %union.anon.0* %value11 to %struct.anon*, !dbg !14407
  %length13 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer12, i32 0, i32 0, !dbg !14408
  %15 = load i64, i64* %length13, align 8, !dbg !14408
  %16 = load i32, i32* %head, align 4, !dbg !14409
  %conv14 = sext i32 %16 to i64, !dbg !14409
  %add = add i64 %conv14, %15, !dbg !14409
  %conv15 = trunc i64 %add to i32, !dbg !14409
  store i32 %conv15, i32* %head, align 4, !dbg !14409
  %17 = load i64, i64* %bufferLen.addr, align 8, !dbg !14410
  %18 = load i32, i32* %head, align 4, !dbg !14412
  %conv16 = sext i32 %18 to i64, !dbg !14412
  %sub17 = sub i64 %17, %conv16, !dbg !14413
  %cmp18 = icmp ult i64 %sub17, 3, !dbg !14414
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !14415

if.then20:                                        ; preds = %if.end4
  store i32 -1, i32* %retval, align 4, !dbg !14416
  br label %return, !dbg !14416

if.end21:                                         ; preds = %if.end4
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !14417
  %20 = load i32, i32* %head, align 4, !dbg !14418
  %idx.ext22 = sext i32 %20 to i64, !dbg !14419
  %add.ptr23 = getelementptr inbounds i8, i8* %19, i64 %idx.ext22, !dbg !14419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.167, i32 0, i32 0), i64 3, i32 1, i1 false), !dbg !14420
  %21 = load i32, i32* %head, align 4, !dbg !14421
  %add24 = add nsw i32 %21, 3, !dbg !14421
  store i32 %add24, i32* %head, align 4, !dbg !14421
  br label %sw.epilog, !dbg !14422

sw.bb25:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %value26, metadata !14423, metadata !1190), !dbg !14425
  %22 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14426
  %call = call i32 @lwm2m_data_decode_int(%struct._lwm2m_data_t* %22, i64* %value26), !dbg !14428
  %cmp27 = icmp eq i32 0, %call, !dbg !14429
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !14430

if.then29:                                        ; preds = %sw.bb25
  store i32 -1, i32* %retval, align 4, !dbg !14431
  br label %return, !dbg !14431

if.end30:                                         ; preds = %sw.bb25
  %23 = load i64, i64* %bufferLen.addr, align 8, !dbg !14432
  %cmp31 = icmp ult i64 %23, 6, !dbg !14434
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !14435

if.then33:                                        ; preds = %if.end30
  store i32 -1, i32* %retval, align 4, !dbg !14436
  br label %return, !dbg !14436

if.end34:                                         ; preds = %if.end30
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !14437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.168, i32 0, i32 0), i64 6, i32 1, i1 false), !dbg !14438
  store i32 6, i32* %head, align 4, !dbg !14439
  %25 = load i64, i64* %value26, align 8, !dbg !14440
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !14441
  %27 = load i32, i32* %head, align 4, !dbg !14442
  %idx.ext35 = sext i32 %27 to i64, !dbg !14443
  %add.ptr36 = getelementptr inbounds i8, i8* %26, i64 %idx.ext35, !dbg !14443
  %28 = load i64, i64* %bufferLen.addr, align 8, !dbg !14444
  %29 = load i32, i32* %head, align 4, !dbg !14445
  %conv37 = sext i32 %29 to i64, !dbg !14445
  %sub38 = sub i64 %28, %conv37, !dbg !14446
  %call39 = call i64 @utils_intToText(i64 %25, i8* %add.ptr36, i64 %sub38), !dbg !14447
  %conv40 = trunc i64 %call39 to i32, !dbg !14447
  store i32 %conv40, i32* %res, align 4, !dbg !14448
  %30 = load i32, i32* %res, align 4, !dbg !14449
  %cmp41 = icmp sle i32 %30, 0, !dbg !14451
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !14452

if.then43:                                        ; preds = %if.end34
  store i32 -1, i32* %retval, align 4, !dbg !14453
  br label %return, !dbg !14453

if.end44:                                         ; preds = %if.end34
  %31 = load i32, i32* %res, align 4, !dbg !14454
  %32 = load i32, i32* %head, align 4, !dbg !14455
  %add45 = add nsw i32 %32, %31, !dbg !14455
  store i32 %add45, i32* %head, align 4, !dbg !14455
  %33 = load i64, i64* %bufferLen.addr, align 8, !dbg !14456
  %34 = load i32, i32* %head, align 4, !dbg !14458
  %conv46 = sext i32 %34 to i64, !dbg !14458
  %sub47 = sub i64 %33, %conv46, !dbg !14459
  %cmp48 = icmp ult i64 %sub47, 2, !dbg !14460
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !14461

if.then50:                                        ; preds = %if.end44
  store i32 -1, i32* %retval, align 4, !dbg !14462
  br label %return, !dbg !14462

if.end51:                                         ; preds = %if.end44
  %35 = load i8*, i8** %buffer.addr, align 8, !dbg !14463
  %36 = load i32, i32* %head, align 4, !dbg !14464
  %idx.ext52 = sext i32 %36 to i64, !dbg !14465
  %add.ptr53 = getelementptr inbounds i8, i8* %35, i64 %idx.ext52, !dbg !14465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.169, i32 0, i32 0), i64 2, i32 1, i1 false), !dbg !14466
  %37 = load i32, i32* %head, align 4, !dbg !14467
  %add54 = add nsw i32 %37, 2, !dbg !14467
  store i32 %add54, i32* %head, align 4, !dbg !14467
  br label %sw.epilog, !dbg !14468

sw.bb55:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %value56, metadata !14469, metadata !1190), !dbg !14471
  %38 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14472
  %call57 = call i32 @lwm2m_data_decode_float(%struct._lwm2m_data_t* %38, double* %value56), !dbg !14474
  %cmp58 = icmp eq i32 0, %call57, !dbg !14475
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !14476

if.then60:                                        ; preds = %sw.bb55
  store i32 -1, i32* %retval, align 4, !dbg !14477
  br label %return, !dbg !14477

if.end61:                                         ; preds = %sw.bb55
  %39 = load i64, i64* %bufferLen.addr, align 8, !dbg !14478
  %cmp62 = icmp ult i64 %39, 6, !dbg !14480
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !14481

if.then64:                                        ; preds = %if.end61
  store i32 -1, i32* %retval, align 4, !dbg !14482
  br label %return, !dbg !14482

if.end65:                                         ; preds = %if.end61
  %40 = load i8*, i8** %buffer.addr, align 8, !dbg !14483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.168, i32 0, i32 0), i64 6, i32 1, i1 false), !dbg !14484
  store i32 6, i32* %head, align 4, !dbg !14485
  %41 = load double, double* %value56, align 8, !dbg !14486
  %42 = load i8*, i8** %buffer.addr, align 8, !dbg !14487
  %43 = load i32, i32* %head, align 4, !dbg !14488
  %idx.ext66 = sext i32 %43 to i64, !dbg !14489
  %add.ptr67 = getelementptr inbounds i8, i8* %42, i64 %idx.ext66, !dbg !14489
  %44 = load i64, i64* %bufferLen.addr, align 8, !dbg !14490
  %45 = load i32, i32* %head, align 4, !dbg !14491
  %conv68 = sext i32 %45 to i64, !dbg !14491
  %sub69 = sub i64 %44, %conv68, !dbg !14492
  %call70 = call i64 @utils_floatToText(double %41, i8* %add.ptr67, i64 %sub69), !dbg !14493
  %conv71 = trunc i64 %call70 to i32, !dbg !14493
  store i32 %conv71, i32* %res, align 4, !dbg !14494
  %46 = load i32, i32* %res, align 4, !dbg !14495
  %cmp72 = icmp sle i32 %46, 0, !dbg !14497
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !14498

if.then74:                                        ; preds = %if.end65
  store i32 -1, i32* %retval, align 4, !dbg !14499
  br label %return, !dbg !14499

if.end75:                                         ; preds = %if.end65
  %47 = load i32, i32* %res, align 4, !dbg !14500
  %48 = load i32, i32* %head, align 4, !dbg !14501
  %add76 = add nsw i32 %48, %47, !dbg !14501
  store i32 %add76, i32* %head, align 4, !dbg !14501
  %49 = load i64, i64* %bufferLen.addr, align 8, !dbg !14502
  %50 = load i32, i32* %head, align 4, !dbg !14504
  %conv77 = sext i32 %50 to i64, !dbg !14504
  %sub78 = sub i64 %49, %conv77, !dbg !14505
  %cmp79 = icmp ult i64 %sub78, 2, !dbg !14506
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !14507

if.then81:                                        ; preds = %if.end75
  store i32 -1, i32* %retval, align 4, !dbg !14508
  br label %return, !dbg !14508

if.end82:                                         ; preds = %if.end75
  %51 = load i8*, i8** %buffer.addr, align 8, !dbg !14509
  %52 = load i32, i32* %head, align 4, !dbg !14510
  %idx.ext83 = sext i32 %52 to i64, !dbg !14511
  %add.ptr84 = getelementptr inbounds i8, i8* %51, i64 %idx.ext83, !dbg !14511
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.169, i32 0, i32 0), i64 2, i32 1, i1 false), !dbg !14512
  %53 = load i32, i32* %head, align 4, !dbg !14513
  %add85 = add nsw i32 %53, 2, !dbg !14513
  store i32 %add85, i32* %head, align 4, !dbg !14513
  br label %sw.epilog, !dbg !14514

sw.bb86:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %value87, metadata !14515, metadata !1190), !dbg !14517
  %54 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14518
  %call88 = call i32 @lwm2m_data_decode_bool(%struct._lwm2m_data_t* %54, i8* %value87), !dbg !14520
  %cmp89 = icmp eq i32 0, %call88, !dbg !14521
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !14522

if.then91:                                        ; preds = %sw.bb86
  store i32 -1, i32* %retval, align 4, !dbg !14523
  br label %return, !dbg !14523

if.end92:                                         ; preds = %sw.bb86
  %55 = load i8, i8* %value87, align 1, !dbg !14524
  %tobool = trunc i8 %55 to i1, !dbg !14524
  %conv93 = zext i1 %tobool to i32, !dbg !14524
  %cmp94 = icmp eq i32 %conv93, 1, !dbg !14526
  br i1 %cmp94, label %if.then96, label %if.else, !dbg !14527

if.then96:                                        ; preds = %if.end92
  %56 = load i64, i64* %bufferLen.addr, align 8, !dbg !14528
  %cmp97 = icmp ult i64 %56, 13, !dbg !14531
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !14532

if.then99:                                        ; preds = %if.then96
  store i32 -1, i32* %retval, align 4, !dbg !14533
  br label %return, !dbg !14533

if.end100:                                        ; preds = %if.then96
  %57 = load i8*, i8** %buffer.addr, align 8, !dbg !14534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11.170, i32 0, i32 0), i64 13, i32 1, i1 false), !dbg !14535
  store i32 13, i32* %head, align 4, !dbg !14536
  br label %if.end105, !dbg !14537

if.else:                                          ; preds = %if.end92
  %58 = load i64, i64* %bufferLen.addr, align 8, !dbg !14538
  %cmp101 = icmp ult i64 %58, 14, !dbg !14541
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !14542

if.then103:                                       ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !14543
  br label %return, !dbg !14543

if.end104:                                        ; preds = %if.else
  %59 = load i8*, i8** %buffer.addr, align 8, !dbg !14544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.171, i32 0, i32 0), i64 14, i32 1, i1 false), !dbg !14545
  store i32 14, i32* %head, align 4, !dbg !14546
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end100
  br label %sw.epilog, !dbg !14547

sw.bb106:                                         ; preds = %entry
  %60 = load i64, i64* %bufferLen.addr, align 8, !dbg !14548
  %cmp107 = icmp ult i64 %60, 8, !dbg !14550
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !14551

if.then109:                                       ; preds = %sw.bb106
  store i32 -1, i32* %retval, align 4, !dbg !14552
  br label %return, !dbg !14552

if.end110:                                        ; preds = %sw.bb106
  %61 = load i8*, i8** %buffer.addr, align 8, !dbg !14553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.166, i32 0, i32 0), i64 8, i32 1, i1 false), !dbg !14554
  store i32 8, i32* %head, align 4, !dbg !14555
  %62 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14556
  %value111 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %62, i32 0, i32 2, !dbg !14557
  %asBuffer112 = bitcast %union.anon.0* %value111 to %struct.anon*, !dbg !14558
  %buffer113 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer112, i32 0, i32 1, !dbg !14559
  %63 = load i8*, i8** %buffer113, align 8, !dbg !14559
  %64 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14560
  %value114 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %64, i32 0, i32 2, !dbg !14561
  %asBuffer115 = bitcast %union.anon.0* %value114 to %struct.anon*, !dbg !14562
  %length116 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer115, i32 0, i32 0, !dbg !14563
  %65 = load i64, i64* %length116, align 8, !dbg !14563
  %66 = load i8*, i8** %buffer.addr, align 8, !dbg !14564
  %67 = load i32, i32* %head, align 4, !dbg !14565
  %idx.ext117 = sext i32 %67 to i64, !dbg !14566
  %add.ptr118 = getelementptr inbounds i8, i8* %66, i64 %idx.ext117, !dbg !14566
  %68 = load i64, i64* %bufferLen.addr, align 8, !dbg !14567
  %69 = load i32, i32* %head, align 4, !dbg !14568
  %conv119 = sext i32 %69 to i64, !dbg !14568
  %sub120 = sub i64 %68, %conv119, !dbg !14569
  %call121 = call i64 @utils_base64Encode(i8* %63, i64 %65, i8* %add.ptr118, i64 %sub120), !dbg !14570
  %conv122 = trunc i64 %call121 to i32, !dbg !14570
  store i32 %conv122, i32* %res, align 4, !dbg !14571
  %70 = load i32, i32* %res, align 4, !dbg !14572
  %cmp123 = icmp eq i32 %70, 0, !dbg !14574
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !14575

if.then125:                                       ; preds = %if.end110
  store i32 -1, i32* %retval, align 4, !dbg !14576
  br label %return, !dbg !14576

if.end126:                                        ; preds = %if.end110
  %71 = load i32, i32* %res, align 4, !dbg !14577
  %72 = load i32, i32* %head, align 4, !dbg !14578
  %add127 = add nsw i32 %72, %71, !dbg !14578
  store i32 %add127, i32* %head, align 4, !dbg !14578
  %73 = load i64, i64* %bufferLen.addr, align 8, !dbg !14579
  %74 = load i32, i32* %head, align 4, !dbg !14581
  %conv128 = sext i32 %74 to i64, !dbg !14581
  %sub129 = sub i64 %73, %conv128, !dbg !14582
  %cmp130 = icmp ult i64 %sub129, 3, !dbg !14583
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !14584

if.then132:                                       ; preds = %if.end126
  store i32 -1, i32* %retval, align 4, !dbg !14585
  br label %return, !dbg !14585

if.end133:                                        ; preds = %if.end126
  %75 = load i8*, i8** %buffer.addr, align 8, !dbg !14586
  %76 = load i32, i32* %head, align 4, !dbg !14587
  %idx.ext134 = sext i32 %76 to i64, !dbg !14588
  %add.ptr135 = getelementptr inbounds i8, i8* %75, i64 %idx.ext134, !dbg !14588
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr135, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.167, i32 0, i32 0), i64 3, i32 1, i1 false), !dbg !14589
  %77 = load i32, i32* %head, align 4, !dbg !14590
  %add136 = add nsw i32 %77, 3, !dbg !14590
  store i32 %add136, i32* %head, align 4, !dbg !14590
  br label %sw.epilog, !dbg !14591

sw.bb137:                                         ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14592
  br label %return, !dbg !14592

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14593
  br label %return, !dbg !14593

sw.epilog:                                        ; preds = %if.end133, %if.end105, %if.end82, %if.end51, %if.end21
  %78 = load i32, i32* %head, align 4, !dbg !14594
  store i32 %78, i32* %retval, align 4, !dbg !14595
  br label %return, !dbg !14595

return:                                           ; preds = %sw.epilog, %sw.default, %sw.bb137, %if.then132, %if.then125, %if.then109, %if.then103, %if.then99, %if.then91, %if.then81, %if.then74, %if.then64, %if.then60, %if.then50, %if.then43, %if.then33, %if.then29, %if.then20, %if.then3, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !14596
  ret i32 %79, !dbg !14596
}

; Function Attrs: noinline nounwind uwtable
define i32 @json_serialize(%struct.lwm2m_uri_t* %uriP, i32 %size, %struct._lwm2m_data_t* %tlvP, i8** %bufferP) #0 !dbg !14597 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %size.addr = alloca i32, align 4
  %tlvP.addr = alloca %struct._lwm2m_data_t*, align 8
  %bufferP.addr = alloca i8**, align 8
  %index = alloca i32, align 4
  %head = alloca i64, align 8
  %bufferJSON = alloca [1024 x i8], align 16
  %baseUriStr = alloca [18 x i8], align 16
  %baseUriLen = alloca i32, align 4
  %rootLevel = alloca i32, align 4
  %num = alloca i32, align 4
  %targetP = alloca %struct._lwm2m_data_t*, align 8
  %res = alloca i32, align 4
  %res57 = alloca i32, align 4
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !14600, metadata !1190), !dbg !14601
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14602, metadata !1190), !dbg !14603
  store %struct._lwm2m_data_t* %tlvP, %struct._lwm2m_data_t** %tlvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %tlvP.addr, metadata !14604, metadata !1190), !dbg !14605
  store i8** %bufferP, i8*** %bufferP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %bufferP.addr, metadata !14606, metadata !1190), !dbg !14607
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14608, metadata !1190), !dbg !14609
  call void @llvm.dbg.declare(metadata i64* %head, metadata !14610, metadata !1190), !dbg !14611
  call void @llvm.dbg.declare(metadata [1024 x i8]* %bufferJSON, metadata !14612, metadata !1190), !dbg !14613
  call void @llvm.dbg.declare(metadata [18 x i8]* %baseUriStr, metadata !14614, metadata !1190), !dbg !14615
  call void @llvm.dbg.declare(metadata i32* %baseUriLen, metadata !14616, metadata !1190), !dbg !14617
  call void @llvm.dbg.declare(metadata i32* %rootLevel, metadata !14618, metadata !1190), !dbg !14619
  call void @llvm.dbg.declare(metadata i32* %num, metadata !14620, metadata !1190), !dbg !14621
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %targetP, metadata !14622, metadata !1190), !dbg !14623
  %0 = load i32, i32* %size.addr, align 4, !dbg !14624
  %cmp = icmp ne i32 %0, 0, !dbg !14626
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14627

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14628
  %cmp1 = icmp eq %struct._lwm2m_data_t* %1, null, !dbg !14629
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14630

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !14631
  br label %return, !dbg !14631

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !14632
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %baseUriStr, i32 0, i32 0, !dbg !14633
  %call = call i32 @uri_toString(%struct.lwm2m_uri_t* %2, i8* %arraydecay, i64 18, i32* %rootLevel), !dbg !14634
  store i32 %call, i32* %baseUriLen, align 4, !dbg !14635
  %3 = load i32, i32* %baseUriLen, align 4, !dbg !14636
  %cmp2 = icmp slt i32 %3, 0, !dbg !14638
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14639

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !14640
  br label %return, !dbg !14640

if.end4:                                          ; preds = %if.end
  %4 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !14641
  %5 = load i32, i32* %rootLevel, align 4, !dbg !14642
  %6 = load i32, i32* %size.addr, align 4, !dbg !14643
  %conv = sext i32 %6 to i64, !dbg !14643
  %7 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14644
  %call5 = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %4, i32 %5, i64 %conv, %struct._lwm2m_data_t* %7, %struct._lwm2m_data_t** %targetP), !dbg !14645
  store i32 %call5, i32* %num, align 4, !dbg !14646
  %8 = load i32, i32* %num, align 4, !dbg !14647
  %cmp6 = icmp slt i32 %8, 0, !dbg !14649
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !14650

if.then8:                                         ; preds = %if.end4
  store i32 -1, i32* %retval, align 4, !dbg !14651
  br label %return, !dbg !14651

if.end9:                                          ; preds = %if.end4
  br label %while.cond, !dbg !14652

while.cond:                                       ; preds = %if.end32, %if.end9
  %9 = load i32, i32* %num, align 4, !dbg !14653
  %cmp10 = icmp eq i32 %9, 1, !dbg !14654
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !14655

land.rhs:                                         ; preds = %while.cond
  %10 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14656
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %10, i32 0, i32 0, !dbg !14657
  %11 = load i32, i32* %type, align 8, !dbg !14657
  %cmp12 = icmp eq i32 %11, 1, !dbg !14658
  br i1 %cmp12, label %lor.end, label %lor.lhs.false, !dbg !14659

lor.lhs.false:                                    ; preds = %land.rhs
  %12 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14660
  %type14 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %12, i32 0, i32 0, !dbg !14661
  %13 = load i32, i32* %type14, align 8, !dbg !14661
  %cmp15 = icmp eq i32 %13, 2, !dbg !14662
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !14663

lor.rhs:                                          ; preds = %lor.lhs.false
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14664
  %type17 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %14, i32 0, i32 0, !dbg !14665
  %15 = load i32, i32* %type17, align 8, !dbg !14665
  %cmp18 = icmp eq i32 %15, 3, !dbg !14666
  br label %lor.end, !dbg !14663

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %16 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp18, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %17 = phi i1 [ false, %while.cond ], [ %16, %lor.end ]
  br i1 %17, label %while.body, label %while.end, !dbg !14652

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %res, metadata !14667, metadata !1190), !dbg !14669
  %18 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14670
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %18, i32 0, i32 1, !dbg !14671
  %19 = load i16, i16* %id, align 4, !dbg !14671
  %conv20 = zext i16 %19 to i64, !dbg !14670
  %arraydecay21 = getelementptr inbounds [18 x i8], [18 x i8]* %baseUriStr, i32 0, i32 0, !dbg !14672
  %20 = load i32, i32* %baseUriLen, align 4, !dbg !14673
  %idx.ext = sext i32 %20 to i64, !dbg !14674
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay21, i64 %idx.ext, !dbg !14674
  %21 = load i32, i32* %baseUriLen, align 4, !dbg !14675
  %sub = sub nsw i32 18, %21, !dbg !14676
  %conv22 = sext i32 %sub to i64, !dbg !14677
  %call23 = call i64 @utils_intToText(i64 %conv20, i8* %add.ptr, i64 %conv22), !dbg !14678
  %conv24 = trunc i64 %call23 to i32, !dbg !14678
  store i32 %conv24, i32* %res, align 4, !dbg !14679
  %22 = load i32, i32* %res, align 4, !dbg !14680
  %cmp25 = icmp sle i32 %22, 0, !dbg !14682
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !14683

if.then27:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !14684
  br label %return, !dbg !14684

if.end28:                                         ; preds = %while.body
  %23 = load i32, i32* %res, align 4, !dbg !14685
  %24 = load i32, i32* %baseUriLen, align 4, !dbg !14686
  %add = add nsw i32 %24, %23, !dbg !14686
  store i32 %add, i32* %baseUriLen, align 4, !dbg !14686
  %25 = load i32, i32* %baseUriLen, align 4, !dbg !14687
  %cmp29 = icmp sge i32 %25, 17, !dbg !14689
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14690

if.then31:                                        ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !14691
  br label %return, !dbg !14691

if.end32:                                         ; preds = %if.end28
  %26 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14692
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %26, i32 0, i32 2, !dbg !14693
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !14694
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !14695
  %27 = load i64, i64* %count, align 8, !dbg !14695
  %conv33 = trunc i64 %27 to i32, !dbg !14692
  store i32 %conv33, i32* %num, align 4, !dbg !14696
  %28 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14697
  %value34 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %28, i32 0, i32 2, !dbg !14698
  %asChildren35 = bitcast %union.anon.0* %value34 to %struct.anon.0*, !dbg !14699
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren35, i32 0, i32 1, !dbg !14700
  %29 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !14700
  store %struct._lwm2m_data_t* %29, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14701
  %30 = load i32, i32* %baseUriLen, align 4, !dbg !14702
  %idxprom = sext i32 %30 to i64, !dbg !14703
  %arrayidx = getelementptr inbounds [18 x i8], [18 x i8]* %baseUriStr, i64 0, i64 %idxprom, !dbg !14703
  store i8 47, i8* %arrayidx, align 1, !dbg !14704
  %31 = load i32, i32* %baseUriLen, align 4, !dbg !14705
  %inc = add nsw i32 %31, 1, !dbg !14705
  store i32 %inc, i32* %baseUriLen, align 4, !dbg !14705
  br label %while.cond, !dbg !14652, !llvm.loop !14706

while.end:                                        ; preds = %land.end
  %32 = load i32, i32* %baseUriLen, align 4, !dbg !14708
  %cmp36 = icmp sgt i32 %32, 0, !dbg !14710
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !14711

if.then38:                                        ; preds = %while.end
  %arraydecay39 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.174, i32 0, i32 0), i64 7, i32 1, i1 false), !dbg !14712
  store i64 7, i64* %head, align 8, !dbg !14714
  %arraydecay40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14715
  %33 = load i64, i64* %head, align 8, !dbg !14716
  %add.ptr41 = getelementptr inbounds i8, i8* %arraydecay40, i64 %33, !dbg !14717
  %arraydecay42 = getelementptr inbounds [18 x i8], [18 x i8]* %baseUriStr, i32 0, i32 0, !dbg !14718
  %34 = load i32, i32* %baseUriLen, align 4, !dbg !14719
  %conv43 = sext i32 %34 to i64, !dbg !14719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr41, i8* %arraydecay42, i64 %conv43, i32 1, i1 false), !dbg !14718
  %35 = load i32, i32* %baseUriLen, align 4, !dbg !14720
  %conv44 = sext i32 %35 to i64, !dbg !14720
  %36 = load i64, i64* %head, align 8, !dbg !14721
  %add45 = add i64 %36, %conv44, !dbg !14721
  store i64 %add45, i64* %head, align 8, !dbg !14721
  %arraydecay46 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14722
  %37 = load i64, i64* %head, align 8, !dbg !14723
  %add.ptr47 = getelementptr inbounds i8, i8* %arraydecay46, i64 %37, !dbg !14724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.175, i32 0, i32 0), i64 7, i32 1, i1 false), !dbg !14725
  %38 = load i64, i64* %head, align 8, !dbg !14726
  %add48 = add i64 %38, 7, !dbg !14726
  store i64 %add48, i64* %head, align 8, !dbg !14726
  br label %if.end50, !dbg !14727

if.else:                                          ; preds = %while.end
  %arraydecay49 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.176, i32 0, i32 0), i64 6, i32 1, i1 false), !dbg !14728
  store i64 6, i64* %head, align 8, !dbg !14730
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then38
  store i32 0, i32* %index, align 4, !dbg !14731
  br label %for.cond, !dbg !14733

for.cond:                                         ; preds = %for.inc, %if.end50
  %39 = load i32, i32* %index, align 4, !dbg !14734
  %40 = load i32, i32* %num, align 4, !dbg !14736
  %cmp51 = icmp slt i32 %39, %40, !dbg !14737
  br i1 %cmp51, label %land.rhs53, label %land.end56, !dbg !14738

land.rhs53:                                       ; preds = %for.cond
  %41 = load i64, i64* %head, align 8, !dbg !14739
  %cmp54 = icmp ult i64 %41, 1024, !dbg !14740
  br label %land.end56

land.end56:                                       ; preds = %land.rhs53, %for.cond
  %42 = phi i1 [ false, %for.cond ], [ %cmp54, %land.rhs53 ]
  br i1 %42, label %for.body, label %for.end, !dbg !14741

for.body:                                         ; preds = %land.end56
  call void @llvm.dbg.declare(metadata i32* %res57, metadata !14742, metadata !1190), !dbg !14744
  %43 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %targetP, align 8, !dbg !14745
  %44 = load i32, i32* %index, align 4, !dbg !14746
  %idx.ext58 = sext i32 %44 to i64, !dbg !14747
  %add.ptr59 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %43, i64 %idx.ext58, !dbg !14747
  %arraydecay60 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14748
  %45 = load i64, i64* %head, align 8, !dbg !14749
  %add.ptr61 = getelementptr inbounds i8, i8* %arraydecay60, i64 %45, !dbg !14750
  %46 = load i64, i64* %head, align 8, !dbg !14751
  %sub62 = sub i64 1024, %46, !dbg !14752
  %call63 = call i32 @prv_serializeData(%struct._lwm2m_data_t* %add.ptr59, i8* null, i64 0, i8* %add.ptr61, i64 %sub62), !dbg !14753
  store i32 %call63, i32* %res57, align 4, !dbg !14754
  %47 = load i32, i32* %res57, align 4, !dbg !14755
  %cmp64 = icmp slt i32 %47, 0, !dbg !14757
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !14758

if.then66:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !14759
  br label %return, !dbg !14759

if.end67:                                         ; preds = %for.body
  %48 = load i32, i32* %res57, align 4, !dbg !14760
  %conv68 = sext i32 %48 to i64, !dbg !14760
  %49 = load i64, i64* %head, align 8, !dbg !14761
  %add69 = add i64 %49, %conv68, !dbg !14761
  store i64 %add69, i64* %head, align 8, !dbg !14761
  br label %for.inc, !dbg !14762

for.inc:                                          ; preds = %if.end67
  %50 = load i32, i32* %index, align 4, !dbg !14763
  %inc70 = add nsw i32 %50, 1, !dbg !14763
  store i32 %inc70, i32* %index, align 4, !dbg !14763
  br label %for.cond, !dbg !14764, !llvm.loop !14765

for.end:                                          ; preds = %land.end56
  %51 = load i64, i64* %head, align 8, !dbg !14767
  %add71 = add i64 %51, 2, !dbg !14769
  %sub72 = sub i64 %add71, 1, !dbg !14770
  %cmp73 = icmp ugt i64 %sub72, 1024, !dbg !14771
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !14772

if.then75:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !14773
  br label %return, !dbg !14773

if.end76:                                         ; preds = %for.end
  %52 = load i32, i32* %num, align 4, !dbg !14774
  %cmp77 = icmp sgt i32 %52, 0, !dbg !14776
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !14777

if.then79:                                        ; preds = %if.end76
  %53 = load i64, i64* %head, align 8, !dbg !14778
  %sub80 = sub i64 %53, 1, !dbg !14779
  store i64 %sub80, i64* %head, align 8, !dbg !14780
  br label %if.end81, !dbg !14781

if.end81:                                         ; preds = %if.then79, %if.end76
  %arraydecay82 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14782
  %54 = load i64, i64* %head, align 8, !dbg !14783
  %add.ptr83 = getelementptr inbounds i8, i8* %arraydecay82, i64 %54, !dbg !14784
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.177, i32 0, i32 0), i64 2, i32 1, i1 false), !dbg !14785
  %55 = load i64, i64* %head, align 8, !dbg !14786
  %add84 = add i64 %55, 2, !dbg !14787
  store i64 %add84, i64* %head, align 8, !dbg !14788
  %56 = load i64, i64* %head, align 8, !dbg !14789
  %call85 = call i8* @lwm2m_malloc(i64 %56), !dbg !14790
  %57 = load i8**, i8*** %bufferP.addr, align 8, !dbg !14791
  store i8* %call85, i8** %57, align 8, !dbg !14792
  %58 = load i8**, i8*** %bufferP.addr, align 8, !dbg !14793
  %59 = load i8*, i8** %58, align 8, !dbg !14795
  %cmp86 = icmp eq i8* %59, null, !dbg !14796
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !14797

if.then88:                                        ; preds = %if.end81
  store i32 0, i32* %retval, align 4, !dbg !14798
  br label %return, !dbg !14798

if.end89:                                         ; preds = %if.end81
  %60 = load i8**, i8*** %bufferP.addr, align 8, !dbg !14799
  %61 = load i8*, i8** %60, align 8, !dbg !14800
  %arraydecay90 = getelementptr inbounds [1024 x i8], [1024 x i8]* %bufferJSON, i32 0, i32 0, !dbg !14801
  %62 = load i64, i64* %head, align 8, !dbg !14802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %arraydecay90, i64 %62, i32 1, i1 false), !dbg !14801
  %63 = load i64, i64* %head, align 8, !dbg !14803
  %conv91 = trunc i64 %63 to i32, !dbg !14803
  store i32 %conv91, i32* %retval, align 4, !dbg !14804
  br label %return, !dbg !14804

return:                                           ; preds = %if.end89, %if.then88, %if.then75, %if.then66, %if.then31, %if.then27, %if.then8, %if.then3, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !14805
  ret i32 %64, !dbg !14805
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %uriP, i32 %level, i64 %size, %struct._lwm2m_data_t* %tlvP, %struct._lwm2m_data_t** %targetP) #0 !dbg !14806 {
entry:
  %retval = alloca i32, align 4
  %uriP.addr = alloca %struct.lwm2m_uri_t*, align 8
  %level.addr = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %tlvP.addr = alloca %struct._lwm2m_data_t*, align 8
  %targetP.addr = alloca %struct._lwm2m_data_t**, align 8
  %index = alloca i64, align 8
  %result = alloca i32, align 4
  store %struct.lwm2m_uri_t* %uriP, %struct.lwm2m_uri_t** %uriP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lwm2m_uri_t** %uriP.addr, metadata !14809, metadata !1190), !dbg !14810
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !14811, metadata !1190), !dbg !14812
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14813, metadata !1190), !dbg !14814
  store %struct._lwm2m_data_t* %tlvP, %struct._lwm2m_data_t** %tlvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %tlvP.addr, metadata !14815, metadata !1190), !dbg !14816
  store %struct._lwm2m_data_t** %targetP, %struct._lwm2m_data_t*** %targetP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t*** %targetP.addr, metadata !14817, metadata !1190), !dbg !14818
  call void @llvm.dbg.declare(metadata i64* %index, metadata !14819, metadata !1190), !dbg !14820
  call void @llvm.dbg.declare(metadata i32* %result, metadata !14821, metadata !1190), !dbg !14822
  %0 = load i64, i64* %size.addr, align 8, !dbg !14823
  %cmp = icmp eq i64 %0, 0, !dbg !14825
  br i1 %cmp, label %if.then, label %if.end, !dbg !14826

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14827
  br label %return, !dbg !14827

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !14828
  %cmp1 = icmp ugt i64 %1, 1, !dbg !14830
  br i1 %cmp1, label %if.then2, label %if.end32, !dbg !14831

if.then2:                                         ; preds = %if.end
  %2 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14832
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %2, i64 0, !dbg !14832
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 0, !dbg !14835
  %3 = load i32, i32* %type, align 8, !dbg !14835
  %cmp3 = icmp eq i32 %3, 1, !dbg !14836
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !14837

lor.lhs.false:                                    ; preds = %if.then2
  %4 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14838
  %arrayidx4 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %4, i64 0, !dbg !14838
  %type5 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx4, i32 0, i32 0, !dbg !14839
  %5 = load i32, i32* %type5, align 8, !dbg !14839
  %cmp6 = icmp eq i32 %5, 2, !dbg !14840
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !14841

if.then7:                                         ; preds = %lor.lhs.false, %if.then2
  store i64 0, i64* %index, align 8, !dbg !14842
  br label %for.cond, !dbg !14845

for.cond:                                         ; preds = %for.inc, %if.then7
  %6 = load i64, i64* %index, align 8, !dbg !14846
  %7 = load i64, i64* %size.addr, align 8, !dbg !14848
  %cmp8 = icmp ult i64 %6, %7, !dbg !14849
  br i1 %cmp8, label %for.body, label %for.end, !dbg !14850

for.body:                                         ; preds = %for.cond
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14851
  %9 = load i64, i64* %index, align 8, !dbg !14854
  %arrayidx9 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %8, i64 %9, !dbg !14851
  %type10 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx9, i32 0, i32 0, !dbg !14855
  %10 = load i32, i32* %type10, align 8, !dbg !14855
  %11 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14856
  %arrayidx11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %11, i64 0, !dbg !14856
  %type12 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx11, i32 0, i32 0, !dbg !14857
  %12 = load i32, i32* %type12, align 8, !dbg !14857
  %cmp13 = icmp ne i32 %10, %12, !dbg !14858
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !14859

if.then14:                                        ; preds = %for.body
  %13 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !14860
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %13, align 8, !dbg !14862
  store i32 -1, i32* %retval, align 4, !dbg !14863
  br label %return, !dbg !14863

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !14864

for.inc:                                          ; preds = %if.end15
  %14 = load i64, i64* %index, align 8, !dbg !14865
  %inc = add i64 %14, 1, !dbg !14865
  store i64 %inc, i64* %index, align 8, !dbg !14865
  br label %for.cond, !dbg !14866, !llvm.loop !14867

for.end:                                          ; preds = %for.cond
  br label %if.end31, !dbg !14869

if.else:                                          ; preds = %lor.lhs.false
  store i64 0, i64* %index, align 8, !dbg !14870
  br label %for.cond16, !dbg !14873

for.cond16:                                       ; preds = %for.inc28, %if.else
  %15 = load i64, i64* %index, align 8, !dbg !14874
  %16 = load i64, i64* %size.addr, align 8, !dbg !14876
  %cmp17 = icmp ult i64 %15, %16, !dbg !14877
  br i1 %cmp17, label %for.body18, label %for.end30, !dbg !14878

for.body18:                                       ; preds = %for.cond16
  %17 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14879
  %18 = load i64, i64* %index, align 8, !dbg !14882
  %arrayidx19 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %17, i64 %18, !dbg !14879
  %type20 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx19, i32 0, i32 0, !dbg !14883
  %19 = load i32, i32* %type20, align 8, !dbg !14883
  %cmp21 = icmp eq i32 %19, 1, !dbg !14884
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !14885

lor.lhs.false22:                                  ; preds = %for.body18
  %20 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14886
  %21 = load i64, i64* %index, align 8, !dbg !14887
  %arrayidx23 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %20, i64 %21, !dbg !14886
  %type24 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx23, i32 0, i32 0, !dbg !14888
  %22 = load i32, i32* %type24, align 8, !dbg !14888
  %cmp25 = icmp eq i32 %22, 2, !dbg !14889
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !14890

if.then26:                                        ; preds = %lor.lhs.false22, %for.body18
  %23 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !14891
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %23, align 8, !dbg !14893
  store i32 -1, i32* %retval, align 4, !dbg !14894
  br label %return, !dbg !14894

if.end27:                                         ; preds = %lor.lhs.false22
  br label %for.inc28, !dbg !14895

for.inc28:                                        ; preds = %if.end27
  %24 = load i64, i64* %index, align 8, !dbg !14896
  %inc29 = add i64 %24, 1, !dbg !14896
  store i64 %inc29, i64* %index, align 8, !dbg !14896
  br label %for.cond16, !dbg !14897, !llvm.loop !14898

for.end30:                                        ; preds = %for.cond16
  br label %if.end31

if.end31:                                         ; preds = %for.end30, %for.end
  br label %if.end32, !dbg !14900

if.end32:                                         ; preds = %if.end31, %if.end
  %25 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !14901
  store %struct._lwm2m_data_t* null, %struct._lwm2m_data_t** %25, align 8, !dbg !14902
  store i32 -1, i32* %result, align 4, !dbg !14903
  %26 = load i32, i32* %level.addr, align 4, !dbg !14904
  switch i32 %26, label %sw.default202 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb38
    i32 2, label %sw.bb62
    i32 3, label %sw.bb119
  ], !dbg !14905

sw.bb:                                            ; preds = %if.end32
  %27 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14906
  %arrayidx33 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %27, i64 0, !dbg !14906
  %type34 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx33, i32 0, i32 0, !dbg !14909
  %28 = load i32, i32* %type34, align 8, !dbg !14909
  %cmp35 = icmp eq i32 %28, 1, !dbg !14910
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !14911

if.then36:                                        ; preds = %sw.bb
  %29 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14912
  %30 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !14914
  store %struct._lwm2m_data_t* %29, %struct._lwm2m_data_t** %30, align 8, !dbg !14915
  %31 = load i64, i64* %size.addr, align 8, !dbg !14916
  %conv = trunc i64 %31 to i32, !dbg !14917
  store i32 %conv, i32* %result, align 4, !dbg !14918
  br label %if.end37, !dbg !14919

if.end37:                                         ; preds = %if.then36, %sw.bb
  br label %sw.epilog203, !dbg !14920

sw.bb38:                                          ; preds = %if.end32
  %32 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14921
  %arrayidx39 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %32, i64 0, !dbg !14921
  %type40 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx39, i32 0, i32 0, !dbg !14922
  %33 = load i32, i32* %type40, align 8, !dbg !14922
  switch i32 %33, label %sw.default [
    i32 1, label %sw.bb41
    i32 2, label %sw.bb60
  ], !dbg !14923

sw.bb41:                                          ; preds = %sw.bb38
  store i64 0, i64* %index, align 8, !dbg !14924
  br label %for.cond42, !dbg !14927

for.cond42:                                       ; preds = %for.inc57, %sw.bb41
  %34 = load i64, i64* %index, align 8, !dbg !14928
  %35 = load i64, i64* %size.addr, align 8, !dbg !14930
  %cmp43 = icmp ult i64 %34, %35, !dbg !14931
  br i1 %cmp43, label %for.body45, label %for.end59, !dbg !14932

for.body45:                                       ; preds = %for.cond42
  %36 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14933
  %37 = load i64, i64* %index, align 8, !dbg !14936
  %arrayidx46 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %36, i64 %37, !dbg !14933
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx46, i32 0, i32 1, !dbg !14937
  %38 = load i16, i16* %id, align 4, !dbg !14937
  %conv47 = zext i16 %38 to i32, !dbg !14933
  %39 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !14938
  %objectId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %39, i32 0, i32 1, !dbg !14939
  %40 = load i16, i16* %objectId, align 2, !dbg !14939
  %conv48 = zext i16 %40 to i32, !dbg !14938
  %cmp49 = icmp eq i32 %conv47, %conv48, !dbg !14940
  br i1 %cmp49, label %if.then51, label %if.end56, !dbg !14941

if.then51:                                        ; preds = %for.body45
  %41 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !14942
  %42 = load i32, i32* %level.addr, align 4, !dbg !14944
  %43 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14945
  %44 = load i64, i64* %index, align 8, !dbg !14946
  %arrayidx52 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %43, i64 %44, !dbg !14945
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx52, i32 0, i32 2, !dbg !14947
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !14948
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !14949
  %45 = load i64, i64* %count, align 8, !dbg !14949
  %46 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14950
  %47 = load i64, i64* %index, align 8, !dbg !14951
  %arrayidx53 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %46, i64 %47, !dbg !14950
  %value54 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx53, i32 0, i32 2, !dbg !14952
  %asChildren55 = bitcast %union.anon.0* %value54 to %struct.anon.0*, !dbg !14953
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren55, i32 0, i32 1, !dbg !14954
  %48 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !14954
  %49 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !14955
  %call = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %41, i32 %42, i64 %45, %struct._lwm2m_data_t* %48, %struct._lwm2m_data_t** %49), !dbg !14956
  store i32 %call, i32* %retval, align 4, !dbg !14957
  br label %return, !dbg !14957

if.end56:                                         ; preds = %for.body45
  br label %for.inc57, !dbg !14958

for.inc57:                                        ; preds = %if.end56
  %50 = load i64, i64* %index, align 8, !dbg !14959
  %inc58 = add i64 %50, 1, !dbg !14959
  store i64 %inc58, i64* %index, align 8, !dbg !14959
  br label %for.cond42, !dbg !14960, !llvm.loop !14961

for.end59:                                        ; preds = %for.cond42
  br label %sw.epilog, !dbg !14963

sw.bb60:                                          ; preds = %sw.bb38
  %51 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14964
  %52 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !14965
  store %struct._lwm2m_data_t* %51, %struct._lwm2m_data_t** %52, align 8, !dbg !14966
  %53 = load i64, i64* %size.addr, align 8, !dbg !14967
  %conv61 = trunc i64 %53 to i32, !dbg !14968
  store i32 %conv61, i32* %result, align 4, !dbg !14969
  br label %sw.epilog, !dbg !14970

sw.default:                                       ; preds = %sw.bb38
  br label %sw.epilog, !dbg !14971

sw.epilog:                                        ; preds = %sw.default, %sw.bb60, %for.end59
  br label %sw.epilog203, !dbg !14972

sw.bb62:                                          ; preds = %if.end32
  %54 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14973
  %arrayidx63 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %54, i64 0, !dbg !14973
  %type64 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx63, i32 0, i32 0, !dbg !14974
  %55 = load i32, i32* %type64, align 8, !dbg !14974
  switch i32 %55, label %sw.default116 [
    i32 1, label %sw.bb65
    i32 2, label %sw.bb91
  ], !dbg !14975

sw.bb65:                                          ; preds = %sw.bb62
  store i64 0, i64* %index, align 8, !dbg !14976
  br label %for.cond66, !dbg !14979

for.cond66:                                       ; preds = %for.inc88, %sw.bb65
  %56 = load i64, i64* %index, align 8, !dbg !14980
  %57 = load i64, i64* %size.addr, align 8, !dbg !14982
  %cmp67 = icmp ult i64 %56, %57, !dbg !14983
  br i1 %cmp67, label %for.body69, label %for.end90, !dbg !14984

for.body69:                                       ; preds = %for.cond66
  %58 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14985
  %59 = load i64, i64* %index, align 8, !dbg !14988
  %arrayidx70 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %58, i64 %59, !dbg !14985
  %id71 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx70, i32 0, i32 1, !dbg !14989
  %60 = load i16, i16* %id71, align 4, !dbg !14989
  %conv72 = zext i16 %60 to i32, !dbg !14985
  %61 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !14990
  %objectId73 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %61, i32 0, i32 1, !dbg !14991
  %62 = load i16, i16* %objectId73, align 2, !dbg !14991
  %conv74 = zext i16 %62 to i32, !dbg !14990
  %cmp75 = icmp eq i32 %conv72, %conv74, !dbg !14992
  br i1 %cmp75, label %if.then77, label %if.end87, !dbg !14993

if.then77:                                        ; preds = %for.body69
  %63 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !14994
  %64 = load i32, i32* %level.addr, align 4, !dbg !14996
  %65 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !14997
  %66 = load i64, i64* %index, align 8, !dbg !14998
  %arrayidx78 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %65, i64 %66, !dbg !14997
  %value79 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx78, i32 0, i32 2, !dbg !14999
  %asChildren80 = bitcast %union.anon.0* %value79 to %struct.anon.0*, !dbg !15000
  %count81 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren80, i32 0, i32 0, !dbg !15001
  %67 = load i64, i64* %count81, align 8, !dbg !15001
  %68 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15002
  %69 = load i64, i64* %index, align 8, !dbg !15003
  %arrayidx82 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %68, i64 %69, !dbg !15002
  %value83 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx82, i32 0, i32 2, !dbg !15004
  %asChildren84 = bitcast %union.anon.0* %value83 to %struct.anon.0*, !dbg !15005
  %array85 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren84, i32 0, i32 1, !dbg !15006
  %70 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array85, align 8, !dbg !15006
  %71 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15007
  %call86 = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %63, i32 %64, i64 %67, %struct._lwm2m_data_t* %70, %struct._lwm2m_data_t** %71), !dbg !15008
  store i32 %call86, i32* %retval, align 4, !dbg !15009
  br label %return, !dbg !15009

if.end87:                                         ; preds = %for.body69
  br label %for.inc88, !dbg !15010

for.inc88:                                        ; preds = %if.end87
  %72 = load i64, i64* %index, align 8, !dbg !15011
  %inc89 = add i64 %72, 1, !dbg !15011
  store i64 %inc89, i64* %index, align 8, !dbg !15011
  br label %for.cond66, !dbg !15012, !llvm.loop !15013

for.end90:                                        ; preds = %for.cond66
  br label %sw.epilog118, !dbg !15015

sw.bb91:                                          ; preds = %sw.bb62
  store i64 0, i64* %index, align 8, !dbg !15016
  br label %for.cond92, !dbg !15018

for.cond92:                                       ; preds = %for.inc113, %sw.bb91
  %73 = load i64, i64* %index, align 8, !dbg !15019
  %74 = load i64, i64* %size.addr, align 8, !dbg !15021
  %cmp93 = icmp ult i64 %73, %74, !dbg !15022
  br i1 %cmp93, label %for.body95, label %for.end115, !dbg !15023

for.body95:                                       ; preds = %for.cond92
  %75 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15024
  %76 = load i64, i64* %index, align 8, !dbg !15027
  %arrayidx96 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %75, i64 %76, !dbg !15024
  %id97 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx96, i32 0, i32 1, !dbg !15028
  %77 = load i16, i16* %id97, align 4, !dbg !15028
  %conv98 = zext i16 %77 to i32, !dbg !15024
  %78 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15029
  %instanceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %78, i32 0, i32 2, !dbg !15030
  %79 = load i16, i16* %instanceId, align 2, !dbg !15030
  %conv99 = zext i16 %79 to i32, !dbg !15029
  %cmp100 = icmp eq i32 %conv98, %conv99, !dbg !15031
  br i1 %cmp100, label %if.then102, label %if.end112, !dbg !15032

if.then102:                                       ; preds = %for.body95
  %80 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15033
  %81 = load i32, i32* %level.addr, align 4, !dbg !15035
  %82 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15036
  %83 = load i64, i64* %index, align 8, !dbg !15037
  %arrayidx103 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %82, i64 %83, !dbg !15036
  %value104 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx103, i32 0, i32 2, !dbg !15038
  %asChildren105 = bitcast %union.anon.0* %value104 to %struct.anon.0*, !dbg !15039
  %count106 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren105, i32 0, i32 0, !dbg !15040
  %84 = load i64, i64* %count106, align 8, !dbg !15040
  %85 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15041
  %86 = load i64, i64* %index, align 8, !dbg !15042
  %arrayidx107 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %85, i64 %86, !dbg !15041
  %value108 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx107, i32 0, i32 2, !dbg !15043
  %asChildren109 = bitcast %union.anon.0* %value108 to %struct.anon.0*, !dbg !15044
  %array110 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren109, i32 0, i32 1, !dbg !15045
  %87 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array110, align 8, !dbg !15045
  %88 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15046
  %call111 = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %80, i32 %81, i64 %84, %struct._lwm2m_data_t* %87, %struct._lwm2m_data_t** %88), !dbg !15047
  store i32 %call111, i32* %retval, align 4, !dbg !15048
  br label %return, !dbg !15048

if.end112:                                        ; preds = %for.body95
  br label %for.inc113, !dbg !15049

for.inc113:                                       ; preds = %if.end112
  %89 = load i64, i64* %index, align 8, !dbg !15050
  %inc114 = add i64 %89, 1, !dbg !15050
  store i64 %inc114, i64* %index, align 8, !dbg !15050
  br label %for.cond92, !dbg !15051, !llvm.loop !15052

for.end115:                                       ; preds = %for.cond92
  br label %sw.epilog118, !dbg !15054

sw.default116:                                    ; preds = %sw.bb62
  %90 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15055
  %91 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15056
  store %struct._lwm2m_data_t* %90, %struct._lwm2m_data_t** %91, align 8, !dbg !15057
  %92 = load i64, i64* %size.addr, align 8, !dbg !15058
  %conv117 = trunc i64 %92 to i32, !dbg !15059
  store i32 %conv117, i32* %result, align 4, !dbg !15060
  br label %sw.epilog118, !dbg !15061

sw.epilog118:                                     ; preds = %sw.default116, %for.end115, %for.end90
  br label %sw.epilog203, !dbg !15062

sw.bb119:                                         ; preds = %if.end32
  %93 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15063
  %arrayidx120 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %93, i64 0, !dbg !15063
  %type121 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx120, i32 0, i32 0, !dbg !15064
  %94 = load i32, i32* %type121, align 8, !dbg !15064
  switch i32 %94, label %sw.default199 [
    i32 1, label %sw.bb122
    i32 2, label %sw.bb148
    i32 3, label %sw.bb174
  ], !dbg !15065

sw.bb122:                                         ; preds = %sw.bb119
  store i64 0, i64* %index, align 8, !dbg !15066
  br label %for.cond123, !dbg !15069

for.cond123:                                      ; preds = %for.inc145, %sw.bb122
  %95 = load i64, i64* %index, align 8, !dbg !15070
  %96 = load i64, i64* %size.addr, align 8, !dbg !15072
  %cmp124 = icmp ult i64 %95, %96, !dbg !15073
  br i1 %cmp124, label %for.body126, label %for.end147, !dbg !15074

for.body126:                                      ; preds = %for.cond123
  %97 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15075
  %98 = load i64, i64* %index, align 8, !dbg !15078
  %arrayidx127 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %97, i64 %98, !dbg !15075
  %id128 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx127, i32 0, i32 1, !dbg !15079
  %99 = load i16, i16* %id128, align 4, !dbg !15079
  %conv129 = zext i16 %99 to i32, !dbg !15075
  %100 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15080
  %objectId130 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %100, i32 0, i32 1, !dbg !15081
  %101 = load i16, i16* %objectId130, align 2, !dbg !15081
  %conv131 = zext i16 %101 to i32, !dbg !15080
  %cmp132 = icmp eq i32 %conv129, %conv131, !dbg !15082
  br i1 %cmp132, label %if.then134, label %if.end144, !dbg !15083

if.then134:                                       ; preds = %for.body126
  %102 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15084
  %103 = load i32, i32* %level.addr, align 4, !dbg !15086
  %104 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15087
  %105 = load i64, i64* %index, align 8, !dbg !15088
  %arrayidx135 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %104, i64 %105, !dbg !15087
  %value136 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx135, i32 0, i32 2, !dbg !15089
  %asChildren137 = bitcast %union.anon.0* %value136 to %struct.anon.0*, !dbg !15090
  %count138 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren137, i32 0, i32 0, !dbg !15091
  %106 = load i64, i64* %count138, align 8, !dbg !15091
  %107 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15092
  %108 = load i64, i64* %index, align 8, !dbg !15093
  %arrayidx139 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %107, i64 %108, !dbg !15092
  %value140 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx139, i32 0, i32 2, !dbg !15094
  %asChildren141 = bitcast %union.anon.0* %value140 to %struct.anon.0*, !dbg !15095
  %array142 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren141, i32 0, i32 1, !dbg !15096
  %109 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array142, align 8, !dbg !15096
  %110 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15097
  %call143 = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %102, i32 %103, i64 %106, %struct._lwm2m_data_t* %109, %struct._lwm2m_data_t** %110), !dbg !15098
  store i32 %call143, i32* %retval, align 4, !dbg !15099
  br label %return, !dbg !15099

if.end144:                                        ; preds = %for.body126
  br label %for.inc145, !dbg !15100

for.inc145:                                       ; preds = %if.end144
  %111 = load i64, i64* %index, align 8, !dbg !15101
  %inc146 = add i64 %111, 1, !dbg !15101
  store i64 %inc146, i64* %index, align 8, !dbg !15101
  br label %for.cond123, !dbg !15102, !llvm.loop !15103

for.end147:                                       ; preds = %for.cond123
  br label %sw.epilog201, !dbg !15105

sw.bb148:                                         ; preds = %sw.bb119
  store i64 0, i64* %index, align 8, !dbg !15106
  br label %for.cond149, !dbg !15108

for.cond149:                                      ; preds = %for.inc171, %sw.bb148
  %112 = load i64, i64* %index, align 8, !dbg !15109
  %113 = load i64, i64* %size.addr, align 8, !dbg !15111
  %cmp150 = icmp ult i64 %112, %113, !dbg !15112
  br i1 %cmp150, label %for.body152, label %for.end173, !dbg !15113

for.body152:                                      ; preds = %for.cond149
  %114 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15114
  %115 = load i64, i64* %index, align 8, !dbg !15117
  %arrayidx153 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %114, i64 %115, !dbg !15114
  %id154 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx153, i32 0, i32 1, !dbg !15118
  %116 = load i16, i16* %id154, align 4, !dbg !15118
  %conv155 = zext i16 %116 to i32, !dbg !15114
  %117 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15119
  %instanceId156 = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %117, i32 0, i32 2, !dbg !15120
  %118 = load i16, i16* %instanceId156, align 2, !dbg !15120
  %conv157 = zext i16 %118 to i32, !dbg !15119
  %cmp158 = icmp eq i32 %conv155, %conv157, !dbg !15121
  br i1 %cmp158, label %if.then160, label %if.end170, !dbg !15122

if.then160:                                       ; preds = %for.body152
  %119 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15123
  %120 = load i32, i32* %level.addr, align 4, !dbg !15125
  %121 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15126
  %122 = load i64, i64* %index, align 8, !dbg !15127
  %arrayidx161 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %121, i64 %122, !dbg !15126
  %value162 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx161, i32 0, i32 2, !dbg !15128
  %asChildren163 = bitcast %union.anon.0* %value162 to %struct.anon.0*, !dbg !15129
  %count164 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren163, i32 0, i32 0, !dbg !15130
  %123 = load i64, i64* %count164, align 8, !dbg !15130
  %124 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15131
  %125 = load i64, i64* %index, align 8, !dbg !15132
  %arrayidx165 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %124, i64 %125, !dbg !15131
  %value166 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx165, i32 0, i32 2, !dbg !15133
  %asChildren167 = bitcast %union.anon.0* %value166 to %struct.anon.0*, !dbg !15134
  %array168 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren167, i32 0, i32 1, !dbg !15135
  %126 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array168, align 8, !dbg !15135
  %127 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15136
  %call169 = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %119, i32 %120, i64 %123, %struct._lwm2m_data_t* %126, %struct._lwm2m_data_t** %127), !dbg !15137
  store i32 %call169, i32* %retval, align 4, !dbg !15138
  br label %return, !dbg !15138

if.end170:                                        ; preds = %for.body152
  br label %for.inc171, !dbg !15139

for.inc171:                                       ; preds = %if.end170
  %128 = load i64, i64* %index, align 8, !dbg !15140
  %inc172 = add i64 %128, 1, !dbg !15140
  store i64 %inc172, i64* %index, align 8, !dbg !15140
  br label %for.cond149, !dbg !15141, !llvm.loop !15142

for.end173:                                       ; preds = %for.cond149
  br label %sw.epilog201, !dbg !15144

sw.bb174:                                         ; preds = %sw.bb119
  store i64 0, i64* %index, align 8, !dbg !15145
  br label %for.cond175, !dbg !15147

for.cond175:                                      ; preds = %for.inc196, %sw.bb174
  %129 = load i64, i64* %index, align 8, !dbg !15148
  %130 = load i64, i64* %size.addr, align 8, !dbg !15150
  %cmp176 = icmp ult i64 %129, %130, !dbg !15151
  br i1 %cmp176, label %for.body178, label %for.end198, !dbg !15152

for.body178:                                      ; preds = %for.cond175
  %131 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15153
  %132 = load i64, i64* %index, align 8, !dbg !15156
  %arrayidx179 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %131, i64 %132, !dbg !15153
  %id180 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx179, i32 0, i32 1, !dbg !15157
  %133 = load i16, i16* %id180, align 4, !dbg !15157
  %conv181 = zext i16 %133 to i32, !dbg !15153
  %134 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15158
  %resourceId = getelementptr inbounds %struct.lwm2m_uri_t, %struct.lwm2m_uri_t* %134, i32 0, i32 3, !dbg !15159
  %135 = load i16, i16* %resourceId, align 2, !dbg !15159
  %conv182 = zext i16 %135 to i32, !dbg !15158
  %cmp183 = icmp eq i32 %conv181, %conv182, !dbg !15160
  br i1 %cmp183, label %if.then185, label %if.end195, !dbg !15161

if.then185:                                       ; preds = %for.body178
  %136 = load %struct.lwm2m_uri_t*, %struct.lwm2m_uri_t** %uriP.addr, align 8, !dbg !15162
  %137 = load i32, i32* %level.addr, align 4, !dbg !15164
  %138 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15165
  %139 = load i64, i64* %index, align 8, !dbg !15166
  %arrayidx186 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %138, i64 %139, !dbg !15165
  %value187 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx186, i32 0, i32 2, !dbg !15167
  %asChildren188 = bitcast %union.anon.0* %value187 to %struct.anon.0*, !dbg !15168
  %count189 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren188, i32 0, i32 0, !dbg !15169
  %140 = load i64, i64* %count189, align 8, !dbg !15169
  %141 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15170
  %142 = load i64, i64* %index, align 8, !dbg !15171
  %arrayidx190 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %141, i64 %142, !dbg !15170
  %value191 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx190, i32 0, i32 2, !dbg !15172
  %asChildren192 = bitcast %union.anon.0* %value191 to %struct.anon.0*, !dbg !15173
  %array193 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren192, i32 0, i32 1, !dbg !15174
  %143 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array193, align 8, !dbg !15174
  %144 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15175
  %call194 = call i32 @prv_findAndCheckData(%struct.lwm2m_uri_t* %136, i32 %137, i64 %140, %struct._lwm2m_data_t* %143, %struct._lwm2m_data_t** %144), !dbg !15176
  store i32 %call194, i32* %retval, align 4, !dbg !15177
  br label %return, !dbg !15177

if.end195:                                        ; preds = %for.body178
  br label %for.inc196, !dbg !15178

for.inc196:                                       ; preds = %if.end195
  %145 = load i64, i64* %index, align 8, !dbg !15179
  %inc197 = add i64 %145, 1, !dbg !15179
  store i64 %inc197, i64* %index, align 8, !dbg !15179
  br label %for.cond175, !dbg !15180, !llvm.loop !15181

for.end198:                                       ; preds = %for.cond175
  br label %sw.epilog201, !dbg !15183

sw.default199:                                    ; preds = %sw.bb119
  %146 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %tlvP.addr, align 8, !dbg !15184
  %147 = load %struct._lwm2m_data_t**, %struct._lwm2m_data_t*** %targetP.addr, align 8, !dbg !15185
  store %struct._lwm2m_data_t* %146, %struct._lwm2m_data_t** %147, align 8, !dbg !15186
  %148 = load i64, i64* %size.addr, align 8, !dbg !15187
  %conv200 = trunc i64 %148 to i32, !dbg !15188
  store i32 %conv200, i32* %result, align 4, !dbg !15189
  br label %sw.epilog201, !dbg !15190

sw.epilog201:                                     ; preds = %sw.default199, %for.end198, %for.end173, %for.end147
  br label %sw.epilog203, !dbg !15191

sw.default202:                                    ; preds = %if.end32
  br label %sw.epilog203, !dbg !15192

sw.epilog203:                                     ; preds = %sw.default202, %sw.epilog201, %sw.epilog118, %sw.epilog, %if.end37
  %149 = load i32, i32* %result, align 4, !dbg !15193
  store i32 %149, i32* %retval, align 4, !dbg !15194
  br label %return, !dbg !15194

return:                                           ; preds = %sw.epilog203, %if.then185, %if.then160, %if.then134, %if.then102, %if.then77, %if.then51, %if.then26, %if.then14, %if.then
  %150 = load i32, i32* %retval, align 4, !dbg !15195
  ret i32 %150, !dbg !15195
}

; Function Attrs: noinline nounwind uwtable
define zeroext i8 @coap_block1_handler(%struct._lwm2m_block1_data_** %pBlock1Data, i16 zeroext %mid, i8* %buffer, i64 %length, i16 zeroext %blockSize, i32 %blockNum, i1 zeroext %blockMore, i8** %outputBuffer, i64* %outputLength) #0 !dbg !15196 {
entry:
  %retval = alloca i8, align 1
  %pBlock1Data.addr = alloca %struct._lwm2m_block1_data_**, align 8
  %mid.addr = alloca i16, align 2
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %blockSize.addr = alloca i16, align 2
  %blockNum.addr = alloca i32, align 4
  %blockMore.addr = alloca i8, align 1
  %outputBuffer.addr = alloca i8**, align 8
  %outputLength.addr = alloca i64*, align 8
  %block1Data = alloca %struct._lwm2m_block1_data_*, align 8
  %oldBuffer = alloca i8*, align 8
  %oldSize = alloca i64, align 8
  store %struct._lwm2m_block1_data_** %pBlock1Data, %struct._lwm2m_block1_data_*** %pBlock1Data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_block1_data_*** %pBlock1Data.addr, metadata !15207, metadata !1190), !dbg !15208
  store i16 %mid, i16* %mid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid.addr, metadata !15209, metadata !1190), !dbg !15210
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !15211, metadata !1190), !dbg !15212
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !15213, metadata !1190), !dbg !15214
  store i16 %blockSize, i16* %blockSize.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blockSize.addr, metadata !15215, metadata !1190), !dbg !15216
  store i32 %blockNum, i32* %blockNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockNum.addr, metadata !15217, metadata !1190), !dbg !15218
  %frombool = zext i1 %blockMore to i8
  store i8 %frombool, i8* %blockMore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %blockMore.addr, metadata !15219, metadata !1190), !dbg !15220
  store i8** %outputBuffer, i8*** %outputBuffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %outputBuffer.addr, metadata !15221, metadata !1190), !dbg !15222
  store i64* %outputLength, i64** %outputLength.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %outputLength.addr, metadata !15223, metadata !1190), !dbg !15224
  call void @llvm.dbg.declare(metadata %struct._lwm2m_block1_data_** %block1Data, metadata !15225, metadata !1190), !dbg !15226
  %0 = load %struct._lwm2m_block1_data_**, %struct._lwm2m_block1_data_*** %pBlock1Data.addr, align 8, !dbg !15227
  %1 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %0, align 8, !dbg !15228
  store %struct._lwm2m_block1_data_* %1, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15226
  %2 = load i32, i32* %blockNum.addr, align 4, !dbg !15229
  %cmp = icmp eq i32 %2, 0, !dbg !15231
  br i1 %cmp, label %if.then, label %if.else9, !dbg !15232

if.then:                                          ; preds = %entry
  %3 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15233
  %cmp1 = icmp ne %struct._lwm2m_block1_data_* %3, null, !dbg !15236
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !15237

if.then2:                                         ; preds = %if.then
  %4 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15238
  %block1buffer = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %4, i32 0, i32 0, !dbg !15240
  %5 = load i8*, i8** %block1buffer, align 8, !dbg !15240
  call void @lwm2m_free(i8* %5), !dbg !15241
  br label %if.end5, !dbg !15242

if.else:                                          ; preds = %if.then
  %call = call i8* @lwm2m_malloc(i64 24), !dbg !15243
  %6 = bitcast i8* %call to %struct._lwm2m_block1_data_*, !dbg !15243
  store %struct._lwm2m_block1_data_* %6, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15245
  %7 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15246
  %8 = load %struct._lwm2m_block1_data_**, %struct._lwm2m_block1_data_*** %pBlock1Data.addr, align 8, !dbg !15247
  store %struct._lwm2m_block1_data_* %7, %struct._lwm2m_block1_data_** %8, align 8, !dbg !15248
  %9 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15249
  %cmp3 = icmp eq %struct._lwm2m_block1_data_* null, %9, !dbg !15251
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !15252

if.then4:                                         ; preds = %if.else
  store i8 -96, i8* %retval, align 1, !dbg !15253
  br label %return, !dbg !15253

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then2
  %10 = load i64, i64* %length.addr, align 8, !dbg !15254
  %call6 = call i8* @lwm2m_malloc(i64 %10), !dbg !15255
  %11 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15256
  %block1buffer7 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %11, i32 0, i32 0, !dbg !15257
  store i8* %call6, i8** %block1buffer7, align 8, !dbg !15258
  %12 = load i64, i64* %length.addr, align 8, !dbg !15259
  %13 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15260
  %block1bufferSize = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %13, i32 0, i32 1, !dbg !15261
  store i64 %12, i64* %block1bufferSize, align 8, !dbg !15262
  %14 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15263
  %block1buffer8 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %14, i32 0, i32 0, !dbg !15264
  %15 = load i8*, i8** %block1buffer8, align 8, !dbg !15264
  %16 = load i8*, i8** %buffer.addr, align 8, !dbg !15265
  %17 = load i64, i64* %length.addr, align 8, !dbg !15266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 %17, i32 1, i1 false), !dbg !15267
  %18 = load i16, i16* %mid.addr, align 2, !dbg !15268
  %19 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15269
  %lastmid = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %19, i32 0, i32 2, !dbg !15270
  store i16 %18, i16* %lastmid, align 8, !dbg !15271
  br label %if.end46, !dbg !15272

if.else9:                                         ; preds = %entry
  %20 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15273
  %cmp10 = icmp eq %struct._lwm2m_block1_data_* %20, null, !dbg !15276
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !15277

if.then11:                                        ; preds = %if.else9
  store i8 -120, i8* %retval, align 1, !dbg !15278
  br label %return, !dbg !15278

if.end12:                                         ; preds = %if.else9
  %21 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15280
  %lastmid13 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %21, i32 0, i32 2, !dbg !15282
  %22 = load i16, i16* %lastmid13, align 8, !dbg !15282
  %conv = zext i16 %22 to i32, !dbg !15280
  %23 = load i16, i16* %mid.addr, align 2, !dbg !15283
  %conv14 = zext i16 %23 to i32, !dbg !15283
  %cmp15 = icmp ne i32 %conv, %conv14, !dbg !15284
  br i1 %cmp15, label %if.then17, label %if.end45, !dbg !15285

if.then17:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i8** %oldBuffer, metadata !15286, metadata !1190), !dbg !15288
  %24 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15289
  %block1buffer18 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %24, i32 0, i32 0, !dbg !15290
  %25 = load i8*, i8** %block1buffer18, align 8, !dbg !15290
  store i8* %25, i8** %oldBuffer, align 8, !dbg !15288
  call void @llvm.dbg.declare(metadata i64* %oldSize, metadata !15291, metadata !1190), !dbg !15292
  %26 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15293
  %block1bufferSize19 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %26, i32 0, i32 1, !dbg !15294
  %27 = load i64, i64* %block1bufferSize19, align 8, !dbg !15294
  store i64 %27, i64* %oldSize, align 8, !dbg !15292
  %28 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15295
  %block1bufferSize20 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %28, i32 0, i32 1, !dbg !15297
  %29 = load i64, i64* %block1bufferSize20, align 8, !dbg !15297
  %30 = load i16, i16* %blockSize.addr, align 2, !dbg !15298
  %conv21 = zext i16 %30 to i32, !dbg !15298
  %31 = load i32, i32* %blockNum.addr, align 4, !dbg !15299
  %mul = mul i32 %conv21, %31, !dbg !15300
  %conv22 = zext i32 %mul to i64, !dbg !15298
  %cmp23 = icmp ne i64 %29, %conv22, !dbg !15301
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !15302

if.then25:                                        ; preds = %if.then17
  store i8 -120, i8* %retval, align 1, !dbg !15303
  br label %return, !dbg !15303

if.end26:                                         ; preds = %if.then17
  %32 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15305
  %block1bufferSize27 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %32, i32 0, i32 1, !dbg !15307
  %33 = load i64, i64* %block1bufferSize27, align 8, !dbg !15307
  %34 = load i64, i64* %length.addr, align 8, !dbg !15308
  %add = add i64 %33, %34, !dbg !15309
  %cmp28 = icmp uge i64 %add, 4096, !dbg !15310
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !15311

if.then30:                                        ; preds = %if.end26
  store i8 -115, i8* %retval, align 1, !dbg !15312
  br label %return, !dbg !15312

if.end31:                                         ; preds = %if.end26
  %35 = load i64, i64* %oldSize, align 8, !dbg !15314
  %36 = load i64, i64* %length.addr, align 8, !dbg !15315
  %add32 = add i64 %35, %36, !dbg !15316
  %37 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15317
  %block1bufferSize33 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %37, i32 0, i32 1, !dbg !15318
  store i64 %add32, i64* %block1bufferSize33, align 8, !dbg !15319
  %38 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15320
  %block1bufferSize34 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %38, i32 0, i32 1, !dbg !15321
  %39 = load i64, i64* %block1bufferSize34, align 8, !dbg !15321
  %call35 = call i8* @lwm2m_malloc(i64 %39), !dbg !15322
  %40 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15323
  %block1buffer36 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %40, i32 0, i32 0, !dbg !15324
  store i8* %call35, i8** %block1buffer36, align 8, !dbg !15325
  %41 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15326
  %block1buffer37 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %41, i32 0, i32 0, !dbg !15328
  %42 = load i8*, i8** %block1buffer37, align 8, !dbg !15328
  %cmp38 = icmp eq i8* null, %42, !dbg !15329
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15330

if.then40:                                        ; preds = %if.end31
  store i8 -96, i8* %retval, align 1, !dbg !15331
  br label %return, !dbg !15331

if.end41:                                         ; preds = %if.end31
  %43 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15332
  %block1buffer42 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %43, i32 0, i32 0, !dbg !15333
  %44 = load i8*, i8** %block1buffer42, align 8, !dbg !15333
  %45 = load i8*, i8** %oldBuffer, align 8, !dbg !15334
  %46 = load i64, i64* %oldSize, align 8, !dbg !15335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 %46, i32 1, i1 false), !dbg !15336
  %47 = load i8*, i8** %oldBuffer, align 8, !dbg !15337
  call void @lwm2m_free(i8* %47), !dbg !15338
  %48 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15339
  %block1buffer43 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %48, i32 0, i32 0, !dbg !15340
  %49 = load i8*, i8** %block1buffer43, align 8, !dbg !15340
  %50 = load i64, i64* %oldSize, align 8, !dbg !15341
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !15342
  %51 = load i8*, i8** %buffer.addr, align 8, !dbg !15343
  %52 = load i64, i64* %length.addr, align 8, !dbg !15344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %51, i64 %52, i32 1, i1 false), !dbg !15345
  %53 = load i16, i16* %mid.addr, align 2, !dbg !15346
  %54 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15347
  %lastmid44 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %54, i32 0, i32 2, !dbg !15348
  store i16 %53, i16* %lastmid44, align 8, !dbg !15349
  br label %if.end45, !dbg !15350

if.end45:                                         ; preds = %if.end41, %if.end12
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end5
  %55 = load i8, i8* %blockMore.addr, align 1, !dbg !15351
  %tobool = trunc i8 %55 to i1, !dbg !15351
  br i1 %tobool, label %if.then47, label %if.else48, !dbg !15353

if.then47:                                        ; preds = %if.end46
  %56 = load i64*, i64** %outputLength.addr, align 8, !dbg !15354
  store i64 -1, i64* %56, align 8, !dbg !15356
  store i8 95, i8* %retval, align 1, !dbg !15357
  br label %return, !dbg !15357

if.else48:                                        ; preds = %if.end46
  %57 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15358
  %block1bufferSize49 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %57, i32 0, i32 1, !dbg !15360
  %58 = load i64, i64* %block1bufferSize49, align 8, !dbg !15360
  %59 = load i64*, i64** %outputLength.addr, align 8, !dbg !15361
  store i64 %58, i64* %59, align 8, !dbg !15362
  %60 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data, align 8, !dbg !15363
  %block1buffer50 = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %60, i32 0, i32 0, !dbg !15364
  %61 = load i8*, i8** %block1buffer50, align 8, !dbg !15364
  %62 = load i8**, i8*** %outputBuffer.addr, align 8, !dbg !15365
  store i8* %61, i8** %62, align 8, !dbg !15366
  store i8 0, i8* %retval, align 1, !dbg !15367
  br label %return, !dbg !15367

return:                                           ; preds = %if.else48, %if.then47, %if.then40, %if.then30, %if.then25, %if.then11, %if.then4
  %63 = load i8, i8* %retval, align 1, !dbg !15368
  ret i8 %63, !dbg !15368
}

; Function Attrs: noinline nounwind uwtable
define void @free_block1_buffer(%struct._lwm2m_block1_data_* %block1Data) #0 !dbg !15369 {
entry:
  %block1Data.addr = alloca %struct._lwm2m_block1_data_*, align 8
  store %struct._lwm2m_block1_data_* %block1Data, %struct._lwm2m_block1_data_** %block1Data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_block1_data_** %block1Data.addr, metadata !15372, metadata !1190), !dbg !15373
  %0 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data.addr, align 8, !dbg !15374
  %cmp = icmp ne %struct._lwm2m_block1_data_* %0, null, !dbg !15376
  br i1 %cmp, label %if.then, label %if.end, !dbg !15377

if.then:                                          ; preds = %entry
  %1 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data.addr, align 8, !dbg !15378
  %block1buffer = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %1, i32 0, i32 0, !dbg !15380
  %2 = load i8*, i8** %block1buffer, align 8, !dbg !15380
  call void @lwm2m_free(i8* %2), !dbg !15381
  %3 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data.addr, align 8, !dbg !15382
  %block1bufferSize = getelementptr inbounds %struct._lwm2m_block1_data_, %struct._lwm2m_block1_data_* %3, i32 0, i32 1, !dbg !15383
  store i64 0, i64* %block1bufferSize, align 8, !dbg !15384
  %4 = load %struct._lwm2m_block1_data_*, %struct._lwm2m_block1_data_** %block1Data.addr, align 8, !dbg !15385
  %5 = bitcast %struct._lwm2m_block1_data_* %4 to i8*, !dbg !15385
  call void @lwm2m_free(i8* %5), !dbg !15386
  br label %if.end, !dbg !15387

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15388
}

; Function Attrs: noinline nounwind uwtable
define void @coap_add_multi_option(%struct._multi_option_t** %dst, i8* %option, i64 %option_len, i8 zeroext %is_static) #0 !dbg !15389 {
entry:
  %dst.addr = alloca %struct._multi_option_t**, align 8
  %option.addr = alloca i8*, align 8
  %option_len.addr = alloca i64, align 8
  %is_static.addr = alloca i8, align 1
  %opt = alloca %struct._multi_option_t*, align 8
  %i = alloca %struct._multi_option_t*, align 8
  store %struct._multi_option_t** %dst, %struct._multi_option_t*** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._multi_option_t*** %dst.addr, metadata !15393, metadata !1190), !dbg !15394
  store i8* %option, i8** %option.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %option.addr, metadata !15395, metadata !1190), !dbg !15396
  store i64 %option_len, i64* %option_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %option_len.addr, metadata !15397, metadata !1190), !dbg !15398
  store i8 %is_static, i8* %is_static.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_static.addr, metadata !15399, metadata !1190), !dbg !15400
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %opt, metadata !15401, metadata !1190), !dbg !15402
  %call = call i8* @lwm2m_malloc(i64 24), !dbg !15403
  %0 = bitcast i8* %call to %struct._multi_option_t*, !dbg !15404
  store %struct._multi_option_t* %0, %struct._multi_option_t** %opt, align 8, !dbg !15402
  %1 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15405
  %tobool = icmp ne %struct._multi_option_t* %1, null, !dbg !15405
  br i1 %tobool, label %if.then, label %if.end20, !dbg !15407

if.then:                                          ; preds = %entry
  %2 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15408
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %2, i32 0, i32 0, !dbg !15410
  store %struct._multi_option_t* null, %struct._multi_option_t** %next, align 8, !dbg !15411
  %3 = load i64, i64* %option_len.addr, align 8, !dbg !15412
  %conv = trunc i64 %3 to i8, !dbg !15413
  %4 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15414
  %len = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %4, i32 0, i32 2, !dbg !15415
  store i8 %conv, i8* %len, align 1, !dbg !15416
  %5 = load i8, i8* %is_static.addr, align 1, !dbg !15417
  %tobool1 = icmp ne i8 %5, 0, !dbg !15417
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !15419

if.then2:                                         ; preds = %if.then
  %6 = load i8*, i8** %option.addr, align 8, !dbg !15420
  %7 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15422
  %data = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %7, i32 0, i32 3, !dbg !15423
  store i8* %6, i8** %data, align 8, !dbg !15424
  %8 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15425
  %is_static3 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %8, i32 0, i32 1, !dbg !15426
  store i8 1, i8* %is_static3, align 8, !dbg !15427
  br label %if.end11, !dbg !15428

if.else:                                          ; preds = %if.then
  %9 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15429
  %is_static4 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %9, i32 0, i32 1, !dbg !15431
  store i8 0, i8* %is_static4, align 8, !dbg !15432
  %10 = load i64, i64* %option_len.addr, align 8, !dbg !15433
  %call5 = call i8* @lwm2m_malloc(i64 %10), !dbg !15434
  %11 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15435
  %data6 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %11, i32 0, i32 3, !dbg !15436
  store i8* %call5, i8** %data6, align 8, !dbg !15437
  %12 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15438
  %data7 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %12, i32 0, i32 3, !dbg !15440
  %13 = load i8*, i8** %data7, align 8, !dbg !15440
  %cmp = icmp eq i8* %13, null, !dbg !15441
  br i1 %cmp, label %if.then9, label %if.end, !dbg !15442

if.then9:                                         ; preds = %if.else
  %14 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15443
  %15 = bitcast %struct._multi_option_t* %14 to i8*, !dbg !15443
  call void @lwm2m_free(i8* %15), !dbg !15445
  br label %if.end20, !dbg !15446

if.end:                                           ; preds = %if.else
  %16 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15447
  %data10 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %16, i32 0, i32 3, !dbg !15448
  %17 = load i8*, i8** %data10, align 8, !dbg !15448
  %18 = load i8*, i8** %option.addr, align 8, !dbg !15449
  %19 = load i64, i64* %option_len.addr, align 8, !dbg !15450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 %19, i32 1, i1 false), !dbg !15451
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then2
  %20 = load %struct._multi_option_t**, %struct._multi_option_t*** %dst.addr, align 8, !dbg !15452
  %21 = load %struct._multi_option_t*, %struct._multi_option_t** %20, align 8, !dbg !15454
  %tobool12 = icmp ne %struct._multi_option_t* %21, null, !dbg !15454
  br i1 %tobool12, label %if.then13, label %if.else18, !dbg !15455

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %i, metadata !15456, metadata !1190), !dbg !15458
  %22 = load %struct._multi_option_t**, %struct._multi_option_t*** %dst.addr, align 8, !dbg !15459
  %23 = load %struct._multi_option_t*, %struct._multi_option_t** %22, align 8, !dbg !15460
  store %struct._multi_option_t* %23, %struct._multi_option_t** %i, align 8, !dbg !15458
  br label %while.cond, !dbg !15461

while.cond:                                       ; preds = %while.body, %if.then13
  %24 = load %struct._multi_option_t*, %struct._multi_option_t** %i, align 8, !dbg !15462
  %next14 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %24, i32 0, i32 0, !dbg !15463
  %25 = load %struct._multi_option_t*, %struct._multi_option_t** %next14, align 8, !dbg !15463
  %tobool15 = icmp ne %struct._multi_option_t* %25, null, !dbg !15461
  br i1 %tobool15, label %while.body, label %while.end, !dbg !15461

while.body:                                       ; preds = %while.cond
  %26 = load %struct._multi_option_t*, %struct._multi_option_t** %i, align 8, !dbg !15464
  %next16 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %26, i32 0, i32 0, !dbg !15466
  %27 = load %struct._multi_option_t*, %struct._multi_option_t** %next16, align 8, !dbg !15466
  store %struct._multi_option_t* %27, %struct._multi_option_t** %i, align 8, !dbg !15467
  br label %while.cond, !dbg !15461, !llvm.loop !15468

while.end:                                        ; preds = %while.cond
  %28 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15470
  %29 = load %struct._multi_option_t*, %struct._multi_option_t** %i, align 8, !dbg !15471
  %next17 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %29, i32 0, i32 0, !dbg !15472
  store %struct._multi_option_t* %28, %struct._multi_option_t** %next17, align 8, !dbg !15473
  br label %if.end19, !dbg !15474

if.else18:                                        ; preds = %if.end11
  %30 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15475
  %31 = load %struct._multi_option_t**, %struct._multi_option_t*** %dst.addr, align 8, !dbg !15477
  store %struct._multi_option_t* %30, %struct._multi_option_t** %31, align 8, !dbg !15478
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %while.end
  br label %if.end20, !dbg !15479

if.end20:                                         ; preds = %if.end19, %if.then9, %entry
  ret void, !dbg !15480
}

; Function Attrs: noinline nounwind uwtable
define void @free_multi_option(%struct._multi_option_t* %dst) #0 !dbg !15481 {
entry:
  %dst.addr = alloca %struct._multi_option_t*, align 8
  %n = alloca %struct._multi_option_t*, align 8
  store %struct._multi_option_t* %dst, %struct._multi_option_t** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %dst.addr, metadata !15484, metadata !1190), !dbg !15485
  %0 = load %struct._multi_option_t*, %struct._multi_option_t** %dst.addr, align 8, !dbg !15486
  %tobool = icmp ne %struct._multi_option_t* %0, null, !dbg !15486
  br i1 %tobool, label %if.then, label %if.end4, !dbg !15488

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %n, metadata !15489, metadata !1190), !dbg !15491
  %1 = load %struct._multi_option_t*, %struct._multi_option_t** %dst.addr, align 8, !dbg !15492
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %1, i32 0, i32 0, !dbg !15493
  %2 = load %struct._multi_option_t*, %struct._multi_option_t** %next, align 8, !dbg !15493
  store %struct._multi_option_t* %2, %struct._multi_option_t** %n, align 8, !dbg !15491
  %3 = load %struct._multi_option_t*, %struct._multi_option_t** %dst.addr, align 8, !dbg !15494
  %next1 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %3, i32 0, i32 0, !dbg !15495
  store %struct._multi_option_t* null, %struct._multi_option_t** %next1, align 8, !dbg !15496
  %4 = load %struct._multi_option_t*, %struct._multi_option_t** %dst.addr, align 8, !dbg !15497
  %is_static = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %4, i32 0, i32 1, !dbg !15499
  %5 = load i8, i8* %is_static, align 8, !dbg !15499
  %conv = zext i8 %5 to i32, !dbg !15497
  %cmp = icmp eq i32 %conv, 0, !dbg !15500
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15501

if.then3:                                         ; preds = %if.then
  %6 = load %struct._multi_option_t*, %struct._multi_option_t** %dst.addr, align 8, !dbg !15502
  %data = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %6, i32 0, i32 3, !dbg !15504
  %7 = load i8*, i8** %data, align 8, !dbg !15504
  call void @lwm2m_free(i8* %7), !dbg !15505
  br label %if.end, !dbg !15506

if.end:                                           ; preds = %if.then3, %if.then
  %8 = load %struct._multi_option_t*, %struct._multi_option_t** %dst.addr, align 8, !dbg !15507
  %9 = bitcast %struct._multi_option_t* %8 to i8*, !dbg !15507
  call void @lwm2m_free(i8* %9), !dbg !15508
  %10 = load %struct._multi_option_t*, %struct._multi_option_t** %n, align 8, !dbg !15509
  call void @free_multi_option(%struct._multi_option_t* %10), !dbg !15510
  br label %if.end4, !dbg !15511

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !15512
}

; Function Attrs: noinline nounwind uwtable
define i8* @coap_get_multi_option_as_string(%struct._multi_option_t* %option) #0 !dbg !15513 {
entry:
  %option.addr = alloca %struct._multi_option_t*, align 8
  %len = alloca i64, align 8
  %opt = alloca %struct._multi_option_t*, align 8
  %output = alloca i8*, align 8
  %i = alloca i64, align 8
  store %struct._multi_option_t* %option, %struct._multi_option_t** %option.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %option.addr, metadata !15516, metadata !1190), !dbg !15517
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15518, metadata !1190), !dbg !15519
  store i64 0, i64* %len, align 8, !dbg !15519
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %opt, metadata !15520, metadata !1190), !dbg !15521
  call void @llvm.dbg.declare(metadata i8** %output, metadata !15522, metadata !1190), !dbg !15523
  %0 = load %struct._multi_option_t*, %struct._multi_option_t** %option.addr, align 8, !dbg !15524
  store %struct._multi_option_t* %0, %struct._multi_option_t** %opt, align 8, !dbg !15526
  br label %for.cond, !dbg !15527

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15528
  %cmp = icmp ne %struct._multi_option_t* %1, null, !dbg !15530
  br i1 %cmp, label %for.body, label %for.end, !dbg !15531

for.body:                                         ; preds = %for.cond
  %2 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15532
  %len1 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %2, i32 0, i32 2, !dbg !15534
  %3 = load i8, i8* %len1, align 1, !dbg !15534
  %conv = zext i8 %3 to i32, !dbg !15532
  %add = add nsw i32 %conv, 1, !dbg !15535
  %conv2 = sext i32 %add to i64, !dbg !15532
  %4 = load i64, i64* %len, align 8, !dbg !15536
  %add3 = add i64 %4, %conv2, !dbg !15536
  store i64 %add3, i64* %len, align 8, !dbg !15536
  br label %for.inc, !dbg !15537

for.inc:                                          ; preds = %for.body
  %5 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15538
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %5, i32 0, i32 0, !dbg !15539
  %6 = load %struct._multi_option_t*, %struct._multi_option_t** %next, align 8, !dbg !15539
  store %struct._multi_option_t* %6, %struct._multi_option_t** %opt, align 8, !dbg !15540
  br label %for.cond, !dbg !15541, !llvm.loop !15542

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %len, align 8, !dbg !15544
  %add4 = add i64 %7, 1, !dbg !15545
  %call = call i8* @lwm2m_malloc(i64 %add4), !dbg !15546
  store i8* %call, i8** %output, align 8, !dbg !15547
  %8 = load i8*, i8** %output, align 8, !dbg !15548
  %cmp5 = icmp ne i8* %8, null, !dbg !15550
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15551

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15552, metadata !1190), !dbg !15554
  store i64 0, i64* %i, align 8, !dbg !15554
  %9 = load %struct._multi_option_t*, %struct._multi_option_t** %option.addr, align 8, !dbg !15555
  store %struct._multi_option_t* %9, %struct._multi_option_t** %opt, align 8, !dbg !15557
  br label %for.cond7, !dbg !15558

for.cond7:                                        ; preds = %for.inc17, %if.then
  %10 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15559
  %cmp8 = icmp ne %struct._multi_option_t* %10, null, !dbg !15561
  br i1 %cmp8, label %for.body10, label %for.end19, !dbg !15562

for.body10:                                       ; preds = %for.cond7
  %11 = load i8*, i8** %output, align 8, !dbg !15563
  %12 = load i64, i64* %i, align 8, !dbg !15565
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !15563
  store i8 47, i8* %arrayidx, align 1, !dbg !15566
  %13 = load i64, i64* %i, align 8, !dbg !15567
  %add11 = add i64 %13, 1, !dbg !15567
  store i64 %add11, i64* %i, align 8, !dbg !15567
  %14 = load i8*, i8** %output, align 8, !dbg !15568
  %15 = load i64, i64* %i, align 8, !dbg !15569
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !15570
  %16 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15571
  %data = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %16, i32 0, i32 3, !dbg !15572
  %17 = load i8*, i8** %data, align 8, !dbg !15572
  %18 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15573
  %len12 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %18, i32 0, i32 2, !dbg !15574
  %19 = load i8, i8* %len12, align 1, !dbg !15574
  %conv13 = zext i8 %19 to i64, !dbg !15573
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr, i8* %17, i64 %conv13, i32 1, i1 false), !dbg !15575
  %20 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15576
  %len14 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %20, i32 0, i32 2, !dbg !15577
  %21 = load i8, i8* %len14, align 1, !dbg !15577
  %conv15 = zext i8 %21 to i64, !dbg !15576
  %22 = load i64, i64* %i, align 8, !dbg !15578
  %add16 = add i64 %22, %conv15, !dbg !15578
  store i64 %add16, i64* %i, align 8, !dbg !15578
  br label %for.inc17, !dbg !15579

for.inc17:                                        ; preds = %for.body10
  %23 = load %struct._multi_option_t*, %struct._multi_option_t** %opt, align 8, !dbg !15580
  %next18 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %23, i32 0, i32 0, !dbg !15581
  %24 = load %struct._multi_option_t*, %struct._multi_option_t** %next18, align 8, !dbg !15581
  store %struct._multi_option_t* %24, %struct._multi_option_t** %opt, align 8, !dbg !15582
  br label %for.cond7, !dbg !15583, !llvm.loop !15584

for.end19:                                        ; preds = %for.cond7
  %25 = load i8*, i8** %output, align 8, !dbg !15586
  %26 = load i64, i64* %i, align 8, !dbg !15587
  %arrayidx20 = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !15586
  store i8 0, i8* %arrayidx20, align 1, !dbg !15588
  br label %if.end, !dbg !15589

if.end:                                           ; preds = %for.end19, %for.end
  %27 = load i8*, i8** %output, align 8, !dbg !15590
  ret i8* %27, !dbg !15591
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @coap_get_mid() #0 !dbg !15592 {
entry:
  %0 = load i16, i16* @current_mid, align 2, !dbg !15595
  %inc = add i16 %0, 1, !dbg !15595
  store i16 %inc, i16* @current_mid, align 2, !dbg !15595
  ret i16 %inc, !dbg !15596
}

; Function Attrs: noinline nounwind uwtable
define void @coap_init_message(i8* %packet, i32 %type, i8 zeroext %code, i16 zeroext %mid) #0 !dbg !15597 {
entry:
  %packet.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i8, align 1
  %mid.addr = alloca i16, align 2
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !15600, metadata !1190), !dbg !15601
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15602, metadata !1190), !dbg !15603
  store i8 %code, i8* %code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %code.addr, metadata !15604, metadata !1190), !dbg !15605
  store i16 %mid, i16* %mid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid.addr, metadata !15606, metadata !1190), !dbg !15607
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !15608, metadata !1190), !dbg !15610
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !15611
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !15612
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15610
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15613
  %3 = bitcast %struct.coap_packet_t* %2 to i8*, !dbg !15614
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 208, i32 8, i1 false), !dbg !15614
  %4 = load i32, i32* %type.addr, align 4, !dbg !15615
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15616
  %type1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 2, !dbg !15617
  store i32 %4, i32* %type1, align 4, !dbg !15618
  %6 = load i8, i8* %code.addr, align 1, !dbg !15619
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15620
  %code2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 3, !dbg !15621
  store i8 %6, i8* %code2, align 8, !dbg !15622
  %8 = load i16, i16* %mid.addr, align 2, !dbg !15623
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15624
  %mid3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 4, !dbg !15625
  store i16 %8, i16* %mid3, align 2, !dbg !15626
  ret void, !dbg !15627
}

; Function Attrs: noinline nounwind uwtable
define void @coap_free_header(i8* %packet) #0 !dbg !15628 {
entry:
  %packet.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !15631, metadata !1190), !dbg !15632
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !15633, metadata !1190), !dbg !15634
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !15635
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !15636
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15634
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15637
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 18, !dbg !15638
  %3 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_path, align 8, !dbg !15638
  call void @free_multi_option(%struct._multi_option_t* %3), !dbg !15639
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15640
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 35, !dbg !15641
  %5 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_query, align 8, !dbg !15641
  call void @free_multi_option(%struct._multi_option_t* %5), !dbg !15642
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15643
  %location_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 14, !dbg !15644
  %7 = load %struct._multi_option_t*, %struct._multi_option_t** %location_path, align 8, !dbg !15644
  call void @free_multi_option(%struct._multi_option_t* %7), !dbg !15645
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15646
  %uri_path1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 18, !dbg !15647
  store %struct._multi_option_t* null, %struct._multi_option_t** %uri_path1, align 8, !dbg !15648
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15649
  %uri_query2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 35, !dbg !15650
  store %struct._multi_option_t* null, %struct._multi_option_t** %uri_query2, align 8, !dbg !15651
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15652
  %location_path3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 14, !dbg !15653
  store %struct._multi_option_t* null, %struct._multi_option_t** %location_path3, align 8, !dbg !15654
  ret void, !dbg !15655
}

; Function Attrs: noinline nounwind uwtable
define i64 @coap_serialize_get_size(i8* %packet) #0 !dbg !15656 {
entry:
  %packet.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %length = alloca i64, align 8
  %optP = alloca %struct._multi_option_t*, align 8
  %optP85 = alloca %struct._multi_option_t*, align 8
  %optP127 = alloca %struct._multi_option_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !15659, metadata !1190), !dbg !15660
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !15661, metadata !1190), !dbg !15662
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !15663
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !15664
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15662
  call void @llvm.dbg.declare(metadata i64* %length, metadata !15665, metadata !1190), !dbg !15666
  store i64 0, i64* %length, align 8, !dbg !15666
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15667
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 37, !dbg !15668
  %3 = load i16, i16* %payload_len, align 2, !dbg !15668
  %conv = zext i16 %3 to i32, !dbg !15667
  %add = add nsw i32 4, %conv, !dbg !15669
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15670
  %token_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 20, !dbg !15671
  %5 = load i8, i8* %token_len, align 4, !dbg !15671
  %conv1 = zext i8 %5 to i32, !dbg !15670
  %add2 = add nsw i32 %add, %conv1, !dbg !15672
  %conv3 = sext i32 %add2 to i64, !dbg !15673
  store i64 %conv3, i64* %length, align 8, !dbg !15674
  br i1 true, label %cond.true, label %cond.false, !dbg !15675

cond.true:                                        ; preds = %entry
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15676
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 5, !dbg !15676
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !15676
  %7 = load i8, i8* %arrayidx, align 4, !dbg !15676
  %conv4 = zext i8 %7 to i32, !dbg !15676
  %and = and i32 %conv4, 2, !dbg !15676
  %tobool = icmp ne i32 %and, 0, !dbg !15676
  br i1 %tobool, label %if.then, label %if.end, !dbg !15676

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end, !dbg !15675

if.then:                                          ; preds = %cond.false, %cond.true
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15678
  %if_match_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 24, !dbg !15680
  %9 = load i8, i8* %if_match_len, align 2, !dbg !15680
  %conv5 = zext i8 %9 to i32, !dbg !15678
  %add6 = add nsw i32 5, %conv5, !dbg !15681
  %conv7 = sext i32 %add6 to i64, !dbg !15682
  %10 = load i64, i64* %length, align 8, !dbg !15683
  %add8 = add i64 %10, %conv7, !dbg !15683
  store i64 %add8, i64* %length, align 8, !dbg !15683
  br label %if.end, !dbg !15684

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  br i1 true, label %cond.true9, label %cond.false15, !dbg !15685

cond.true9:                                       ; preds = %if.end
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15686
  %options10 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 5, !dbg !15686
  %arrayidx11 = getelementptr inbounds [5 x i8], [5 x i8]* %options10, i64 0, i64 0, !dbg !15686
  %12 = load i8, i8* %arrayidx11, align 4, !dbg !15686
  %conv12 = zext i8 %12 to i32, !dbg !15686
  %and13 = and i32 %conv12, 8, !dbg !15686
  %tobool14 = icmp ne i32 %and13, 0, !dbg !15686
  br i1 %tobool14, label %if.then16, label %if.end19, !dbg !15686

cond.false15:                                     ; preds = %if.end
  br i1 false, label %if.then16, label %if.end19, !dbg !15685

if.then16:                                        ; preds = %cond.false15, %cond.true9
  %13 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15688
  %uri_host_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %13, i32 0, i32 12, !dbg !15690
  %14 = load i64, i64* %uri_host_len, align 8, !dbg !15690
  %add17 = add i64 5, %14, !dbg !15691
  %15 = load i64, i64* %length, align 8, !dbg !15692
  %add18 = add i64 %15, %add17, !dbg !15692
  store i64 %add18, i64* %length, align 8, !dbg !15692
  br label %if.end19, !dbg !15693

if.end19:                                         ; preds = %if.then16, %cond.false15, %cond.true9
  br i1 true, label %cond.true20, label %cond.false26, !dbg !15694

cond.true20:                                      ; preds = %if.end19
  %16 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15695
  %options21 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %16, i32 0, i32 5, !dbg !15695
  %arrayidx22 = getelementptr inbounds [5 x i8], [5 x i8]* %options21, i64 0, i64 0, !dbg !15695
  %17 = load i8, i8* %arrayidx22, align 4, !dbg !15695
  %conv23 = zext i8 %17 to i32, !dbg !15695
  %and24 = and i32 %conv23, 16, !dbg !15695
  %tobool25 = icmp ne i32 %and24, 0, !dbg !15695
  br i1 %tobool25, label %if.then27, label %if.end32, !dbg !15695

cond.false26:                                     ; preds = %if.end19
  br i1 false, label %if.then27, label %if.end32, !dbg !15694

if.then27:                                        ; preds = %cond.false26, %cond.true20
  %18 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15697
  %etag_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %18, i32 0, i32 10, !dbg !15699
  %19 = load i8, i8* %etag_len, align 8, !dbg !15699
  %conv28 = zext i8 %19 to i32, !dbg !15697
  %add29 = add nsw i32 5, %conv28, !dbg !15700
  %conv30 = sext i32 %add29 to i64, !dbg !15701
  %20 = load i64, i64* %length, align 8, !dbg !15702
  %add31 = add i64 %20, %conv30, !dbg !15702
  store i64 %add31, i64* %length, align 8, !dbg !15702
  br label %if.end32, !dbg !15703

if.end32:                                         ; preds = %if.then27, %cond.false26, %cond.true20
  br i1 true, label %cond.true33, label %cond.false39, !dbg !15704

cond.true33:                                      ; preds = %if.end32
  %21 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15705
  %options34 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %21, i32 0, i32 5, !dbg !15705
  %arrayidx35 = getelementptr inbounds [5 x i8], [5 x i8]* %options34, i64 0, i64 0, !dbg !15705
  %22 = load i8, i8* %arrayidx35, align 4, !dbg !15705
  %conv36 = zext i8 %22 to i32, !dbg !15705
  %and37 = and i32 %conv36, 32, !dbg !15705
  %tobool38 = icmp ne i32 %and37, 0, !dbg !15705
  br i1 %tobool38, label %if.then40, label %if.end42, !dbg !15705

cond.false39:                                     ; preds = %if.end32
  br i1 false, label %if.then40, label %if.end42, !dbg !15704

if.then40:                                        ; preds = %cond.false39, %cond.true33
  %23 = load i64, i64* %length, align 8, !dbg !15707
  %add41 = add i64 %23, 5, !dbg !15707
  store i64 %add41, i64* %length, align 8, !dbg !15707
  br label %if.end42, !dbg !15709

if.end42:                                         ; preds = %if.then40, %cond.false39, %cond.true33
  br i1 true, label %cond.true43, label %cond.false49, !dbg !15710

cond.true43:                                      ; preds = %if.end42
  %24 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15711
  %options44 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %24, i32 0, i32 5, !dbg !15711
  %arrayidx45 = getelementptr inbounds [5 x i8], [5 x i8]* %options44, i64 0, i64 0, !dbg !15711
  %25 = load i8, i8* %arrayidx45, align 4, !dbg !15711
  %conv46 = zext i8 %25 to i32, !dbg !15711
  %and47 = and i32 %conv46, 64, !dbg !15711
  %tobool48 = icmp ne i32 %and47, 0, !dbg !15711
  br i1 %tobool48, label %if.then50, label %if.end52, !dbg !15711

cond.false49:                                     ; preds = %if.end42
  br i1 false, label %if.then50, label %if.end52, !dbg !15710

if.then50:                                        ; preds = %cond.false49, %cond.true43
  %26 = load i64, i64* %length, align 8, !dbg !15713
  %add51 = add i64 %26, 5, !dbg !15713
  store i64 %add51, i64* %length, align 8, !dbg !15713
  br label %if.end52, !dbg !15715

if.end52:                                         ; preds = %if.then50, %cond.false49, %cond.true43
  br i1 true, label %cond.true53, label %cond.false59, !dbg !15716

cond.true53:                                      ; preds = %if.end52
  %27 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15717
  %options54 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %27, i32 0, i32 5, !dbg !15717
  %arrayidx55 = getelementptr inbounds [5 x i8], [5 x i8]* %options54, i64 0, i64 0, !dbg !15717
  %28 = load i8, i8* %arrayidx55, align 4, !dbg !15717
  %conv56 = zext i8 %28 to i32, !dbg !15717
  %and57 = and i32 %conv56, 128, !dbg !15717
  %tobool58 = icmp ne i32 %and57, 0, !dbg !15717
  br i1 %tobool58, label %if.then60, label %if.end62, !dbg !15717

cond.false59:                                     ; preds = %if.end52
  br i1 false, label %if.then60, label %if.end62, !dbg !15716

if.then60:                                        ; preds = %cond.false59, %cond.true53
  %29 = load i64, i64* %length, align 8, !dbg !15719
  %add61 = add i64 %29, 5, !dbg !15719
  store i64 %add61, i64* %length, align 8, !dbg !15719
  br label %if.end62, !dbg !15721

if.end62:                                         ; preds = %if.then60, %cond.false59, %cond.true53
  br i1 true, label %cond.true63, label %cond.false69, !dbg !15722

cond.true63:                                      ; preds = %if.end62
  %30 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15723
  %options64 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %30, i32 0, i32 5, !dbg !15723
  %arrayidx65 = getelementptr inbounds [5 x i8], [5 x i8]* %options64, i64 0, i64 1, !dbg !15723
  %31 = load i8, i8* %arrayidx65, align 1, !dbg !15723
  %conv66 = zext i8 %31 to i32, !dbg !15723
  %and67 = and i32 %conv66, 1, !dbg !15723
  %tobool68 = icmp ne i32 %and67, 0, !dbg !15723
  br i1 %tobool68, label %if.then70, label %if.end76, !dbg !15723

cond.false69:                                     ; preds = %if.end62
  br i1 false, label %if.then70, label %if.end76, !dbg !15722

if.then70:                                        ; preds = %cond.false69, %cond.true63
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %optP, metadata !15725, metadata !1190), !dbg !15727
  %32 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15728
  %location_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %32, i32 0, i32 14, !dbg !15730
  %33 = load %struct._multi_option_t*, %struct._multi_option_t** %location_path, align 8, !dbg !15730
  store %struct._multi_option_t* %33, %struct._multi_option_t** %optP, align 8, !dbg !15731
  br label %for.cond, !dbg !15732

for.cond:                                         ; preds = %for.inc, %if.then70
  %34 = load %struct._multi_option_t*, %struct._multi_option_t** %optP, align 8, !dbg !15733
  %cmp = icmp ne %struct._multi_option_t* %34, null, !dbg !15735
  br i1 %cmp, label %for.body, label %for.end, !dbg !15736

for.body:                                         ; preds = %for.cond
  %35 = load %struct._multi_option_t*, %struct._multi_option_t** %optP, align 8, !dbg !15737
  %len = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %35, i32 0, i32 2, !dbg !15739
  %36 = load i8, i8* %len, align 1, !dbg !15739
  %conv72 = zext i8 %36 to i32, !dbg !15737
  %add73 = add nsw i32 5, %conv72, !dbg !15740
  %conv74 = sext i32 %add73 to i64, !dbg !15741
  %37 = load i64, i64* %length, align 8, !dbg !15742
  %add75 = add i64 %37, %conv74, !dbg !15742
  store i64 %add75, i64* %length, align 8, !dbg !15742
  br label %for.inc, !dbg !15743

for.inc:                                          ; preds = %for.body
  %38 = load %struct._multi_option_t*, %struct._multi_option_t** %optP, align 8, !dbg !15744
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %38, i32 0, i32 0, !dbg !15745
  %39 = load %struct._multi_option_t*, %struct._multi_option_t** %next, align 8, !dbg !15745
  store %struct._multi_option_t* %39, %struct._multi_option_t** %optP, align 8, !dbg !15746
  br label %for.cond, !dbg !15747, !llvm.loop !15748

for.end:                                          ; preds = %for.cond
  br label %if.end76, !dbg !15750

if.end76:                                         ; preds = %for.end, %cond.false69, %cond.true63
  br i1 true, label %cond.true77, label %cond.false83, !dbg !15751

cond.true77:                                      ; preds = %if.end76
  %40 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15752
  %options78 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %40, i32 0, i32 5, !dbg !15752
  %arrayidx79 = getelementptr inbounds [5 x i8], [5 x i8]* %options78, i64 0, i64 1, !dbg !15752
  %41 = load i8, i8* %arrayidx79, align 1, !dbg !15752
  %conv80 = zext i8 %41 to i32, !dbg !15752
  %and81 = and i32 %conv80, 8, !dbg !15752
  %tobool82 = icmp ne i32 %and81, 0, !dbg !15752
  br i1 %tobool82, label %if.then84, label %if.end98, !dbg !15752

cond.false83:                                     ; preds = %if.end76
  br i1 false, label %if.then84, label %if.end98, !dbg !15751

if.then84:                                        ; preds = %cond.false83, %cond.true77
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %optP85, metadata !15754, metadata !1190), !dbg !15756
  %42 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15757
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %42, i32 0, i32 18, !dbg !15759
  %43 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_path, align 8, !dbg !15759
  store %struct._multi_option_t* %43, %struct._multi_option_t** %optP85, align 8, !dbg !15760
  br label %for.cond86, !dbg !15761

for.cond86:                                       ; preds = %for.inc95, %if.then84
  %44 = load %struct._multi_option_t*, %struct._multi_option_t** %optP85, align 8, !dbg !15762
  %cmp87 = icmp ne %struct._multi_option_t* %44, null, !dbg !15764
  br i1 %cmp87, label %for.body89, label %for.end97, !dbg !15765

for.body89:                                       ; preds = %for.cond86
  %45 = load %struct._multi_option_t*, %struct._multi_option_t** %optP85, align 8, !dbg !15766
  %len90 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %45, i32 0, i32 2, !dbg !15768
  %46 = load i8, i8* %len90, align 1, !dbg !15768
  %conv91 = zext i8 %46 to i32, !dbg !15766
  %add92 = add nsw i32 5, %conv91, !dbg !15769
  %conv93 = sext i32 %add92 to i64, !dbg !15770
  %47 = load i64, i64* %length, align 8, !dbg !15771
  %add94 = add i64 %47, %conv93, !dbg !15771
  store i64 %add94, i64* %length, align 8, !dbg !15771
  br label %for.inc95, !dbg !15772

for.inc95:                                        ; preds = %for.body89
  %48 = load %struct._multi_option_t*, %struct._multi_option_t** %optP85, align 8, !dbg !15773
  %next96 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %48, i32 0, i32 0, !dbg !15774
  %49 = load %struct._multi_option_t*, %struct._multi_option_t** %next96, align 8, !dbg !15774
  store %struct._multi_option_t* %49, %struct._multi_option_t** %optP85, align 8, !dbg !15775
  br label %for.cond86, !dbg !15776, !llvm.loop !15777

for.end97:                                        ; preds = %for.cond86
  br label %if.end98, !dbg !15779

if.end98:                                         ; preds = %for.end97, %cond.false83, %cond.true77
  br i1 true, label %cond.true99, label %cond.false105, !dbg !15780

cond.true99:                                      ; preds = %if.end98
  %50 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15781
  %options100 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %50, i32 0, i32 5, !dbg !15781
  %arrayidx101 = getelementptr inbounds [5 x i8], [5 x i8]* %options100, i64 0, i64 1, !dbg !15781
  %51 = load i8, i8* %arrayidx101, align 1, !dbg !15781
  %conv102 = zext i8 %51 to i32, !dbg !15781
  %and103 = and i32 %conv102, 16, !dbg !15781
  %tobool104 = icmp ne i32 %and103, 0, !dbg !15781
  br i1 %tobool104, label %if.then106, label %if.end108, !dbg !15781

cond.false105:                                    ; preds = %if.end98
  br i1 false, label %if.then106, label %if.end108, !dbg !15780

if.then106:                                       ; preds = %cond.false105, %cond.true99
  %52 = load i64, i64* %length, align 8, !dbg !15783
  %add107 = add i64 %52, 5, !dbg !15783
  store i64 %add107, i64* %length, align 8, !dbg !15783
  br label %if.end108, !dbg !15785

if.end108:                                        ; preds = %if.then106, %cond.false105, %cond.true99
  br i1 true, label %cond.true109, label %cond.false115, !dbg !15786

cond.true109:                                     ; preds = %if.end108
  %53 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15787
  %options110 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %53, i32 0, i32 5, !dbg !15787
  %arrayidx111 = getelementptr inbounds [5 x i8], [5 x i8]* %options110, i64 0, i64 1, !dbg !15787
  %54 = load i8, i8* %arrayidx111, align 1, !dbg !15787
  %conv112 = zext i8 %54 to i32, !dbg !15787
  %and113 = and i32 %conv112, 64, !dbg !15787
  %tobool114 = icmp ne i32 %and113, 0, !dbg !15787
  br i1 %tobool114, label %if.then116, label %if.end118, !dbg !15787

cond.false115:                                    ; preds = %if.end108
  br i1 false, label %if.then116, label %if.end118, !dbg !15786

if.then116:                                       ; preds = %cond.false115, %cond.true109
  %55 = load i64, i64* %length, align 8, !dbg !15789
  %add117 = add i64 %55, 5, !dbg !15789
  store i64 %add117, i64* %length, align 8, !dbg !15789
  br label %if.end118, !dbg !15791

if.end118:                                        ; preds = %if.then116, %cond.false115, %cond.true109
  br i1 true, label %cond.true119, label %cond.false125, !dbg !15792

cond.true119:                                     ; preds = %if.end118
  %56 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15793
  %options120 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %56, i32 0, i32 5, !dbg !15793
  %arrayidx121 = getelementptr inbounds [5 x i8], [5 x i8]* %options120, i64 0, i64 1, !dbg !15793
  %57 = load i8, i8* %arrayidx121, align 1, !dbg !15793
  %conv122 = zext i8 %57 to i32, !dbg !15793
  %and123 = and i32 %conv122, 128, !dbg !15793
  %tobool124 = icmp ne i32 %and123, 0, !dbg !15793
  br i1 %tobool124, label %if.then126, label %if.end140, !dbg !15793

cond.false125:                                    ; preds = %if.end118
  br i1 false, label %if.then126, label %if.end140, !dbg !15792

if.then126:                                       ; preds = %cond.false125, %cond.true119
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %optP127, metadata !15795, metadata !1190), !dbg !15797
  %58 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15798
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %58, i32 0, i32 35, !dbg !15800
  %59 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_query, align 8, !dbg !15800
  store %struct._multi_option_t* %59, %struct._multi_option_t** %optP127, align 8, !dbg !15801
  br label %for.cond128, !dbg !15802

for.cond128:                                      ; preds = %for.inc137, %if.then126
  %60 = load %struct._multi_option_t*, %struct._multi_option_t** %optP127, align 8, !dbg !15803
  %cmp129 = icmp ne %struct._multi_option_t* %60, null, !dbg !15805
  br i1 %cmp129, label %for.body131, label %for.end139, !dbg !15806

for.body131:                                      ; preds = %for.cond128
  %61 = load %struct._multi_option_t*, %struct._multi_option_t** %optP127, align 8, !dbg !15807
  %len132 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %61, i32 0, i32 2, !dbg !15809
  %62 = load i8, i8* %len132, align 1, !dbg !15809
  %conv133 = zext i8 %62 to i32, !dbg !15807
  %add134 = add nsw i32 5, %conv133, !dbg !15810
  %conv135 = sext i32 %add134 to i64, !dbg !15811
  %63 = load i64, i64* %length, align 8, !dbg !15812
  %add136 = add i64 %63, %conv135, !dbg !15812
  store i64 %add136, i64* %length, align 8, !dbg !15812
  br label %for.inc137, !dbg !15813

for.inc137:                                       ; preds = %for.body131
  %64 = load %struct._multi_option_t*, %struct._multi_option_t** %optP127, align 8, !dbg !15814
  %next138 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %64, i32 0, i32 0, !dbg !15815
  %65 = load %struct._multi_option_t*, %struct._multi_option_t** %next138, align 8, !dbg !15815
  store %struct._multi_option_t* %65, %struct._multi_option_t** %optP127, align 8, !dbg !15816
  br label %for.cond128, !dbg !15817, !llvm.loop !15818

for.end139:                                       ; preds = %for.cond128
  br label %if.end140, !dbg !15820

if.end140:                                        ; preds = %for.end139, %cond.false125, %cond.true119
  br i1 true, label %cond.true141, label %cond.false147, !dbg !15821

cond.true141:                                     ; preds = %if.end140
  %66 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15822
  %options142 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %66, i32 0, i32 5, !dbg !15822
  %arrayidx143 = getelementptr inbounds [5 x i8], [5 x i8]* %options142, i64 0, i64 2, !dbg !15822
  %67 = load i8, i8* %arrayidx143, align 2, !dbg !15822
  %conv144 = zext i8 %67 to i32, !dbg !15822
  %and145 = and i32 %conv144, 2, !dbg !15822
  %tobool146 = icmp ne i32 %and145, 0, !dbg !15822
  br i1 %tobool146, label %if.then148, label %if.end152, !dbg !15822

cond.false147:                                    ; preds = %if.end140
  br i1 false, label %if.then148, label %if.end152, !dbg !15821

if.then148:                                       ; preds = %cond.false147, %cond.true141
  %68 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15824
  %accept_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %68, i32 0, i32 22, !dbg !15826
  %69 = load i8, i8* %accept_num, align 1, !dbg !15826
  %conv149 = zext i8 %69 to i32, !dbg !15824
  %mul = mul nsw i32 %conv149, 5, !dbg !15827
  %conv150 = sext i32 %mul to i64, !dbg !15824
  %70 = load i64, i64* %length, align 8, !dbg !15828
  %add151 = add i64 %70, %conv150, !dbg !15828
  store i64 %add151, i64* %length, align 8, !dbg !15828
  br label %if.end152, !dbg !15829

if.end152:                                        ; preds = %if.then148, %cond.false147, %cond.true141
  br i1 true, label %cond.true153, label %cond.false159, !dbg !15830

cond.true153:                                     ; preds = %if.end152
  %71 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15831
  %options154 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %71, i32 0, i32 5, !dbg !15831
  %arrayidx155 = getelementptr inbounds [5 x i8], [5 x i8]* %options154, i64 0, i64 2, !dbg !15831
  %72 = load i8, i8* %arrayidx155, align 2, !dbg !15831
  %conv156 = zext i8 %72 to i32, !dbg !15831
  %and157 = and i32 %conv156, 16, !dbg !15831
  %tobool158 = icmp ne i32 %and157, 0, !dbg !15831
  br i1 %tobool158, label %if.then160, label %if.end163, !dbg !15831

cond.false159:                                    ; preds = %if.end152
  br i1 false, label %if.then160, label %if.end163, !dbg !15830

if.then160:                                       ; preds = %cond.false159, %cond.true153
  %73 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15833
  %location_query_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %73, i32 0, i32 16, !dbg !15835
  %74 = load i64, i64* %location_query_len, align 8, !dbg !15835
  %add161 = add i64 5, %74, !dbg !15836
  %75 = load i64, i64* %length, align 8, !dbg !15837
  %add162 = add i64 %75, %add161, !dbg !15837
  store i64 %add162, i64* %length, align 8, !dbg !15837
  br label %if.end163, !dbg !15838

if.end163:                                        ; preds = %if.then160, %cond.false159, %cond.true153
  br i1 true, label %cond.true164, label %cond.false170, !dbg !15839

cond.true164:                                     ; preds = %if.end163
  %76 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15840
  %options165 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %76, i32 0, i32 5, !dbg !15840
  %arrayidx166 = getelementptr inbounds [5 x i8], [5 x i8]* %options165, i64 0, i64 2, !dbg !15840
  %77 = load i8, i8* %arrayidx166, align 2, !dbg !15840
  %conv167 = zext i8 %77 to i32, !dbg !15840
  %and168 = and i32 %conv167, 128, !dbg !15840
  %tobool169 = icmp ne i32 %and168, 0, !dbg !15840
  br i1 %tobool169, label %if.then171, label %if.end173, !dbg !15840

cond.false170:                                    ; preds = %if.end163
  br i1 false, label %if.then171, label %if.end173, !dbg !15839

if.then171:                                       ; preds = %cond.false170, %cond.true164
  %78 = load i64, i64* %length, align 8, !dbg !15842
  %add172 = add i64 %78, 5, !dbg !15842
  store i64 %add172, i64* %length, align 8, !dbg !15842
  br label %if.end173, !dbg !15844

if.end173:                                        ; preds = %if.then171, %cond.false170, %cond.true164
  br i1 true, label %cond.true174, label %cond.false180, !dbg !15845

cond.true174:                                     ; preds = %if.end173
  %79 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15846
  %options175 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %79, i32 0, i32 5, !dbg !15846
  %arrayidx176 = getelementptr inbounds [5 x i8], [5 x i8]* %options175, i64 0, i64 3, !dbg !15846
  %80 = load i8, i8* %arrayidx176, align 1, !dbg !15846
  %conv177 = zext i8 %80 to i32, !dbg !15846
  %and178 = and i32 %conv177, 8, !dbg !15846
  %tobool179 = icmp ne i32 %and178, 0, !dbg !15846
  br i1 %tobool179, label %if.then181, label %if.end183, !dbg !15846

cond.false180:                                    ; preds = %if.end173
  br i1 false, label %if.then181, label %if.end183, !dbg !15845

if.then181:                                       ; preds = %cond.false180, %cond.true174
  %81 = load i64, i64* %length, align 8, !dbg !15848
  %add182 = add i64 %81, 5, !dbg !15848
  store i64 %add182, i64* %length, align 8, !dbg !15848
  br label %if.end183, !dbg !15850

if.end183:                                        ; preds = %if.then181, %cond.false180, %cond.true174
  br i1 true, label %cond.true184, label %cond.false190, !dbg !15851

cond.true184:                                     ; preds = %if.end183
  %82 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15852
  %options185 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %82, i32 0, i32 5, !dbg !15852
  %arrayidx186 = getelementptr inbounds [5 x i8], [5 x i8]* %options185, i64 0, i64 3, !dbg !15852
  %83 = load i8, i8* %arrayidx186, align 1, !dbg !15852
  %conv187 = zext i8 %83 to i32, !dbg !15852
  %and188 = and i32 %conv187, 16, !dbg !15852
  %tobool189 = icmp ne i32 %and188, 0, !dbg !15852
  br i1 %tobool189, label %if.then191, label %if.end193, !dbg !15852

cond.false190:                                    ; preds = %if.end183
  br i1 false, label %if.then191, label %if.end193, !dbg !15851

if.then191:                                       ; preds = %cond.false190, %cond.true184
  %84 = load i64, i64* %length, align 8, !dbg !15854
  %add192 = add i64 %84, 5, !dbg !15854
  store i64 %add192, i64* %length, align 8, !dbg !15854
  br label %if.end193, !dbg !15856

if.end193:                                        ; preds = %if.then191, %cond.false190, %cond.true184
  br i1 true, label %cond.true194, label %cond.false200, !dbg !15857

cond.true194:                                     ; preds = %if.end193
  %85 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15858
  %options195 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %85, i32 0, i32 5, !dbg !15858
  %arrayidx196 = getelementptr inbounds [5 x i8], [5 x i8]* %options195, i64 0, i64 4, !dbg !15858
  %86 = load i8, i8* %arrayidx196, align 4, !dbg !15858
  %conv197 = zext i8 %86 to i32, !dbg !15858
  %and198 = and i32 %conv197, 8, !dbg !15858
  %tobool199 = icmp ne i32 %and198, 0, !dbg !15858
  br i1 %tobool199, label %if.then201, label %if.end204, !dbg !15858

cond.false200:                                    ; preds = %if.end193
  br i1 false, label %if.then201, label %if.end204, !dbg !15857

if.then201:                                       ; preds = %cond.false200, %cond.true194
  %87 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15860
  %proxy_uri_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %87, i32 0, i32 8, !dbg !15862
  %88 = load i64, i64* %proxy_uri_len, align 8, !dbg !15862
  %add202 = add i64 5, %88, !dbg !15863
  %89 = load i64, i64* %length, align 8, !dbg !15864
  %add203 = add i64 %89, %add202, !dbg !15864
  store i64 %add203, i64* %length, align 8, !dbg !15864
  br label %if.end204, !dbg !15865

if.end204:                                        ; preds = %if.then201, %cond.false200, %cond.true194
  %90 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15866
  %payload_len205 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %90, i32 0, i32 37, !dbg !15868
  %91 = load i16, i16* %payload_len205, align 2, !dbg !15868
  %tobool206 = icmp ne i16 %91, 0, !dbg !15866
  br i1 %tobool206, label %if.then207, label %if.end209, !dbg !15869

if.then207:                                       ; preds = %if.end204
  %92 = load i64, i64* %length, align 8, !dbg !15870
  %add208 = add i64 %92, 1, !dbg !15870
  store i64 %add208, i64* %length, align 8, !dbg !15870
  br label %if.end209, !dbg !15872

if.end209:                                        ; preds = %if.then207, %if.end204
  %93 = load i64, i64* %length, align 8, !dbg !15873
  ret i64 %93, !dbg !15874
}

; Function Attrs: noinline nounwind uwtable
define i64 @coap_serialize_message(i8* %packet, i8* %buffer) #0 !dbg !15875 {
entry:
  %packet.addr = alloca i8*, align 8
  %buffer.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %option = alloca i8*, align 8
  %current_number = alloca i32, align 4
  %i = alloca i32, align 4
  %block = alloca i32, align 4
  %block221 = alloca i32, align 4
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !15878, metadata !1190), !dbg !15879
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !15880, metadata !1190), !dbg !15881
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !15882, metadata !1190), !dbg !15883
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !15884
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !15885
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15883
  call void @llvm.dbg.declare(metadata i8** %option, metadata !15886, metadata !1190), !dbg !15887
  call void @llvm.dbg.declare(metadata i32* %current_number, metadata !15888, metadata !1190), !dbg !15889
  store i32 0, i32* %current_number, align 4, !dbg !15889
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !15890
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15891
  %buffer1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 0, !dbg !15892
  store i8* %2, i8** %buffer1, align 8, !dbg !15893
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15894
  %version = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 1, !dbg !15895
  store i8 1, i8* %version, align 8, !dbg !15896
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15897
  %buffer2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 0, !dbg !15898
  %6 = load i8*, i8** %buffer2, align 8, !dbg !15898
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !15897
  store i8 0, i8* %arrayidx, align 1, !dbg !15899
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15900
  %version3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 1, !dbg !15901
  %8 = load i8, i8* %version3, align 8, !dbg !15901
  %conv = zext i8 %8 to i32, !dbg !15902
  %shl = shl i32 %conv, 6, !dbg !15903
  %and = and i32 192, %shl, !dbg !15904
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15905
  %buffer4 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 0, !dbg !15906
  %10 = load i8*, i8** %buffer4, align 8, !dbg !15906
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !15905
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !15907
  %conv6 = zext i8 %11 to i32, !dbg !15907
  %or = or i32 %conv6, %and, !dbg !15907
  %conv7 = trunc i32 %or to i8, !dbg !15907
  store i8 %conv7, i8* %arrayidx5, align 1, !dbg !15907
  %12 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15908
  %type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %12, i32 0, i32 2, !dbg !15909
  %13 = load i32, i32* %type, align 4, !dbg !15909
  %shl8 = shl i32 %13, 4, !dbg !15910
  %and9 = and i32 48, %shl8, !dbg !15911
  %14 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15912
  %buffer10 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %14, i32 0, i32 0, !dbg !15913
  %15 = load i8*, i8** %buffer10, align 8, !dbg !15913
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !15912
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !15914
  %conv12 = zext i8 %16 to i32, !dbg !15914
  %or13 = or i32 %conv12, %and9, !dbg !15914
  %conv14 = trunc i32 %or13 to i8, !dbg !15914
  store i8 %conv14, i8* %arrayidx11, align 1, !dbg !15914
  %17 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15915
  %token_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %17, i32 0, i32 20, !dbg !15916
  %18 = load i8, i8* %token_len, align 4, !dbg !15916
  %conv15 = zext i8 %18 to i32, !dbg !15917
  %shl16 = shl i32 %conv15, 0, !dbg !15918
  %and17 = and i32 15, %shl16, !dbg !15919
  %19 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15920
  %buffer18 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %19, i32 0, i32 0, !dbg !15921
  %20 = load i8*, i8** %buffer18, align 8, !dbg !15921
  %arrayidx19 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !15920
  %21 = load i8, i8* %arrayidx19, align 1, !dbg !15922
  %conv20 = zext i8 %21 to i32, !dbg !15922
  %or21 = or i32 %conv20, %and17, !dbg !15922
  %conv22 = trunc i32 %or21 to i8, !dbg !15922
  store i8 %conv22, i8* %arrayidx19, align 1, !dbg !15922
  %22 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15923
  %code = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %22, i32 0, i32 3, !dbg !15924
  %23 = load i8, i8* %code, align 8, !dbg !15924
  %24 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15925
  %buffer23 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %24, i32 0, i32 0, !dbg !15926
  %25 = load i8*, i8** %buffer23, align 8, !dbg !15926
  %arrayidx24 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !15925
  store i8 %23, i8* %arrayidx24, align 1, !dbg !15927
  %26 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15928
  %mid = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %26, i32 0, i32 4, !dbg !15929
  %27 = load i16, i16* %mid, align 2, !dbg !15929
  %conv25 = zext i16 %27 to i32, !dbg !15930
  %shr = ashr i32 %conv25, 8, !dbg !15931
  %conv26 = trunc i32 %shr to i8, !dbg !15932
  %28 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15933
  %buffer27 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %28, i32 0, i32 0, !dbg !15934
  %29 = load i8*, i8** %buffer27, align 8, !dbg !15934
  %arrayidx28 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !15933
  store i8 %conv26, i8* %arrayidx28, align 1, !dbg !15935
  %30 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15936
  %mid29 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %30, i32 0, i32 4, !dbg !15937
  %31 = load i16, i16* %mid29, align 2, !dbg !15937
  %conv30 = trunc i16 %31 to i8, !dbg !15938
  %32 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15939
  %buffer31 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %32, i32 0, i32 0, !dbg !15940
  %33 = load i8*, i8** %buffer31, align 8, !dbg !15940
  %arrayidx32 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !15939
  store i8 %conv30, i8* %arrayidx32, align 1, !dbg !15941
  %34 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15942
  %buffer33 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %34, i32 0, i32 0, !dbg !15943
  %35 = load i8*, i8** %buffer33, align 8, !dbg !15943
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 4, !dbg !15944
  store i8* %add.ptr, i8** %option, align 8, !dbg !15945
  store i32 0, i32* %current_number, align 4, !dbg !15946
  br label %for.cond, !dbg !15948

for.cond:                                         ; preds = %for.inc, %entry
  %36 = load i32, i32* %current_number, align 4, !dbg !15949
  %37 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15951
  %token_len34 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %37, i32 0, i32 20, !dbg !15952
  %38 = load i8, i8* %token_len34, align 4, !dbg !15952
  %conv35 = zext i8 %38 to i32, !dbg !15951
  %cmp = icmp ult i32 %36, %conv35, !dbg !15953
  br i1 %cmp, label %for.body, label %for.end, !dbg !15954

for.body:                                         ; preds = %for.cond
  %39 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15955
  %token = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %39, i32 0, i32 21, !dbg !15957
  %40 = load i32, i32* %current_number, align 4, !dbg !15958
  %idxprom = zext i32 %40 to i64, !dbg !15955
  %arrayidx37 = getelementptr inbounds [8 x i8], [8 x i8]* %token, i64 0, i64 %idxprom, !dbg !15955
  %41 = load i8, i8* %arrayidx37, align 1, !dbg !15955
  %42 = load i8*, i8** %option, align 8, !dbg !15959
  store i8 %41, i8* %42, align 1, !dbg !15960
  %43 = load i8*, i8** %option, align 8, !dbg !15961
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1, !dbg !15961
  store i8* %incdec.ptr, i8** %option, align 8, !dbg !15961
  br label %for.inc, !dbg !15962

for.inc:                                          ; preds = %for.body
  %44 = load i32, i32* %current_number, align 4, !dbg !15963
  %inc = add i32 %44, 1, !dbg !15963
  store i32 %inc, i32* %current_number, align 4, !dbg !15963
  br label %for.cond, !dbg !15964, !llvm.loop !15965

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %current_number, align 4, !dbg !15967
  br i1 true, label %cond.true, label %cond.false, !dbg !15968

cond.true:                                        ; preds = %for.end
  %45 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15969
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %45, i32 0, i32 5, !dbg !15969
  %arrayidx38 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !15969
  %46 = load i8, i8* %arrayidx38, align 4, !dbg !15969
  %conv39 = zext i8 %46 to i32, !dbg !15969
  %and40 = and i32 %conv39, 2, !dbg !15969
  %tobool = icmp ne i32 %and40, 0, !dbg !15969
  br i1 %tobool, label %if.then, label %if.end, !dbg !15969

cond.false:                                       ; preds = %for.end
  br i1 false, label %if.then, label %if.end, !dbg !15968

if.then:                                          ; preds = %cond.false, %cond.true
  %47 = load i32, i32* %current_number, align 4, !dbg !15971
  %48 = load i8*, i8** %option, align 8, !dbg !15971
  %49 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15971
  %if_match = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %49, i32 0, i32 25, !dbg !15971
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %if_match, i32 0, i32 0, !dbg !15971
  %50 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15971
  %if_match_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %50, i32 0, i32 24, !dbg !15971
  %51 = load i8, i8* %if_match_len, align 2, !dbg !15971
  %conv41 = zext i8 %51 to i64, !dbg !15971
  %call = call i64 @coap_serialize_array_option(i32 1, i32 %47, i8* %48, i8* %arraydecay, i64 %conv41, i8 signext 0), !dbg !15971
  %52 = load i8*, i8** %option, align 8, !dbg !15971
  %add.ptr42 = getelementptr inbounds i8, i8* %52, i64 %call, !dbg !15971
  store i8* %add.ptr42, i8** %option, align 8, !dbg !15971
  store i32 1, i32* %current_number, align 4, !dbg !15971
  br label %if.end, !dbg !15971

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  br i1 true, label %cond.true43, label %cond.false49, !dbg !15973

cond.true43:                                      ; preds = %if.end
  %53 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15974
  %options44 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %53, i32 0, i32 5, !dbg !15974
  %arrayidx45 = getelementptr inbounds [5 x i8], [5 x i8]* %options44, i64 0, i64 0, !dbg !15974
  %54 = load i8, i8* %arrayidx45, align 4, !dbg !15974
  %conv46 = zext i8 %54 to i32, !dbg !15974
  %and47 = and i32 %conv46, 8, !dbg !15974
  %tobool48 = icmp ne i32 %and47, 0, !dbg !15974
  br i1 %tobool48, label %if.then50, label %if.end53, !dbg !15974

cond.false49:                                     ; preds = %if.end
  br i1 false, label %if.then50, label %if.end53, !dbg !15973

if.then50:                                        ; preds = %cond.false49, %cond.true43
  %55 = load i32, i32* %current_number, align 4, !dbg !15976
  %56 = load i8*, i8** %option, align 8, !dbg !15976
  %57 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15976
  %uri_host = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %57, i32 0, i32 13, !dbg !15976
  %58 = load i8*, i8** %uri_host, align 8, !dbg !15976
  %59 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15976
  %uri_host_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %59, i32 0, i32 12, !dbg !15976
  %60 = load i64, i64* %uri_host_len, align 8, !dbg !15976
  %call51 = call i64 @coap_serialize_array_option(i32 3, i32 %55, i8* %56, i8* %58, i64 %60, i8 signext 0), !dbg !15976
  %61 = load i8*, i8** %option, align 8, !dbg !15976
  %add.ptr52 = getelementptr inbounds i8, i8* %61, i64 %call51, !dbg !15976
  store i8* %add.ptr52, i8** %option, align 8, !dbg !15976
  store i32 3, i32* %current_number, align 4, !dbg !15976
  br label %if.end53, !dbg !15976

if.end53:                                         ; preds = %if.then50, %cond.false49, %cond.true43
  br i1 true, label %cond.true54, label %cond.false60, !dbg !15978

cond.true54:                                      ; preds = %if.end53
  %62 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15979
  %options55 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %62, i32 0, i32 5, !dbg !15979
  %arrayidx56 = getelementptr inbounds [5 x i8], [5 x i8]* %options55, i64 0, i64 0, !dbg !15979
  %63 = load i8, i8* %arrayidx56, align 4, !dbg !15979
  %conv57 = zext i8 %63 to i32, !dbg !15979
  %and58 = and i32 %conv57, 16, !dbg !15979
  %tobool59 = icmp ne i32 %and58, 0, !dbg !15979
  br i1 %tobool59, label %if.then61, label %if.end66, !dbg !15979

cond.false60:                                     ; preds = %if.end53
  br i1 false, label %if.then61, label %if.end66, !dbg !15978

if.then61:                                        ; preds = %cond.false60, %cond.true54
  %64 = load i32, i32* %current_number, align 4, !dbg !15981
  %65 = load i8*, i8** %option, align 8, !dbg !15981
  %66 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15981
  %etag = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %66, i32 0, i32 11, !dbg !15981
  %arraydecay62 = getelementptr inbounds [8 x i8], [8 x i8]* %etag, i32 0, i32 0, !dbg !15981
  %67 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15981
  %etag_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %67, i32 0, i32 10, !dbg !15981
  %68 = load i8, i8* %etag_len, align 8, !dbg !15981
  %conv63 = zext i8 %68 to i64, !dbg !15981
  %call64 = call i64 @coap_serialize_array_option(i32 4, i32 %64, i8* %65, i8* %arraydecay62, i64 %conv63, i8 signext 0), !dbg !15981
  %69 = load i8*, i8** %option, align 8, !dbg !15981
  %add.ptr65 = getelementptr inbounds i8, i8* %69, i64 %call64, !dbg !15981
  store i8* %add.ptr65, i8** %option, align 8, !dbg !15981
  store i32 4, i32* %current_number, align 4, !dbg !15981
  br label %if.end66, !dbg !15981

if.end66:                                         ; preds = %if.then61, %cond.false60, %cond.true54
  br i1 true, label %cond.true67, label %cond.false73, !dbg !15983

cond.true67:                                      ; preds = %if.end66
  %70 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15984
  %options68 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %70, i32 0, i32 5, !dbg !15984
  %arrayidx69 = getelementptr inbounds [5 x i8], [5 x i8]* %options68, i64 0, i64 0, !dbg !15984
  %71 = load i8, i8* %arrayidx69, align 4, !dbg !15984
  %conv70 = zext i8 %71 to i32, !dbg !15984
  %and71 = and i32 %conv70, 32, !dbg !15984
  %tobool72 = icmp ne i32 %and71, 0, !dbg !15984
  br i1 %tobool72, label %if.then74, label %if.end78, !dbg !15984

cond.false73:                                     ; preds = %if.end66
  br i1 false, label %if.then74, label %if.end78, !dbg !15983

if.then74:                                        ; preds = %cond.false73, %cond.true67
  %72 = load i32, i32* %current_number, align 4, !dbg !15986
  %73 = load i8*, i8** %option, align 8, !dbg !15986
  %74 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15986
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %74, i32 0, i32 6, !dbg !15986
  %75 = load i32, i32* %content_type, align 4, !dbg !15986
  %76 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15986
  %content_type75 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %76, i32 0, i32 6, !dbg !15986
  %77 = load i32, i32* %content_type75, align 4, !dbg !15986
  %sub = sub i32 %75, %77, !dbg !15986
  %call76 = call i64 @coap_serialize_int_option(i32 5, i32 %72, i8* %73, i32 %sub), !dbg !15986
  %78 = load i8*, i8** %option, align 8, !dbg !15986
  %add.ptr77 = getelementptr inbounds i8, i8* %78, i64 %call76, !dbg !15986
  store i8* %add.ptr77, i8** %option, align 8, !dbg !15986
  store i32 5, i32* %current_number, align 4, !dbg !15986
  br label %if.end78, !dbg !15986

if.end78:                                         ; preds = %if.then74, %cond.false73, %cond.true67
  br i1 true, label %cond.true79, label %cond.false85, !dbg !15988

cond.true79:                                      ; preds = %if.end78
  %79 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15989
  %options80 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %79, i32 0, i32 5, !dbg !15989
  %arrayidx81 = getelementptr inbounds [5 x i8], [5 x i8]* %options80, i64 0, i64 0, !dbg !15989
  %80 = load i8, i8* %arrayidx81, align 4, !dbg !15989
  %conv82 = zext i8 %80 to i32, !dbg !15989
  %and83 = and i32 %conv82, 64, !dbg !15989
  %tobool84 = icmp ne i32 %and83, 0, !dbg !15989
  br i1 %tobool84, label %if.then86, label %if.end89, !dbg !15989

cond.false85:                                     ; preds = %if.end78
  br i1 false, label %if.then86, label %if.end89, !dbg !15988

if.then86:                                        ; preds = %cond.false85, %cond.true79
  %81 = load i32, i32* %current_number, align 4, !dbg !15991
  %82 = load i8*, i8** %option, align 8, !dbg !15991
  %83 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15991
  %observe = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %83, i32 0, i32 19, !dbg !15991
  %84 = load i32, i32* %observe, align 8, !dbg !15991
  %call87 = call i64 @coap_serialize_int_option(i32 6, i32 %81, i8* %82, i32 %84), !dbg !15991
  %85 = load i8*, i8** %option, align 8, !dbg !15991
  %add.ptr88 = getelementptr inbounds i8, i8* %85, i64 %call87, !dbg !15991
  store i8* %add.ptr88, i8** %option, align 8, !dbg !15991
  store i32 6, i32* %current_number, align 4, !dbg !15991
  br label %if.end89, !dbg !15991

if.end89:                                         ; preds = %if.then86, %cond.false85, %cond.true79
  br i1 true, label %cond.true90, label %cond.false96, !dbg !15993

cond.true90:                                      ; preds = %if.end89
  %86 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15994
  %options91 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %86, i32 0, i32 5, !dbg !15994
  %arrayidx92 = getelementptr inbounds [5 x i8], [5 x i8]* %options91, i64 0, i64 0, !dbg !15994
  %87 = load i8, i8* %arrayidx92, align 4, !dbg !15994
  %conv93 = zext i8 %87 to i32, !dbg !15994
  %and94 = and i32 %conv93, 128, !dbg !15994
  %tobool95 = icmp ne i32 %and94, 0, !dbg !15994
  br i1 %tobool95, label %if.then97, label %if.end101, !dbg !15994

cond.false96:                                     ; preds = %if.end89
  br i1 false, label %if.then97, label %if.end101, !dbg !15993

if.then97:                                        ; preds = %cond.false96, %cond.true90
  %88 = load i32, i32* %current_number, align 4, !dbg !15996
  %89 = load i8*, i8** %option, align 8, !dbg !15996
  %90 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15996
  %uri_port = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %90, i32 0, i32 15, !dbg !15996
  %91 = load i16, i16* %uri_port, align 8, !dbg !15996
  %conv98 = zext i16 %91 to i32, !dbg !15996
  %call99 = call i64 @coap_serialize_int_option(i32 7, i32 %88, i8* %89, i32 %conv98), !dbg !15996
  %92 = load i8*, i8** %option, align 8, !dbg !15996
  %add.ptr100 = getelementptr inbounds i8, i8* %92, i64 %call99, !dbg !15996
  store i8* %add.ptr100, i8** %option, align 8, !dbg !15996
  store i32 7, i32* %current_number, align 4, !dbg !15996
  br label %if.end101, !dbg !15996

if.end101:                                        ; preds = %if.then97, %cond.false96, %cond.true90
  br i1 true, label %cond.true102, label %cond.false108, !dbg !15998

cond.true102:                                     ; preds = %if.end101
  %93 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !15999
  %options103 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %93, i32 0, i32 5, !dbg !15999
  %arrayidx104 = getelementptr inbounds [5 x i8], [5 x i8]* %options103, i64 0, i64 1, !dbg !15999
  %94 = load i8, i8* %arrayidx104, align 1, !dbg !15999
  %conv105 = zext i8 %94 to i32, !dbg !15999
  %and106 = and i32 %conv105, 1, !dbg !15999
  %tobool107 = icmp ne i32 %and106, 0, !dbg !15999
  br i1 %tobool107, label %if.then109, label %if.end112, !dbg !15999

cond.false108:                                    ; preds = %if.end101
  br i1 false, label %if.then109, label %if.end112, !dbg !15998

if.then109:                                       ; preds = %cond.false108, %cond.true102
  %95 = load i32, i32* %current_number, align 4, !dbg !16001
  %96 = load i8*, i8** %option, align 8, !dbg !16001
  %97 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16001
  %location_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %97, i32 0, i32 14, !dbg !16001
  %98 = load %struct._multi_option_t*, %struct._multi_option_t** %location_path, align 8, !dbg !16001
  %call110 = call i64 @coap_serialize_multi_option(i32 8, i32 %95, i8* %96, %struct._multi_option_t* %98), !dbg !16001
  %99 = load i8*, i8** %option, align 8, !dbg !16001
  %add.ptr111 = getelementptr inbounds i8, i8* %99, i64 %call110, !dbg !16001
  store i8* %add.ptr111, i8** %option, align 8, !dbg !16001
  store i32 8, i32* %current_number, align 4, !dbg !16001
  br label %if.end112, !dbg !16001

if.end112:                                        ; preds = %if.then109, %cond.false108, %cond.true102
  br i1 true, label %cond.true113, label %cond.false119, !dbg !16003

cond.true113:                                     ; preds = %if.end112
  %100 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16004
  %options114 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %100, i32 0, i32 5, !dbg !16004
  %arrayidx115 = getelementptr inbounds [5 x i8], [5 x i8]* %options114, i64 0, i64 1, !dbg !16004
  %101 = load i8, i8* %arrayidx115, align 1, !dbg !16004
  %conv116 = zext i8 %101 to i32, !dbg !16004
  %and117 = and i32 %conv116, 8, !dbg !16004
  %tobool118 = icmp ne i32 %and117, 0, !dbg !16004
  br i1 %tobool118, label %if.then120, label %if.end123, !dbg !16004

cond.false119:                                    ; preds = %if.end112
  br i1 false, label %if.then120, label %if.end123, !dbg !16003

if.then120:                                       ; preds = %cond.false119, %cond.true113
  %102 = load i32, i32* %current_number, align 4, !dbg !16006
  %103 = load i8*, i8** %option, align 8, !dbg !16006
  %104 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16006
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %104, i32 0, i32 18, !dbg !16006
  %105 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_path, align 8, !dbg !16006
  %call121 = call i64 @coap_serialize_multi_option(i32 11, i32 %102, i8* %103, %struct._multi_option_t* %105), !dbg !16006
  %106 = load i8*, i8** %option, align 8, !dbg !16006
  %add.ptr122 = getelementptr inbounds i8, i8* %106, i64 %call121, !dbg !16006
  store i8* %add.ptr122, i8** %option, align 8, !dbg !16006
  store i32 11, i32* %current_number, align 4, !dbg !16006
  br label %if.end123, !dbg !16006

if.end123:                                        ; preds = %if.then120, %cond.false119, %cond.true113
  br i1 true, label %cond.true124, label %cond.false130, !dbg !16008

cond.true124:                                     ; preds = %if.end123
  %107 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16009
  %options125 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %107, i32 0, i32 5, !dbg !16009
  %arrayidx126 = getelementptr inbounds [5 x i8], [5 x i8]* %options125, i64 0, i64 1, !dbg !16009
  %108 = load i8, i8* %arrayidx126, align 1, !dbg !16009
  %conv127 = zext i8 %108 to i32, !dbg !16009
  %and128 = and i32 %conv127, 16, !dbg !16009
  %tobool129 = icmp ne i32 %and128, 0, !dbg !16009
  br i1 %tobool129, label %if.then131, label %if.end135, !dbg !16009

cond.false130:                                    ; preds = %if.end123
  br i1 false, label %if.then131, label %if.end135, !dbg !16008

if.then131:                                       ; preds = %cond.false130, %cond.true124
  %109 = load i32, i32* %current_number, align 4, !dbg !16011
  %110 = load i8*, i8** %option, align 8, !dbg !16011
  %111 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16011
  %content_type132 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %111, i32 0, i32 6, !dbg !16011
  %112 = load i32, i32* %content_type132, align 4, !dbg !16011
  %call133 = call i64 @coap_serialize_int_option(i32 12, i32 %109, i8* %110, i32 %112), !dbg !16011
  %113 = load i8*, i8** %option, align 8, !dbg !16011
  %add.ptr134 = getelementptr inbounds i8, i8* %113, i64 %call133, !dbg !16011
  store i8* %add.ptr134, i8** %option, align 8, !dbg !16011
  store i32 12, i32* %current_number, align 4, !dbg !16011
  br label %if.end135, !dbg !16011

if.end135:                                        ; preds = %if.then131, %cond.false130, %cond.true124
  br i1 true, label %cond.true136, label %cond.false142, !dbg !16013

cond.true136:                                     ; preds = %if.end135
  %114 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16014
  %options137 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %114, i32 0, i32 5, !dbg !16014
  %arrayidx138 = getelementptr inbounds [5 x i8], [5 x i8]* %options137, i64 0, i64 1, !dbg !16014
  %115 = load i8, i8* %arrayidx138, align 1, !dbg !16014
  %conv139 = zext i8 %115 to i32, !dbg !16014
  %and140 = and i32 %conv139, 64, !dbg !16014
  %tobool141 = icmp ne i32 %and140, 0, !dbg !16014
  br i1 %tobool141, label %if.then143, label %if.end146, !dbg !16014

cond.false142:                                    ; preds = %if.end135
  br i1 false, label %if.then143, label %if.end146, !dbg !16013

if.then143:                                       ; preds = %cond.false142, %cond.true136
  %116 = load i32, i32* %current_number, align 4, !dbg !16016
  %117 = load i8*, i8** %option, align 8, !dbg !16016
  %118 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16016
  %max_age = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %118, i32 0, i32 7, !dbg !16016
  %119 = load i32, i32* %max_age, align 8, !dbg !16016
  %call144 = call i64 @coap_serialize_int_option(i32 14, i32 %116, i8* %117, i32 %119), !dbg !16016
  %120 = load i8*, i8** %option, align 8, !dbg !16016
  %add.ptr145 = getelementptr inbounds i8, i8* %120, i64 %call144, !dbg !16016
  store i8* %add.ptr145, i8** %option, align 8, !dbg !16016
  store i32 14, i32* %current_number, align 4, !dbg !16016
  br label %if.end146, !dbg !16016

if.end146:                                        ; preds = %if.then143, %cond.false142, %cond.true136
  br i1 true, label %cond.true147, label %cond.false153, !dbg !16018

cond.true147:                                     ; preds = %if.end146
  %121 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16019
  %options148 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %121, i32 0, i32 5, !dbg !16019
  %arrayidx149 = getelementptr inbounds [5 x i8], [5 x i8]* %options148, i64 0, i64 1, !dbg !16019
  %122 = load i8, i8* %arrayidx149, align 1, !dbg !16019
  %conv150 = zext i8 %122 to i32, !dbg !16019
  %and151 = and i32 %conv150, 128, !dbg !16019
  %tobool152 = icmp ne i32 %and151, 0, !dbg !16019
  br i1 %tobool152, label %if.then154, label %if.end157, !dbg !16019

cond.false153:                                    ; preds = %if.end146
  br i1 false, label %if.then154, label %if.end157, !dbg !16018

if.then154:                                       ; preds = %cond.false153, %cond.true147
  %123 = load i32, i32* %current_number, align 4, !dbg !16021
  %124 = load i8*, i8** %option, align 8, !dbg !16021
  %125 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16021
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %125, i32 0, i32 35, !dbg !16021
  %126 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_query, align 8, !dbg !16021
  %call155 = call i64 @coap_serialize_multi_option(i32 15, i32 %123, i8* %124, %struct._multi_option_t* %126), !dbg !16021
  %127 = load i8*, i8** %option, align 8, !dbg !16021
  %add.ptr156 = getelementptr inbounds i8, i8* %127, i64 %call155, !dbg !16021
  store i8* %add.ptr156, i8** %option, align 8, !dbg !16021
  store i32 15, i32* %current_number, align 4, !dbg !16021
  br label %if.end157, !dbg !16021

if.end157:                                        ; preds = %if.then154, %cond.false153, %cond.true147
  br i1 true, label %cond.true158, label %cond.false164, !dbg !16023

cond.true158:                                     ; preds = %if.end157
  %128 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16024
  %options159 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %128, i32 0, i32 5, !dbg !16024
  %arrayidx160 = getelementptr inbounds [5 x i8], [5 x i8]* %options159, i64 0, i64 2, !dbg !16024
  %129 = load i8, i8* %arrayidx160, align 2, !dbg !16024
  %conv161 = zext i8 %129 to i32, !dbg !16024
  %and162 = and i32 %conv161, 2, !dbg !16024
  %tobool163 = icmp ne i32 %and162, 0, !dbg !16024
  br i1 %tobool163, label %if.then165, label %if.end179, !dbg !16024

cond.false164:                                    ; preds = %if.end157
  br i1 false, label %if.then165, label %if.end179, !dbg !16023

if.then165:                                       ; preds = %cond.false164, %cond.true158
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16026, metadata !1190), !dbg !16028
  store i32 0, i32* %i, align 4, !dbg !16029
  br label %for.cond166, !dbg !16029

for.cond166:                                      ; preds = %for.inc176, %if.then165
  %130 = load i32, i32* %i, align 4, !dbg !16031
  %131 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16031
  %accept_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %131, i32 0, i32 22, !dbg !16031
  %132 = load i8, i8* %accept_num, align 1, !dbg !16031
  %conv167 = zext i8 %132 to i32, !dbg !16031
  %cmp168 = icmp slt i32 %130, %conv167, !dbg !16031
  br i1 %cmp168, label %for.body170, label %for.end178, !dbg !16029

for.body170:                                      ; preds = %for.cond166
  %133 = load i32, i32* %current_number, align 4, !dbg !16033
  %134 = load i8*, i8** %option, align 8, !dbg !16033
  %135 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16033
  %accept = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %135, i32 0, i32 23, !dbg !16033
  %136 = load i32, i32* %i, align 4, !dbg !16033
  %idxprom171 = sext i32 %136 to i64, !dbg !16033
  %arrayidx172 = getelementptr inbounds [2 x i16], [2 x i16]* %accept, i64 0, i64 %idxprom171, !dbg !16033
  %137 = load i16, i16* %arrayidx172, align 2, !dbg !16033
  %conv173 = zext i16 %137 to i32, !dbg !16033
  %call174 = call i64 @coap_serialize_int_option(i32 17, i32 %133, i8* %134, i32 %conv173), !dbg !16033
  %138 = load i8*, i8** %option, align 8, !dbg !16033
  %add.ptr175 = getelementptr inbounds i8, i8* %138, i64 %call174, !dbg !16033
  store i8* %add.ptr175, i8** %option, align 8, !dbg !16033
  store i32 17, i32* %current_number, align 4, !dbg !16033
  br label %for.inc176, !dbg !16033

for.inc176:                                       ; preds = %for.body170
  %139 = load i32, i32* %i, align 4, !dbg !16031
  %inc177 = add nsw i32 %139, 1, !dbg !16031
  store i32 %inc177, i32* %i, align 4, !dbg !16031
  br label %for.cond166, !dbg !16031, !llvm.loop !16035

for.end178:                                       ; preds = %for.cond166
  br label %if.end179, !dbg !16028

if.end179:                                        ; preds = %for.end178, %cond.false164, %cond.true158
  br i1 true, label %cond.true180, label %cond.false186, !dbg !16036

cond.true180:                                     ; preds = %if.end179
  %140 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16037
  %options181 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %140, i32 0, i32 5, !dbg !16037
  %arrayidx182 = getelementptr inbounds [5 x i8], [5 x i8]* %options181, i64 0, i64 2, !dbg !16037
  %141 = load i8, i8* %arrayidx182, align 2, !dbg !16037
  %conv183 = zext i8 %141 to i32, !dbg !16037
  %and184 = and i32 %conv183, 16, !dbg !16037
  %tobool185 = icmp ne i32 %and184, 0, !dbg !16037
  br i1 %tobool185, label %if.then187, label %if.end190, !dbg !16037

cond.false186:                                    ; preds = %if.end179
  br i1 false, label %if.then187, label %if.end190, !dbg !16036

if.then187:                                       ; preds = %cond.false186, %cond.true180
  %142 = load i32, i32* %current_number, align 4, !dbg !16039
  %143 = load i8*, i8** %option, align 8, !dbg !16039
  %144 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16039
  %location_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %144, i32 0, i32 17, !dbg !16039
  %145 = load i8*, i8** %location_query, align 8, !dbg !16039
  %146 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16039
  %location_query_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %146, i32 0, i32 16, !dbg !16039
  %147 = load i64, i64* %location_query_len, align 8, !dbg !16039
  %call188 = call i64 @coap_serialize_array_option(i32 20, i32 %142, i8* %143, i8* %145, i64 %147, i8 signext 38), !dbg !16039
  %148 = load i8*, i8** %option, align 8, !dbg !16039
  %add.ptr189 = getelementptr inbounds i8, i8* %148, i64 %call188, !dbg !16039
  store i8* %add.ptr189, i8** %option, align 8, !dbg !16039
  store i32 20, i32* %current_number, align 4, !dbg !16039
  br label %if.end190, !dbg !16039

if.end190:                                        ; preds = %if.then187, %cond.false186, %cond.true180
  br i1 true, label %cond.true191, label %cond.false197, !dbg !16041

cond.true191:                                     ; preds = %if.end190
  %149 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16042
  %options192 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %149, i32 0, i32 5, !dbg !16042
  %arrayidx193 = getelementptr inbounds [5 x i8], [5 x i8]* %options192, i64 0, i64 2, !dbg !16042
  %150 = load i8, i8* %arrayidx193, align 2, !dbg !16042
  %conv194 = zext i8 %150 to i32, !dbg !16042
  %and195 = and i32 %conv194, 128, !dbg !16042
  %tobool196 = icmp ne i32 %and195, 0, !dbg !16042
  br i1 %tobool196, label %if.then198, label %if.end212, !dbg !16042

cond.false197:                                    ; preds = %if.end190
  br i1 false, label %if.then198, label %if.end212, !dbg !16041

if.then198:                                       ; preds = %cond.false197, %cond.true191
  call void @llvm.dbg.declare(metadata i32* %block, metadata !16044, metadata !1190), !dbg !16046
  %151 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16046
  %block2_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %151, i32 0, i32 26, !dbg !16046
  %152 = load i32, i32* %block2_num, align 4, !dbg !16046
  %shl199 = shl i32 %152, 4, !dbg !16046
  store i32 %shl199, i32* %block, align 4, !dbg !16046
  %153 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16047
  %block2_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %153, i32 0, i32 27, !dbg !16047
  %154 = load i8, i8* %block2_more, align 8, !dbg !16047
  %tobool200 = icmp ne i8 %154, 0, !dbg !16047
  br i1 %tobool200, label %if.then201, label %if.end203, !dbg !16046

if.then201:                                       ; preds = %if.then198
  %155 = load i32, i32* %block, align 4, !dbg !16047
  %or202 = or i32 %155, 8, !dbg !16047
  store i32 %or202, i32* %block, align 4, !dbg !16047
  br label %if.end203, !dbg !16047

if.end203:                                        ; preds = %if.then201, %if.then198
  %156 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16046
  %block2_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %156, i32 0, i32 28, !dbg !16046
  %157 = load i16, i16* %block2_size, align 2, !dbg !16046
  %conv204 = zext i16 %157 to i32, !dbg !16046
  %div = sdiv i32 %conv204, 16, !dbg !16046
  %conv205 = trunc i32 %div to i16, !dbg !16046
  %call206 = call zeroext i16 @coap_log_2(i16 zeroext %conv205), !dbg !16046
  %conv207 = zext i16 %call206 to i32, !dbg !16046
  %and208 = and i32 15, %conv207, !dbg !16046
  %158 = load i32, i32* %block, align 4, !dbg !16046
  %or209 = or i32 %158, %and208, !dbg !16046
  store i32 %or209, i32* %block, align 4, !dbg !16046
  %159 = load i32, i32* %current_number, align 4, !dbg !16046
  %160 = load i8*, i8** %option, align 8, !dbg !16046
  %161 = load i32, i32* %block, align 4, !dbg !16046
  %call210 = call i64 @coap_serialize_int_option(i32 23, i32 %159, i8* %160, i32 %161), !dbg !16046
  %162 = load i8*, i8** %option, align 8, !dbg !16046
  %add.ptr211 = getelementptr inbounds i8, i8* %162, i64 %call210, !dbg !16046
  store i8* %add.ptr211, i8** %option, align 8, !dbg !16046
  store i32 23, i32* %current_number, align 4, !dbg !16046
  br label %if.end212, !dbg !16046

if.end212:                                        ; preds = %if.end203, %cond.false197, %cond.true191
  br i1 true, label %cond.true213, label %cond.false219, !dbg !16049

cond.true213:                                     ; preds = %if.end212
  %163 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16050
  %options214 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %163, i32 0, i32 5, !dbg !16050
  %arrayidx215 = getelementptr inbounds [5 x i8], [5 x i8]* %options214, i64 0, i64 3, !dbg !16050
  %164 = load i8, i8* %arrayidx215, align 1, !dbg !16050
  %conv216 = zext i8 %164 to i32, !dbg !16050
  %and217 = and i32 %conv216, 8, !dbg !16050
  %tobool218 = icmp ne i32 %and217, 0, !dbg !16050
  br i1 %tobool218, label %if.then220, label %if.end236, !dbg !16050

cond.false219:                                    ; preds = %if.end212
  br i1 false, label %if.then220, label %if.end236, !dbg !16049

if.then220:                                       ; preds = %cond.false219, %cond.true213
  call void @llvm.dbg.declare(metadata i32* %block221, metadata !16052, metadata !1190), !dbg !16054
  %165 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16054
  %block1_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %165, i32 0, i32 30, !dbg !16054
  %166 = load i32, i32* %block1_num, align 8, !dbg !16054
  %shl222 = shl i32 %166, 4, !dbg !16054
  store i32 %shl222, i32* %block221, align 4, !dbg !16054
  %167 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16055
  %block1_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %167, i32 0, i32 31, !dbg !16055
  %168 = load i8, i8* %block1_more, align 4, !dbg !16055
  %tobool223 = icmp ne i8 %168, 0, !dbg !16055
  br i1 %tobool223, label %if.then224, label %if.end226, !dbg !16054

if.then224:                                       ; preds = %if.then220
  %169 = load i32, i32* %block221, align 4, !dbg !16055
  %or225 = or i32 %169, 8, !dbg !16055
  store i32 %or225, i32* %block221, align 4, !dbg !16055
  br label %if.end226, !dbg !16055

if.end226:                                        ; preds = %if.then224, %if.then220
  %170 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16054
  %block1_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %170, i32 0, i32 32, !dbg !16054
  %171 = load i16, i16* %block1_size, align 2, !dbg !16054
  %conv227 = zext i16 %171 to i32, !dbg !16054
  %div228 = sdiv i32 %conv227, 16, !dbg !16054
  %conv229 = trunc i32 %div228 to i16, !dbg !16054
  %call230 = call zeroext i16 @coap_log_2(i16 zeroext %conv229), !dbg !16054
  %conv231 = zext i16 %call230 to i32, !dbg !16054
  %and232 = and i32 15, %conv231, !dbg !16054
  %172 = load i32, i32* %block221, align 4, !dbg !16054
  %or233 = or i32 %172, %and232, !dbg !16054
  store i32 %or233, i32* %block221, align 4, !dbg !16054
  %173 = load i32, i32* %current_number, align 4, !dbg !16054
  %174 = load i8*, i8** %option, align 8, !dbg !16054
  %175 = load i32, i32* %block221, align 4, !dbg !16054
  %call234 = call i64 @coap_serialize_int_option(i32 27, i32 %173, i8* %174, i32 %175), !dbg !16054
  %176 = load i8*, i8** %option, align 8, !dbg !16054
  %add.ptr235 = getelementptr inbounds i8, i8* %176, i64 %call234, !dbg !16054
  store i8* %add.ptr235, i8** %option, align 8, !dbg !16054
  store i32 27, i32* %current_number, align 4, !dbg !16054
  br label %if.end236, !dbg !16054

if.end236:                                        ; preds = %if.end226, %cond.false219, %cond.true213
  br i1 true, label %cond.true237, label %cond.false243, !dbg !16057

cond.true237:                                     ; preds = %if.end236
  %177 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16058
  %options238 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %177, i32 0, i32 5, !dbg !16058
  %arrayidx239 = getelementptr inbounds [5 x i8], [5 x i8]* %options238, i64 0, i64 3, !dbg !16058
  %178 = load i8, i8* %arrayidx239, align 1, !dbg !16058
  %conv240 = zext i8 %178 to i32, !dbg !16058
  %and241 = and i32 %conv240, 16, !dbg !16058
  %tobool242 = icmp ne i32 %and241, 0, !dbg !16058
  br i1 %tobool242, label %if.then244, label %if.end247, !dbg !16058

cond.false243:                                    ; preds = %if.end236
  br i1 false, label %if.then244, label %if.end247, !dbg !16057

if.then244:                                       ; preds = %cond.false243, %cond.true237
  %179 = load i32, i32* %current_number, align 4, !dbg !16060
  %180 = load i8*, i8** %option, align 8, !dbg !16060
  %181 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16060
  %size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %181, i32 0, i32 34, !dbg !16060
  %182 = load i32, i32* %size, align 4, !dbg !16060
  %call245 = call i64 @coap_serialize_int_option(i32 28, i32 %179, i8* %180, i32 %182), !dbg !16060
  %183 = load i8*, i8** %option, align 8, !dbg !16060
  %add.ptr246 = getelementptr inbounds i8, i8* %183, i64 %call245, !dbg !16060
  store i8* %add.ptr246, i8** %option, align 8, !dbg !16060
  store i32 28, i32* %current_number, align 4, !dbg !16060
  br label %if.end247, !dbg !16060

if.end247:                                        ; preds = %if.then244, %cond.false243, %cond.true237
  br i1 true, label %cond.true248, label %cond.false254, !dbg !16062

cond.true248:                                     ; preds = %if.end247
  %184 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16063
  %options249 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %184, i32 0, i32 5, !dbg !16063
  %arrayidx250 = getelementptr inbounds [5 x i8], [5 x i8]* %options249, i64 0, i64 4, !dbg !16063
  %185 = load i8, i8* %arrayidx250, align 4, !dbg !16063
  %conv251 = zext i8 %185 to i32, !dbg !16063
  %and252 = and i32 %conv251, 8, !dbg !16063
  %tobool253 = icmp ne i32 %and252, 0, !dbg !16063
  br i1 %tobool253, label %if.then255, label %if.end258, !dbg !16063

cond.false254:                                    ; preds = %if.end247
  br i1 false, label %if.then255, label %if.end258, !dbg !16062

if.then255:                                       ; preds = %cond.false254, %cond.true248
  %186 = load i32, i32* %current_number, align 4, !dbg !16065
  %187 = load i8*, i8** %option, align 8, !dbg !16065
  %188 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16065
  %proxy_uri = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %188, i32 0, i32 9, !dbg !16065
  %189 = load i8*, i8** %proxy_uri, align 8, !dbg !16065
  %190 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16065
  %proxy_uri_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %190, i32 0, i32 8, !dbg !16065
  %191 = load i64, i64* %proxy_uri_len, align 8, !dbg !16065
  %call256 = call i64 @coap_serialize_array_option(i32 35, i32 %186, i8* %187, i8* %189, i64 %191, i8 signext 0), !dbg !16065
  %192 = load i8*, i8** %option, align 8, !dbg !16065
  %add.ptr257 = getelementptr inbounds i8, i8* %192, i64 %call256, !dbg !16065
  store i8* %add.ptr257, i8** %option, align 8, !dbg !16065
  store i32 35, i32* %current_number, align 4, !dbg !16065
  br label %if.end258, !dbg !16065

if.end258:                                        ; preds = %if.then255, %cond.false254, %cond.true248
  %193 = load i8*, i8** %packet.addr, align 8, !dbg !16067
  call void @coap_free_header(i8* %193), !dbg !16068
  %194 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16069
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %194, i32 0, i32 37, !dbg !16071
  %195 = load i16, i16* %payload_len, align 2, !dbg !16071
  %tobool259 = icmp ne i16 %195, 0, !dbg !16069
  br i1 %tobool259, label %if.then260, label %if.end262, !dbg !16072

if.then260:                                       ; preds = %if.end258
  %196 = load i8*, i8** %option, align 8, !dbg !16073
  store i8 -1, i8* %196, align 1, !dbg !16075
  %197 = load i8*, i8** %option, align 8, !dbg !16076
  %incdec.ptr261 = getelementptr inbounds i8, i8* %197, i32 1, !dbg !16076
  store i8* %incdec.ptr261, i8** %option, align 8, !dbg !16076
  br label %if.end262, !dbg !16077

if.end262:                                        ; preds = %if.then260, %if.end258
  %198 = load i8*, i8** %option, align 8, !dbg !16078
  %199 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16079
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %199, i32 0, i32 38, !dbg !16080
  %200 = load i8*, i8** %payload, align 8, !dbg !16080
  %201 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16081
  %payload_len263 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %201, i32 0, i32 37, !dbg !16082
  %202 = load i16, i16* %payload_len263, align 2, !dbg !16082
  %conv264 = zext i16 %202 to i64, !dbg !16081
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %198, i8* %200, i64 %conv264, i32 1, i1 false), !dbg !16083
  %203 = load i8*, i8** %option, align 8, !dbg !16084
  %204 = load i8*, i8** %buffer.addr, align 8, !dbg !16085
  %sub.ptr.lhs.cast = ptrtoint i8* %203 to i64, !dbg !16086
  %sub.ptr.rhs.cast = ptrtoint i8* %204 to i64, !dbg !16086
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16086
  %205 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16087
  %payload_len265 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %205, i32 0, i32 37, !dbg !16088
  %206 = load i16, i16* %payload_len265, align 2, !dbg !16088
  %conv266 = zext i16 %206 to i64, !dbg !16087
  %add = add nsw i64 %sub.ptr.sub, %conv266, !dbg !16089
  ret i64 %add, !dbg !16090
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @coap_serialize_array_option(i32 %number, i32 %current_number, i8* %buffer, i8* %array, i64 %length, i8 signext %split_char) #0 !dbg !16091 {
entry:
  %number.addr = alloca i32, align 4
  %current_number.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %array.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %split_char.addr = alloca i8, align 1
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %part_start = alloca i8*, align 8
  %part_end = alloca i8*, align 8
  %temp_length = alloca i64, align 8
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !16094, metadata !1190), !dbg !16095
  store i32 %current_number, i32* %current_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %current_number.addr, metadata !16096, metadata !1190), !dbg !16097
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16098, metadata !1190), !dbg !16099
  store i8* %array, i8** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %array.addr, metadata !16100, metadata !1190), !dbg !16101
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !16102, metadata !1190), !dbg !16103
  store i8 %split_char, i8* %split_char.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %split_char.addr, metadata !16104, metadata !1190), !dbg !16105
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16106, metadata !1190), !dbg !16107
  store i64 0, i64* %i, align 8, !dbg !16107
  %0 = load i8, i8* %split_char.addr, align 1, !dbg !16108
  %conv = sext i8 %0 to i32, !dbg !16108
  %cmp = icmp ne i32 %conv, 0, !dbg !16110
  br i1 %cmp, label %if.then, label %if.else, !dbg !16111

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %j, metadata !16112, metadata !1190), !dbg !16114
  call void @llvm.dbg.declare(metadata i8** %part_start, metadata !16115, metadata !1190), !dbg !16116
  %1 = load i8*, i8** %array.addr, align 8, !dbg !16117
  store i8* %1, i8** %part_start, align 8, !dbg !16116
  call void @llvm.dbg.declare(metadata i8** %part_end, metadata !16118, metadata !1190), !dbg !16119
  store i8* null, i8** %part_end, align 8, !dbg !16119
  call void @llvm.dbg.declare(metadata i64* %temp_length, metadata !16120, metadata !1190), !dbg !16121
  store i64 0, i64* %j, align 8, !dbg !16122
  br label %for.cond, !dbg !16124

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i64, i64* %j, align 8, !dbg !16125
  %3 = load i64, i64* %length.addr, align 8, !dbg !16127
  %cmp2 = icmp ule i64 %2, %3, !dbg !16128
  br i1 %cmp2, label %for.body, label %for.end, !dbg !16129

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %array.addr, align 8, !dbg !16130
  %5 = load i64, i64* %j, align 8, !dbg !16133
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16130
  %6 = load i8, i8* %arrayidx, align 1, !dbg !16130
  %conv4 = zext i8 %6 to i32, !dbg !16130
  %7 = load i8, i8* %split_char.addr, align 1, !dbg !16134
  %conv5 = sext i8 %7 to i32, !dbg !16134
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !16135
  br i1 %cmp6, label %if.then10, label %lor.lhs.false, !dbg !16136

lor.lhs.false:                                    ; preds = %for.body
  %8 = load i64, i64* %j, align 8, !dbg !16137
  %9 = load i64, i64* %length.addr, align 8, !dbg !16138
  %cmp8 = icmp eq i64 %8, %9, !dbg !16139
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !16140

if.then10:                                        ; preds = %lor.lhs.false, %for.body
  %10 = load i8*, i8** %array.addr, align 8, !dbg !16141
  %11 = load i64, i64* %j, align 8, !dbg !16143
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !16144
  store i8* %add.ptr, i8** %part_end, align 8, !dbg !16145
  %12 = load i8*, i8** %part_end, align 8, !dbg !16146
  %13 = load i8*, i8** %part_start, align 8, !dbg !16147
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !16148
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !16148
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16148
  store i64 %sub.ptr.sub, i64* %temp_length, align 8, !dbg !16149
  %14 = load i32, i32* %number.addr, align 4, !dbg !16150
  %15 = load i32, i32* %current_number.addr, align 4, !dbg !16151
  %sub = sub i32 %14, %15, !dbg !16152
  %16 = load i64, i64* %temp_length, align 8, !dbg !16153
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !16154
  %18 = load i64, i64* %i, align 8, !dbg !16155
  %arrayidx11 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !16154
  %call = call i64 @coap_set_option_header(i32 %sub, i64 %16, i8* %arrayidx11), !dbg !16156
  %19 = load i64, i64* %i, align 8, !dbg !16157
  %add = add i64 %19, %call, !dbg !16157
  store i64 %add, i64* %i, align 8, !dbg !16157
  %20 = load i8*, i8** %buffer.addr, align 8, !dbg !16158
  %21 = load i64, i64* %i, align 8, !dbg !16159
  %arrayidx12 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !16158
  %22 = load i8*, i8** %part_start, align 8, !dbg !16160
  %23 = load i64, i64* %temp_length, align 8, !dbg !16161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx12, i8* %22, i64 %23, i32 1, i1 false), !dbg !16162
  %24 = load i64, i64* %temp_length, align 8, !dbg !16163
  %25 = load i64, i64* %i, align 8, !dbg !16164
  %add13 = add i64 %25, %24, !dbg !16164
  store i64 %add13, i64* %i, align 8, !dbg !16164
  %26 = load i64, i64* %j, align 8, !dbg !16165
  %inc = add i64 %26, 1, !dbg !16165
  store i64 %inc, i64* %j, align 8, !dbg !16165
  %27 = load i32, i32* %number.addr, align 4, !dbg !16166
  store i32 %27, i32* %current_number.addr, align 4, !dbg !16167
  %28 = load i8*, i8** %array.addr, align 8, !dbg !16168
  %29 = load i64, i64* %j, align 8, !dbg !16169
  %add.ptr14 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !16170
  store i8* %add.ptr14, i8** %part_start, align 8, !dbg !16171
  br label %if.end, !dbg !16172

if.end:                                           ; preds = %if.then10, %lor.lhs.false
  br label %for.inc, !dbg !16173

for.inc:                                          ; preds = %if.end
  %30 = load i64, i64* %j, align 8, !dbg !16174
  %inc15 = add i64 %30, 1, !dbg !16174
  store i64 %inc15, i64* %j, align 8, !dbg !16174
  br label %for.cond, !dbg !16175, !llvm.loop !16176

for.end:                                          ; preds = %for.cond
  br label %if.end22, !dbg !16178

if.else:                                          ; preds = %entry
  %31 = load i32, i32* %number.addr, align 4, !dbg !16179
  %32 = load i32, i32* %current_number.addr, align 4, !dbg !16181
  %sub16 = sub i32 %31, %32, !dbg !16182
  %33 = load i64, i64* %length.addr, align 8, !dbg !16183
  %34 = load i8*, i8** %buffer.addr, align 8, !dbg !16184
  %35 = load i64, i64* %i, align 8, !dbg !16185
  %arrayidx17 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !16184
  %call18 = call i64 @coap_set_option_header(i32 %sub16, i64 %33, i8* %arrayidx17), !dbg !16186
  %36 = load i64, i64* %i, align 8, !dbg !16187
  %add19 = add i64 %36, %call18, !dbg !16187
  store i64 %add19, i64* %i, align 8, !dbg !16187
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !16188
  %38 = load i64, i64* %i, align 8, !dbg !16189
  %arrayidx20 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !16188
  %39 = load i8*, i8** %array.addr, align 8, !dbg !16190
  %40 = load i64, i64* %length.addr, align 8, !dbg !16191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx20, i8* %39, i64 %40, i32 1, i1 false), !dbg !16192
  %41 = load i64, i64* %length.addr, align 8, !dbg !16193
  %42 = load i64, i64* %i, align 8, !dbg !16194
  %add21 = add i64 %42, %41, !dbg !16194
  store i64 %add21, i64* %i, align 8, !dbg !16194
  br label %if.end22

if.end22:                                         ; preds = %if.else, %for.end
  %43 = load i64, i64* %i, align 8, !dbg !16195
  ret i64 %43, !dbg !16196
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @coap_serialize_int_option(i32 %number, i32 %current_number, i8* %buffer, i32 %value) #0 !dbg !16197 {
entry:
  %number.addr = alloca i32, align 4
  %current_number.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %i = alloca i64, align 8
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !16200, metadata !1190), !dbg !16201
  store i32 %current_number, i32* %current_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %current_number.addr, metadata !16202, metadata !1190), !dbg !16203
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16204, metadata !1190), !dbg !16205
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !16206, metadata !1190), !dbg !16207
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16208, metadata !1190), !dbg !16209
  store i64 0, i64* %i, align 8, !dbg !16209
  %0 = load i32, i32* %value.addr, align 4, !dbg !16210
  %and = and i32 -16777216, %0, !dbg !16212
  %tobool = icmp ne i32 %and, 0, !dbg !16212
  br i1 %tobool, label %if.then, label %if.end, !dbg !16213

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %i, align 8, !dbg !16214
  %inc = add i64 %1, 1, !dbg !16214
  store i64 %inc, i64* %i, align 8, !dbg !16214
  br label %if.end, !dbg !16214

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !16215
  %and1 = and i32 -65536, %2, !dbg !16217
  %tobool2 = icmp ne i32 %and1, 0, !dbg !16217
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !16218

if.then3:                                         ; preds = %if.end
  %3 = load i64, i64* %i, align 8, !dbg !16219
  %inc4 = add i64 %3, 1, !dbg !16219
  store i64 %inc4, i64* %i, align 8, !dbg !16219
  br label %if.end5, !dbg !16219

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %value.addr, align 4, !dbg !16220
  %and6 = and i32 -256, %4, !dbg !16222
  %tobool7 = icmp ne i32 %and6, 0, !dbg !16222
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !16223

if.then8:                                         ; preds = %if.end5
  %5 = load i64, i64* %i, align 8, !dbg !16224
  %inc9 = add i64 %5, 1, !dbg !16224
  store i64 %inc9, i64* %i, align 8, !dbg !16224
  br label %if.end10, !dbg !16224

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i32, i32* %value.addr, align 4, !dbg !16225
  %and11 = and i32 -1, %6, !dbg !16227
  %tobool12 = icmp ne i32 %and11, 0, !dbg !16227
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !16228

if.then13:                                        ; preds = %if.end10
  %7 = load i64, i64* %i, align 8, !dbg !16229
  %inc14 = add i64 %7, 1, !dbg !16229
  store i64 %inc14, i64* %i, align 8, !dbg !16229
  br label %if.end15, !dbg !16229

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i32, i32* %number.addr, align 4, !dbg !16230
  %9 = load i32, i32* %current_number.addr, align 4, !dbg !16231
  %sub = sub i32 %8, %9, !dbg !16232
  %10 = load i64, i64* %i, align 8, !dbg !16233
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !16234
  %call = call i64 @coap_set_option_header(i32 %sub, i64 %10, i8* %11), !dbg !16235
  store i64 %call, i64* %i, align 8, !dbg !16236
  %12 = load i32, i32* %value.addr, align 4, !dbg !16237
  %and16 = and i32 -16777216, %12, !dbg !16239
  %tobool17 = icmp ne i32 %and16, 0, !dbg !16239
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !16240

if.then18:                                        ; preds = %if.end15
  %13 = load i32, i32* %value.addr, align 4, !dbg !16241
  %shr = lshr i32 %13, 24, !dbg !16242
  %conv = trunc i32 %shr to i8, !dbg !16243
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !16244
  %15 = load i64, i64* %i, align 8, !dbg !16245
  %inc19 = add i64 %15, 1, !dbg !16245
  store i64 %inc19, i64* %i, align 8, !dbg !16245
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !16244
  store i8 %conv, i8* %arrayidx, align 1, !dbg !16246
  br label %if.end20, !dbg !16244

if.end20:                                         ; preds = %if.then18, %if.end15
  %16 = load i32, i32* %value.addr, align 4, !dbg !16247
  %and21 = and i32 -65536, %16, !dbg !16249
  %tobool22 = icmp ne i32 %and21, 0, !dbg !16249
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !16250

if.then23:                                        ; preds = %if.end20
  %17 = load i32, i32* %value.addr, align 4, !dbg !16251
  %shr24 = lshr i32 %17, 16, !dbg !16252
  %conv25 = trunc i32 %shr24 to i8, !dbg !16253
  %18 = load i8*, i8** %buffer.addr, align 8, !dbg !16254
  %19 = load i64, i64* %i, align 8, !dbg !16255
  %inc26 = add i64 %19, 1, !dbg !16255
  store i64 %inc26, i64* %i, align 8, !dbg !16255
  %arrayidx27 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !16254
  store i8 %conv25, i8* %arrayidx27, align 1, !dbg !16256
  br label %if.end28, !dbg !16254

if.end28:                                         ; preds = %if.then23, %if.end20
  %20 = load i32, i32* %value.addr, align 4, !dbg !16257
  %and29 = and i32 -256, %20, !dbg !16259
  %tobool30 = icmp ne i32 %and29, 0, !dbg !16259
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !16260

if.then31:                                        ; preds = %if.end28
  %21 = load i32, i32* %value.addr, align 4, !dbg !16261
  %shr32 = lshr i32 %21, 8, !dbg !16262
  %conv33 = trunc i32 %shr32 to i8, !dbg !16263
  %22 = load i8*, i8** %buffer.addr, align 8, !dbg !16264
  %23 = load i64, i64* %i, align 8, !dbg !16265
  %inc34 = add i64 %23, 1, !dbg !16265
  store i64 %inc34, i64* %i, align 8, !dbg !16265
  %arrayidx35 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !16264
  store i8 %conv33, i8* %arrayidx35, align 1, !dbg !16266
  br label %if.end36, !dbg !16264

if.end36:                                         ; preds = %if.then31, %if.end28
  %24 = load i32, i32* %value.addr, align 4, !dbg !16267
  %and37 = and i32 -1, %24, !dbg !16269
  %tobool38 = icmp ne i32 %and37, 0, !dbg !16269
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !16270

if.then39:                                        ; preds = %if.end36
  %25 = load i32, i32* %value.addr, align 4, !dbg !16271
  %conv40 = trunc i32 %25 to i8, !dbg !16272
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !16273
  %27 = load i64, i64* %i, align 8, !dbg !16274
  %inc41 = add i64 %27, 1, !dbg !16274
  store i64 %inc41, i64* %i, align 8, !dbg !16274
  %arrayidx42 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !16273
  store i8 %conv40, i8* %arrayidx42, align 1, !dbg !16275
  br label %if.end43, !dbg !16273

if.end43:                                         ; preds = %if.then39, %if.end36
  %28 = load i64, i64* %i, align 8, !dbg !16276
  ret i64 %28, !dbg !16277
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @coap_serialize_multi_option(i32 %number, i32 %current_number, i8* %buffer, %struct._multi_option_t* %array) #0 !dbg !16278 {
entry:
  %number.addr = alloca i32, align 4
  %current_number.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %array.addr = alloca %struct._multi_option_t*, align 8
  %i = alloca i64, align 8
  %j = alloca %struct._multi_option_t*, align 8
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !16281, metadata !1190), !dbg !16282
  store i32 %current_number, i32* %current_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %current_number.addr, metadata !16283, metadata !1190), !dbg !16284
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16285, metadata !1190), !dbg !16286
  store %struct._multi_option_t* %array, %struct._multi_option_t** %array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %array.addr, metadata !16287, metadata !1190), !dbg !16288
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16289, metadata !1190), !dbg !16290
  store i64 0, i64* %i, align 8, !dbg !16290
  call void @llvm.dbg.declare(metadata %struct._multi_option_t** %j, metadata !16291, metadata !1190), !dbg !16292
  %0 = load %struct._multi_option_t*, %struct._multi_option_t** %array.addr, align 8, !dbg !16293
  store %struct._multi_option_t* %0, %struct._multi_option_t** %j, align 8, !dbg !16295
  br label %for.cond, !dbg !16296

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct._multi_option_t*, %struct._multi_option_t** %j, align 8, !dbg !16297
  %cmp = icmp ne %struct._multi_option_t* %1, null, !dbg !16299
  br i1 %cmp, label %for.body, label %for.end, !dbg !16300

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %number.addr, align 4, !dbg !16301
  %3 = load i32, i32* %current_number.addr, align 4, !dbg !16303
  %sub = sub i32 %2, %3, !dbg !16304
  %4 = load %struct._multi_option_t*, %struct._multi_option_t** %j, align 8, !dbg !16305
  %len = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %4, i32 0, i32 2, !dbg !16306
  %5 = load i8, i8* %len, align 1, !dbg !16306
  %conv = zext i8 %5 to i64, !dbg !16305
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !16307
  %7 = load i64, i64* %i, align 8, !dbg !16308
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !16307
  %call = call i64 @coap_set_option_header(i32 %sub, i64 %conv, i8* %arrayidx), !dbg !16309
  %8 = load i64, i64* %i, align 8, !dbg !16310
  %add = add i64 %8, %call, !dbg !16310
  store i64 %add, i64* %i, align 8, !dbg !16310
  %9 = load i32, i32* %number.addr, align 4, !dbg !16311
  store i32 %9, i32* %current_number.addr, align 4, !dbg !16312
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !16313
  %11 = load i64, i64* %i, align 8, !dbg !16314
  %arrayidx1 = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !16313
  %12 = load %struct._multi_option_t*, %struct._multi_option_t** %j, align 8, !dbg !16315
  %data = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %12, i32 0, i32 3, !dbg !16316
  %13 = load i8*, i8** %data, align 8, !dbg !16316
  %14 = load %struct._multi_option_t*, %struct._multi_option_t** %j, align 8, !dbg !16317
  %len2 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %14, i32 0, i32 2, !dbg !16318
  %15 = load i8, i8* %len2, align 1, !dbg !16318
  %conv3 = zext i8 %15 to i64, !dbg !16317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx1, i8* %13, i64 %conv3, i32 1, i1 false), !dbg !16319
  %16 = load %struct._multi_option_t*, %struct._multi_option_t** %j, align 8, !dbg !16320
  %len4 = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %16, i32 0, i32 2, !dbg !16321
  %17 = load i8, i8* %len4, align 1, !dbg !16321
  %conv5 = zext i8 %17 to i64, !dbg !16320
  %18 = load i64, i64* %i, align 8, !dbg !16322
  %add6 = add i64 %18, %conv5, !dbg !16322
  store i64 %add6, i64* %i, align 8, !dbg !16322
  br label %for.inc, !dbg !16323

for.inc:                                          ; preds = %for.body
  %19 = load %struct._multi_option_t*, %struct._multi_option_t** %j, align 8, !dbg !16324
  %next = getelementptr inbounds %struct._multi_option_t, %struct._multi_option_t* %19, i32 0, i32 0, !dbg !16325
  %20 = load %struct._multi_option_t*, %struct._multi_option_t** %next, align 8, !dbg !16325
  store %struct._multi_option_t* %20, %struct._multi_option_t** %j, align 8, !dbg !16326
  br label %for.cond, !dbg !16327, !llvm.loop !16328

for.end:                                          ; preds = %for.cond
  %21 = load i64, i64* %i, align 8, !dbg !16330
  ret i64 %21, !dbg !16331
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @coap_log_2(i16 zeroext %value) #0 !dbg !16332 {
entry:
  %value.addr = alloca i16, align 2
  %result = alloca i16, align 2
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !16335, metadata !1190), !dbg !16336
  call void @llvm.dbg.declare(metadata i16* %result, metadata !16337, metadata !1190), !dbg !16338
  store i16 0, i16* %result, align 2, !dbg !16338
  br label %do.body, !dbg !16339, !llvm.loop !16340

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i16, i16* %value.addr, align 2, !dbg !16342
  %conv = zext i16 %0 to i32, !dbg !16342
  %shr = ashr i32 %conv, 1, !dbg !16344
  %conv1 = trunc i32 %shr to i16, !dbg !16342
  store i16 %conv1, i16* %value.addr, align 2, !dbg !16345
  %1 = load i16, i16* %result, align 2, !dbg !16346
  %inc = add i16 %1, 1, !dbg !16346
  store i16 %inc, i16* %result, align 2, !dbg !16346
  br label %do.cond, !dbg !16347

do.cond:                                          ; preds = %do.body
  %2 = load i16, i16* %value.addr, align 2, !dbg !16348
  %tobool = icmp ne i16 %2, 0, !dbg !16347
  br i1 %tobool, label %do.body, label %do.end, !dbg !16347, !llvm.loop !16340

do.end:                                           ; preds = %do.cond
  %3 = load i16, i16* %result, align 2, !dbg !16349
  %conv2 = zext i16 %3 to i32, !dbg !16349
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !16349
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !16349

cond.true:                                        ; preds = %do.end
  %4 = load i16, i16* %result, align 2, !dbg !16350
  %conv4 = zext i16 %4 to i32, !dbg !16350
  %sub = sub nsw i32 %conv4, 1, !dbg !16351
  br label %cond.end, !dbg !16349

cond.false:                                       ; preds = %do.end
  %5 = load i16, i16* %result, align 2, !dbg !16352
  %conv5 = zext i16 %5 to i32, !dbg !16352
  br label %cond.end, !dbg !16349

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %conv5, %cond.false ], !dbg !16349
  %conv6 = trunc i32 %cond to i16, !dbg !16349
  ret i16 %conv6, !dbg !16353
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @coap_set_option_header(i32 %delta, i64 %length, i8* %buffer) #0 !dbg !16354 {
entry:
  %delta.addr = alloca i32, align 4
  %length.addr = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %written = alloca i64, align 8
  %x = alloca i32*, align 8
  store i32 %delta, i32* %delta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delta.addr, metadata !16357, metadata !1190), !dbg !16358
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !16359, metadata !1190), !dbg !16360
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16361, metadata !1190), !dbg !16362
  call void @llvm.dbg.declare(metadata i64* %written, metadata !16363, metadata !1190), !dbg !16364
  store i64 0, i64* %written, align 8, !dbg !16364
  call void @llvm.dbg.declare(metadata i32** %x, metadata !16365, metadata !1190), !dbg !16366
  store i32* %delta.addr, i32** %x, align 8, !dbg !16366
  %0 = load i32, i32* %delta.addr, align 4, !dbg !16367
  %call = call zeroext i8 @coap_option_nibble(i32 %0), !dbg !16368
  %conv = zext i8 %call to i32, !dbg !16368
  %shl = shl i32 %conv, 4, !dbg !16369
  %1 = load i64, i64* %length.addr, align 8, !dbg !16370
  %conv1 = trunc i64 %1 to i32, !dbg !16370
  %call2 = call zeroext i8 @coap_option_nibble(i32 %conv1), !dbg !16371
  %conv3 = zext i8 %call2 to i32, !dbg !16371
  %or = or i32 %shl, %conv3, !dbg !16372
  %conv4 = trunc i32 %or to i8, !dbg !16368
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !16373
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !16373
  store i8 %conv4, i8* %arrayidx, align 1, !dbg !16374
  br label %do.body, !dbg !16375, !llvm.loop !16376

do.body:                                          ; preds = %land.end, %entry
  %3 = load i32*, i32** %x, align 8, !dbg !16378
  %4 = load i32, i32* %3, align 4, !dbg !16381
  %cmp = icmp ugt i32 %4, 268, !dbg !16382
  br i1 %cmp, label %if.then, label %if.else, !dbg !16383

if.then:                                          ; preds = %do.body
  %5 = load i32*, i32** %x, align 8, !dbg !16384
  %6 = load i32, i32* %5, align 4, !dbg !16386
  %sub = sub i32 %6, 269, !dbg !16387
  %shr = lshr i32 %sub, 8, !dbg !16388
  %conv6 = trunc i32 %shr to i8, !dbg !16389
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !16390
  %8 = load i64, i64* %written, align 8, !dbg !16391
  %inc = add i64 %8, 1, !dbg !16391
  store i64 %inc, i64* %written, align 8, !dbg !16391
  %arrayidx7 = getelementptr inbounds i8, i8* %7, i64 %inc, !dbg !16390
  store i8 %conv6, i8* %arrayidx7, align 1, !dbg !16392
  %9 = load i32*, i32** %x, align 8, !dbg !16393
  %10 = load i32, i32* %9, align 4, !dbg !16394
  %sub8 = sub i32 %10, 269, !dbg !16395
  %conv9 = trunc i32 %sub8 to i8, !dbg !16396
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !16397
  %12 = load i64, i64* %written, align 8, !dbg !16398
  %inc10 = add i64 %12, 1, !dbg !16398
  store i64 %inc10, i64* %written, align 8, !dbg !16398
  %arrayidx11 = getelementptr inbounds i8, i8* %11, i64 %inc10, !dbg !16397
  store i8 %conv9, i8* %arrayidx11, align 1, !dbg !16399
  br label %if.end19, !dbg !16400

if.else:                                          ; preds = %do.body
  %13 = load i32*, i32** %x, align 8, !dbg !16401
  %14 = load i32, i32* %13, align 4, !dbg !16403
  %cmp12 = icmp ugt i32 %14, 12, !dbg !16404
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !16405

if.then14:                                        ; preds = %if.else
  %15 = load i32*, i32** %x, align 8, !dbg !16406
  %16 = load i32, i32* %15, align 4, !dbg !16408
  %sub15 = sub i32 %16, 13, !dbg !16409
  %conv16 = trunc i32 %sub15 to i8, !dbg !16410
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !16411
  %18 = load i64, i64* %written, align 8, !dbg !16412
  %inc17 = add i64 %18, 1, !dbg !16412
  store i64 %inc17, i64* %written, align 8, !dbg !16412
  %arrayidx18 = getelementptr inbounds i8, i8* %17, i64 %inc17, !dbg !16411
  store i8 %conv16, i8* %arrayidx18, align 1, !dbg !16413
  br label %if.end, !dbg !16414

if.end:                                           ; preds = %if.then14, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then
  br label %do.cond, !dbg !16415

do.cond:                                          ; preds = %if.end19
  %19 = load i32*, i32** %x, align 8, !dbg !16416
  %20 = bitcast i64* %length.addr to i32*, !dbg !16417
  %cmp20 = icmp ne i32* %19, %20, !dbg !16418
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !16419

land.rhs:                                         ; preds = %do.cond
  %21 = bitcast i64* %length.addr to i32*, !dbg !16420
  store i32* %21, i32** %x, align 8, !dbg !16421
  %tobool = icmp ne i32* %21, null, !dbg !16419
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %22 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %22, label %do.body, label %do.end, !dbg !16415, !llvm.loop !16376

do.end:                                           ; preds = %land.end
  %23 = load i64, i64* %written, align 8, !dbg !16422
  %inc22 = add i64 %23, 1, !dbg !16422
  store i64 %inc22, i64* %written, align 8, !dbg !16422
  ret i64 %inc22, !dbg !16423
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @coap_option_nibble(i32 %value) #0 !dbg !16424 {
entry:
  %retval = alloca i8, align 1
  %value.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !16427, metadata !1190), !dbg !16428
  %0 = load i32, i32* %value.addr, align 4, !dbg !16429
  %cmp = icmp ult i32 %0, 13, !dbg !16431
  br i1 %cmp, label %if.then, label %if.else, !dbg !16432

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %value.addr, align 4, !dbg !16433
  %conv = trunc i32 %1 to i8, !dbg !16433
  store i8 %conv, i8* %retval, align 1, !dbg !16435
  br label %return, !dbg !16435

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !16436
  %cmp1 = icmp ule i32 %2, 268, !dbg !16438
  br i1 %cmp1, label %if.then3, label %if.else4, !dbg !16439

if.then3:                                         ; preds = %if.else
  store i8 13, i8* %retval, align 1, !dbg !16440
  br label %return, !dbg !16440

if.else4:                                         ; preds = %if.else
  store i8 14, i8* %retval, align 1, !dbg !16442
  br label %return, !dbg !16442

return:                                           ; preds = %if.else4, %if.then3, %if.then
  %3 = load i8, i8* %retval, align 1, !dbg !16444
  ret i8 %3, !dbg !16444
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_parse_message(i8* %packet, i8* %data, i16 zeroext %data_len) #0 !dbg !16445 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i16, align 2
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %current_option = alloca i8*, align 8
  %option_number = alloca i32, align 4
  %option_delta = alloca i32, align 4
  %option_length = alloca i64, align 8
  %x = alloca i32*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !16448, metadata !1190), !dbg !16449
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16450, metadata !1190), !dbg !16451
  store i16 %data_len, i16* %data_len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data_len.addr, metadata !16452, metadata !1190), !dbg !16453
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !16454, metadata !1190), !dbg !16455
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !16456
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !16457
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16455
  call void @llvm.dbg.declare(metadata i8** %current_option, metadata !16458, metadata !1190), !dbg !16459
  call void @llvm.dbg.declare(metadata i32* %option_number, metadata !16460, metadata !1190), !dbg !16461
  store i32 0, i32* %option_number, align 4, !dbg !16461
  call void @llvm.dbg.declare(metadata i32* %option_delta, metadata !16462, metadata !1190), !dbg !16463
  store i32 0, i32* %option_delta, align 4, !dbg !16463
  call void @llvm.dbg.declare(metadata i64* %option_length, metadata !16464, metadata !1190), !dbg !16465
  store i64 0, i64* %option_length, align 8, !dbg !16465
  call void @llvm.dbg.declare(metadata i32** %x, metadata !16466, metadata !1190), !dbg !16467
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16468
  %3 = bitcast %struct.coap_packet_t* %2 to i8*, !dbg !16469
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 208, i32 8, i1 false), !dbg !16469
  %4 = load i8*, i8** %data.addr, align 8, !dbg !16470
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16471
  %buffer = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 0, !dbg !16472
  store i8* %4, i8** %buffer, align 8, !dbg !16473
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16474
  %buffer1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 0, !dbg !16475
  %7 = load i8*, i8** %buffer1, align 8, !dbg !16475
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !16474
  %8 = load i8, i8* %arrayidx, align 1, !dbg !16474
  %conv = zext i8 %8 to i32, !dbg !16474
  %and = and i32 192, %conv, !dbg !16476
  %shr = ashr i32 %and, 6, !dbg !16477
  %conv2 = trunc i32 %shr to i8, !dbg !16478
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16479
  %version = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 1, !dbg !16480
  store i8 %conv2, i8* %version, align 8, !dbg !16481
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16482
  %buffer3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 0, !dbg !16483
  %11 = load i8*, i8** %buffer3, align 8, !dbg !16483
  %arrayidx4 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !16482
  %12 = load i8, i8* %arrayidx4, align 1, !dbg !16482
  %conv5 = zext i8 %12 to i32, !dbg !16482
  %and6 = and i32 48, %conv5, !dbg !16484
  %shr7 = ashr i32 %and6, 4, !dbg !16485
  %13 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16486
  %type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %13, i32 0, i32 2, !dbg !16487
  store i32 %shr7, i32* %type, align 4, !dbg !16488
  %14 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16489
  %buffer8 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %14, i32 0, i32 0, !dbg !16489
  %15 = load i8*, i8** %buffer8, align 8, !dbg !16489
  %arrayidx9 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !16489
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !16489
  %conv10 = zext i8 %16 to i32, !dbg !16489
  %and11 = and i32 15, %conv10, !dbg !16489
  %shr12 = ashr i32 %and11, 0, !dbg !16489
  %cmp = icmp slt i32 8, %shr12, !dbg !16489
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16489

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !16489

cond.false:                                       ; preds = %entry
  %17 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16489
  %buffer14 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %17, i32 0, i32 0, !dbg !16489
  %18 = load i8*, i8** %buffer14, align 8, !dbg !16489
  %arrayidx15 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !16489
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !16489
  %conv16 = zext i8 %19 to i32, !dbg !16489
  %and17 = and i32 15, %conv16, !dbg !16489
  %shr18 = ashr i32 %and17, 0, !dbg !16489
  br label %cond.end, !dbg !16489

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %shr18, %cond.false ], !dbg !16489
  %conv19 = trunc i32 %cond to i8, !dbg !16489
  %20 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16490
  %token_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %20, i32 0, i32 20, !dbg !16491
  store i8 %conv19, i8* %token_len, align 4, !dbg !16492
  %21 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16493
  %buffer20 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %21, i32 0, i32 0, !dbg !16494
  %22 = load i8*, i8** %buffer20, align 8, !dbg !16494
  %arrayidx21 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !16493
  %23 = load i8, i8* %arrayidx21, align 1, !dbg !16493
  %24 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16495
  %code = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %24, i32 0, i32 3, !dbg !16496
  store i8 %23, i8* %code, align 8, !dbg !16497
  %25 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16498
  %buffer22 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %25, i32 0, i32 0, !dbg !16499
  %26 = load i8*, i8** %buffer22, align 8, !dbg !16499
  %arrayidx23 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !16498
  %27 = load i8, i8* %arrayidx23, align 1, !dbg !16498
  %conv24 = zext i8 %27 to i32, !dbg !16498
  %shl = shl i32 %conv24, 8, !dbg !16500
  %28 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16501
  %buffer25 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %28, i32 0, i32 0, !dbg !16502
  %29 = load i8*, i8** %buffer25, align 8, !dbg !16502
  %arrayidx26 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !16501
  %30 = load i8, i8* %arrayidx26, align 1, !dbg !16501
  %conv27 = zext i8 %30 to i32, !dbg !16501
  %or = or i32 %shl, %conv27, !dbg !16503
  %conv28 = trunc i32 %or to i16, !dbg !16498
  %31 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16504
  %mid = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %31, i32 0, i32 4, !dbg !16505
  store i16 %conv28, i16* %mid, align 2, !dbg !16506
  %32 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16507
  %version29 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %32, i32 0, i32 1, !dbg !16509
  %33 = load i8, i8* %version29, align 8, !dbg !16509
  %conv30 = zext i8 %33 to i32, !dbg !16507
  %cmp31 = icmp ne i32 %conv30, 1, !dbg !16510
  br i1 %cmp31, label %if.then, label %if.end, !dbg !16511

if.then:                                          ; preds = %cond.end
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.194, i32 0, i32 0), i8** @coap_error_message, align 8, !dbg !16512
  store i32 128, i32* %retval, align 4, !dbg !16514
  br label %return, !dbg !16514

if.end:                                           ; preds = %cond.end
  %34 = load i8*, i8** %data.addr, align 8, !dbg !16515
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 4, !dbg !16516
  store i8* %add.ptr, i8** %current_option, align 8, !dbg !16517
  %35 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16518
  %token_len33 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %35, i32 0, i32 20, !dbg !16520
  %36 = load i8, i8* %token_len33, align 4, !dbg !16520
  %conv34 = zext i8 %36 to i32, !dbg !16518
  %cmp35 = icmp ne i32 %conv34, 0, !dbg !16521
  br i1 %cmp35, label %if.then37, label %if.end44, !dbg !16522

if.then37:                                        ; preds = %if.end
  %37 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16523
  %token = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %37, i32 0, i32 21, !dbg !16525
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %token, i32 0, i32 0, !dbg !16526
  %38 = load i8*, i8** %current_option, align 8, !dbg !16527
  %39 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16528
  %token_len38 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %39, i32 0, i32 20, !dbg !16529
  %40 = load i8, i8* %token_len38, align 4, !dbg !16529
  %conv39 = zext i8 %40 to i64, !dbg !16528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %38, i64 %conv39, i32 1, i1 false), !dbg !16526
  %41 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16530
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %41, i32 0, i32 5, !dbg !16530
  %arrayidx40 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !16530
  %42 = load i8, i8* %arrayidx40, align 2, !dbg !16530
  %conv41 = zext i8 %42 to i32, !dbg !16530
  %or42 = or i32 %conv41, 8, !dbg !16530
  %conv43 = trunc i32 %or42 to i8, !dbg !16530
  store i8 %conv43, i8* %arrayidx40, align 2, !dbg !16530
  br label %if.end44, !dbg !16534

if.end44:                                         ; preds = %if.then37, %if.end
  %43 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16535
  %token_len45 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %43, i32 0, i32 20, !dbg !16536
  %44 = load i8, i8* %token_len45, align 4, !dbg !16536
  %conv46 = zext i8 %44 to i32, !dbg !16535
  %45 = load i8*, i8** %current_option, align 8, !dbg !16537
  %idx.ext = sext i32 %conv46 to i64, !dbg !16537
  %add.ptr47 = getelementptr inbounds i8, i8* %45, i64 %idx.ext, !dbg !16537
  store i8* %add.ptr47, i8** %current_option, align 8, !dbg !16537
  br label %while.cond, !dbg !16538

while.cond:                                       ; preds = %sw.epilog, %if.end44
  %46 = load i8*, i8** %current_option, align 8, !dbg !16539
  %47 = load i8*, i8** %data.addr, align 8, !dbg !16540
  %48 = load i16, i16* %data_len.addr, align 2, !dbg !16541
  %conv48 = zext i16 %48 to i32, !dbg !16541
  %idx.ext49 = sext i32 %conv48 to i64, !dbg !16542
  %add.ptr50 = getelementptr inbounds i8, i8* %47, i64 %idx.ext49, !dbg !16542
  %cmp51 = icmp ult i8* %46, %add.ptr50, !dbg !16543
  br i1 %cmp51, label %while.body, label %while.end, !dbg !16538

while.body:                                       ; preds = %while.cond
  %49 = load i8*, i8** %current_option, align 8, !dbg !16544
  %arrayidx53 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !16544
  %50 = load i8, i8* %arrayidx53, align 1, !dbg !16544
  %conv54 = zext i8 %50 to i32, !dbg !16544
  %and55 = and i32 %conv54, 240, !dbg !16547
  %cmp56 = icmp eq i32 %and55, 240, !dbg !16548
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !16549

if.then58:                                        ; preds = %while.body
  %51 = load i8*, i8** %current_option, align 8, !dbg !16550
  %incdec.ptr = getelementptr inbounds i8, i8* %51, i32 1, !dbg !16550
  store i8* %incdec.ptr, i8** %current_option, align 8, !dbg !16550
  %52 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16552
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %52, i32 0, i32 38, !dbg !16553
  store i8* %incdec.ptr, i8** %payload, align 8, !dbg !16554
  %53 = load i16, i16* %data_len.addr, align 2, !dbg !16555
  %conv59 = zext i16 %53 to i64, !dbg !16555
  %54 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16556
  %payload60 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %54, i32 0, i32 38, !dbg !16557
  %55 = load i8*, i8** %payload60, align 8, !dbg !16557
  %56 = load i8*, i8** %data.addr, align 8, !dbg !16558
  %sub.ptr.lhs.cast = ptrtoint i8* %55 to i64, !dbg !16559
  %sub.ptr.rhs.cast = ptrtoint i8* %56 to i64, !dbg !16559
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16559
  %sub = sub nsw i64 %conv59, %sub.ptr.sub, !dbg !16560
  %conv61 = trunc i64 %sub to i16, !dbg !16555
  %57 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16561
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %57, i32 0, i32 37, !dbg !16562
  store i16 %conv61, i16* %payload_len, align 2, !dbg !16563
  br label %while.end, !dbg !16564

if.end62:                                         ; preds = %while.body
  %58 = load i8*, i8** %current_option, align 8, !dbg !16565
  %arrayidx63 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !16565
  %59 = load i8, i8* %arrayidx63, align 1, !dbg !16565
  %conv64 = zext i8 %59 to i32, !dbg !16565
  %shr65 = ashr i32 %conv64, 4, !dbg !16566
  store i32 %shr65, i32* %option_delta, align 4, !dbg !16567
  %60 = load i8*, i8** %current_option, align 8, !dbg !16568
  %arrayidx66 = getelementptr inbounds i8, i8* %60, i64 0, !dbg !16568
  %61 = load i8, i8* %arrayidx66, align 1, !dbg !16568
  %conv67 = zext i8 %61 to i32, !dbg !16568
  %and68 = and i32 %conv67, 15, !dbg !16569
  %conv69 = sext i32 %and68 to i64, !dbg !16568
  store i64 %conv69, i64* %option_length, align 8, !dbg !16570
  %62 = load i8*, i8** %current_option, align 8, !dbg !16571
  %incdec.ptr70 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !16571
  store i8* %incdec.ptr70, i8** %current_option, align 8, !dbg !16571
  store i32* %option_delta, i32** %x, align 8, !dbg !16572
  br label %do.body, !dbg !16573, !llvm.loop !16574

do.body:                                          ; preds = %land.end, %if.end62
  %63 = load i32*, i32** %x, align 8, !dbg !16576
  %64 = load i32, i32* %63, align 4, !dbg !16579
  %cmp71 = icmp eq i32 %64, 13, !dbg !16580
  br i1 %cmp71, label %if.then73, label %if.else, !dbg !16581

if.then73:                                        ; preds = %do.body
  %65 = load i8*, i8** %current_option, align 8, !dbg !16582
  %arrayidx74 = getelementptr inbounds i8, i8* %65, i64 0, !dbg !16582
  %66 = load i8, i8* %arrayidx74, align 1, !dbg !16582
  %conv75 = zext i8 %66 to i32, !dbg !16582
  %67 = load i32*, i32** %x, align 8, !dbg !16584
  %68 = load i32, i32* %67, align 4, !dbg !16585
  %add = add i32 %68, %conv75, !dbg !16585
  store i32 %add, i32* %67, align 4, !dbg !16585
  %69 = load i8*, i8** %current_option, align 8, !dbg !16586
  %incdec.ptr76 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !16586
  store i8* %incdec.ptr76, i8** %current_option, align 8, !dbg !16586
  br label %if.end91, !dbg !16587

if.else:                                          ; preds = %do.body
  %70 = load i32*, i32** %x, align 8, !dbg !16588
  %71 = load i32, i32* %70, align 4, !dbg !16590
  %cmp77 = icmp eq i32 %71, 14, !dbg !16591
  br i1 %cmp77, label %if.then79, label %if.end90, !dbg !16592

if.then79:                                        ; preds = %if.else
  %72 = load i32*, i32** %x, align 8, !dbg !16593
  %73 = load i32, i32* %72, align 4, !dbg !16595
  %add80 = add i32 %73, 255, !dbg !16595
  store i32 %add80, i32* %72, align 4, !dbg !16595
  %74 = load i8*, i8** %current_option, align 8, !dbg !16596
  %arrayidx81 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !16596
  %75 = load i8, i8* %arrayidx81, align 1, !dbg !16596
  %conv82 = zext i8 %75 to i32, !dbg !16596
  %shl83 = shl i32 %conv82, 8, !dbg !16597
  %76 = load i32*, i32** %x, align 8, !dbg !16598
  %77 = load i32, i32* %76, align 4, !dbg !16599
  %add84 = add i32 %77, %shl83, !dbg !16599
  store i32 %add84, i32* %76, align 4, !dbg !16599
  %78 = load i8*, i8** %current_option, align 8, !dbg !16600
  %incdec.ptr85 = getelementptr inbounds i8, i8* %78, i32 1, !dbg !16600
  store i8* %incdec.ptr85, i8** %current_option, align 8, !dbg !16600
  %79 = load i8*, i8** %current_option, align 8, !dbg !16601
  %arrayidx86 = getelementptr inbounds i8, i8* %79, i64 0, !dbg !16601
  %80 = load i8, i8* %arrayidx86, align 1, !dbg !16601
  %conv87 = zext i8 %80 to i32, !dbg !16601
  %81 = load i32*, i32** %x, align 8, !dbg !16602
  %82 = load i32, i32* %81, align 4, !dbg !16603
  %add88 = add i32 %82, %conv87, !dbg !16603
  store i32 %add88, i32* %81, align 4, !dbg !16603
  %83 = load i8*, i8** %current_option, align 8, !dbg !16604
  %incdec.ptr89 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !16604
  store i8* %incdec.ptr89, i8** %current_option, align 8, !dbg !16604
  br label %if.end90, !dbg !16605

if.end90:                                         ; preds = %if.then79, %if.else
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then73
  br label %do.cond, !dbg !16606

do.cond:                                          ; preds = %if.end91
  %84 = load i32*, i32** %x, align 8, !dbg !16607
  %85 = bitcast i64* %option_length to i32*, !dbg !16608
  %cmp92 = icmp ne i32* %84, %85, !dbg !16609
  br i1 %cmp92, label %land.rhs, label %land.end, !dbg !16610

land.rhs:                                         ; preds = %do.cond
  %86 = bitcast i64* %option_length to i32*, !dbg !16611
  store i32* %86, i32** %x, align 8, !dbg !16612
  %tobool = icmp ne i32* %86, null, !dbg !16610
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %87 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %87, label %do.body, label %do.end, !dbg !16606, !llvm.loop !16574

do.end:                                           ; preds = %land.end
  %88 = load i32, i32* %option_delta, align 4, !dbg !16613
  %89 = load i32, i32* %option_number, align 4, !dbg !16614
  %add94 = add i32 %89, %88, !dbg !16614
  store i32 %add94, i32* %option_number, align 4, !dbg !16614
  %90 = load i8*, i8** %current_option, align 8, !dbg !16615
  %91 = load i64, i64* %option_length, align 8, !dbg !16617
  %add.ptr95 = getelementptr inbounds i8, i8* %90, i64 %91, !dbg !16618
  %92 = load i8*, i8** %data.addr, align 8, !dbg !16619
  %93 = load i16, i16* %data_len.addr, align 2, !dbg !16620
  %conv96 = zext i16 %93 to i32, !dbg !16620
  %idx.ext97 = sext i32 %conv96 to i64, !dbg !16621
  %add.ptr98 = getelementptr inbounds i8, i8* %92, i64 %idx.ext97, !dbg !16621
  %cmp99 = icmp ugt i8* %add.ptr95, %add.ptr98, !dbg !16622
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !16623

if.then101:                                       ; preds = %do.end
  store i32 128, i32* %retval, align 4, !dbg !16624
  br label %return, !dbg !16624

if.else102:                                       ; preds = %do.end
  br label %if.end103

if.end103:                                        ; preds = %if.else102
  %94 = load i32, i32* %option_number, align 4, !dbg !16626
  %conv104 = zext i32 %94 to i64, !dbg !16626
  %cmp105 = icmp ule i64 %conv104, 40, !dbg !16626
  br i1 %cmp105, label %if.then107, label %if.end114, !dbg !16629

if.then107:                                       ; preds = %if.end103
  %95 = load i32, i32* %option_number, align 4, !dbg !16630
  %rem = urem i32 %95, 8, !dbg !16630
  %shl108 = shl i32 1, %rem, !dbg !16630
  %96 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16630
  %options109 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %96, i32 0, i32 5, !dbg !16630
  %97 = load i32, i32* %option_number, align 4, !dbg !16630
  %div = udiv i32 %97, 8, !dbg !16630
  %idxprom = zext i32 %div to i64, !dbg !16630
  %arrayidx110 = getelementptr inbounds [5 x i8], [5 x i8]* %options109, i64 0, i64 %idxprom, !dbg !16630
  %98 = load i8, i8* %arrayidx110, align 1, !dbg !16630
  %conv111 = zext i8 %98 to i32, !dbg !16630
  %or112 = or i32 %conv111, %shl108, !dbg !16630
  %conv113 = trunc i32 %or112 to i8, !dbg !16630
  store i8 %conv113, i8* %arrayidx110, align 1, !dbg !16630
  br label %if.end114, !dbg !16630

if.end114:                                        ; preds = %if.then107, %if.end103
  %99 = load i32, i32* %option_number, align 4, !dbg !16632
  switch i32 %99, label %sw.default [
    i32 12, label %sw.bb
    i32 14, label %sw.bb115
    i32 4, label %sw.bb117
    i32 17, label %sw.bb128
    i32 1, label %sw.bb143
    i32 5, label %sw.bb154
    i32 3, label %sw.bb155
    i32 7, label %sw.bb156
    i32 11, label %sw.bb159
    i32 15, label %sw.bb160
    i32 8, label %sw.bb161
    i32 20, label %sw.bb162
    i32 35, label %sw.bb163
    i32 6, label %sw.bb164
    i32 23, label %sw.bb166
    i32 27, label %sw.bb183
    i32 28, label %sw.bb200
  ], !dbg !16633

sw.bb:                                            ; preds = %if.end114
  %100 = load i8*, i8** %current_option, align 8, !dbg !16634
  %101 = load i64, i64* %option_length, align 8, !dbg !16636
  %call = call i32 @coap_parse_int_option(i8* %100, i64 %101), !dbg !16637
  %102 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16638
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %102, i32 0, i32 6, !dbg !16639
  store i32 %call, i32* %content_type, align 4, !dbg !16640
  br label %sw.epilog, !dbg !16641

sw.bb115:                                         ; preds = %if.end114
  %103 = load i8*, i8** %current_option, align 8, !dbg !16642
  %104 = load i64, i64* %option_length, align 8, !dbg !16643
  %call116 = call i32 @coap_parse_int_option(i8* %103, i64 %104), !dbg !16644
  %105 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16645
  %max_age = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %105, i32 0, i32 7, !dbg !16646
  store i32 %call116, i32* %max_age, align 8, !dbg !16647
  br label %sw.epilog, !dbg !16648

sw.bb117:                                         ; preds = %if.end114
  %106 = load i64, i64* %option_length, align 8, !dbg !16649
  %cmp118 = icmp ult i64 8, %106, !dbg !16649
  br i1 %cmp118, label %cond.true120, label %cond.false121, !dbg !16649

cond.true120:                                     ; preds = %sw.bb117
  br label %cond.end122, !dbg !16649

cond.false121:                                    ; preds = %sw.bb117
  %107 = load i64, i64* %option_length, align 8, !dbg !16649
  br label %cond.end122, !dbg !16649

cond.end122:                                      ; preds = %cond.false121, %cond.true120
  %cond123 = phi i64 [ 8, %cond.true120 ], [ %107, %cond.false121 ], !dbg !16649
  %conv124 = trunc i64 %cond123 to i8, !dbg !16650
  %108 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16651
  %etag_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %108, i32 0, i32 10, !dbg !16652
  store i8 %conv124, i8* %etag_len, align 8, !dbg !16653
  %109 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16654
  %etag = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %109, i32 0, i32 11, !dbg !16655
  %arraydecay125 = getelementptr inbounds [8 x i8], [8 x i8]* %etag, i32 0, i32 0, !dbg !16656
  %110 = load i8*, i8** %current_option, align 8, !dbg !16657
  %111 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16658
  %etag_len126 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %111, i32 0, i32 10, !dbg !16659
  %112 = load i8, i8* %etag_len126, align 8, !dbg !16659
  %conv127 = zext i8 %112 to i64, !dbg !16658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay125, i8* %110, i64 %conv127, i32 1, i1 false), !dbg !16656
  br label %sw.epilog, !dbg !16660

sw.bb128:                                         ; preds = %if.end114
  %113 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16661
  %accept_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %113, i32 0, i32 22, !dbg !16663
  %114 = load i8, i8* %accept_num, align 1, !dbg !16663
  %conv129 = zext i8 %114 to i32, !dbg !16661
  %cmp130 = icmp slt i32 %conv129, 2, !dbg !16664
  br i1 %cmp130, label %if.then132, label %if.end142, !dbg !16665

if.then132:                                       ; preds = %sw.bb128
  %115 = load i8*, i8** %current_option, align 8, !dbg !16666
  %116 = load i64, i64* %option_length, align 8, !dbg !16668
  %call133 = call i32 @coap_parse_int_option(i8* %115, i64 %116), !dbg !16669
  %conv134 = trunc i32 %call133 to i16, !dbg !16669
  %117 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16670
  %accept = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %117, i32 0, i32 23, !dbg !16671
  %118 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16672
  %accept_num135 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %118, i32 0, i32 22, !dbg !16673
  %119 = load i8, i8* %accept_num135, align 1, !dbg !16673
  %idxprom136 = zext i8 %119 to i64, !dbg !16670
  %arrayidx137 = getelementptr inbounds [2 x i16], [2 x i16]* %accept, i64 0, i64 %idxprom136, !dbg !16670
  store i16 %conv134, i16* %arrayidx137, align 2, !dbg !16674
  %120 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16675
  %accept_num138 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %120, i32 0, i32 22, !dbg !16676
  %121 = load i8, i8* %accept_num138, align 1, !dbg !16677
  %conv139 = zext i8 %121 to i32, !dbg !16677
  %add140 = add nsw i32 %conv139, 1, !dbg !16677
  %conv141 = trunc i32 %add140 to i8, !dbg !16677
  store i8 %conv141, i8* %accept_num138, align 1, !dbg !16677
  br label %if.end142, !dbg !16678

if.end142:                                        ; preds = %if.then132, %sw.bb128
  br label %sw.epilog, !dbg !16679

sw.bb143:                                         ; preds = %if.end114
  %122 = load i64, i64* %option_length, align 8, !dbg !16680
  %cmp144 = icmp ult i64 8, %122, !dbg !16680
  br i1 %cmp144, label %cond.true146, label %cond.false147, !dbg !16680

cond.true146:                                     ; preds = %sw.bb143
  br label %cond.end148, !dbg !16680

cond.false147:                                    ; preds = %sw.bb143
  %123 = load i64, i64* %option_length, align 8, !dbg !16680
  br label %cond.end148, !dbg !16680

cond.end148:                                      ; preds = %cond.false147, %cond.true146
  %cond149 = phi i64 [ 8, %cond.true146 ], [ %123, %cond.false147 ], !dbg !16680
  %conv150 = trunc i64 %cond149 to i8, !dbg !16681
  %124 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16682
  %if_match_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %124, i32 0, i32 24, !dbg !16683
  store i8 %conv150, i8* %if_match_len, align 2, !dbg !16684
  %125 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16685
  %if_match = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %125, i32 0, i32 25, !dbg !16686
  %arraydecay151 = getelementptr inbounds [8 x i8], [8 x i8]* %if_match, i32 0, i32 0, !dbg !16687
  %126 = load i8*, i8** %current_option, align 8, !dbg !16688
  %127 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16689
  %if_match_len152 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %127, i32 0, i32 24, !dbg !16690
  %128 = load i8, i8* %if_match_len152, align 2, !dbg !16690
  %conv153 = zext i8 %128 to i64, !dbg !16689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay151, i8* %126, i64 %conv153, i32 1, i1 false), !dbg !16687
  br label %sw.epilog, !dbg !16691

sw.bb154:                                         ; preds = %if.end114
  %129 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16692
  %if_none_match = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %129, i32 0, i32 36, !dbg !16693
  store i8 1, i8* %if_none_match, align 8, !dbg !16694
  br label %sw.epilog, !dbg !16695

sw.bb155:                                         ; preds = %if.end114
  %130 = load i8*, i8** %current_option, align 8, !dbg !16696
  %131 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16697
  %uri_host = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %131, i32 0, i32 13, !dbg !16698
  store i8* %130, i8** %uri_host, align 8, !dbg !16699
  %132 = load i64, i64* %option_length, align 8, !dbg !16700
  %133 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16701
  %uri_host_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %133, i32 0, i32 12, !dbg !16702
  store i64 %132, i64* %uri_host_len, align 8, !dbg !16703
  br label %sw.epilog, !dbg !16704

sw.bb156:                                         ; preds = %if.end114
  %134 = load i8*, i8** %current_option, align 8, !dbg !16705
  %135 = load i64, i64* %option_length, align 8, !dbg !16706
  %call157 = call i32 @coap_parse_int_option(i8* %134, i64 %135), !dbg !16707
  %conv158 = trunc i32 %call157 to i16, !dbg !16707
  %136 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16708
  %uri_port = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %136, i32 0, i32 15, !dbg !16709
  store i16 %conv158, i16* %uri_port, align 8, !dbg !16710
  br label %sw.epilog, !dbg !16711

sw.bb159:                                         ; preds = %if.end114
  %137 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16712
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %137, i32 0, i32 18, !dbg !16713
  %138 = load i8*, i8** %current_option, align 8, !dbg !16714
  %139 = load i64, i64* %option_length, align 8, !dbg !16715
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_path, i8* %138, i64 %139, i8 zeroext 1), !dbg !16716
  br label %sw.epilog, !dbg !16717

sw.bb160:                                         ; preds = %if.end114
  %140 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16718
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %140, i32 0, i32 35, !dbg !16719
  %141 = load i8*, i8** %current_option, align 8, !dbg !16720
  %142 = load i64, i64* %option_length, align 8, !dbg !16721
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query, i8* %141, i64 %142, i8 zeroext 1), !dbg !16722
  br label %sw.epilog, !dbg !16723

sw.bb161:                                         ; preds = %if.end114
  %143 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16724
  %location_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %143, i32 0, i32 14, !dbg !16725
  %144 = load i8*, i8** %current_option, align 8, !dbg !16726
  %145 = load i64, i64* %option_length, align 8, !dbg !16727
  call void @coap_add_multi_option(%struct._multi_option_t** %location_path, i8* %144, i64 %145, i8 zeroext 1), !dbg !16728
  br label %sw.epilog, !dbg !16729

sw.bb162:                                         ; preds = %if.end114
  %146 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16730
  %location_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %146, i32 0, i32 17, !dbg !16731
  %147 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16732
  %location_query_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %147, i32 0, i32 16, !dbg !16733
  %148 = load i8*, i8** %current_option, align 8, !dbg !16734
  %149 = load i64, i64* %option_length, align 8, !dbg !16735
  call void @coap_merge_multi_option(i8** %location_query, i64* %location_query_len, i8* %148, i64 %149, i8 signext 38), !dbg !16736
  br label %sw.epilog, !dbg !16737

sw.bb163:                                         ; preds = %if.end114
  %150 = load i8*, i8** %current_option, align 8, !dbg !16738
  %151 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16739
  %proxy_uri = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %151, i32 0, i32 9, !dbg !16740
  store i8* %150, i8** %proxy_uri, align 8, !dbg !16741
  %152 = load i64, i64* %option_length, align 8, !dbg !16742
  %153 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16743
  %proxy_uri_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %153, i32 0, i32 8, !dbg !16744
  store i64 %152, i64* %proxy_uri_len, align 8, !dbg !16745
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.197, i32 0, i32 0), i8** @coap_error_message, align 8, !dbg !16746
  store i32 165, i32* %retval, align 4, !dbg !16747
  br label %return, !dbg !16747

sw.bb164:                                         ; preds = %if.end114
  %154 = load i8*, i8** %current_option, align 8, !dbg !16748
  %155 = load i64, i64* %option_length, align 8, !dbg !16749
  %call165 = call i32 @coap_parse_int_option(i8* %154, i64 %155), !dbg !16750
  %156 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16751
  %observe = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %156, i32 0, i32 19, !dbg !16752
  store i32 %call165, i32* %observe, align 8, !dbg !16753
  br label %sw.epilog, !dbg !16754

sw.bb166:                                         ; preds = %if.end114
  %157 = load i8*, i8** %current_option, align 8, !dbg !16755
  %158 = load i64, i64* %option_length, align 8, !dbg !16756
  %call167 = call i32 @coap_parse_int_option(i8* %157, i64 %158), !dbg !16757
  %159 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16758
  %block2_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %159, i32 0, i32 26, !dbg !16759
  store i32 %call167, i32* %block2_num, align 4, !dbg !16760
  %160 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16761
  %block2_num168 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %160, i32 0, i32 26, !dbg !16762
  %161 = load i32, i32* %block2_num168, align 4, !dbg !16762
  %and169 = and i32 %161, 8, !dbg !16763
  %shr170 = lshr i32 %and169, 3, !dbg !16764
  %conv171 = trunc i32 %shr170 to i8, !dbg !16765
  %162 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16766
  %block2_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %162, i32 0, i32 27, !dbg !16767
  store i8 %conv171, i8* %block2_more, align 8, !dbg !16768
  %163 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16769
  %block2_num172 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %163, i32 0, i32 26, !dbg !16770
  %164 = load i32, i32* %block2_num172, align 4, !dbg !16770
  %and173 = and i32 %164, 7, !dbg !16771
  %shl174 = shl i32 16, %and173, !dbg !16772
  %conv175 = trunc i32 %shl174 to i16, !dbg !16773
  %165 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16774
  %block2_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %165, i32 0, i32 28, !dbg !16775
  store i16 %conv175, i16* %block2_size, align 2, !dbg !16776
  %166 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16777
  %block2_num176 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %166, i32 0, i32 26, !dbg !16778
  %167 = load i32, i32* %block2_num176, align 4, !dbg !16778
  %and177 = and i32 %167, -16, !dbg !16779
  %168 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16780
  %block2_num178 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %168, i32 0, i32 26, !dbg !16781
  %169 = load i32, i32* %block2_num178, align 4, !dbg !16781
  %and179 = and i32 %169, 7, !dbg !16782
  %shl180 = shl i32 %and177, %and179, !dbg !16783
  %170 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16784
  %block2_offset = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %170, i32 0, i32 29, !dbg !16785
  store i32 %shl180, i32* %block2_offset, align 4, !dbg !16786
  %171 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16787
  %block2_num181 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %171, i32 0, i32 26, !dbg !16788
  %172 = load i32, i32* %block2_num181, align 4, !dbg !16789
  %shr182 = lshr i32 %172, 4, !dbg !16789
  store i32 %shr182, i32* %block2_num181, align 4, !dbg !16789
  br label %sw.epilog, !dbg !16790

sw.bb183:                                         ; preds = %if.end114
  %173 = load i8*, i8** %current_option, align 8, !dbg !16791
  %174 = load i64, i64* %option_length, align 8, !dbg !16792
  %call184 = call i32 @coap_parse_int_option(i8* %173, i64 %174), !dbg !16793
  %175 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16794
  %block1_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %175, i32 0, i32 30, !dbg !16795
  store i32 %call184, i32* %block1_num, align 8, !dbg !16796
  %176 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16797
  %block1_num185 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %176, i32 0, i32 30, !dbg !16798
  %177 = load i32, i32* %block1_num185, align 8, !dbg !16798
  %and186 = and i32 %177, 8, !dbg !16799
  %shr187 = lshr i32 %and186, 3, !dbg !16800
  %conv188 = trunc i32 %shr187 to i8, !dbg !16801
  %178 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16802
  %block1_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %178, i32 0, i32 31, !dbg !16803
  store i8 %conv188, i8* %block1_more, align 4, !dbg !16804
  %179 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16805
  %block1_num189 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %179, i32 0, i32 30, !dbg !16806
  %180 = load i32, i32* %block1_num189, align 8, !dbg !16806
  %and190 = and i32 %180, 7, !dbg !16807
  %shl191 = shl i32 16, %and190, !dbg !16808
  %conv192 = trunc i32 %shl191 to i16, !dbg !16809
  %181 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16810
  %block1_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %181, i32 0, i32 32, !dbg !16811
  store i16 %conv192, i16* %block1_size, align 2, !dbg !16812
  %182 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16813
  %block1_num193 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %182, i32 0, i32 30, !dbg !16814
  %183 = load i32, i32* %block1_num193, align 8, !dbg !16814
  %and194 = and i32 %183, -16, !dbg !16815
  %184 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16816
  %block1_num195 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %184, i32 0, i32 30, !dbg !16817
  %185 = load i32, i32* %block1_num195, align 8, !dbg !16817
  %and196 = and i32 %185, 7, !dbg !16818
  %shl197 = shl i32 %and194, %and196, !dbg !16819
  %186 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16820
  %block1_offset = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %186, i32 0, i32 33, !dbg !16821
  store i32 %shl197, i32* %block1_offset, align 8, !dbg !16822
  %187 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16823
  %block1_num198 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %187, i32 0, i32 30, !dbg !16824
  %188 = load i32, i32* %block1_num198, align 8, !dbg !16825
  %shr199 = lshr i32 %188, 4, !dbg !16825
  store i32 %shr199, i32* %block1_num198, align 8, !dbg !16825
  br label %sw.epilog, !dbg !16826

sw.bb200:                                         ; preds = %if.end114
  %189 = load i8*, i8** %current_option, align 8, !dbg !16827
  %190 = load i64, i64* %option_length, align 8, !dbg !16828
  %call201 = call i32 @coap_parse_int_option(i8* %189, i64 %190), !dbg !16829
  %191 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16830
  %size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %191, i32 0, i32 34, !dbg !16831
  store i32 %call201, i32* %size, align 4, !dbg !16832
  br label %sw.epilog, !dbg !16833

sw.default:                                       ; preds = %if.end114
  %192 = load i32, i32* %option_number, align 4, !dbg !16834
  %and202 = and i32 %192, 1, !dbg !16836
  %tobool203 = icmp ne i32 %and202, 0, !dbg !16836
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !16837

if.then204:                                       ; preds = %sw.default
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.198, i32 0, i32 0), i8** @coap_error_message, align 8, !dbg !16838
  store i32 130, i32* %retval, align 4, !dbg !16840
  br label %return, !dbg !16840

if.end205:                                        ; preds = %sw.default
  br label %sw.epilog, !dbg !16841

sw.epilog:                                        ; preds = %if.end205, %sw.bb200, %sw.bb183, %sw.bb166, %sw.bb164, %sw.bb162, %sw.bb161, %sw.bb160, %sw.bb159, %sw.bb156, %sw.bb155, %sw.bb154, %cond.end148, %if.end142, %cond.end122, %sw.bb115, %sw.bb
  %193 = load i64, i64* %option_length, align 8, !dbg !16842
  %194 = load i8*, i8** %current_option, align 8, !dbg !16843
  %add.ptr206 = getelementptr inbounds i8, i8* %194, i64 %193, !dbg !16843
  store i8* %add.ptr206, i8** %current_option, align 8, !dbg !16843
  br label %while.cond, !dbg !16538, !llvm.loop !16844

while.end:                                        ; preds = %if.then58, %while.cond
  store i32 0, i32* %retval, align 4, !dbg !16846
  br label %return, !dbg !16846

return:                                           ; preds = %while.end, %if.then204, %sw.bb163, %if.then101, %if.then
  %195 = load i32, i32* %retval, align 4, !dbg !16847
  ret i32 %195, !dbg !16847
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @coap_parse_int_option(i8* %bytes, i64 %length) #0 !dbg !16848 {
entry:
  %bytes.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %var = alloca i32, align 4
  %i = alloca i64, align 8
  store i8* %bytes, i8** %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bytes.addr, metadata !16851, metadata !1190), !dbg !16852
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !16853, metadata !1190), !dbg !16854
  call void @llvm.dbg.declare(metadata i32* %var, metadata !16855, metadata !1190), !dbg !16856
  store i32 0, i32* %var, align 4, !dbg !16856
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16857, metadata !1190), !dbg !16858
  store i64 0, i64* %i, align 8, !dbg !16858
  br label %while.cond, !dbg !16859

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %i, align 8, !dbg !16860
  %1 = load i64, i64* %length.addr, align 8, !dbg !16861
  %cmp = icmp ult i64 %0, %1, !dbg !16862
  br i1 %cmp, label %while.body, label %while.end, !dbg !16859

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %var, align 4, !dbg !16863
  %shl = shl i32 %2, 8, !dbg !16863
  store i32 %shl, i32* %var, align 4, !dbg !16863
  %3 = load i8*, i8** %bytes.addr, align 8, !dbg !16865
  %4 = load i64, i64* %i, align 8, !dbg !16866
  %inc = add i64 %4, 1, !dbg !16866
  store i64 %inc, i64* %i, align 8, !dbg !16866
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !16865
  %5 = load i8, i8* %arrayidx, align 1, !dbg !16865
  %conv = zext i8 %5 to i32, !dbg !16865
  %6 = load i32, i32* %var, align 4, !dbg !16867
  %or = or i32 %6, %conv, !dbg !16867
  store i32 %or, i32* %var, align 4, !dbg !16867
  br label %while.cond, !dbg !16859, !llvm.loop !16868

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %var, align 4, !dbg !16870
  ret i32 %7, !dbg !16871
}

; Function Attrs: noinline nounwind uwtable
define internal void @coap_merge_multi_option(i8** %dst, i64* %dst_len, i8* %option, i64 %option_len, i8 signext %separator) #0 !dbg !16872 {
entry:
  %dst.addr = alloca i8**, align 8
  %dst_len.addr = alloca i64*, align 8
  %option.addr = alloca i8*, align 8
  %option_len.addr = alloca i64, align 8
  %separator.addr = alloca i8, align 1
  store i8** %dst, i8*** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dst.addr, metadata !16875, metadata !1190), !dbg !16876
  store i64* %dst_len, i64** %dst_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_len.addr, metadata !16877, metadata !1190), !dbg !16878
  store i8* %option, i8** %option.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %option.addr, metadata !16879, metadata !1190), !dbg !16880
  store i64 %option_len, i64* %option_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %option_len.addr, metadata !16881, metadata !1190), !dbg !16882
  store i8 %separator, i8* %separator.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %separator.addr, metadata !16883, metadata !1190), !dbg !16884
  %0 = load i64*, i64** %dst_len.addr, align 8, !dbg !16885
  %1 = load i64, i64* %0, align 8, !dbg !16887
  %cmp = icmp ugt i64 %1, 0, !dbg !16888
  br i1 %cmp, label %if.then, label %if.else, !dbg !16889

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %separator.addr, align 1, !dbg !16890
  %3 = load i8**, i8*** %dst.addr, align 8, !dbg !16892
  %4 = load i8*, i8** %3, align 8, !dbg !16893
  %5 = load i64*, i64** %dst_len.addr, align 8, !dbg !16894
  %6 = load i64, i64* %5, align 8, !dbg !16895
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %6, !dbg !16896
  store i8 %2, i8* %arrayidx, align 1, !dbg !16897
  %7 = load i64*, i64** %dst_len.addr, align 8, !dbg !16898
  %8 = load i64, i64* %7, align 8, !dbg !16899
  %add = add i64 %8, 1, !dbg !16899
  store i64 %add, i64* %7, align 8, !dbg !16899
  %9 = load i8**, i8*** %dst.addr, align 8, !dbg !16900
  %10 = load i8*, i8** %9, align 8, !dbg !16901
  %11 = load i64*, i64** %dst_len.addr, align 8, !dbg !16902
  %12 = load i64, i64* %11, align 8, !dbg !16903
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %12, !dbg !16904
  %13 = load i8*, i8** %option.addr, align 8, !dbg !16905
  %14 = load i64, i64* %option_len.addr, align 8, !dbg !16906
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr, i8* %13, i64 %14, i32 1, i1 false), !dbg !16907
  %15 = load i64, i64* %option_len.addr, align 8, !dbg !16908
  %16 = load i64*, i64** %dst_len.addr, align 8, !dbg !16909
  %17 = load i64, i64* %16, align 8, !dbg !16910
  %add1 = add i64 %17, %15, !dbg !16910
  store i64 %add1, i64* %16, align 8, !dbg !16910
  br label %if.end, !dbg !16911

if.else:                                          ; preds = %entry
  %18 = load i8*, i8** %option.addr, align 8, !dbg !16912
  %19 = load i8**, i8*** %dst.addr, align 8, !dbg !16914
  store i8* %18, i8** %19, align 8, !dbg !16915
  %20 = load i64, i64* %option_len.addr, align 8, !dbg !16916
  %21 = load i64*, i64** %dst_len.addr, align 8, !dbg !16917
  store i64 %20, i64* %21, align 8, !dbg !16918
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16919
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_query_variable(i8* %packet, i8* %name, i8** %output) #0 !dbg !16920 {
entry:
  %packet.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %output.addr = alloca i8**, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !16924, metadata !1190), !dbg !16925
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16926, metadata !1190), !dbg !16927
  store i8** %output, i8*** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %output.addr, metadata !16928, metadata !1190), !dbg !16929
  ret i32 0, !dbg !16930
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_post_variable(i8* %packet, i8* %name, i8** %output) #0 !dbg !16931 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %output.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !16932, metadata !1190), !dbg !16933
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16934, metadata !1190), !dbg !16935
  store i8** %output, i8*** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %output.addr, metadata !16936, metadata !1190), !dbg !16937
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !16938, metadata !1190), !dbg !16939
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !16940
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !16941
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16939
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16942
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 37, !dbg !16944
  %3 = load i16, i16* %payload_len, align 2, !dbg !16944
  %tobool = icmp ne i16 %3, 0, !dbg !16942
  br i1 %tobool, label %if.then, label %if.end, !dbg !16945

if.then:                                          ; preds = %entry
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16946
  %payload = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 38, !dbg !16948
  %5 = load i8*, i8** %payload, align 8, !dbg !16948
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !16949
  %payload_len1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 37, !dbg !16950
  %7 = load i16, i16* %payload_len1, align 2, !dbg !16950
  %conv = zext i16 %7 to i64, !dbg !16949
  %8 = load i8*, i8** %name.addr, align 8, !dbg !16951
  %9 = load i8**, i8*** %output.addr, align 8, !dbg !16952
  %call = call i32 @coap_get_variable(i8* %5, i64 %conv, i8* %8, i8** %9), !dbg !16953
  store i32 %call, i32* %retval, align 4, !dbg !16954
  br label %return, !dbg !16954

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16955
  br label %return, !dbg !16955

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !16956
  ret i32 %10, !dbg !16956
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @coap_get_variable(i8* %buffer, i64 %length, i8* %name, i8** %output) #0 !dbg !16957 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %output.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  %value_end = alloca i8*, align 8
  %name_len = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16960, metadata !1190), !dbg !16961
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !16962, metadata !1190), !dbg !16963
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16964, metadata !1190), !dbg !16965
  store i8** %output, i8*** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %output.addr, metadata !16966, metadata !1190), !dbg !16967
  call void @llvm.dbg.declare(metadata i8** %start, metadata !16968, metadata !1190), !dbg !16969
  store i8* null, i8** %start, align 8, !dbg !16969
  call void @llvm.dbg.declare(metadata i8** %end, metadata !16970, metadata !1190), !dbg !16971
  store i8* null, i8** %end, align 8, !dbg !16971
  call void @llvm.dbg.declare(metadata i8** %value_end, metadata !16972, metadata !1190), !dbg !16973
  store i8* null, i8** %value_end, align 8, !dbg !16973
  call void @llvm.dbg.declare(metadata i64* %name_len, metadata !16974, metadata !1190), !dbg !16975
  store i64 0, i64* %name_len, align 8, !dbg !16975
  %0 = load i8**, i8*** %output.addr, align 8, !dbg !16976
  store i8* null, i8** %0, align 8, !dbg !16977
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16978
  %call = call i64 @strlen(i8* %1) #9, !dbg !16979
  store i64 %call, i64* %name_len, align 8, !dbg !16980
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !16981
  %3 = load i64, i64* %length.addr, align 8, !dbg !16982
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %3, !dbg !16983
  store i8* %add.ptr, i8** %end, align 8, !dbg !16984
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !16985
  store i8* %4, i8** %start, align 8, !dbg !16987
  br label %for.cond, !dbg !16988

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i8*, i8** %start, align 8, !dbg !16989
  %6 = load i64, i64* %name_len, align 8, !dbg !16991
  %add.ptr1 = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !16992
  %7 = load i8*, i8** %end, align 8, !dbg !16993
  %cmp = icmp ult i8* %add.ptr1, %7, !dbg !16994
  br i1 %cmp, label %for.body, label %for.end, !dbg !16995

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %start, align 8, !dbg !16996
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !16999
  %cmp2 = icmp eq i8* %8, %9, !dbg !17000
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !17001

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i8*, i8** %start, align 8, !dbg !17002
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 -1, !dbg !17002
  %11 = load i8, i8* %arrayidx, align 1, !dbg !17002
  %conv = zext i8 %11 to i32, !dbg !17002
  %cmp3 = icmp eq i32 %conv, 38, !dbg !17003
  br i1 %cmp3, label %land.lhs.true, label %if.end22, !dbg !17004

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %12 = load i8*, i8** %start, align 8, !dbg !17005
  %13 = load i64, i64* %name_len, align 8, !dbg !17006
  %arrayidx5 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !17005
  %14 = load i8, i8* %arrayidx5, align 1, !dbg !17005
  %conv6 = zext i8 %14 to i32, !dbg !17005
  %cmp7 = icmp eq i32 %conv6, 61, !dbg !17007
  br i1 %cmp7, label %land.lhs.true9, label %if.end22, !dbg !17008

land.lhs.true9:                                   ; preds = %land.lhs.true
  %15 = load i8*, i8** %name.addr, align 8, !dbg !17009
  %16 = load i8*, i8** %start, align 8, !dbg !17010
  %17 = load i64, i64* %name_len, align 8, !dbg !17011
  %call10 = call i32 @strncmp(i8* %15, i8* %16, i64 %17) #9, !dbg !17012
  %cmp11 = icmp eq i32 %call10, 0, !dbg !17013
  br i1 %cmp11, label %if.then, label %if.end22, !dbg !17014

if.then:                                          ; preds = %land.lhs.true9
  %18 = load i64, i64* %name_len, align 8, !dbg !17015
  %add = add i64 %18, 1, !dbg !17017
  %19 = load i8*, i8** %start, align 8, !dbg !17018
  %add.ptr13 = getelementptr inbounds i8, i8* %19, i64 %add, !dbg !17018
  store i8* %add.ptr13, i8** %start, align 8, !dbg !17018
  %20 = load i8*, i8** %start, align 8, !dbg !17019
  %21 = load i8*, i8** %end, align 8, !dbg !17020
  %22 = load i8*, i8** %start, align 8, !dbg !17021
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !17022
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !17022
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17022
  %call14 = call i8* @memchr(i8* %20, i32 38, i64 %sub.ptr.sub) #9, !dbg !17023
  store i8* %call14, i8** %value_end, align 8, !dbg !17024
  %23 = load i8*, i8** %value_end, align 8, !dbg !17025
  %cmp15 = icmp eq i8* %23, null, !dbg !17027
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !17028

if.then17:                                        ; preds = %if.then
  %24 = load i8*, i8** %end, align 8, !dbg !17029
  store i8* %24, i8** %value_end, align 8, !dbg !17031
  br label %if.end, !dbg !17032

if.end:                                           ; preds = %if.then17, %if.then
  %25 = load i8*, i8** %start, align 8, !dbg !17033
  %26 = load i8**, i8*** %output.addr, align 8, !dbg !17034
  store i8* %25, i8** %26, align 8, !dbg !17035
  %27 = load i8*, i8** %value_end, align 8, !dbg !17036
  %28 = load i8*, i8** %start, align 8, !dbg !17037
  %sub.ptr.lhs.cast18 = ptrtoint i8* %27 to i64, !dbg !17038
  %sub.ptr.rhs.cast19 = ptrtoint i8* %28 to i64, !dbg !17038
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !17038
  %conv21 = trunc i64 %sub.ptr.sub20 to i32, !dbg !17039
  store i32 %conv21, i32* %retval, align 4, !dbg !17040
  br label %return, !dbg !17040

if.end22:                                         ; preds = %land.lhs.true9, %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !17041

for.inc:                                          ; preds = %if.end22
  %29 = load i8*, i8** %start, align 8, !dbg !17042
  %incdec.ptr = getelementptr inbounds i8, i8* %29, i32 1, !dbg !17042
  store i8* %incdec.ptr, i8** %start, align 8, !dbg !17042
  br label %for.cond, !dbg !17043, !llvm.loop !17044

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !17046
  br label %return, !dbg !17046

return:                                           ; preds = %for.end, %if.end
  %30 = load i32, i32* %retval, align 4, !dbg !17047
  ret i32 %30, !dbg !17047
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #6

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_status_code(i8* %packet, i32 %code) #0 !dbg !17048 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17051, metadata !1190), !dbg !17052
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !17053, metadata !1190), !dbg !17054
  %0 = load i32, i32* %code.addr, align 4, !dbg !17055
  %cmp = icmp ule i32 %0, 255, !dbg !17057
  br i1 %cmp, label %if.then, label %if.else, !dbg !17058

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4, !dbg !17059
  %conv = trunc i32 %1 to i8, !dbg !17061
  %2 = load i8*, i8** %packet.addr, align 8, !dbg !17062
  %3 = bitcast i8* %2 to %struct.coap_packet_t*, !dbg !17063
  %code1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 3, !dbg !17064
  store i8 %conv, i8* %code1, align 8, !dbg !17065
  store i32 1, i32* %retval, align 4, !dbg !17066
  br label %return, !dbg !17066

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17067
  br label %return, !dbg !17067

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !17069
  ret i32 %4, !dbg !17069
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_content_type(i8* %packet) #0 !dbg !17070 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17073, metadata !1190), !dbg !17074
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17075, metadata !1190), !dbg !17076
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17077
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17078
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17076
  br i1 true, label %cond.true, label %cond.false, !dbg !17079

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17080
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17080
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17080
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17080
  %conv = zext i8 %3 to i32, !dbg !17080
  %and = and i32 %conv, 16, !dbg !17080
  %tobool = icmp ne i32 %and, 0, !dbg !17080
  br i1 %tobool, label %if.end, label %if.then, !dbg !17080

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17079

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 -1, i32* %retval, align 4, !dbg !17082
  br label %return, !dbg !17082

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17083
  %content_type = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 6, !dbg !17084
  %5 = load i32, i32* %content_type, align 4, !dbg !17084
  store i32 %5, i32* %retval, align 4, !dbg !17085
  br label %return, !dbg !17085

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !17086
  ret i32 %6, !dbg !17086
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_content_type(i8* %packet, i32 %content_type) #0 !dbg !17087 {
entry:
  %packet.addr = alloca i8*, align 8
  %content_type.addr = alloca i32, align 4
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17088, metadata !1190), !dbg !17089
  store i32 %content_type, i32* %content_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %content_type.addr, metadata !17090, metadata !1190), !dbg !17091
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17092, metadata !1190), !dbg !17093
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17094
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17095
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17093
  %2 = load i32, i32* %content_type.addr, align 4, !dbg !17096
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17097
  %content_type1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 6, !dbg !17098
  store i32 %2, i32* %content_type1, align 4, !dbg !17099
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17100
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 5, !dbg !17100
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17100
  %5 = load i8, i8* %arrayidx, align 1, !dbg !17100
  %conv = zext i8 %5 to i32, !dbg !17100
  %or = or i32 %conv, 16, !dbg !17100
  %conv2 = trunc i32 %or to i8, !dbg !17100
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !17100
  ret i32 1, !dbg !17104
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_accept(i8* %packet, i16** %accept) #0 !dbg !17105 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %accept.addr = alloca i16**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17111, metadata !1190), !dbg !17112
  store i16** %accept, i16*** %accept.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %accept.addr, metadata !17113, metadata !1190), !dbg !17114
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17115, metadata !1190), !dbg !17116
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17117
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17118
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17116
  br i1 true, label %cond.true, label %cond.false, !dbg !17119

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17120
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17120
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17120
  %3 = load i8, i8* %arrayidx, align 2, !dbg !17120
  %conv = zext i8 %3 to i32, !dbg !17120
  %and = and i32 %conv, 2, !dbg !17120
  %tobool = icmp ne i32 %and, 0, !dbg !17120
  br i1 %tobool, label %if.end, label %if.then, !dbg !17120

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17119

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17122
  br label %return, !dbg !17122

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17123
  %accept1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 23, !dbg !17124
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %accept1, i32 0, i32 0, !dbg !17123
  %5 = load i16**, i16*** %accept.addr, align 8, !dbg !17125
  store i16* %arraydecay, i16** %5, align 8, !dbg !17126
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17127
  %accept_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 22, !dbg !17128
  %7 = load i8, i8* %accept_num, align 1, !dbg !17128
  %conv2 = zext i8 %7 to i32, !dbg !17127
  store i32 %conv2, i32* %retval, align 4, !dbg !17129
  br label %return, !dbg !17129

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17130
  ret i32 %8, !dbg !17130
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_accept(i8* %packet, i16 zeroext %accept) #0 !dbg !17131 {
entry:
  %packet.addr = alloca i8*, align 8
  %accept.addr = alloca i16, align 2
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17134, metadata !1190), !dbg !17135
  store i16 %accept, i16* %accept.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %accept.addr, metadata !17136, metadata !1190), !dbg !17137
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17138, metadata !1190), !dbg !17139
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17140
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17141
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17139
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17142
  %accept_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 22, !dbg !17144
  %3 = load i8, i8* %accept_num, align 1, !dbg !17144
  %conv = zext i8 %3 to i32, !dbg !17142
  %cmp = icmp slt i32 %conv, 2, !dbg !17145
  br i1 %cmp, label %if.then, label %if.end, !dbg !17146

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %accept.addr, align 2, !dbg !17147
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17149
  %accept2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 23, !dbg !17150
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17151
  %accept_num3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 22, !dbg !17152
  %7 = load i8, i8* %accept_num3, align 1, !dbg !17152
  %idxprom = zext i8 %7 to i64, !dbg !17149
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %accept2, i64 0, i64 %idxprom, !dbg !17149
  store i16 %4, i16* %arrayidx, align 2, !dbg !17153
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17154
  %accept_num4 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 22, !dbg !17155
  %9 = load i8, i8* %accept_num4, align 1, !dbg !17156
  %conv5 = zext i8 %9 to i32, !dbg !17156
  %add = add nsw i32 %conv5, 1, !dbg !17156
  %conv6 = trunc i32 %add to i8, !dbg !17156
  store i8 %conv6, i8* %accept_num4, align 1, !dbg !17156
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17157
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 5, !dbg !17157
  %arrayidx7 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17157
  %11 = load i8, i8* %arrayidx7, align 2, !dbg !17157
  %conv8 = zext i8 %11 to i32, !dbg !17157
  %or = or i32 %conv8, 2, !dbg !17157
  %conv9 = trunc i32 %or to i8, !dbg !17157
  store i8 %conv9, i8* %arrayidx7, align 2, !dbg !17157
  br label %if.end, !dbg !17161

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17162
  %accept_num10 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %12, i32 0, i32 22, !dbg !17163
  %13 = load i8, i8* %accept_num10, align 1, !dbg !17163
  %conv11 = zext i8 %13 to i32, !dbg !17162
  ret i32 %conv11, !dbg !17164
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_max_age(i8* %packet, i32* %age) #0 !dbg !17165 {
entry:
  %packet.addr = alloca i8*, align 8
  %age.addr = alloca i32*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17168, metadata !1190), !dbg !17169
  store i32* %age, i32** %age.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %age.addr, metadata !17170, metadata !1190), !dbg !17171
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17172, metadata !1190), !dbg !17173
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17174
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17175
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17173
  br i1 true, label %cond.true, label %cond.false, !dbg !17176

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17177
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17177
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17177
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17177
  %conv = zext i8 %3 to i32, !dbg !17177
  %and = and i32 %conv, 64, !dbg !17177
  %tobool = icmp ne i32 %and, 0, !dbg !17177
  br i1 %tobool, label %if.else, label %if.then, !dbg !17177

cond.false:                                       ; preds = %entry
  br i1 false, label %if.else, label %if.then, !dbg !17176

if.then:                                          ; preds = %cond.false, %cond.true
  %4 = load i32*, i32** %age.addr, align 8, !dbg !17179
  store i32 60, i32* %4, align 4, !dbg !17181
  br label %if.end, !dbg !17182

if.else:                                          ; preds = %cond.false, %cond.true
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17183
  %max_age = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 7, !dbg !17185
  %6 = load i32, i32* %max_age, align 8, !dbg !17185
  %7 = load i32*, i32** %age.addr, align 8, !dbg !17186
  store i32 %6, i32* %7, align 4, !dbg !17187
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 1, !dbg !17188
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_max_age(i8* %packet, i32 %age) #0 !dbg !17189 {
entry:
  %packet.addr = alloca i8*, align 8
  %age.addr = alloca i32, align 4
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17192, metadata !1190), !dbg !17193
  store i32 %age, i32* %age.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %age.addr, metadata !17194, metadata !1190), !dbg !17195
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17196, metadata !1190), !dbg !17197
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17198
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17199
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17197
  %2 = load i32, i32* %age.addr, align 4, !dbg !17200
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17201
  %max_age = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 7, !dbg !17202
  store i32 %2, i32* %max_age, align 8, !dbg !17203
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17204
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 5, !dbg !17204
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17204
  %5 = load i8, i8* %arrayidx, align 1, !dbg !17204
  %conv = zext i8 %5 to i32, !dbg !17204
  %or = or i32 %conv, 64, !dbg !17204
  %conv1 = trunc i32 %or to i8, !dbg !17204
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !17204
  ret i32 1, !dbg !17208
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_etag(i8* %packet, i8** %etag) #0 !dbg !17209 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %etag.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17212, metadata !1190), !dbg !17213
  store i8** %etag, i8*** %etag.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %etag.addr, metadata !17214, metadata !1190), !dbg !17215
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17216, metadata !1190), !dbg !17217
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17218
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17219
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17217
  br i1 true, label %cond.true, label %cond.false, !dbg !17220

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17221
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17221
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17221
  %3 = load i8, i8* %arrayidx, align 4, !dbg !17221
  %conv = zext i8 %3 to i32, !dbg !17221
  %and = and i32 %conv, 16, !dbg !17221
  %tobool = icmp ne i32 %and, 0, !dbg !17221
  br i1 %tobool, label %if.end, label %if.then, !dbg !17221

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17220

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17223
  br label %return, !dbg !17223

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17224
  %etag1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 11, !dbg !17225
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %etag1, i32 0, i32 0, !dbg !17224
  %5 = load i8**, i8*** %etag.addr, align 8, !dbg !17226
  store i8* %arraydecay, i8** %5, align 8, !dbg !17227
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17228
  %etag_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 10, !dbg !17229
  %7 = load i8, i8* %etag_len, align 8, !dbg !17229
  %conv2 = zext i8 %7 to i32, !dbg !17228
  store i32 %conv2, i32* %retval, align 4, !dbg !17230
  br label %return, !dbg !17230

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17231
  ret i32 %8, !dbg !17231
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_etag(i8* %packet, i8* %etag, i64 %etag_len) #0 !dbg !17232 {
entry:
  %packet.addr = alloca i8*, align 8
  %etag.addr = alloca i8*, align 8
  %etag_len.addr = alloca i64, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17235, metadata !1190), !dbg !17236
  store i8* %etag, i8** %etag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %etag.addr, metadata !17237, metadata !1190), !dbg !17238
  store i64 %etag_len, i64* %etag_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %etag_len.addr, metadata !17239, metadata !1190), !dbg !17240
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17241, metadata !1190), !dbg !17242
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17243
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17244
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17242
  %2 = load i64, i64* %etag_len.addr, align 8, !dbg !17245
  %cmp = icmp ult i64 8, %2, !dbg !17245
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17245

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !17245

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %etag_len.addr, align 8, !dbg !17245
  br label %cond.end, !dbg !17245

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 8, %cond.true ], [ %3, %cond.false ], !dbg !17245
  %conv = trunc i64 %cond to i8, !dbg !17246
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17247
  %etag_len1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 10, !dbg !17248
  store i8 %conv, i8* %etag_len1, align 8, !dbg !17249
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17250
  %etag2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 11, !dbg !17251
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %etag2, i32 0, i32 0, !dbg !17252
  %6 = load i8*, i8** %etag.addr, align 8, !dbg !17253
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17254
  %etag_len3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 10, !dbg !17255
  %8 = load i8, i8* %etag_len3, align 8, !dbg !17255
  %conv4 = zext i8 %8 to i64, !dbg !17254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %6, i64 %conv4, i32 1, i1 false), !dbg !17252
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17256
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 5, !dbg !17256
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17256
  %10 = load i8, i8* %arrayidx, align 4, !dbg !17256
  %conv5 = zext i8 %10 to i32, !dbg !17256
  %or = or i32 %conv5, 16, !dbg !17256
  %conv6 = trunc i32 %or to i8, !dbg !17256
  store i8 %conv6, i8* %arrayidx, align 4, !dbg !17256
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17260
  %etag_len7 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 10, !dbg !17261
  %12 = load i8, i8* %etag_len7, align 8, !dbg !17261
  %conv8 = zext i8 %12 to i32, !dbg !17260
  ret i32 %conv8, !dbg !17262
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_if_match(i8* %packet, i8** %etag) #0 !dbg !17263 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %etag.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17264, metadata !1190), !dbg !17265
  store i8** %etag, i8*** %etag.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %etag.addr, metadata !17266, metadata !1190), !dbg !17267
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17268, metadata !1190), !dbg !17269
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17270
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17271
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17269
  br i1 true, label %cond.true, label %cond.false, !dbg !17272

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17273
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17273
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17273
  %3 = load i8, i8* %arrayidx, align 4, !dbg !17273
  %conv = zext i8 %3 to i32, !dbg !17273
  %and = and i32 %conv, 2, !dbg !17273
  %tobool = icmp ne i32 %and, 0, !dbg !17273
  br i1 %tobool, label %if.end, label %if.then, !dbg !17273

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17272

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17275
  br label %return, !dbg !17275

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17276
  %if_match = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 25, !dbg !17277
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %if_match, i32 0, i32 0, !dbg !17276
  %5 = load i8**, i8*** %etag.addr, align 8, !dbg !17278
  store i8* %arraydecay, i8** %5, align 8, !dbg !17279
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17280
  %if_match_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 24, !dbg !17281
  %7 = load i8, i8* %if_match_len, align 2, !dbg !17281
  %conv1 = zext i8 %7 to i32, !dbg !17280
  store i32 %conv1, i32* %retval, align 4, !dbg !17282
  br label %return, !dbg !17282

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17283
  ret i32 %8, !dbg !17283
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_if_match(i8* %packet, i8* %etag, i64 %etag_len) #0 !dbg !17284 {
entry:
  %packet.addr = alloca i8*, align 8
  %etag.addr = alloca i8*, align 8
  %etag_len.addr = alloca i64, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17285, metadata !1190), !dbg !17286
  store i8* %etag, i8** %etag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %etag.addr, metadata !17287, metadata !1190), !dbg !17288
  store i64 %etag_len, i64* %etag_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %etag_len.addr, metadata !17289, metadata !1190), !dbg !17290
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17291, metadata !1190), !dbg !17292
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17293
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17294
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17292
  %2 = load i64, i64* %etag_len.addr, align 8, !dbg !17295
  %cmp = icmp ult i64 8, %2, !dbg !17295
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17295

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !17295

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %etag_len.addr, align 8, !dbg !17295
  br label %cond.end, !dbg !17295

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 8, %cond.true ], [ %3, %cond.false ], !dbg !17295
  %conv = trunc i64 %cond to i8, !dbg !17296
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17297
  %if_match_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 24, !dbg !17298
  store i8 %conv, i8* %if_match_len, align 2, !dbg !17299
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17300
  %if_match = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 25, !dbg !17301
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %if_match, i32 0, i32 0, !dbg !17302
  %6 = load i8*, i8** %etag.addr, align 8, !dbg !17303
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17304
  %if_match_len1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 24, !dbg !17305
  %8 = load i8, i8* %if_match_len1, align 2, !dbg !17305
  %conv2 = zext i8 %8 to i64, !dbg !17304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %6, i64 %conv2, i32 1, i1 false), !dbg !17302
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17306
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 5, !dbg !17306
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17306
  %10 = load i8, i8* %arrayidx, align 4, !dbg !17306
  %conv3 = zext i8 %10 to i32, !dbg !17306
  %or = or i32 %conv3, 2, !dbg !17306
  %conv4 = trunc i32 %or to i8, !dbg !17306
  store i8 %conv4, i8* %arrayidx, align 4, !dbg !17306
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17310
  %if_match_len5 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 24, !dbg !17311
  %12 = load i8, i8* %if_match_len5, align 2, !dbg !17311
  %conv6 = zext i8 %12 to i32, !dbg !17310
  ret i32 %conv6, !dbg !17312
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_if_none_match(i8* %packet) #0 !dbg !17313 {
entry:
  %packet.addr = alloca i8*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17316, metadata !1190), !dbg !17317
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17318
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17318
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %1, i32 0, i32 5, !dbg !17318
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17318
  %2 = load i8, i8* %arrayidx, align 4, !dbg !17318
  %conv = zext i8 %2 to i32, !dbg !17318
  %and = and i32 %conv, 32, !dbg !17318
  %tobool = icmp ne i32 %and, 0, !dbg !17318
  %3 = zext i1 %tobool to i64, !dbg !17318
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !17318
  ret i32 %cond, !dbg !17319
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_if_none_match(i8* %packet) #0 !dbg !17320 {
entry:
  %packet.addr = alloca i8*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17321, metadata !1190), !dbg !17322
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17323
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17323
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %1, i32 0, i32 5, !dbg !17323
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17323
  %2 = load i8, i8* %arrayidx, align 4, !dbg !17323
  %conv = zext i8 %2 to i32, !dbg !17323
  %or = or i32 %conv, 32, !dbg !17323
  %conv1 = trunc i32 %or to i8, !dbg !17323
  store i8 %conv1, i8* %arrayidx, align 4, !dbg !17323
  ret i32 1, !dbg !17327
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_token(i8* %packet, i8** %token) #0 !dbg !17328 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %token.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17329, metadata !1190), !dbg !17330
  store i8** %token, i8*** %token.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %token.addr, metadata !17331, metadata !1190), !dbg !17332
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17333, metadata !1190), !dbg !17334
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17335
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17336
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17334
  br i1 true, label %cond.true, label %cond.false, !dbg !17337

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17338
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17338
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17338
  %3 = load i8, i8* %arrayidx, align 2, !dbg !17338
  %conv = zext i8 %3 to i32, !dbg !17338
  %and = and i32 %conv, 8, !dbg !17338
  %tobool = icmp ne i32 %and, 0, !dbg !17338
  br i1 %tobool, label %if.end, label %if.then, !dbg !17338

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17337

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17340
  br label %return, !dbg !17340

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17341
  %token1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 21, !dbg !17342
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %token1, i32 0, i32 0, !dbg !17341
  %5 = load i8**, i8*** %token.addr, align 8, !dbg !17343
  store i8* %arraydecay, i8** %5, align 8, !dbg !17344
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17345
  %token_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 20, !dbg !17346
  %7 = load i8, i8* %token_len, align 4, !dbg !17346
  %conv2 = zext i8 %7 to i32, !dbg !17345
  store i32 %conv2, i32* %retval, align 4, !dbg !17347
  br label %return, !dbg !17347

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17348
  ret i32 %8, !dbg !17348
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_token(i8* %packet, i8* %token, i64 %token_len) #0 !dbg !17349 {
entry:
  %packet.addr = alloca i8*, align 8
  %token.addr = alloca i8*, align 8
  %token_len.addr = alloca i64, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17350, metadata !1190), !dbg !17351
  store i8* %token, i8** %token.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %token.addr, metadata !17352, metadata !1190), !dbg !17353
  store i64 %token_len, i64* %token_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %token_len.addr, metadata !17354, metadata !1190), !dbg !17355
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17356, metadata !1190), !dbg !17357
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17358
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17359
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17357
  %2 = load i64, i64* %token_len.addr, align 8, !dbg !17360
  %cmp = icmp ult i64 8, %2, !dbg !17360
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17360

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !17360

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %token_len.addr, align 8, !dbg !17360
  br label %cond.end, !dbg !17360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 8, %cond.true ], [ %3, %cond.false ], !dbg !17360
  %conv = trunc i64 %cond to i8, !dbg !17361
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17362
  %token_len1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 20, !dbg !17363
  store i8 %conv, i8* %token_len1, align 4, !dbg !17364
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17365
  %token2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 21, !dbg !17366
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %token2, i32 0, i32 0, !dbg !17367
  %6 = load i8*, i8** %token.addr, align 8, !dbg !17368
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17369
  %token_len3 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 20, !dbg !17370
  %8 = load i8, i8* %token_len3, align 4, !dbg !17370
  %conv4 = zext i8 %8 to i64, !dbg !17369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %6, i64 %conv4, i32 1, i1 false), !dbg !17367
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17371
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 5, !dbg !17371
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17371
  %10 = load i8, i8* %arrayidx, align 2, !dbg !17371
  %conv5 = zext i8 %10 to i32, !dbg !17371
  %or = or i32 %conv5, 8, !dbg !17371
  %conv6 = trunc i32 %or to i8, !dbg !17371
  store i8 %conv6, i8* %arrayidx, align 2, !dbg !17371
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17375
  %token_len7 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 20, !dbg !17376
  %12 = load i8, i8* %token_len7, align 4, !dbg !17376
  %conv8 = zext i8 %12 to i32, !dbg !17375
  ret i32 %conv8, !dbg !17377
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_proxy_uri(i8* %packet, i8** %uri) #0 !dbg !17378 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %uri.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17381, metadata !1190), !dbg !17382
  store i8** %uri, i8*** %uri.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %uri.addr, metadata !17383, metadata !1190), !dbg !17384
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17385, metadata !1190), !dbg !17386
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17387
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17388
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17386
  br i1 true, label %cond.true, label %cond.false, !dbg !17389

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17390
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17390
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 4, !dbg !17390
  %3 = load i8, i8* %arrayidx, align 4, !dbg !17390
  %conv = zext i8 %3 to i32, !dbg !17390
  %and = and i32 %conv, 8, !dbg !17390
  %tobool = icmp ne i32 %and, 0, !dbg !17390
  br i1 %tobool, label %if.end, label %if.then, !dbg !17390

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17389

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17392
  br label %return, !dbg !17392

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17393
  %proxy_uri = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 9, !dbg !17394
  %5 = load i8*, i8** %proxy_uri, align 8, !dbg !17394
  %6 = load i8**, i8*** %uri.addr, align 8, !dbg !17395
  store i8* %5, i8** %6, align 8, !dbg !17396
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17397
  %proxy_uri_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 8, !dbg !17398
  %8 = load i64, i64* %proxy_uri_len, align 8, !dbg !17398
  %conv1 = trunc i64 %8 to i32, !dbg !17397
  store i32 %conv1, i32* %retval, align 4, !dbg !17399
  br label %return, !dbg !17399

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !17400
  ret i32 %9, !dbg !17400
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_proxy_uri(i8* %packet, i8* %uri) #0 !dbg !17401 {
entry:
  %packet.addr = alloca i8*, align 8
  %uri.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17404, metadata !1190), !dbg !17405
  store i8* %uri, i8** %uri.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uri.addr, metadata !17406, metadata !1190), !dbg !17407
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17408, metadata !1190), !dbg !17409
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17410
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17411
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17409
  %2 = load i8*, i8** %uri.addr, align 8, !dbg !17412
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17413
  %proxy_uri = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 9, !dbg !17414
  store i8* %2, i8** %proxy_uri, align 8, !dbg !17415
  %4 = load i8*, i8** %uri.addr, align 8, !dbg !17416
  %call = call i64 @strlen(i8* %4) #9, !dbg !17417
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17418
  %proxy_uri_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 8, !dbg !17419
  store i64 %call, i64* %proxy_uri_len, align 8, !dbg !17420
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17421
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 5, !dbg !17421
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 4, !dbg !17421
  %7 = load i8, i8* %arrayidx, align 4, !dbg !17421
  %conv = zext i8 %7 to i32, !dbg !17421
  %or = or i32 %conv, 8, !dbg !17421
  %conv1 = trunc i32 %or to i8, !dbg !17421
  store i8 %conv1, i8* %arrayidx, align 4, !dbg !17421
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17425
  %proxy_uri_len2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 8, !dbg !17426
  %9 = load i64, i64* %proxy_uri_len2, align 8, !dbg !17426
  %conv3 = trunc i64 %9 to i32, !dbg !17425
  ret i32 %conv3, !dbg !17427
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_uri_host(i8* %packet, i8** %host) #0 !dbg !17428 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %host.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17429, metadata !1190), !dbg !17430
  store i8** %host, i8*** %host.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %host.addr, metadata !17431, metadata !1190), !dbg !17432
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17433, metadata !1190), !dbg !17434
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17435
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17436
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17434
  br i1 true, label %cond.true, label %cond.false, !dbg !17437

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17438
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17438
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17438
  %3 = load i8, i8* %arrayidx, align 4, !dbg !17438
  %conv = zext i8 %3 to i32, !dbg !17438
  %and = and i32 %conv, 8, !dbg !17438
  %tobool = icmp ne i32 %and, 0, !dbg !17438
  br i1 %tobool, label %if.end, label %if.then, !dbg !17438

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17437

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17440
  br label %return, !dbg !17440

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17441
  %uri_host = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 13, !dbg !17442
  %5 = load i8*, i8** %uri_host, align 8, !dbg !17442
  %6 = load i8**, i8*** %host.addr, align 8, !dbg !17443
  store i8* %5, i8** %6, align 8, !dbg !17444
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17445
  %uri_host_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 12, !dbg !17446
  %8 = load i64, i64* %uri_host_len, align 8, !dbg !17446
  %conv1 = trunc i64 %8 to i32, !dbg !17445
  store i32 %conv1, i32* %retval, align 4, !dbg !17447
  br label %return, !dbg !17447

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !17448
  ret i32 %9, !dbg !17448
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_uri_host(i8* %packet, i8* %host) #0 !dbg !17449 {
entry:
  %packet.addr = alloca i8*, align 8
  %host.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17450, metadata !1190), !dbg !17451
  store i8* %host, i8** %host.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %host.addr, metadata !17452, metadata !1190), !dbg !17453
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17454, metadata !1190), !dbg !17455
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17456
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17457
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17455
  %2 = load i8*, i8** %host.addr, align 8, !dbg !17458
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17459
  %uri_host = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 13, !dbg !17460
  store i8* %2, i8** %uri_host, align 8, !dbg !17461
  %4 = load i8*, i8** %host.addr, align 8, !dbg !17462
  %call = call i64 @strlen(i8* %4) #9, !dbg !17463
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17464
  %uri_host_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 12, !dbg !17465
  store i64 %call, i64* %uri_host_len, align 8, !dbg !17466
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17467
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 5, !dbg !17467
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17467
  %7 = load i8, i8* %arrayidx, align 4, !dbg !17467
  %conv = zext i8 %7 to i32, !dbg !17467
  %or = or i32 %conv, 8, !dbg !17467
  %conv1 = trunc i32 %or to i8, !dbg !17467
  store i8 %conv1, i8* %arrayidx, align 4, !dbg !17467
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17471
  %uri_host_len2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 12, !dbg !17472
  %9 = load i64, i64* %uri_host_len2, align 8, !dbg !17472
  %conv3 = trunc i64 %9 to i32, !dbg !17471
  ret i32 %conv3, !dbg !17473
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_uri_path(i8* %packet, i8** %path) #0 !dbg !17474 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %path.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17475, metadata !1190), !dbg !17476
  store i8** %path, i8*** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %path.addr, metadata !17477, metadata !1190), !dbg !17478
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17479, metadata !1190), !dbg !17480
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17481
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17482
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17480
  br i1 true, label %cond.true, label %cond.false, !dbg !17483

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17484
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17484
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17484
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17484
  %conv = zext i8 %3 to i32, !dbg !17484
  %and = and i32 %conv, 8, !dbg !17484
  %tobool = icmp ne i32 %and, 0, !dbg !17484
  br i1 %tobool, label %if.end, label %if.then, !dbg !17484

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17483

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17486
  br label %return, !dbg !17486

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load i8**, i8*** %path.addr, align 8, !dbg !17487
  store i8* null, i8** %4, align 8, !dbg !17488
  store i32 0, i32* %retval, align 4, !dbg !17489
  br label %return, !dbg !17489

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !17490
  ret i32 %5, !dbg !17490
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_uri_path(i8* %packet, i8* %path) #0 !dbg !17491 {
entry:
  %packet.addr = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17492, metadata !1190), !dbg !17493
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !17494, metadata !1190), !dbg !17495
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17496, metadata !1190), !dbg !17497
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17498
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17499
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17497
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17500, metadata !1190), !dbg !17501
  store i32 0, i32* %length, align 4, !dbg !17501
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17502
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 18, !dbg !17503
  %3 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_path, align 8, !dbg !17503
  call void @free_multi_option(%struct._multi_option_t* %3), !dbg !17504
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17505
  %uri_path1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 18, !dbg !17506
  store %struct._multi_option_t* null, %struct._multi_option_t** %uri_path1, align 8, !dbg !17507
  %5 = load i8*, i8** %path.addr, align 8, !dbg !17508
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !17508
  %6 = load i8, i8* %arrayidx, align 1, !dbg !17508
  %conv = sext i8 %6 to i32, !dbg !17508
  %cmp = icmp eq i32 %conv, 47, !dbg !17510
  br i1 %cmp, label %if.then, label %if.end, !dbg !17511

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %path.addr, align 8, !dbg !17512
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !17512
  store i8* %incdec.ptr, i8** %path.addr, align 8, !dbg !17512
  br label %if.end, !dbg !17512

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !17513, !llvm.loop !17514

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17516, metadata !1190), !dbg !17518
  store i32 0, i32* %i, align 4, !dbg !17518
  br label %while.cond, !dbg !17519

while.cond:                                       ; preds = %while.body, %do.body
  %8 = load i8*, i8** %path.addr, align 8, !dbg !17520
  %9 = load i32, i32* %i, align 4, !dbg !17521
  %idxprom = sext i32 %9 to i64, !dbg !17520
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !17520
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !17520
  %conv4 = sext i8 %10 to i32, !dbg !17520
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !17522
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !17523

land.rhs:                                         ; preds = %while.cond
  %11 = load i8*, i8** %path.addr, align 8, !dbg !17524
  %12 = load i32, i32* %i, align 4, !dbg !17525
  %idxprom7 = sext i32 %12 to i64, !dbg !17524
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %idxprom7, !dbg !17524
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !17524
  %conv9 = sext i8 %13 to i32, !dbg !17524
  %cmp10 = icmp ne i32 %conv9, 47, !dbg !17526
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !17519

while.body:                                       ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !17527
  %inc = add nsw i32 %15, 1, !dbg !17527
  store i32 %inc, i32* %i, align 4, !dbg !17527
  br label %while.cond, !dbg !17519, !llvm.loop !17528

while.end:                                        ; preds = %land.end
  %16 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17529
  %uri_path12 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %16, i32 0, i32 18, !dbg !17530
  %17 = load i8*, i8** %path.addr, align 8, !dbg !17531
  %18 = load i32, i32* %i, align 4, !dbg !17532
  %conv13 = sext i32 %18 to i64, !dbg !17532
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_path12, i8* %17, i64 %conv13, i8 zeroext 0), !dbg !17533
  %19 = load i8*, i8** %path.addr, align 8, !dbg !17534
  %20 = load i32, i32* %i, align 4, !dbg !17536
  %idxprom14 = sext i32 %20 to i64, !dbg !17534
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 %idxprom14, !dbg !17534
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !17534
  %conv16 = sext i8 %21 to i32, !dbg !17534
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !17537
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !17538

if.then19:                                        ; preds = %while.end
  %22 = load i32, i32* %i, align 4, !dbg !17539
  %inc20 = add nsw i32 %22, 1, !dbg !17539
  store i32 %inc20, i32* %i, align 4, !dbg !17539
  br label %if.end21, !dbg !17540

if.end21:                                         ; preds = %if.then19, %while.end
  %23 = load i32, i32* %i, align 4, !dbg !17541
  %24 = load i8*, i8** %path.addr, align 8, !dbg !17542
  %idx.ext = sext i32 %23 to i64, !dbg !17542
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !17542
  store i8* %add.ptr, i8** %path.addr, align 8, !dbg !17542
  %25 = load i32, i32* %i, align 4, !dbg !17543
  %26 = load i32, i32* %length, align 4, !dbg !17544
  %add = add nsw i32 %26, %25, !dbg !17544
  store i32 %add, i32* %length, align 4, !dbg !17544
  br label %do.cond, !dbg !17545

do.cond:                                          ; preds = %if.end21
  %27 = load i8*, i8** %path.addr, align 8, !dbg !17546
  %arrayidx22 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !17546
  %28 = load i8, i8* %arrayidx22, align 1, !dbg !17546
  %conv23 = sext i8 %28 to i32, !dbg !17546
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !17547
  br i1 %cmp24, label %do.body, label %do.end, !dbg !17545, !llvm.loop !17514

do.end:                                           ; preds = %do.cond
  %29 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17548
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %29, i32 0, i32 5, !dbg !17548
  %arrayidx26 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17548
  %30 = load i8, i8* %arrayidx26, align 1, !dbg !17548
  %conv27 = zext i8 %30 to i32, !dbg !17548
  %or = or i32 %conv27, 8, !dbg !17548
  %conv28 = trunc i32 %or to i8, !dbg !17548
  store i8 %conv28, i8* %arrayidx26, align 1, !dbg !17548
  %31 = load i32, i32* %length, align 4, !dbg !17552
  ret i32 %31, !dbg !17553
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_uri_path_segment(i8* %packet, i8* %segment) #0 !dbg !17554 {
entry:
  %packet.addr = alloca i8*, align 8
  %segment.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %length = alloca i32, align 4
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17555, metadata !1190), !dbg !17556
  store i8* %segment, i8** %segment.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %segment.addr, metadata !17557, metadata !1190), !dbg !17558
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17559, metadata !1190), !dbg !17560
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17561
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17562
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17560
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17563, metadata !1190), !dbg !17564
  %2 = load i8*, i8** %segment.addr, align 8, !dbg !17565
  %cmp = icmp eq i8* %2, null, !dbg !17567
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17568

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %segment.addr, align 8, !dbg !17569
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !17569
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17569
  %conv = sext i8 %4 to i32, !dbg !17569
  %cmp1 = icmp eq i32 %conv, 0, !dbg !17570
  br i1 %cmp1, label %if.then, label %if.else, !dbg !17571

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17572
  %uri_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 18, !dbg !17574
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_path, i8* null, i64 0, i8 zeroext 1), !dbg !17575
  store i32 0, i32* %length, align 4, !dbg !17576
  br label %if.end, !dbg !17577

if.else:                                          ; preds = %lor.lhs.false
  %6 = load i8*, i8** %segment.addr, align 8, !dbg !17578
  %call = call i64 @strlen(i8* %6) #9, !dbg !17580
  %conv3 = trunc i64 %call to i32, !dbg !17580
  store i32 %conv3, i32* %length, align 4, !dbg !17581
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17582
  %uri_path4 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 18, !dbg !17583
  %8 = load i8*, i8** %segment.addr, align 8, !dbg !17584
  %9 = load i32, i32* %length, align 4, !dbg !17585
  %conv5 = sext i32 %9 to i64, !dbg !17585
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_path4, i8* %8, i64 %conv5, i8 zeroext 0), !dbg !17586
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17587
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 5, !dbg !17587
  %arrayidx6 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17587
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !17587
  %conv7 = zext i8 %11 to i32, !dbg !17587
  %or = or i32 %conv7, 8, !dbg !17587
  %conv8 = trunc i32 %or to i8, !dbg !17587
  store i8 %conv8, i8* %arrayidx6, align 1, !dbg !17587
  %12 = load i32, i32* %length, align 4, !dbg !17591
  ret i32 %12, !dbg !17592
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_uri_query(i8* %packet, i8** %query) #0 !dbg !17593 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %query.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17594, metadata !1190), !dbg !17595
  store i8** %query, i8*** %query.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %query.addr, metadata !17596, metadata !1190), !dbg !17597
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17598, metadata !1190), !dbg !17599
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17600
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17601
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17599
  br i1 true, label %cond.true, label %cond.false, !dbg !17602

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17603
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17603
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17603
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17603
  %conv = zext i8 %3 to i32, !dbg !17603
  %and = and i32 %conv, 128, !dbg !17603
  %tobool = icmp ne i32 %and, 0, !dbg !17603
  br i1 %tobool, label %if.end, label %if.then, !dbg !17603

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17602

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17605
  br label %return, !dbg !17605

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load i8**, i8*** %query.addr, align 8, !dbg !17606
  store i8* null, i8** %4, align 8, !dbg !17607
  store i32 0, i32* %retval, align 4, !dbg !17608
  br label %return, !dbg !17608

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !17609
  ret i32 %5, !dbg !17609
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_uri_query(i8* %packet, i8* %query) #0 !dbg !17610 {
entry:
  %packet.addr = alloca i8*, align 8
  %query.addr = alloca i8*, align 8
  %length = alloca i32, align 4
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %i = alloca i32, align 4
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17611, metadata !1190), !dbg !17612
  store i8* %query, i8** %query.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %query.addr, metadata !17613, metadata !1190), !dbg !17614
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17615, metadata !1190), !dbg !17616
  store i32 0, i32* %length, align 4, !dbg !17616
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17617, metadata !1190), !dbg !17618
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17619
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17620
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17618
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17621
  %uri_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 35, !dbg !17622
  %3 = load %struct._multi_option_t*, %struct._multi_option_t** %uri_query, align 8, !dbg !17622
  call void @free_multi_option(%struct._multi_option_t* %3), !dbg !17623
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17624
  %uri_query1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 35, !dbg !17625
  store %struct._multi_option_t* null, %struct._multi_option_t** %uri_query1, align 8, !dbg !17626
  %5 = load i8*, i8** %query.addr, align 8, !dbg !17627
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !17627
  %6 = load i8, i8* %arrayidx, align 1, !dbg !17627
  %conv = sext i8 %6 to i32, !dbg !17627
  %cmp = icmp eq i32 %conv, 63, !dbg !17629
  br i1 %cmp, label %if.then, label %if.end, !dbg !17630

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %query.addr, align 8, !dbg !17631
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !17631
  store i8* %incdec.ptr, i8** %query.addr, align 8, !dbg !17631
  br label %if.end, !dbg !17631

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !17632, !llvm.loop !17633

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17635, metadata !1190), !dbg !17637
  store i32 0, i32* %i, align 4, !dbg !17637
  br label %while.cond, !dbg !17638

while.cond:                                       ; preds = %while.body, %do.body
  %8 = load i8*, i8** %query.addr, align 8, !dbg !17639
  %9 = load i32, i32* %i, align 4, !dbg !17640
  %idxprom = sext i32 %9 to i64, !dbg !17639
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !17639
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !17639
  %conv4 = sext i8 %10 to i32, !dbg !17639
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !17641
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !17642

land.rhs:                                         ; preds = %while.cond
  %11 = load i8*, i8** %query.addr, align 8, !dbg !17643
  %12 = load i32, i32* %i, align 4, !dbg !17644
  %idxprom7 = sext i32 %12 to i64, !dbg !17643
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %idxprom7, !dbg !17643
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !17643
  %conv9 = sext i8 %13 to i32, !dbg !17643
  %cmp10 = icmp ne i32 %conv9, 38, !dbg !17645
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !17638

while.body:                                       ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !17646
  %inc = add nsw i32 %15, 1, !dbg !17646
  store i32 %inc, i32* %i, align 4, !dbg !17646
  br label %while.cond, !dbg !17638, !llvm.loop !17647

while.end:                                        ; preds = %land.end
  %16 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17648
  %uri_query12 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %16, i32 0, i32 35, !dbg !17649
  %17 = load i8*, i8** %query.addr, align 8, !dbg !17650
  %18 = load i32, i32* %i, align 4, !dbg !17651
  %conv13 = sext i32 %18 to i64, !dbg !17651
  call void @coap_add_multi_option(%struct._multi_option_t** %uri_query12, i8* %17, i64 %conv13, i8 zeroext 0), !dbg !17652
  %19 = load i8*, i8** %query.addr, align 8, !dbg !17653
  %20 = load i32, i32* %i, align 4, !dbg !17655
  %idxprom14 = sext i32 %20 to i64, !dbg !17653
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 %idxprom14, !dbg !17653
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !17653
  %conv16 = sext i8 %21 to i32, !dbg !17653
  %cmp17 = icmp eq i32 %conv16, 38, !dbg !17656
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !17657

if.then19:                                        ; preds = %while.end
  %22 = load i32, i32* %i, align 4, !dbg !17658
  %inc20 = add nsw i32 %22, 1, !dbg !17658
  store i32 %inc20, i32* %i, align 4, !dbg !17658
  br label %if.end21, !dbg !17659

if.end21:                                         ; preds = %if.then19, %while.end
  %23 = load i32, i32* %i, align 4, !dbg !17660
  %24 = load i8*, i8** %query.addr, align 8, !dbg !17661
  %idx.ext = sext i32 %23 to i64, !dbg !17661
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !17661
  store i8* %add.ptr, i8** %query.addr, align 8, !dbg !17661
  %25 = load i32, i32* %i, align 4, !dbg !17662
  %26 = load i32, i32* %length, align 4, !dbg !17663
  %add = add nsw i32 %26, %25, !dbg !17663
  store i32 %add, i32* %length, align 4, !dbg !17663
  br label %do.cond, !dbg !17664

do.cond:                                          ; preds = %if.end21
  %27 = load i8*, i8** %query.addr, align 8, !dbg !17665
  %arrayidx22 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !17665
  %28 = load i8, i8* %arrayidx22, align 1, !dbg !17665
  %conv23 = sext i8 %28 to i32, !dbg !17665
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !17666
  br i1 %cmp24, label %do.body, label %do.end, !dbg !17664, !llvm.loop !17633

do.end:                                           ; preds = %do.cond
  %29 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17667
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %29, i32 0, i32 5, !dbg !17667
  %arrayidx26 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17667
  %30 = load i8, i8* %arrayidx26, align 1, !dbg !17667
  %conv27 = zext i8 %30 to i32, !dbg !17667
  %or = or i32 %conv27, 128, !dbg !17667
  %conv28 = trunc i32 %or to i8, !dbg !17667
  store i8 %conv28, i8* %arrayidx26, align 1, !dbg !17667
  %31 = load i32, i32* %length, align 4, !dbg !17671
  ret i32 %31, !dbg !17672
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_location_path(i8* %packet, i8** %path) #0 !dbg !17673 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %path.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17674, metadata !1190), !dbg !17675
  store i8** %path, i8*** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %path.addr, metadata !17676, metadata !1190), !dbg !17677
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17678, metadata !1190), !dbg !17679
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17680
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17681
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17679
  br i1 true, label %cond.true, label %cond.false, !dbg !17682

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17683
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17683
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17683
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17683
  %conv = zext i8 %3 to i32, !dbg !17683
  %and = and i32 %conv, 1, !dbg !17683
  %tobool = icmp ne i32 %and, 0, !dbg !17683
  br i1 %tobool, label %if.end, label %if.then, !dbg !17683

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17682

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17685
  br label %return, !dbg !17685

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load i8**, i8*** %path.addr, align 8, !dbg !17686
  store i8* null, i8** %4, align 8, !dbg !17687
  store i32 0, i32* %retval, align 4, !dbg !17688
  br label %return, !dbg !17688

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !17689
  ret i32 %5, !dbg !17689
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_location_path(i8* %packet, i8* %path) #0 !dbg !17690 {
entry:
  %packet.addr = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17691, metadata !1190), !dbg !17692
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !17693, metadata !1190), !dbg !17694
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17695, metadata !1190), !dbg !17696
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17697
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17698
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17696
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17699, metadata !1190), !dbg !17700
  store i32 0, i32* %length, align 4, !dbg !17700
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17701
  %location_path = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 14, !dbg !17702
  %3 = load %struct._multi_option_t*, %struct._multi_option_t** %location_path, align 8, !dbg !17702
  call void @free_multi_option(%struct._multi_option_t* %3), !dbg !17703
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17704
  %location_path1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 14, !dbg !17705
  store %struct._multi_option_t* null, %struct._multi_option_t** %location_path1, align 8, !dbg !17706
  %5 = load i8*, i8** %path.addr, align 8, !dbg !17707
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !17707
  %6 = load i8, i8* %arrayidx, align 1, !dbg !17707
  %conv = sext i8 %6 to i32, !dbg !17707
  %cmp = icmp eq i32 %conv, 47, !dbg !17709
  br i1 %cmp, label %if.then, label %if.end, !dbg !17710

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %path.addr, align 8, !dbg !17711
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !17711
  store i8* %incdec.ptr, i8** %path.addr, align 8, !dbg !17711
  br label %if.end, !dbg !17711

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !17712, !llvm.loop !17713

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17715, metadata !1190), !dbg !17717
  store i32 0, i32* %i, align 4, !dbg !17717
  br label %while.cond, !dbg !17718

while.cond:                                       ; preds = %while.body, %do.body
  %8 = load i8*, i8** %path.addr, align 8, !dbg !17719
  %9 = load i32, i32* %i, align 4, !dbg !17720
  %idxprom = sext i32 %9 to i64, !dbg !17719
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !17719
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !17719
  %conv4 = sext i8 %10 to i32, !dbg !17719
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !17721
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !17722

land.rhs:                                         ; preds = %while.cond
  %11 = load i8*, i8** %path.addr, align 8, !dbg !17723
  %12 = load i32, i32* %i, align 4, !dbg !17724
  %idxprom7 = sext i32 %12 to i64, !dbg !17723
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %idxprom7, !dbg !17723
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !17723
  %conv9 = sext i8 %13 to i32, !dbg !17723
  %cmp10 = icmp ne i32 %conv9, 47, !dbg !17725
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !17718

while.body:                                       ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !17726
  %inc = add nsw i32 %15, 1, !dbg !17726
  store i32 %inc, i32* %i, align 4, !dbg !17726
  br label %while.cond, !dbg !17718, !llvm.loop !17727

while.end:                                        ; preds = %land.end
  %16 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17728
  %location_path12 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %16, i32 0, i32 14, !dbg !17729
  %17 = load i8*, i8** %path.addr, align 8, !dbg !17730
  %18 = load i32, i32* %i, align 4, !dbg !17731
  %conv13 = sext i32 %18 to i64, !dbg !17731
  call void @coap_add_multi_option(%struct._multi_option_t** %location_path12, i8* %17, i64 %conv13, i8 zeroext 0), !dbg !17732
  %19 = load i8*, i8** %path.addr, align 8, !dbg !17733
  %20 = load i32, i32* %i, align 4, !dbg !17735
  %idxprom14 = sext i32 %20 to i64, !dbg !17733
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 %idxprom14, !dbg !17733
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !17733
  %conv16 = sext i8 %21 to i32, !dbg !17733
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !17736
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !17737

if.then19:                                        ; preds = %while.end
  %22 = load i32, i32* %i, align 4, !dbg !17738
  %inc20 = add nsw i32 %22, 1, !dbg !17738
  store i32 %inc20, i32* %i, align 4, !dbg !17738
  br label %if.end21, !dbg !17739

if.end21:                                         ; preds = %if.then19, %while.end
  %23 = load i32, i32* %i, align 4, !dbg !17740
  %24 = load i8*, i8** %path.addr, align 8, !dbg !17741
  %idx.ext = sext i32 %23 to i64, !dbg !17741
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !17741
  store i8* %add.ptr, i8** %path.addr, align 8, !dbg !17741
  %25 = load i32, i32* %i, align 4, !dbg !17742
  %26 = load i32, i32* %length, align 4, !dbg !17743
  %add = add nsw i32 %26, %25, !dbg !17743
  store i32 %add, i32* %length, align 4, !dbg !17743
  br label %do.cond, !dbg !17744

do.cond:                                          ; preds = %if.end21
  %27 = load i8*, i8** %path.addr, align 8, !dbg !17745
  %arrayidx22 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !17745
  %28 = load i8, i8* %arrayidx22, align 1, !dbg !17745
  %conv23 = sext i8 %28 to i32, !dbg !17745
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !17746
  br i1 %cmp24, label %do.body, label %do.end, !dbg !17744, !llvm.loop !17713

do.end:                                           ; preds = %do.cond
  %29 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17747
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %29, i32 0, i32 5, !dbg !17747
  %arrayidx26 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 1, !dbg !17747
  %30 = load i8, i8* %arrayidx26, align 1, !dbg !17747
  %conv27 = zext i8 %30 to i32, !dbg !17747
  %or = or i32 %conv27, 1, !dbg !17747
  %conv28 = trunc i32 %or to i8, !dbg !17747
  store i8 %conv28, i8* %arrayidx26, align 1, !dbg !17747
  %31 = load i32, i32* %length, align 4, !dbg !17751
  ret i32 %31, !dbg !17752
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_location_query(i8* %packet, i8** %query) #0 !dbg !17753 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %query.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17754, metadata !1190), !dbg !17755
  store i8** %query, i8*** %query.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %query.addr, metadata !17756, metadata !1190), !dbg !17757
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17758, metadata !1190), !dbg !17759
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17760
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17761
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17759
  br i1 true, label %cond.true, label %cond.false, !dbg !17762

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17763
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17763
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17763
  %3 = load i8, i8* %arrayidx, align 2, !dbg !17763
  %conv = zext i8 %3 to i32, !dbg !17763
  %and = and i32 %conv, 16, !dbg !17763
  %tobool = icmp ne i32 %and, 0, !dbg !17763
  br i1 %tobool, label %if.end, label %if.then, !dbg !17763

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17762

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17765
  br label %return, !dbg !17765

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17766
  %location_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 17, !dbg !17767
  %5 = load i8*, i8** %location_query, align 8, !dbg !17767
  %6 = load i8**, i8*** %query.addr, align 8, !dbg !17768
  store i8* %5, i8** %6, align 8, !dbg !17769
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17770
  %location_query_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 16, !dbg !17771
  %8 = load i64, i64* %location_query_len, align 8, !dbg !17771
  %conv1 = trunc i64 %8 to i32, !dbg !17770
  store i32 %conv1, i32* %retval, align 4, !dbg !17772
  br label %return, !dbg !17772

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !17773
  ret i32 %9, !dbg !17773
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_location_query(i8* %packet, i8* %query) #0 !dbg !17774 {
entry:
  %packet.addr = alloca i8*, align 8
  %query.addr = alloca i8*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17777, metadata !1190), !dbg !17778
  store i8* %query, i8** %query.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %query.addr, metadata !17779, metadata !1190), !dbg !17780
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17781, metadata !1190), !dbg !17782
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17783
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17784
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17782
  br label %while.cond, !dbg !17785

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %query.addr, align 8, !dbg !17786
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !17786
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17786
  %conv = sext i8 %3 to i32, !dbg !17786
  %cmp = icmp eq i32 %conv, 63, !dbg !17787
  br i1 %cmp, label %while.body, label %while.end, !dbg !17785

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %query.addr, align 8, !dbg !17788
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !17788
  store i8* %incdec.ptr, i8** %query.addr, align 8, !dbg !17788
  br label %while.cond, !dbg !17785, !llvm.loop !17789

while.end:                                        ; preds = %while.cond
  %5 = load i8*, i8** %query.addr, align 8, !dbg !17791
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17792
  %location_query = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 17, !dbg !17793
  store i8* %5, i8** %location_query, align 8, !dbg !17794
  %7 = load i8*, i8** %query.addr, align 8, !dbg !17795
  %call = call i64 @strlen(i8* %7) #9, !dbg !17796
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17797
  %location_query_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 16, !dbg !17798
  store i64 %call, i64* %location_query_len, align 8, !dbg !17799
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17800
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 5, !dbg !17800
  %arrayidx2 = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17800
  %10 = load i8, i8* %arrayidx2, align 2, !dbg !17800
  %conv3 = zext i8 %10 to i32, !dbg !17800
  %or = or i32 %conv3, 16, !dbg !17800
  %conv4 = trunc i32 %or to i8, !dbg !17800
  store i8 %conv4, i8* %arrayidx2, align 2, !dbg !17800
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17804
  %location_query_len5 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 16, !dbg !17805
  %12 = load i64, i64* %location_query_len5, align 8, !dbg !17805
  %conv6 = trunc i64 %12 to i32, !dbg !17804
  ret i32 %conv6, !dbg !17806
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_observe(i8* %packet, i32* %observe) #0 !dbg !17807 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %observe.addr = alloca i32*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17808, metadata !1190), !dbg !17809
  store i32* %observe, i32** %observe.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %observe.addr, metadata !17810, metadata !1190), !dbg !17811
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17812, metadata !1190), !dbg !17813
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17814
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17815
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17813
  br i1 true, label %cond.true, label %cond.false, !dbg !17816

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17817
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17817
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17817
  %3 = load i8, i8* %arrayidx, align 4, !dbg !17817
  %conv = zext i8 %3 to i32, !dbg !17817
  %and = and i32 %conv, 64, !dbg !17817
  %tobool = icmp ne i32 %and, 0, !dbg !17817
  br i1 %tobool, label %if.end, label %if.then, !dbg !17817

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17816

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17819
  br label %return, !dbg !17819

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17820
  %observe1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 19, !dbg !17821
  %5 = load i32, i32* %observe1, align 8, !dbg !17821
  %6 = load i32*, i32** %observe.addr, align 8, !dbg !17822
  store i32 %5, i32* %6, align 4, !dbg !17823
  store i32 1, i32* %retval, align 4, !dbg !17824
  br label %return, !dbg !17824

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !17825
  ret i32 %7, !dbg !17825
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_observe(i8* %packet, i32 %observe) #0 !dbg !17826 {
entry:
  %packet.addr = alloca i8*, align 8
  %observe.addr = alloca i32, align 4
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17827, metadata !1190), !dbg !17828
  store i32 %observe, i32* %observe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %observe.addr, metadata !17829, metadata !1190), !dbg !17830
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17831, metadata !1190), !dbg !17832
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17833
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17834
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17832
  %2 = load i32, i32* %observe.addr, align 4, !dbg !17835
  %and = and i32 16777215, %2, !dbg !17836
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17837
  %observe1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 19, !dbg !17838
  store i32 %and, i32* %observe1, align 8, !dbg !17839
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17840
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 5, !dbg !17840
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 0, !dbg !17840
  %5 = load i8, i8* %arrayidx, align 4, !dbg !17840
  %conv = zext i8 %5 to i32, !dbg !17840
  %or = or i32 %conv, 64, !dbg !17840
  %conv2 = trunc i32 %or to i8, !dbg !17840
  store i8 %conv2, i8* %arrayidx, align 4, !dbg !17840
  ret i32 1, !dbg !17844
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_block2(i8* %packet, i32* %num, i8* %more, i16* %size, i32* %offset) #0 !dbg !17845 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %num.addr = alloca i32*, align 8
  %more.addr = alloca i8*, align 8
  %size.addr = alloca i16*, align 8
  %offset.addr = alloca i32*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17848, metadata !1190), !dbg !17849
  store i32* %num, i32** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num.addr, metadata !17850, metadata !1190), !dbg !17851
  store i8* %more, i8** %more.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %more.addr, metadata !17852, metadata !1190), !dbg !17853
  store i16* %size, i16** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %size.addr, metadata !17854, metadata !1190), !dbg !17855
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !17856, metadata !1190), !dbg !17857
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17858, metadata !1190), !dbg !17859
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17860
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17861
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17859
  br i1 true, label %cond.true, label %cond.false, !dbg !17862

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17863
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17863
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17863
  %3 = load i8, i8* %arrayidx, align 2, !dbg !17863
  %conv = zext i8 %3 to i32, !dbg !17863
  %and = and i32 %conv, 128, !dbg !17863
  %tobool = icmp ne i32 %and, 0, !dbg !17863
  br i1 %tobool, label %if.end, label %if.then, !dbg !17863

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17862

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17865
  br label %return, !dbg !17865

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load i32*, i32** %num.addr, align 8, !dbg !17866
  %cmp = icmp ne i32* %4, null, !dbg !17868
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !17869

if.then2:                                         ; preds = %if.end
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17870
  %block2_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 26, !dbg !17871
  %6 = load i32, i32* %block2_num, align 4, !dbg !17871
  %7 = load i32*, i32** %num.addr, align 8, !dbg !17872
  store i32 %6, i32* %7, align 4, !dbg !17873
  br label %if.end3, !dbg !17874

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load i8*, i8** %more.addr, align 8, !dbg !17875
  %cmp4 = icmp ne i8* %8, null, !dbg !17877
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !17878

if.then6:                                         ; preds = %if.end3
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17879
  %block2_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 27, !dbg !17880
  %10 = load i8, i8* %block2_more, align 8, !dbg !17880
  %11 = load i8*, i8** %more.addr, align 8, !dbg !17881
  store i8 %10, i8* %11, align 1, !dbg !17882
  br label %if.end7, !dbg !17883

if.end7:                                          ; preds = %if.then6, %if.end3
  %12 = load i16*, i16** %size.addr, align 8, !dbg !17884
  %cmp8 = icmp ne i16* %12, null, !dbg !17886
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !17887

if.then10:                                        ; preds = %if.end7
  %13 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17888
  %block2_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %13, i32 0, i32 28, !dbg !17889
  %14 = load i16, i16* %block2_size, align 2, !dbg !17889
  %15 = load i16*, i16** %size.addr, align 8, !dbg !17890
  store i16 %14, i16* %15, align 2, !dbg !17891
  br label %if.end11, !dbg !17892

if.end11:                                         ; preds = %if.then10, %if.end7
  %16 = load i32*, i32** %offset.addr, align 8, !dbg !17893
  %cmp12 = icmp ne i32* %16, null, !dbg !17895
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !17896

if.then14:                                        ; preds = %if.end11
  %17 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17897
  %block2_offset = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %17, i32 0, i32 29, !dbg !17898
  %18 = load i32, i32* %block2_offset, align 4, !dbg !17898
  %19 = load i32*, i32** %offset.addr, align 8, !dbg !17899
  store i32 %18, i32* %19, align 4, !dbg !17900
  br label %if.end15, !dbg !17901

if.end15:                                         ; preds = %if.then14, %if.end11
  store i32 1, i32* %retval, align 4, !dbg !17902
  br label %return, !dbg !17902

return:                                           ; preds = %if.end15, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !17903
  ret i32 %20, !dbg !17903
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_block2(i8* %packet, i32 %num, i8 zeroext %more, i16 zeroext %size) #0 !dbg !17904 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %num.addr = alloca i32, align 4
  %more.addr = alloca i8, align 1
  %size.addr = alloca i16, align 2
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17907, metadata !1190), !dbg !17908
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !17909, metadata !1190), !dbg !17910
  store i8 %more, i8* %more.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %more.addr, metadata !17911, metadata !1190), !dbg !17912
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !17913, metadata !1190), !dbg !17914
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17915, metadata !1190), !dbg !17916
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17917
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17918
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17916
  %2 = load i16, i16* %size.addr, align 2, !dbg !17919
  %conv = zext i16 %2 to i32, !dbg !17919
  %cmp = icmp slt i32 %conv, 16, !dbg !17921
  br i1 %cmp, label %if.then, label %if.end, !dbg !17922

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17923
  br label %return, !dbg !17923

if.end:                                           ; preds = %entry
  %3 = load i16, i16* %size.addr, align 2, !dbg !17924
  %conv2 = zext i16 %3 to i32, !dbg !17924
  %cmp3 = icmp sgt i32 %conv2, 2048, !dbg !17926
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !17927

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !17928
  br label %return, !dbg !17928

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %num.addr, align 4, !dbg !17929
  %cmp7 = icmp ugt i32 %4, 1048575, !dbg !17931
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !17932

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !17933
  br label %return, !dbg !17933

if.end10:                                         ; preds = %if.end6
  %5 = load i32, i32* %num.addr, align 4, !dbg !17934
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17935
  %block2_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 26, !dbg !17936
  store i32 %5, i32* %block2_num, align 4, !dbg !17937
  %7 = load i8, i8* %more.addr, align 1, !dbg !17938
  %conv11 = zext i8 %7 to i32, !dbg !17938
  %tobool = icmp ne i32 %conv11, 0, !dbg !17938
  %8 = zext i1 %tobool to i64, !dbg !17938
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !17938
  %conv12 = trunc i32 %cond to i8, !dbg !17938
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17939
  %block2_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 27, !dbg !17940
  store i8 %conv12, i8* %block2_more, align 8, !dbg !17941
  %10 = load i16, i16* %size.addr, align 2, !dbg !17942
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17943
  %block2_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 28, !dbg !17944
  store i16 %10, i16* %block2_size, align 2, !dbg !17945
  %12 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17946
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %12, i32 0, i32 5, !dbg !17946
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 2, !dbg !17946
  %13 = load i8, i8* %arrayidx, align 2, !dbg !17946
  %conv13 = zext i8 %13 to i32, !dbg !17946
  %or = or i32 %conv13, 128, !dbg !17946
  %conv14 = trunc i32 %or to i8, !dbg !17946
  store i8 %conv14, i8* %arrayidx, align 2, !dbg !17946
  store i32 1, i32* %retval, align 4, !dbg !17950
  br label %return, !dbg !17950

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !17951
  ret i32 %14, !dbg !17951
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_block1(i8* %packet, i32* %num, i8* %more, i16* %size, i32* %offset) #0 !dbg !17952 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %num.addr = alloca i32*, align 8
  %more.addr = alloca i8*, align 8
  %size.addr = alloca i16*, align 8
  %offset.addr = alloca i32*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !17953, metadata !1190), !dbg !17954
  store i32* %num, i32** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num.addr, metadata !17955, metadata !1190), !dbg !17956
  store i8* %more, i8** %more.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %more.addr, metadata !17957, metadata !1190), !dbg !17958
  store i16* %size, i16** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %size.addr, metadata !17959, metadata !1190), !dbg !17960
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !17961, metadata !1190), !dbg !17962
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !17963, metadata !1190), !dbg !17964
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !17965
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !17966
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17964
  br i1 true, label %cond.true, label %cond.false, !dbg !17967

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17968
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !17968
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 3, !dbg !17968
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17968
  %conv = zext i8 %3 to i32, !dbg !17968
  %and = and i32 %conv, 8, !dbg !17968
  %tobool = icmp ne i32 %and, 0, !dbg !17968
  br i1 %tobool, label %if.end, label %if.then, !dbg !17968

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !17967

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !17970
  br label %return, !dbg !17970

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load i32*, i32** %num.addr, align 8, !dbg !17971
  %cmp = icmp ne i32* %4, null, !dbg !17973
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !17974

if.then2:                                         ; preds = %if.end
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17975
  %block1_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 30, !dbg !17976
  %6 = load i32, i32* %block1_num, align 8, !dbg !17976
  %7 = load i32*, i32** %num.addr, align 8, !dbg !17977
  store i32 %6, i32* %7, align 4, !dbg !17978
  br label %if.end3, !dbg !17979

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load i8*, i8** %more.addr, align 8, !dbg !17980
  %cmp4 = icmp ne i8* %8, null, !dbg !17982
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !17983

if.then6:                                         ; preds = %if.end3
  %9 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17984
  %block1_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %9, i32 0, i32 31, !dbg !17985
  %10 = load i8, i8* %block1_more, align 4, !dbg !17985
  %11 = load i8*, i8** %more.addr, align 8, !dbg !17986
  store i8 %10, i8* %11, align 1, !dbg !17987
  br label %if.end7, !dbg !17988

if.end7:                                          ; preds = %if.then6, %if.end3
  %12 = load i16*, i16** %size.addr, align 8, !dbg !17989
  %cmp8 = icmp ne i16* %12, null, !dbg !17991
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !17992

if.then10:                                        ; preds = %if.end7
  %13 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !17993
  %block1_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %13, i32 0, i32 32, !dbg !17994
  %14 = load i16, i16* %block1_size, align 2, !dbg !17994
  %15 = load i16*, i16** %size.addr, align 8, !dbg !17995
  store i16 %14, i16* %15, align 2, !dbg !17996
  br label %if.end11, !dbg !17997

if.end11:                                         ; preds = %if.then10, %if.end7
  %16 = load i32*, i32** %offset.addr, align 8, !dbg !17998
  %cmp12 = icmp ne i32* %16, null, !dbg !18000
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !18001

if.then14:                                        ; preds = %if.end11
  %17 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18002
  %block1_offset = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %17, i32 0, i32 33, !dbg !18003
  %18 = load i32, i32* %block1_offset, align 8, !dbg !18003
  %19 = load i32*, i32** %offset.addr, align 8, !dbg !18004
  store i32 %18, i32* %19, align 4, !dbg !18005
  br label %if.end15, !dbg !18006

if.end15:                                         ; preds = %if.then14, %if.end11
  store i32 1, i32* %retval, align 4, !dbg !18007
  br label %return, !dbg !18007

return:                                           ; preds = %if.end15, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !18008
  ret i32 %20, !dbg !18008
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_block1(i8* %packet, i32 %num, i8 zeroext %more, i16 zeroext %size) #0 !dbg !18009 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %num.addr = alloca i32, align 4
  %more.addr = alloca i8, align 1
  %size.addr = alloca i16, align 2
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !18010, metadata !1190), !dbg !18011
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18012, metadata !1190), !dbg !18013
  store i8 %more, i8* %more.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %more.addr, metadata !18014, metadata !1190), !dbg !18015
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !18016, metadata !1190), !dbg !18017
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !18018, metadata !1190), !dbg !18019
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !18020
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !18021
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18019
  %2 = load i16, i16* %size.addr, align 2, !dbg !18022
  %conv = zext i16 %2 to i32, !dbg !18022
  %cmp = icmp slt i32 %conv, 16, !dbg !18024
  br i1 %cmp, label %if.then, label %if.end, !dbg !18025

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18026
  br label %return, !dbg !18026

if.end:                                           ; preds = %entry
  %3 = load i16, i16* %size.addr, align 2, !dbg !18027
  %conv2 = zext i16 %3 to i32, !dbg !18027
  %cmp3 = icmp sgt i32 %conv2, 2048, !dbg !18029
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !18030

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18031
  br label %return, !dbg !18031

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %num.addr, align 4, !dbg !18032
  %cmp7 = icmp ugt i32 %4, 1048575, !dbg !18034
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !18035

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !18036
  br label %return, !dbg !18036

if.end10:                                         ; preds = %if.end6
  %5 = load i32, i32* %num.addr, align 4, !dbg !18037
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18038
  %block1_num = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 30, !dbg !18039
  store i32 %5, i32* %block1_num, align 8, !dbg !18040
  %7 = load i8, i8* %more.addr, align 1, !dbg !18041
  %8 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18042
  %block1_more = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %8, i32 0, i32 31, !dbg !18043
  store i8 %7, i8* %block1_more, align 4, !dbg !18044
  %9 = load i16, i16* %size.addr, align 2, !dbg !18045
  %10 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18046
  %block1_size = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %10, i32 0, i32 32, !dbg !18047
  store i16 %9, i16* %block1_size, align 2, !dbg !18048
  %11 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18049
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %11, i32 0, i32 5, !dbg !18049
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 3, !dbg !18049
  %12 = load i8, i8* %arrayidx, align 1, !dbg !18049
  %conv11 = zext i8 %12 to i32, !dbg !18049
  %or = or i32 %conv11, 8, !dbg !18049
  %conv12 = trunc i32 %or to i8, !dbg !18049
  store i8 %conv12, i8* %arrayidx, align 1, !dbg !18049
  store i32 1, i32* %retval, align 4, !dbg !18053
  br label %return, !dbg !18053

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !18054
  ret i32 %13, !dbg !18054
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_header_size(i8* %packet, i32* %size) #0 !dbg !18055 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %size.addr = alloca i32*, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !18056, metadata !1190), !dbg !18057
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !18058, metadata !1190), !dbg !18059
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !18060, metadata !1190), !dbg !18061
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !18062
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !18063
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18061
  br i1 true, label %cond.true, label %cond.false, !dbg !18064

cond.true:                                        ; preds = %entry
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18065
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 5, !dbg !18065
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 3, !dbg !18065
  %3 = load i8, i8* %arrayidx, align 1, !dbg !18065
  %conv = zext i8 %3 to i32, !dbg !18065
  %and = and i32 %conv, 16, !dbg !18065
  %tobool = icmp ne i32 %and, 0, !dbg !18065
  br i1 %tobool, label %if.end, label %if.then, !dbg !18065

cond.false:                                       ; preds = %entry
  br i1 false, label %if.end, label %if.then, !dbg !18064

if.then:                                          ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !18067
  br label %return, !dbg !18067

if.end:                                           ; preds = %cond.false, %cond.true
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18068
  %size1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 34, !dbg !18069
  %5 = load i32, i32* %size1, align 4, !dbg !18069
  %6 = load i32*, i32** %size.addr, align 8, !dbg !18070
  store i32 %5, i32* %6, align 4, !dbg !18071
  store i32 1, i32* %retval, align 4, !dbg !18072
  br label %return, !dbg !18072

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18073
  ret i32 %7, !dbg !18073
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_header_size(i8* %packet, i32 %size) #0 !dbg !18074 {
entry:
  %packet.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !18075, metadata !1190), !dbg !18076
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18077, metadata !1190), !dbg !18078
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !18079, metadata !1190), !dbg !18080
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !18081
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !18082
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18080
  %2 = load i32, i32* %size.addr, align 4, !dbg !18083
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18084
  %size1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 34, !dbg !18085
  store i32 %2, i32* %size1, align 4, !dbg !18086
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18087
  %options = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 5, !dbg !18087
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %options, i64 0, i64 3, !dbg !18087
  %5 = load i8, i8* %arrayidx, align 1, !dbg !18087
  %conv = zext i8 %5 to i32, !dbg !18087
  %or = or i32 %conv, 16, !dbg !18087
  %conv2 = trunc i32 %or to i8, !dbg !18087
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !18087
  ret i32 1, !dbg !18091
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_get_payload(i8* %packet, i8** %payload) #0 !dbg !18092 {
entry:
  %retval = alloca i32, align 4
  %packet.addr = alloca i8*, align 8
  %payload.addr = alloca i8**, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !18093, metadata !1190), !dbg !18094
  store i8** %payload, i8*** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %payload.addr, metadata !18095, metadata !1190), !dbg !18096
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !18097, metadata !1190), !dbg !18098
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !18099
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !18100
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18098
  %2 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18101
  %payload1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %2, i32 0, i32 38, !dbg !18103
  %3 = load i8*, i8** %payload1, align 8, !dbg !18103
  %tobool = icmp ne i8* %3, null, !dbg !18101
  br i1 %tobool, label %if.then, label %if.else, !dbg !18104

if.then:                                          ; preds = %entry
  %4 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18105
  %payload2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %4, i32 0, i32 38, !dbg !18107
  %5 = load i8*, i8** %payload2, align 8, !dbg !18107
  %6 = load i8**, i8*** %payload.addr, align 8, !dbg !18108
  store i8* %5, i8** %6, align 8, !dbg !18109
  %7 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18110
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %7, i32 0, i32 37, !dbg !18111
  %8 = load i16, i16* %payload_len, align 2, !dbg !18111
  %conv = zext i16 %8 to i32, !dbg !18110
  store i32 %conv, i32* %retval, align 4, !dbg !18112
  br label %return, !dbg !18112

if.else:                                          ; preds = %entry
  %9 = load i8**, i8*** %payload.addr, align 8, !dbg !18113
  store i8* null, i8** %9, align 8, !dbg !18115
  store i32 0, i32* %retval, align 4, !dbg !18116
  br label %return, !dbg !18116

return:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !18117
  ret i32 %10, !dbg !18117
}

; Function Attrs: noinline nounwind uwtable
define i32 @coap_set_payload(i8* %packet, i8* %payload, i64 %length) #0 !dbg !18118 {
entry:
  %packet.addr = alloca i8*, align 8
  %payload.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %coap_pkt = alloca %struct.coap_packet_t*, align 8
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !18121, metadata !1190), !dbg !18122
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !18123, metadata !1190), !dbg !18124
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !18125, metadata !1190), !dbg !18126
  call void @llvm.dbg.declare(metadata %struct.coap_packet_t** %coap_pkt, metadata !18127, metadata !1190), !dbg !18128
  %0 = load i8*, i8** %packet.addr, align 8, !dbg !18129
  %1 = bitcast i8* %0 to %struct.coap_packet_t*, !dbg !18130
  store %struct.coap_packet_t* %1, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18128
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !18131
  %3 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18132
  %payload1 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %3, i32 0, i32 38, !dbg !18133
  store i8* %2, i8** %payload1, align 8, !dbg !18134
  %4 = load i64, i64* %length.addr, align 8, !dbg !18135
  %conv = trunc i64 %4 to i16, !dbg !18136
  %5 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18137
  %payload_len = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %5, i32 0, i32 37, !dbg !18138
  store i16 %conv, i16* %payload_len, align 2, !dbg !18139
  %6 = load %struct.coap_packet_t*, %struct.coap_packet_t** %coap_pkt, align 8, !dbg !18140
  %payload_len2 = getelementptr inbounds %struct.coap_packet_t, %struct.coap_packet_t* %6, i32 0, i32 37, !dbg !18141
  %7 = load i16, i16* %payload_len2, align 2, !dbg !18141
  %conv3 = zext i16 %7 to i32, !dbg !18140
  ret i32 %conv3, !dbg !18142
}

; Function Attrs: noinline nounwind uwtable
define void @handle_command(%struct.command_desc_t* %commandArray, i8* %buffer) #0 !dbg !18143 {
entry:
  %commandArray.addr = alloca %struct.command_desc_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %cmdP = alloca %struct.command_desc_t*, align 8
  %length = alloca i32, align 4
  store %struct.command_desc_t* %commandArray, %struct.command_desc_t** %commandArray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.command_desc_t** %commandArray.addr, metadata !18155, metadata !1190), !dbg !18156
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18157, metadata !1190), !dbg !18158
  call void @llvm.dbg.declare(metadata %struct.command_desc_t** %cmdP, metadata !18159, metadata !1190), !dbg !18160
  call void @llvm.dbg.declare(metadata i32* %length, metadata !18161, metadata !1190), !dbg !18162
  store i32 0, i32* %length, align 4, !dbg !18163
  br label %while.cond, !dbg !18164

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !18165
  %1 = load i32, i32* %length, align 4, !dbg !18166
  %idxprom = sext i32 %1 to i64, !dbg !18165
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !18165
  %2 = load i8, i8* %arrayidx, align 1, !dbg !18165
  %conv = sext i8 %2 to i32, !dbg !18165
  %cmp = icmp ne i32 %conv, 0, !dbg !18167
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18168

land.rhs:                                         ; preds = %while.cond
  %call = call i16** @__ctype_b_loc() #8, !dbg !18169
  %3 = load i16*, i16** %call, align 8, !dbg !18169
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !18169
  %5 = load i32, i32* %length, align 4, !dbg !18169
  %idxprom2 = sext i32 %5 to i64, !dbg !18169
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 %idxprom2, !dbg !18169
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !18169
  %conv4 = sext i8 %6 to i32, !dbg !18169
  %and = and i32 %conv4, 255, !dbg !18169
  %idxprom5 = sext i32 %and to i64, !dbg !18169
  %arrayidx6 = getelementptr inbounds i16, i16* %3, i64 %idxprom5, !dbg !18169
  %7 = load i16, i16* %arrayidx6, align 2, !dbg !18169
  %conv7 = zext i16 %7 to i32, !dbg !18169
  %and8 = and i32 %conv7, 8192, !dbg !18169
  %tobool = icmp ne i32 %and8, 0, !dbg !18170
  %lnot = xor i1 %tobool, true, !dbg !18170
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !18164

while.body:                                       ; preds = %land.end
  %9 = load i32, i32* %length, align 4, !dbg !18171
  %inc = add nsw i32 %9, 1, !dbg !18171
  store i32 %inc, i32* %length, align 4, !dbg !18171
  br label %while.cond, !dbg !18164, !llvm.loop !18172

while.end:                                        ; preds = %land.end
  %10 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18173
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !18174
  %12 = load i32, i32* %length, align 4, !dbg !18175
  %conv9 = sext i32 %12 to i64, !dbg !18175
  %call10 = call %struct.command_desc_t* @prv_find_command(%struct.command_desc_t* %10, i8* %11, i64 %conv9), !dbg !18176
  store %struct.command_desc_t* %call10, %struct.command_desc_t** %cmdP, align 8, !dbg !18177
  %13 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18178
  %cmp11 = icmp ne %struct.command_desc_t* %13, null, !dbg !18180
  br i1 %cmp11, label %if.then, label %if.else, !dbg !18181

if.then:                                          ; preds = %while.end
  br label %while.cond13, !dbg !18182

while.cond13:                                     ; preds = %while.body31, %if.then
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !18184
  %15 = load i32, i32* %length, align 4, !dbg !18185
  %idxprom14 = sext i32 %15 to i64, !dbg !18184
  %arrayidx15 = getelementptr inbounds i8, i8* %14, i64 %idxprom14, !dbg !18184
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !18184
  %conv16 = sext i8 %16 to i32, !dbg !18184
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !18186
  br i1 %cmp17, label %land.rhs19, label %land.end30, !dbg !18187

land.rhs19:                                       ; preds = %while.cond13
  %call20 = call i16** @__ctype_b_loc() #8, !dbg !18188
  %17 = load i16*, i16** %call20, align 8, !dbg !18188
  %18 = load i8*, i8** %buffer.addr, align 8, !dbg !18188
  %19 = load i32, i32* %length, align 4, !dbg !18188
  %idxprom21 = sext i32 %19 to i64, !dbg !18188
  %arrayidx22 = getelementptr inbounds i8, i8* %18, i64 %idxprom21, !dbg !18188
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !18188
  %conv23 = sext i8 %20 to i32, !dbg !18188
  %and24 = and i32 %conv23, 255, !dbg !18188
  %idxprom25 = sext i32 %and24 to i64, !dbg !18188
  %arrayidx26 = getelementptr inbounds i16, i16* %17, i64 %idxprom25, !dbg !18188
  %21 = load i16, i16* %arrayidx26, align 2, !dbg !18188
  %conv27 = zext i16 %21 to i32, !dbg !18188
  %and28 = and i32 %conv27, 8192, !dbg !18188
  %tobool29 = icmp ne i32 %and28, 0, !dbg !18187
  br label %land.end30

land.end30:                                       ; preds = %land.rhs19, %while.cond13
  %22 = phi i1 [ false, %while.cond13 ], [ %tobool29, %land.rhs19 ]
  br i1 %22, label %while.body31, label %while.end33, !dbg !18182

while.body31:                                     ; preds = %land.end30
  %23 = load i32, i32* %length, align 4, !dbg !18189
  %inc32 = add nsw i32 %23, 1, !dbg !18189
  store i32 %inc32, i32* %length, align 4, !dbg !18189
  br label %while.cond13, !dbg !18182, !llvm.loop !18190

while.end33:                                      ; preds = %land.end30
  %24 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18191
  %callback = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %24, i32 0, i32 3, !dbg !18192
  %25 = load void (i8*, i8*)*, void (i8*, i8*)** %callback, align 8, !dbg !18192
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !18193
  %27 = load i32, i32* %length, align 4, !dbg !18194
  %idx.ext = sext i32 %27 to i64, !dbg !18195
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !18195
  %28 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18196
  %userData = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %28, i32 0, i32 4, !dbg !18197
  %29 = load i8*, i8** %userData, align 8, !dbg !18197
  call void %25(i8* %add.ptr, i8* %29), !dbg !18191
  br label %if.end63, !dbg !18198

if.else:                                          ; preds = %while.end
  %30 = load i8*, i8** %buffer.addr, align 8, !dbg !18199
  %31 = load i32, i32* %length, align 4, !dbg !18202
  %conv34 = sext i32 %31 to i64, !dbg !18202
  %call35 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.226, i32 0, i32 0), i64 %conv34) #9, !dbg !18203
  %tobool36 = icmp ne i32 %call35, 0, !dbg !18203
  br i1 %tobool36, label %if.else61, label %if.then37, !dbg !18204

if.then37:                                        ; preds = %if.else
  br label %while.cond38, !dbg !18205

while.cond38:                                     ; preds = %while.body56, %if.then37
  %32 = load i8*, i8** %buffer.addr, align 8, !dbg !18207
  %33 = load i32, i32* %length, align 4, !dbg !18208
  %idxprom39 = sext i32 %33 to i64, !dbg !18207
  %arrayidx40 = getelementptr inbounds i8, i8* %32, i64 %idxprom39, !dbg !18207
  %34 = load i8, i8* %arrayidx40, align 1, !dbg !18207
  %conv41 = sext i8 %34 to i32, !dbg !18207
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !18209
  br i1 %cmp42, label %land.rhs44, label %land.end55, !dbg !18210

land.rhs44:                                       ; preds = %while.cond38
  %call45 = call i16** @__ctype_b_loc() #8, !dbg !18211
  %35 = load i16*, i16** %call45, align 8, !dbg !18211
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !18211
  %37 = load i32, i32* %length, align 4, !dbg !18211
  %idxprom46 = sext i32 %37 to i64, !dbg !18211
  %arrayidx47 = getelementptr inbounds i8, i8* %36, i64 %idxprom46, !dbg !18211
  %38 = load i8, i8* %arrayidx47, align 1, !dbg !18211
  %conv48 = sext i8 %38 to i32, !dbg !18211
  %and49 = and i32 %conv48, 255, !dbg !18211
  %idxprom50 = sext i32 %and49 to i64, !dbg !18211
  %arrayidx51 = getelementptr inbounds i16, i16* %35, i64 %idxprom50, !dbg !18211
  %39 = load i16, i16* %arrayidx51, align 2, !dbg !18211
  %conv52 = zext i16 %39 to i32, !dbg !18211
  %and53 = and i32 %conv52, 8192, !dbg !18211
  %tobool54 = icmp ne i32 %and53, 0, !dbg !18210
  br label %land.end55

land.end55:                                       ; preds = %land.rhs44, %while.cond38
  %40 = phi i1 [ false, %while.cond38 ], [ %tobool54, %land.rhs44 ]
  br i1 %40, label %while.body56, label %while.end58, !dbg !18205

while.body56:                                     ; preds = %land.end55
  %41 = load i32, i32* %length, align 4, !dbg !18212
  %inc57 = add nsw i32 %41, 1, !dbg !18212
  store i32 %inc57, i32* %length, align 4, !dbg !18212
  br label %while.cond38, !dbg !18205, !llvm.loop !18213

while.end58:                                      ; preds = %land.end55
  %42 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18214
  %43 = load i8*, i8** %buffer.addr, align 8, !dbg !18215
  %44 = load i32, i32* %length, align 4, !dbg !18216
  %idx.ext59 = sext i32 %44 to i64, !dbg !18217
  %add.ptr60 = getelementptr inbounds i8, i8* %43, i64 %idx.ext59, !dbg !18217
  call void @prv_displayHelp(%struct.command_desc_t* %42, i8* %add.ptr60), !dbg !18218
  br label %if.end, !dbg !18219

if.else61:                                        ; preds = %if.else
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18220
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.227, i32 0, i32 0)), !dbg !18222
  br label %if.end

if.end:                                           ; preds = %if.else61, %while.end58
  br label %if.end63

if.end63:                                         ; preds = %if.end, %while.end33
  ret void, !dbg !18223
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.command_desc_t* @prv_find_command(%struct.command_desc_t* %commandArray, i8* %buffer, i64 %length) #0 !dbg !18224 {
entry:
  %retval = alloca %struct.command_desc_t*, align 8
  %commandArray.addr = alloca %struct.command_desc_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.command_desc_t* %commandArray, %struct.command_desc_t** %commandArray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.command_desc_t** %commandArray.addr, metadata !18227, metadata !1190), !dbg !18228
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18229, metadata !1190), !dbg !18230
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !18231, metadata !1190), !dbg !18232
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18233, metadata !1190), !dbg !18234
  %0 = load i64, i64* %length.addr, align 8, !dbg !18235
  %cmp = icmp eq i64 %0, 0, !dbg !18237
  br i1 %cmp, label %if.then, label %if.end, !dbg !18238

if.then:                                          ; preds = %entry
  store %struct.command_desc_t* null, %struct.command_desc_t** %retval, align 8, !dbg !18239
  br label %return, !dbg !18239

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !18240
  br label %while.cond, !dbg !18241

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18242
  %2 = load i32, i32* %i, align 4, !dbg !18243
  %idxprom = sext i32 %2 to i64, !dbg !18242
  %arrayidx = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %1, i64 %idxprom, !dbg !18242
  %name = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx, i32 0, i32 0, !dbg !18244
  %3 = load i8*, i8** %name, align 8, !dbg !18244
  %cmp1 = icmp ne i8* %3, null, !dbg !18245
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !18246

land.rhs:                                         ; preds = %while.cond
  %4 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18247
  %5 = load i32, i32* %i, align 4, !dbg !18248
  %idxprom2 = sext i32 %5 to i64, !dbg !18247
  %arrayidx3 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %4, i64 %idxprom2, !dbg !18247
  %name4 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx3, i32 0, i32 0, !dbg !18249
  %6 = load i8*, i8** %name4, align 8, !dbg !18249
  %call = call i64 @strlen(i8* %6) #9, !dbg !18250
  %7 = load i64, i64* %length.addr, align 8, !dbg !18251
  %cmp5 = icmp ne i64 %call, %7, !dbg !18252
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !18253

lor.rhs:                                          ; preds = %land.rhs
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !18254
  %9 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18255
  %10 = load i32, i32* %i, align 4, !dbg !18256
  %idxprom6 = sext i32 %10 to i64, !dbg !18255
  %arrayidx7 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %9, i64 %idxprom6, !dbg !18255
  %name8 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx7, i32 0, i32 0, !dbg !18257
  %11 = load i8*, i8** %name8, align 8, !dbg !18257
  %12 = load i64, i64* %length.addr, align 8, !dbg !18258
  %call9 = call i32 @strncmp(i8* %8, i8* %11, i64 %12) #9, !dbg !18259
  %tobool = icmp ne i32 %call9, 0, !dbg !18253
  br label %lor.end, !dbg !18253

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %13 = phi i1 [ true, %land.rhs ], [ %tobool, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %13, %lor.end ]
  br i1 %14, label %while.body, label %while.end, !dbg !18241

while.body:                                       ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !18260
  %inc = add nsw i32 %15, 1, !dbg !18260
  store i32 %inc, i32* %i, align 4, !dbg !18260
  br label %while.cond, !dbg !18241, !llvm.loop !18262

while.end:                                        ; preds = %land.end
  %16 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18264
  %17 = load i32, i32* %i, align 4, !dbg !18266
  %idxprom10 = sext i32 %17 to i64, !dbg !18264
  %arrayidx11 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %16, i64 %idxprom10, !dbg !18264
  %name12 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx11, i32 0, i32 0, !dbg !18267
  %18 = load i8*, i8** %name12, align 8, !dbg !18267
  %cmp13 = icmp eq i8* %18, null, !dbg !18268
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !18269

if.then14:                                        ; preds = %while.end
  store %struct.command_desc_t* null, %struct.command_desc_t** %retval, align 8, !dbg !18270
  br label %return, !dbg !18270

if.else:                                          ; preds = %while.end
  %19 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18272
  %20 = load i32, i32* %i, align 4, !dbg !18274
  %idxprom15 = sext i32 %20 to i64, !dbg !18272
  %arrayidx16 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %19, i64 %idxprom15, !dbg !18272
  store %struct.command_desc_t* %arrayidx16, %struct.command_desc_t** %retval, align 8, !dbg !18275
  br label %return, !dbg !18275

return:                                           ; preds = %if.else, %if.then14, %if.then
  %21 = load %struct.command_desc_t*, %struct.command_desc_t** %retval, align 8, !dbg !18276
  ret %struct.command_desc_t* %21, !dbg !18276
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_displayHelp(%struct.command_desc_t* %commandArray, i8* %buffer) #0 !dbg !18277 {
entry:
  %commandArray.addr = alloca %struct.command_desc_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %cmdP = alloca %struct.command_desc_t*, align 8
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.command_desc_t* %commandArray, %struct.command_desc_t** %commandArray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.command_desc_t** %commandArray.addr, metadata !18278, metadata !1190), !dbg !18279
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18280, metadata !1190), !dbg !18281
  call void @llvm.dbg.declare(metadata %struct.command_desc_t** %cmdP, metadata !18282, metadata !1190), !dbg !18283
  call void @llvm.dbg.declare(metadata i32* %length, metadata !18284, metadata !1190), !dbg !18285
  store i32 0, i32* %length, align 4, !dbg !18286
  br label %while.cond, !dbg !18287

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !18288
  %1 = load i32, i32* %length, align 4, !dbg !18289
  %idxprom = sext i32 %1 to i64, !dbg !18288
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !18288
  %2 = load i8, i8* %arrayidx, align 1, !dbg !18288
  %conv = sext i8 %2 to i32, !dbg !18288
  %cmp = icmp ne i32 %conv, 0, !dbg !18290
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18291

land.rhs:                                         ; preds = %while.cond
  %call = call i16** @__ctype_b_loc() #8, !dbg !18292
  %3 = load i16*, i16** %call, align 8, !dbg !18292
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !18292
  %5 = load i32, i32* %length, align 4, !dbg !18292
  %idxprom2 = sext i32 %5 to i64, !dbg !18292
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 %idxprom2, !dbg !18292
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !18292
  %conv4 = sext i8 %6 to i32, !dbg !18292
  %and = and i32 %conv4, 255, !dbg !18292
  %idxprom5 = sext i32 %and to i64, !dbg !18292
  %arrayidx6 = getelementptr inbounds i16, i16* %3, i64 %idxprom5, !dbg !18292
  %7 = load i16, i16* %arrayidx6, align 2, !dbg !18292
  %conv7 = zext i16 %7 to i32, !dbg !18292
  %and8 = and i32 %conv7, 8192, !dbg !18292
  %tobool = icmp ne i32 %and8, 0, !dbg !18293
  %lnot = xor i1 %tobool, true, !dbg !18293
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !18287

while.body:                                       ; preds = %land.end
  %9 = load i32, i32* %length, align 4, !dbg !18294
  %inc = add nsw i32 %9, 1, !dbg !18294
  store i32 %inc, i32* %length, align 4, !dbg !18294
  br label %while.cond, !dbg !18287, !llvm.loop !18295

while.end:                                        ; preds = %land.end
  %10 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18296
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !18297
  %12 = load i32, i32* %length, align 4, !dbg !18298
  %conv9 = sext i32 %12 to i64, !dbg !18298
  %call10 = call %struct.command_desc_t* @prv_find_command(%struct.command_desc_t* %10, i8* %11, i64 %conv9), !dbg !18299
  store %struct.command_desc_t* %call10, %struct.command_desc_t** %cmdP, align 8, !dbg !18300
  %13 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18301
  %cmp11 = icmp eq %struct.command_desc_t* %13, null, !dbg !18303
  br i1 %cmp11, label %if.then, label %if.else, !dbg !18304

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18305, metadata !1190), !dbg !18307
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18308
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.48.228, i32 0, i32 0)), !dbg !18309
  store i32 0, i32* %i, align 4, !dbg !18310
  br label %for.cond, !dbg !18312

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18313
  %16 = load i32, i32* %i, align 4, !dbg !18315
  %idxprom14 = sext i32 %16 to i64, !dbg !18313
  %arrayidx15 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %15, i64 %idxprom14, !dbg !18313
  %name = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx15, i32 0, i32 0, !dbg !18316
  %17 = load i8*, i8** %name, align 8, !dbg !18316
  %cmp16 = icmp ne i8* %17, null, !dbg !18317
  br i1 %cmp16, label %for.body, label %for.end, !dbg !18318

for.body:                                         ; preds = %for.cond
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18319
  %19 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18321
  %20 = load i32, i32* %i, align 4, !dbg !18322
  %idxprom18 = sext i32 %20 to i64, !dbg !18321
  %arrayidx19 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %19, i64 %idxprom18, !dbg !18321
  %name20 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx19, i32 0, i32 0, !dbg !18323
  %21 = load i8*, i8** %name20, align 8, !dbg !18323
  %22 = load %struct.command_desc_t*, %struct.command_desc_t** %commandArray.addr, align 8, !dbg !18324
  %23 = load i32, i32* %i, align 4, !dbg !18325
  %idxprom21 = sext i32 %23 to i64, !dbg !18324
  %arrayidx22 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %22, i64 %idxprom21, !dbg !18324
  %shortDesc = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %arrayidx22, i32 0, i32 1, !dbg !18326
  %24 = load i8*, i8** %shortDesc, align 8, !dbg !18326
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49.229, i32 0, i32 0), i8* %21, i8* %24), !dbg !18327
  br label %for.inc, !dbg !18328

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !18329
  %inc24 = add nsw i32 %25, 1, !dbg !18329
  store i32 %inc24, i32* %i, align 4, !dbg !18329
  br label %for.cond, !dbg !18330, !llvm.loop !18331

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !18333

if.else:                                          ; preds = %while.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18334
  %27 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18336
  %longDesc = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %27, i32 0, i32 2, !dbg !18337
  %28 = load i8*, i8** %longDesc, align 8, !dbg !18337
  %tobool25 = icmp ne i8* %28, null, !dbg !18336
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !18336

cond.true:                                        ; preds = %if.else
  %29 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18338
  %longDesc26 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %29, i32 0, i32 2, !dbg !18339
  %30 = load i8*, i8** %longDesc26, align 8, !dbg !18339
  br label %cond.end, !dbg !18336

cond.false:                                       ; preds = %if.else
  %31 = load %struct.command_desc_t*, %struct.command_desc_t** %cmdP, align 8, !dbg !18340
  %shortDesc27 = getelementptr inbounds %struct.command_desc_t, %struct.command_desc_t* %31, i32 0, i32 1, !dbg !18341
  %32 = load i8*, i8** %shortDesc27, align 8, !dbg !18341
  br label %cond.end, !dbg !18336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %30, %cond.true ], [ %32, %cond.false ], !dbg !18336
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50.230, i32 0, i32 0), i8* %cond), !dbg !18342
  br label %if.end

if.end:                                           ; preds = %cond.end, %for.end
  ret void, !dbg !18343
}

; Function Attrs: noinline nounwind uwtable
define i8* @get_end_of_arg(i8* %buffer) #0 !dbg !18344 {
entry:
  %buffer.addr = alloca i8*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18347, metadata !1190), !dbg !18348
  br label %while.cond, !dbg !18349

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !18350
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !18350
  %1 = load i8, i8* %arrayidx, align 1, !dbg !18350
  %conv = sext i8 %1 to i32, !dbg !18350
  %cmp = icmp ne i32 %conv, 0, !dbg !18351
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18352

land.rhs:                                         ; preds = %while.cond
  %call = call i16** @__ctype_b_loc() #8, !dbg !18353
  %2 = load i16*, i16** %call, align 8, !dbg !18353
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !18353
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !18353
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !18353
  %conv3 = sext i8 %4 to i32, !dbg !18353
  %and = and i32 %conv3, 255, !dbg !18353
  %idxprom = sext i32 %and to i64, !dbg !18353
  %arrayidx4 = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !18353
  %5 = load i16, i16* %arrayidx4, align 2, !dbg !18353
  %conv5 = zext i16 %5 to i32, !dbg !18353
  %and6 = and i32 %conv5, 8192, !dbg !18353
  %tobool = icmp ne i32 %and6, 0, !dbg !18354
  %lnot = xor i1 %tobool, true, !dbg !18354
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !18349

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !18355
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !18355
  store i8* %incdec.ptr, i8** %buffer.addr, align 8, !dbg !18355
  br label %while.cond, !dbg !18349, !llvm.loop !18357

while.end:                                        ; preds = %land.end
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !18359
  ret i8* %8, !dbg !18360
}

; Function Attrs: noinline nounwind uwtable
define i8* @get_next_arg(i8* %buffer, i8** %end) #0 !dbg !18361 {
entry:
  %buffer.addr = alloca i8*, align 8
  %end.addr = alloca i8**, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18364, metadata !1190), !dbg !18365
  store i8** %end, i8*** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %end.addr, metadata !18366, metadata !1190), !dbg !18367
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !18368
  %call = call i8* @get_end_of_arg(i8* %0), !dbg !18369
  store i8* %call, i8** %buffer.addr, align 8, !dbg !18370
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !18371
  %call1 = call i8* @prv_end_of_space(i8* %1), !dbg !18372
  store i8* %call1, i8** %buffer.addr, align 8, !dbg !18373
  %2 = load i8**, i8*** %end.addr, align 8, !dbg !18374
  %cmp = icmp ne i8** null, %2, !dbg !18376
  br i1 %cmp, label %if.then, label %if.end, !dbg !18377

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !18378
  %call2 = call i8* @get_end_of_arg(i8* %3), !dbg !18380
  %4 = load i8**, i8*** %end.addr, align 8, !dbg !18381
  store i8* %call2, i8** %4, align 8, !dbg !18382
  br label %if.end, !dbg !18383

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !18384
  ret i8* %5, !dbg !18385
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @prv_end_of_space(i8* %buffer) #0 !dbg !18386 {
entry:
  %buffer.addr = alloca i8*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18387, metadata !1190), !dbg !18388
  br label %while.cond, !dbg !18389

while.cond:                                       ; preds = %while.body, %entry
  %call = call i16** @__ctype_b_loc() #8, !dbg !18390
  %0 = load i16*, i16** %call, align 8, !dbg !18390
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !18390
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !18390
  %2 = load i8, i8* %arrayidx, align 1, !dbg !18390
  %conv = sext i8 %2 to i32, !dbg !18390
  %and = and i32 %conv, 255, !dbg !18390
  %idxprom = sext i32 %and to i64, !dbg !18390
  %arrayidx1 = getelementptr inbounds i16, i16* %0, i64 %idxprom, !dbg !18390
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !18390
  %conv2 = zext i16 %3 to i32, !dbg !18390
  %and3 = and i32 %conv2, 8192, !dbg !18390
  %tobool = icmp ne i32 %and3, 0, !dbg !18389
  br i1 %tobool, label %while.body, label %while.end, !dbg !18389

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !18391
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !18391
  store i8* %incdec.ptr, i8** %buffer.addr, align 8, !dbg !18391
  br label %while.cond, !dbg !18389, !llvm.loop !18393

while.end:                                        ; preds = %while.cond
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !18395
  ret i8* %5, !dbg !18396
}

; Function Attrs: noinline nounwind uwtable
define i32 @check_end_of_args(i8* %buffer) #0 !dbg !18397 {
entry:
  %buffer.addr = alloca i8*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18400, metadata !1190), !dbg !18401
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !18402
  %call = call i8* @prv_end_of_space(i8* %0), !dbg !18403
  store i8* %call, i8** %buffer.addr, align 8, !dbg !18404
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !18405
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !18405
  %2 = load i8, i8* %arrayidx, align 1, !dbg !18405
  %conv = sext i8 %2 to i32, !dbg !18405
  %cmp = icmp eq i32 0, %conv, !dbg !18406
  %conv1 = zext i1 %cmp to i32, !dbg !18406
  ret i32 %conv1, !dbg !18407
}

; Function Attrs: noinline nounwind uwtable
define void @output_buffer(%struct._IO_FILE* %stream, i8* %buffer, i32 %length, i32 %indent) #0 !dbg !18408 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %indent.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %array = alloca [16 x i8], align 16
  %j = alloca i32, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18461, metadata !1190), !dbg !18462
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18463, metadata !1190), !dbg !18464
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !18465, metadata !1190), !dbg !18466
  store i32 %indent, i32* %indent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indent.addr, metadata !18467, metadata !1190), !dbg !18468
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18469, metadata !1190), !dbg !18470
  %0 = load i32, i32* %length.addr, align 4, !dbg !18471
  %cmp = icmp eq i32 %0, 0, !dbg !18473
  br i1 %cmp, label %if.then, label %if.end, !dbg !18474

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18475
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.237, i32 0, i32 0)), !dbg !18476
  br label %if.end, !dbg !18476

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !18477
  %cmp1 = icmp eq i8* %2, null, !dbg !18479
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !18480

if.then2:                                         ; preds = %if.end
  br label %while.end58, !dbg !18481

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !18482
  br label %while.cond, !dbg !18483

while.cond:                                       ; preds = %for.end55, %if.end3
  %3 = load i32, i32* %i, align 4, !dbg !18484
  %4 = load i32, i32* %length.addr, align 4, !dbg !18485
  %cmp4 = icmp slt i32 %3, %4, !dbg !18486
  br i1 %cmp4, label %while.body, label %while.end58, !dbg !18483

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [16 x i8]* %array, metadata !18487, metadata !1190), !dbg !18489
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18490, metadata !1190), !dbg !18491
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18492
  %6 = load i32, i32* %indent.addr, align 4, !dbg !18493
  call void @print_indent(%struct._IO_FILE* %5, i32 %6), !dbg !18494
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %array, i32 0, i32 0, !dbg !18495
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !18496
  %8 = load i32, i32* %i, align 4, !dbg !18497
  %idx.ext = sext i32 %8 to i64, !dbg !18498
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !18498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %add.ptr, i64 16, i32 1, i1 false), !dbg !18495
  store i32 0, i32* %j, align 4, !dbg !18499
  br label %for.cond, !dbg !18501

for.cond:                                         ; preds = %for.inc, %while.body
  %9 = load i32, i32* %j, align 4, !dbg !18502
  %cmp5 = icmp slt i32 %9, 16, !dbg !18504
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !18505

land.rhs:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !18506
  %11 = load i32, i32* %j, align 4, !dbg !18507
  %add = add nsw i32 %10, %11, !dbg !18508
  %12 = load i32, i32* %length.addr, align 4, !dbg !18509
  %cmp6 = icmp slt i32 %add, %12, !dbg !18510
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %13 = phi i1 [ false, %for.cond ], [ %cmp6, %land.rhs ]
  br i1 %13, label %for.body, label %for.end, !dbg !18511

for.body:                                         ; preds = %land.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18512
  %15 = load i32, i32* %j, align 4, !dbg !18514
  %idxprom = sext i32 %15 to i64, !dbg !18515
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %array, i64 0, i64 %idxprom, !dbg !18515
  %16 = load i8, i8* %arrayidx, align 1, !dbg !18515
  %conv = zext i8 %16 to i32, !dbg !18515
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.238, i32 0, i32 0), i32 %conv), !dbg !18516
  %17 = load i32, i32* %j, align 4, !dbg !18517
  %rem = srem i32 %17, 4, !dbg !18519
  %cmp8 = icmp eq i32 %rem, 3, !dbg !18520
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !18521

if.then10:                                        ; preds = %for.body
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18522
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.239, i32 0, i32 0)), !dbg !18523
  br label %if.end12, !dbg !18523

if.end12:                                         ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !18524

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %j, align 4, !dbg !18525
  %inc = add nsw i32 %19, 1, !dbg !18525
  store i32 %inc, i32* %j, align 4, !dbg !18525
  br label %for.cond, !dbg !18526, !llvm.loop !18527

for.end:                                          ; preds = %land.end
  %20 = load i32, i32* %length.addr, align 4, !dbg !18529
  %cmp13 = icmp sgt i32 %20, 16, !dbg !18531
  br i1 %cmp13, label %if.then15, label %if.end28, !dbg !18532

if.then15:                                        ; preds = %for.end
  br label %while.cond16, !dbg !18533

while.cond16:                                     ; preds = %if.end26, %if.then15
  %21 = load i32, i32* %j, align 4, !dbg !18535
  %cmp17 = icmp slt i32 %21, 16, !dbg !18536
  br i1 %cmp17, label %while.body19, label %while.end, !dbg !18533

while.body19:                                     ; preds = %while.cond16
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18537
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.240, i32 0, i32 0)), !dbg !18539
  %23 = load i32, i32* %j, align 4, !dbg !18540
  %rem21 = srem i32 %23, 4, !dbg !18542
  %cmp22 = icmp eq i32 %rem21, 3, !dbg !18543
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !18544

if.then24:                                        ; preds = %while.body19
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18545
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.239, i32 0, i32 0)), !dbg !18546
  br label %if.end26, !dbg !18546

if.end26:                                         ; preds = %if.then24, %while.body19
  %25 = load i32, i32* %j, align 4, !dbg !18547
  %inc27 = add nsw i32 %25, 1, !dbg !18547
  store i32 %inc27, i32* %j, align 4, !dbg !18547
  br label %while.cond16, !dbg !18533, !llvm.loop !18548

while.end:                                        ; preds = %while.cond16
  br label %if.end28, !dbg !18550

if.end28:                                         ; preds = %while.end, %for.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18551
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.239, i32 0, i32 0)), !dbg !18552
  store i32 0, i32* %j, align 4, !dbg !18553
  br label %for.cond30, !dbg !18555

for.cond30:                                       ; preds = %for.inc53, %if.end28
  %27 = load i32, i32* %j, align 4, !dbg !18556
  %cmp31 = icmp slt i32 %27, 16, !dbg !18558
  br i1 %cmp31, label %land.rhs33, label %land.end37, !dbg !18559

land.rhs33:                                       ; preds = %for.cond30
  %28 = load i32, i32* %i, align 4, !dbg !18560
  %29 = load i32, i32* %j, align 4, !dbg !18561
  %add34 = add nsw i32 %28, %29, !dbg !18562
  %30 = load i32, i32* %length.addr, align 4, !dbg !18563
  %cmp35 = icmp slt i32 %add34, %30, !dbg !18564
  br label %land.end37

land.end37:                                       ; preds = %land.rhs33, %for.cond30
  %31 = phi i1 [ false, %for.cond30 ], [ %cmp35, %land.rhs33 ]
  br i1 %31, label %for.body38, label %for.end55, !dbg !18565

for.body38:                                       ; preds = %land.end37
  %call39 = call i16** @__ctype_b_loc() #8, !dbg !18566
  %32 = load i16*, i16** %call39, align 8, !dbg !18566
  %33 = load i32, i32* %j, align 4, !dbg !18566
  %idxprom40 = sext i32 %33 to i64, !dbg !18566
  %arrayidx41 = getelementptr inbounds [16 x i8], [16 x i8]* %array, i64 0, i64 %idxprom40, !dbg !18566
  %34 = load i8, i8* %arrayidx41, align 1, !dbg !18566
  %conv42 = zext i8 %34 to i32, !dbg !18566
  %idxprom43 = sext i32 %conv42 to i64, !dbg !18566
  %arrayidx44 = getelementptr inbounds i16, i16* %32, i64 %idxprom43, !dbg !18566
  %35 = load i16, i16* %arrayidx44, align 2, !dbg !18566
  %conv45 = zext i16 %35 to i32, !dbg !18566
  %and = and i32 %conv45, 16384, !dbg !18566
  %tobool = icmp ne i32 %and, 0, !dbg !18566
  br i1 %tobool, label %if.then46, label %if.else, !dbg !18569

if.then46:                                        ; preds = %for.body38
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18570
  %37 = load i32, i32* %j, align 4, !dbg !18571
  %idxprom47 = sext i32 %37 to i64, !dbg !18572
  %arrayidx48 = getelementptr inbounds [16 x i8], [16 x i8]* %array, i64 0, i64 %idxprom47, !dbg !18572
  %38 = load i8, i8* %arrayidx48, align 1, !dbg !18572
  %conv49 = zext i8 %38 to i32, !dbg !18572
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.241, i32 0, i32 0), i32 %conv49), !dbg !18573
  br label %if.end52, !dbg !18573

if.else:                                          ; preds = %for.body38
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18574
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.242, i32 0, i32 0)), !dbg !18575
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then46
  br label %for.inc53, !dbg !18576

for.inc53:                                        ; preds = %if.end52
  %40 = load i32, i32* %j, align 4, !dbg !18577
  %inc54 = add nsw i32 %40, 1, !dbg !18577
  store i32 %inc54, i32* %j, align 4, !dbg !18577
  br label %for.cond30, !dbg !18578, !llvm.loop !18579

for.end55:                                        ; preds = %land.end37
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18581
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.237, i32 0, i32 0)), !dbg !18582
  %42 = load i32, i32* %i, align 4, !dbg !18583
  %add57 = add nsw i32 %42, 16, !dbg !18583
  store i32 %add57, i32* %i, align 4, !dbg !18583
  br label %while.cond, !dbg !18483, !llvm.loop !18584

while.end58:                                      ; preds = %while.cond, %if.then2
  ret void, !dbg !18586
}

; Function Attrs: noinline nounwind uwtable
define internal void @print_indent(%struct._IO_FILE* %stream, i32 %num) #0 !dbg !18587 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18590, metadata !1190), !dbg !18591
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18592, metadata !1190), !dbg !18593
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18594, metadata !1190), !dbg !18595
  store i32 0, i32* %i, align 4, !dbg !18596
  br label %for.cond, !dbg !18598

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18599
  %1 = load i32, i32* %num.addr, align 4, !dbg !18601
  %cmp = icmp slt i32 %0, %1, !dbg !18602
  br i1 %cmp, label %for.body, label %for.end, !dbg !18603

for.body:                                         ; preds = %for.cond
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18604
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51.243, i32 0, i32 0)), !dbg !18605
  br label %for.inc, !dbg !18605

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !18606
  %inc = add nsw i32 %3, 1, !dbg !18606
  store i32 %inc, i32* %i, align 4, !dbg !18606
  br label %for.cond, !dbg !18607, !llvm.loop !18608

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18610
}

; Function Attrs: noinline nounwind uwtable
define void @output_tlv(%struct._IO_FILE* %stream, i8* %buffer, i64 %buffer_len, i32 %indent) #0 !dbg !18611 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_len.addr = alloca i64, align 8
  %indent.addr = alloca i32, align 4
  %type = alloca i32, align 4
  %id = alloca i16, align 2
  %dataIndex = alloca i64, align 8
  %dataLen = alloca i64, align 8
  %length = alloca i32, align 4
  %result = alloca i32, align 4
  %intValue = alloca i64, align 8
  %floatValue = alloca double, align 8
  %tmp = alloca i8, align 1
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18614, metadata !1190), !dbg !18615
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !18616, metadata !1190), !dbg !18617
  store i64 %buffer_len, i64* %buffer_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_len.addr, metadata !18618, metadata !1190), !dbg !18619
  store i32 %indent, i32* %indent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indent.addr, metadata !18620, metadata !1190), !dbg !18621
  call void @llvm.dbg.declare(metadata i32* %type, metadata !18622, metadata !1190), !dbg !18623
  call void @llvm.dbg.declare(metadata i16* %id, metadata !18624, metadata !1190), !dbg !18625
  call void @llvm.dbg.declare(metadata i64* %dataIndex, metadata !18626, metadata !1190), !dbg !18627
  call void @llvm.dbg.declare(metadata i64* %dataLen, metadata !18628, metadata !1190), !dbg !18629
  call void @llvm.dbg.declare(metadata i32* %length, metadata !18630, metadata !1190), !dbg !18631
  store i32 0, i32* %length, align 4, !dbg !18631
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18632, metadata !1190), !dbg !18633
  br label %while.cond, !dbg !18634

while.cond:                                       ; preds = %if.end60, %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !18635
  %1 = load i32, i32* %length, align 4, !dbg !18636
  %idx.ext = sext i32 %1 to i64, !dbg !18637
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !18637
  %2 = load i64, i64* %buffer_len.addr, align 8, !dbg !18638
  %3 = load i32, i32* %length, align 4, !dbg !18639
  %conv = sext i32 %3 to i64, !dbg !18639
  %sub = sub i64 %2, %conv, !dbg !18640
  %call = call i32 @lwm2m_decode_TLV(i8* %add.ptr, i64 %sub, i32* %type, i16* %id, i64* %dataIndex, i64* %dataLen), !dbg !18641
  store i32 %call, i32* %result, align 4, !dbg !18642
  %cmp = icmp ne i32 0, %call, !dbg !18643
  br i1 %cmp, label %while.body, label %while.end, !dbg !18634

while.body:                                       ; preds = %while.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18644
  %5 = load i32, i32* %indent.addr, align 4, !dbg !18646
  call void @print_indent(%struct._IO_FILE* %4, i32 %5), !dbg !18647
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18648
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.244, i32 0, i32 0)), !dbg !18649
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18650
  %8 = load i32, i32* %indent.addr, align 4, !dbg !18651
  %add = add nsw i32 %8, 1, !dbg !18652
  call void @print_indent(%struct._IO_FILE* %7, i32 %add), !dbg !18653
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18654
  %10 = load i16, i16* %id, align 2, !dbg !18655
  %conv3 = zext i16 %10 to i32, !dbg !18655
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.245, i32 0, i32 0), i32 %conv3), !dbg !18656
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18657
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.246, i32 0, i32 0)), !dbg !18658
  %12 = load i32, i32* %type, align 4, !dbg !18659
  switch i32 %12, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb7
    i32 5, label %sw.bb9
  ], !dbg !18660

sw.bb:                                            ; preds = %while.body
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18661
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11.247, i32 0, i32 0)), !dbg !18663
  br label %sw.epilog, !dbg !18664

sw.bb7:                                           ; preds = %while.body
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18665
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12.248, i32 0, i32 0)), !dbg !18666
  br label %sw.epilog, !dbg !18667

sw.bb9:                                           ; preds = %while.body
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18668
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13.249, i32 0, i32 0)), !dbg !18669
  br label %sw.epilog, !dbg !18670

sw.default:                                       ; preds = %while.body
  %16 = load i32, i32* %type, align 4, !dbg !18671
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.250, i32 0, i32 0), i32 %16), !dbg !18672
  br label %sw.epilog, !dbg !18673

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb7, %sw.bb
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18674
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.237, i32 0, i32 0)), !dbg !18675
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18676
  %19 = load i32, i32* %indent.addr, align 4, !dbg !18677
  %add13 = add nsw i32 %19, 1, !dbg !18678
  call void @print_indent(%struct._IO_FILE* %18, i32 %add13), !dbg !18679
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18680
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.251, i32 0, i32 0)), !dbg !18681
  %21 = load i32, i32* %type, align 4, !dbg !18682
  %cmp15 = icmp eq i32 %21, 2, !dbg !18684
  br i1 %cmp15, label %if.then, label %lor.lhs.false, !dbg !18685

lor.lhs.false:                                    ; preds = %sw.epilog
  %22 = load i32, i32* %type, align 4, !dbg !18686
  %cmp17 = icmp eq i32 %22, 3, !dbg !18687
  br i1 %cmp17, label %if.then, label %if.else, !dbg !18688

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18689
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !18691
  %25 = load i32, i32* %length, align 4, !dbg !18692
  %idx.ext19 = sext i32 %25 to i64, !dbg !18693
  %add.ptr20 = getelementptr inbounds i8, i8* %24, i64 %idx.ext19, !dbg !18693
  %26 = load i64, i64* %dataIndex, align 8, !dbg !18694
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr20, i64 %26, !dbg !18695
  %27 = load i64, i64* %dataLen, align 8, !dbg !18696
  %28 = load i32, i32* %indent.addr, align 4, !dbg !18697
  %add22 = add nsw i32 %28, 1, !dbg !18698
  call void @output_tlv(%struct._IO_FILE* %23, i8* %add.ptr21, i64 %27, i32 %add22), !dbg !18699
  br label %if.end60, !dbg !18700

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %intValue, metadata !18701, metadata !1190), !dbg !18705
  call void @llvm.dbg.declare(metadata double* %floatValue, metadata !18706, metadata !1190), !dbg !18707
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !18708, metadata !1190), !dbg !18709
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18710
  %30 = load i32, i32* %indent.addr, align 4, !dbg !18711
  %add23 = add nsw i32 %30, 2, !dbg !18712
  call void @print_indent(%struct._IO_FILE* %29, i32 %add23), !dbg !18713
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18714
  %32 = load i64, i64* %dataLen, align 8, !dbg !18715
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.252, i32 0, i32 0), i64 %32), !dbg !18716
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18717
  %34 = load i8*, i8** %buffer.addr, align 8, !dbg !18718
  %35 = load i32, i32* %length, align 4, !dbg !18719
  %idx.ext25 = sext i32 %35 to i64, !dbg !18720
  %add.ptr26 = getelementptr inbounds i8, i8* %34, i64 %idx.ext25, !dbg !18720
  %36 = load i64, i64* %dataIndex, align 8, !dbg !18721
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr26, i64 %36, !dbg !18722
  %37 = load i64, i64* %dataLen, align 8, !dbg !18723
  %conv28 = trunc i64 %37 to i32, !dbg !18723
  %38 = load i32, i32* %indent.addr, align 4, !dbg !18724
  %add29 = add nsw i32 %38, 2, !dbg !18725
  call void @output_buffer(%struct._IO_FILE* %33, i8* %add.ptr27, i32 %conv28, i32 %add29), !dbg !18726
  %39 = load i8*, i8** %buffer.addr, align 8, !dbg !18727
  %40 = load i32, i32* %length, align 4, !dbg !18728
  %conv30 = sext i32 %40 to i64, !dbg !18728
  %41 = load i64, i64* %dataIndex, align 8, !dbg !18729
  %add31 = add i64 %conv30, %41, !dbg !18730
  %42 = load i64, i64* %dataLen, align 8, !dbg !18731
  %add32 = add i64 %add31, %42, !dbg !18732
  %arrayidx = getelementptr inbounds i8, i8* %39, i64 %add32, !dbg !18727
  %43 = load i8, i8* %arrayidx, align 1, !dbg !18727
  store i8 %43, i8* %tmp, align 1, !dbg !18733
  %44 = load i8*, i8** %buffer.addr, align 8, !dbg !18734
  %45 = load i32, i32* %length, align 4, !dbg !18735
  %conv33 = sext i32 %45 to i64, !dbg !18735
  %46 = load i64, i64* %dataIndex, align 8, !dbg !18736
  %add34 = add i64 %conv33, %46, !dbg !18737
  %47 = load i64, i64* %dataLen, align 8, !dbg !18738
  %add35 = add i64 %add34, %47, !dbg !18739
  %arrayidx36 = getelementptr inbounds i8, i8* %44, i64 %add35, !dbg !18734
  store i8 0, i8* %arrayidx36, align 1, !dbg !18740
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !18741
  %49 = load i32, i32* %length, align 4, !dbg !18743
  %idx.ext37 = sext i32 %49 to i64, !dbg !18744
  %add.ptr38 = getelementptr inbounds i8, i8* %48, i64 %idx.ext37, !dbg !18744
  %50 = load i64, i64* %dataIndex, align 8, !dbg !18745
  %add.ptr39 = getelementptr inbounds i8, i8* %add.ptr38, i64 %50, !dbg !18746
  %call40 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.253, i32 0, i32 0), i64* %intValue) #7, !dbg !18747
  %cmp41 = icmp slt i32 0, %call40, !dbg !18748
  br i1 %cmp41, label %if.then43, label %if.end, !dbg !18749

if.then43:                                        ; preds = %if.else
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18750
  %52 = load i32, i32* %indent.addr, align 4, !dbg !18752
  %add44 = add nsw i32 %52, 2, !dbg !18753
  call void @print_indent(%struct._IO_FILE* %51, i32 %add44), !dbg !18754
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18755
  %54 = load i64, i64* %intValue, align 8, !dbg !18756
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18.254, i32 0, i32 0), i64 %54), !dbg !18757
  br label %if.end, !dbg !18758

if.end:                                           ; preds = %if.then43, %if.else
  %55 = load i8*, i8** %buffer.addr, align 8, !dbg !18759
  %56 = load i32, i32* %length, align 4, !dbg !18761
  %idx.ext46 = sext i32 %56 to i64, !dbg !18762
  %add.ptr47 = getelementptr inbounds i8, i8* %55, i64 %idx.ext46, !dbg !18762
  %57 = load i64, i64* %dataIndex, align 8, !dbg !18763
  %add.ptr48 = getelementptr inbounds i8, i8* %add.ptr47, i64 %57, !dbg !18764
  %call49 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.255, i32 0, i32 0), double* %floatValue) #7, !dbg !18765
  %cmp50 = icmp slt i32 0, %call49, !dbg !18766
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !18767

if.then52:                                        ; preds = %if.end
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18768
  %59 = load i32, i32* %indent.addr, align 4, !dbg !18770
  %add53 = add nsw i32 %59, 2, !dbg !18771
  call void @print_indent(%struct._IO_FILE* %58, i32 %add53), !dbg !18772
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18773
  %61 = load double, double* %floatValue, align 8, !dbg !18774
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.256, i32 0, i32 0), double %61), !dbg !18775
  br label %if.end55, !dbg !18776

if.end55:                                         ; preds = %if.then52, %if.end
  %62 = load i8, i8* %tmp, align 1, !dbg !18777
  %63 = load i8*, i8** %buffer.addr, align 8, !dbg !18778
  %64 = load i32, i32* %length, align 4, !dbg !18779
  %conv56 = sext i32 %64 to i64, !dbg !18779
  %65 = load i64, i64* %dataIndex, align 8, !dbg !18780
  %add57 = add i64 %conv56, %65, !dbg !18781
  %66 = load i64, i64* %dataLen, align 8, !dbg !18782
  %add58 = add i64 %add57, %66, !dbg !18783
  %arrayidx59 = getelementptr inbounds i8, i8* %63, i64 %add58, !dbg !18778
  store i8 %62, i8* %arrayidx59, align 1, !dbg !18784
  br label %if.end60

if.end60:                                         ; preds = %if.end55, %if.then
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18785
  %68 = load i32, i32* %indent.addr, align 4, !dbg !18786
  %add61 = add nsw i32 %68, 1, !dbg !18787
  call void @print_indent(%struct._IO_FILE* %67, i32 %add61), !dbg !18788
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18789
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.257, i32 0, i32 0)), !dbg !18790
  %70 = load i32, i32* %result, align 4, !dbg !18791
  %71 = load i32, i32* %length, align 4, !dbg !18792
  %add63 = add nsw i32 %71, %70, !dbg !18792
  store i32 %add63, i32* %length, align 4, !dbg !18792
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18793
  %73 = load i32, i32* %indent.addr, align 4, !dbg !18794
  call void @print_indent(%struct._IO_FILE* %72, i32 %73), !dbg !18795
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18796
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.257, i32 0, i32 0)), !dbg !18797
  br label %while.cond, !dbg !18634, !llvm.loop !18798

while.end:                                        ; preds = %while.cond
  ret void, !dbg !18800
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define void @output_data(%struct._IO_FILE* %stream, i32 %format, i8* %data, i32 %dataLength, i32 %indent) #0 !dbg !18801 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %format.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %dataLength.addr = alloca i32, align 4
  %indent.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18804, metadata !1190), !dbg !18805
  store i32 %format, i32* %format.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %format.addr, metadata !18806, metadata !1190), !dbg !18807
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18808, metadata !1190), !dbg !18809
  store i32 %dataLength, i32* %dataLength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataLength.addr, metadata !18810, metadata !1190), !dbg !18811
  store i32 %indent, i32* %indent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indent.addr, metadata !18812, metadata !1190), !dbg !18813
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18814, metadata !1190), !dbg !18815
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18816
  %1 = load i32, i32* %indent.addr, align 4, !dbg !18817
  call void @print_indent(%struct._IO_FILE* %0, i32 %1), !dbg !18818
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18819
  %3 = load i32, i32* %dataLength.addr, align 4, !dbg !18820
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.260, i32 0, i32 0), i32 %3), !dbg !18821
  %4 = load i32, i32* %format.addr, align 4, !dbg !18822
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 42, label %sw.bb2
    i32 11542, label %sw.bb4
    i32 11543, label %sw.bb6
    i32 40, label %sw.bb12
  ], !dbg !18823

sw.bb:                                            ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18824
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23.261, i32 0, i32 0)), !dbg !18826
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18827
  %7 = load i8*, i8** %data.addr, align 8, !dbg !18828
  %8 = load i32, i32* %dataLength.addr, align 4, !dbg !18829
  %9 = load i32, i32* %indent.addr, align 4, !dbg !18830
  call void @output_buffer(%struct._IO_FILE* %6, i8* %7, i32 %8, i32 %9), !dbg !18831
  br label %sw.epilog, !dbg !18832

sw.bb2:                                           ; preds = %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18833
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24.262, i32 0, i32 0)), !dbg !18834
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18835
  %12 = load i8*, i8** %data.addr, align 8, !dbg !18836
  %13 = load i32, i32* %dataLength.addr, align 4, !dbg !18837
  %14 = load i32, i32* %indent.addr, align 4, !dbg !18838
  call void @output_buffer(%struct._IO_FILE* %11, i8* %12, i32 %13, i32 %14), !dbg !18839
  br label %sw.epilog, !dbg !18840

sw.bb4:                                           ; preds = %entry
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18841
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25.263, i32 0, i32 0)), !dbg !18842
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18843
  %17 = load i8*, i8** %data.addr, align 8, !dbg !18844
  %18 = load i32, i32* %dataLength.addr, align 4, !dbg !18845
  %conv = sext i32 %18 to i64, !dbg !18845
  %19 = load i32, i32* %indent.addr, align 4, !dbg !18846
  call void @output_tlv(%struct._IO_FILE* %16, i8* %17, i64 %conv, i32 %19), !dbg !18847
  br label %sw.epilog, !dbg !18848

sw.bb6:                                           ; preds = %entry
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18849
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26.264, i32 0, i32 0)), !dbg !18850
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18851
  %22 = load i32, i32* %indent.addr, align 4, !dbg !18852
  call void @print_indent(%struct._IO_FILE* %21, i32 %22), !dbg !18853
  store i32 0, i32* %i, align 4, !dbg !18854
  br label %for.cond, !dbg !18856

for.cond:                                         ; preds = %for.inc, %sw.bb6
  %23 = load i32, i32* %i, align 4, !dbg !18857
  %24 = load i32, i32* %dataLength.addr, align 4, !dbg !18859
  %cmp = icmp slt i32 %23, %24, !dbg !18860
  br i1 %cmp, label %for.body, label %for.end, !dbg !18861

for.body:                                         ; preds = %for.cond
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18862
  %26 = load i8*, i8** %data.addr, align 8, !dbg !18864
  %27 = load i32, i32* %i, align 4, !dbg !18865
  %idxprom = sext i32 %27 to i64, !dbg !18864
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 %idxprom, !dbg !18864
  %28 = load i8, i8* %arrayidx, align 1, !dbg !18864
  %conv9 = zext i8 %28 to i32, !dbg !18864
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.241, i32 0, i32 0), i32 %conv9), !dbg !18866
  br label %for.inc, !dbg !18867

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !18868
  %inc = add nsw i32 %29, 1, !dbg !18868
  store i32 %inc, i32* %i, align 4, !dbg !18868
  br label %for.cond, !dbg !18869, !llvm.loop !18870

for.end:                                          ; preds = %for.cond
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18872
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.237, i32 0, i32 0)), !dbg !18873
  br label %sw.epilog, !dbg !18874

sw.bb12:                                          ; preds = %entry
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18875
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27.265, i32 0, i32 0)), !dbg !18876
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18877
  %33 = load i32, i32* %indent.addr, align 4, !dbg !18878
  call void @print_indent(%struct._IO_FILE* %32, i32 %33), !dbg !18879
  store i32 0, i32* %i, align 4, !dbg !18880
  br label %for.cond14, !dbg !18882

for.cond14:                                       ; preds = %for.inc22, %sw.bb12
  %34 = load i32, i32* %i, align 4, !dbg !18883
  %35 = load i32, i32* %dataLength.addr, align 4, !dbg !18885
  %cmp15 = icmp slt i32 %34, %35, !dbg !18886
  br i1 %cmp15, label %for.body17, label %for.end24, !dbg !18887

for.body17:                                       ; preds = %for.cond14
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18888
  %37 = load i8*, i8** %data.addr, align 8, !dbg !18890
  %38 = load i32, i32* %i, align 4, !dbg !18891
  %idxprom18 = sext i32 %38 to i64, !dbg !18890
  %arrayidx19 = getelementptr inbounds i8, i8* %37, i64 %idxprom18, !dbg !18890
  %39 = load i8, i8* %arrayidx19, align 1, !dbg !18890
  %conv20 = zext i8 %39 to i32, !dbg !18890
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.241, i32 0, i32 0), i32 %conv20), !dbg !18892
  br label %for.inc22, !dbg !18893

for.inc22:                                        ; preds = %for.body17
  %40 = load i32, i32* %i, align 4, !dbg !18894
  %inc23 = add nsw i32 %40, 1, !dbg !18894
  store i32 %inc23, i32* %i, align 4, !dbg !18894
  br label %for.cond14, !dbg !18895, !llvm.loop !18896

for.end24:                                        ; preds = %for.cond14
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18898
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.237, i32 0, i32 0)), !dbg !18899
  br label %sw.epilog, !dbg !18900

sw.default:                                       ; preds = %entry
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18901
  %43 = load i32, i32* %format.addr, align 4, !dbg !18902
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.266, i32 0, i32 0), i32 %43), !dbg !18903
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18904
  %45 = load i8*, i8** %data.addr, align 8, !dbg !18905
  %46 = load i32, i32* %dataLength.addr, align 4, !dbg !18906
  %47 = load i32, i32* %indent.addr, align 4, !dbg !18907
  call void @output_buffer(%struct._IO_FILE* %44, i8* %45, i32 %46, i32 %47), !dbg !18908
  br label %sw.epilog, !dbg !18909

sw.epilog:                                        ; preds = %sw.default, %for.end24, %for.end, %sw.bb4, %sw.bb2, %sw.bb
  ret void, !dbg !18910
}

; Function Attrs: noinline nounwind uwtable
define void @dump_tlv(%struct._IO_FILE* %stream, i32 %size, %struct._lwm2m_data_t* %dataP, i32 %indent) #0 !dbg !18911 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %size.addr = alloca i32, align 4
  %dataP.addr = alloca %struct._lwm2m_data_t*, align 8
  %indent.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18941, metadata !1190), !dbg !18942
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18943, metadata !1190), !dbg !18944
  store %struct._lwm2m_data_t* %dataP, %struct._lwm2m_data_t** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._lwm2m_data_t** %dataP.addr, metadata !18945, metadata !1190), !dbg !18946
  store i32 %indent, i32* %indent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indent.addr, metadata !18947, metadata !1190), !dbg !18948
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18949, metadata !1190), !dbg !18950
  store i32 0, i32* %i, align 4, !dbg !18951
  br label %for.cond, !dbg !18953

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18954
  %1 = load i32, i32* %size.addr, align 4, !dbg !18956
  %cmp = icmp slt i32 %0, %1, !dbg !18957
  br i1 %cmp, label %for.body, label %for.end, !dbg !18958

for.body:                                         ; preds = %for.cond
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18959
  %3 = load i32, i32* %indent.addr, align 4, !dbg !18961
  call void @print_indent(%struct._IO_FILE* %2, i32 %3), !dbg !18962
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18963
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.244, i32 0, i32 0)), !dbg !18964
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18965
  %6 = load i32, i32* %indent.addr, align 4, !dbg !18966
  %add = add nsw i32 %6, 1, !dbg !18967
  call void @print_indent(%struct._IO_FILE* %5, i32 %add), !dbg !18968
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18969
  %8 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !18970
  %9 = load i32, i32* %i, align 4, !dbg !18971
  %idxprom = sext i32 %9 to i64, !dbg !18970
  %arrayidx = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %8, i64 %idxprom, !dbg !18970
  %id = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx, i32 0, i32 1, !dbg !18972
  %10 = load i16, i16* %id, align 4, !dbg !18972
  %conv = zext i16 %10 to i32, !dbg !18970
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.267, i32 0, i32 0), i32 %conv), !dbg !18973
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18974
  %12 = load i32, i32* %indent.addr, align 4, !dbg !18975
  %add2 = add nsw i32 %12, 1, !dbg !18976
  call void @print_indent(%struct._IO_FILE* %11, i32 %add2), !dbg !18977
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18978
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30.268, i32 0, i32 0)), !dbg !18979
  %14 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !18980
  %15 = load i32, i32* %i, align 4, !dbg !18981
  %idxprom4 = sext i32 %15 to i64, !dbg !18980
  %arrayidx5 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %14, i64 %idxprom4, !dbg !18980
  %type = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx5, i32 0, i32 0, !dbg !18982
  %16 = load i32, i32* %type, align 8, !dbg !18982
  switch i32 %16, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb15
    i32 3, label %sw.bb29
    i32 0, label %sw.bb43
    i32 4, label %sw.bb45
    i32 5, label %sw.bb57
    i32 6, label %sw.bb71
    i32 7, label %sw.bb79
    i32 8, label %sw.bb88
    i32 9, label %sw.bb96
  ], !dbg !18983

sw.bb:                                            ; preds = %for.body
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18984
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31.269, i32 0, i32 0)), !dbg !18986
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18987
  %19 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !18988
  %20 = load i32, i32* %i, align 4, !dbg !18989
  %idxprom7 = sext i32 %20 to i64, !dbg !18988
  %arrayidx8 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %19, i64 %idxprom7, !dbg !18988
  %value = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx8, i32 0, i32 2, !dbg !18990
  %asChildren = bitcast %union.anon.0* %value to %struct.anon.0*, !dbg !18991
  %count = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren, i32 0, i32 0, !dbg !18992
  %21 = load i64, i64* %count, align 8, !dbg !18992
  %conv9 = trunc i64 %21 to i32, !dbg !18988
  %22 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !18993
  %23 = load i32, i32* %i, align 4, !dbg !18994
  %idxprom10 = sext i32 %23 to i64, !dbg !18993
  %arrayidx11 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %22, i64 %idxprom10, !dbg !18993
  %value12 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx11, i32 0, i32 2, !dbg !18995
  %asChildren13 = bitcast %union.anon.0* %value12 to %struct.anon.0*, !dbg !18996
  %array = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren13, i32 0, i32 1, !dbg !18997
  %24 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array, align 8, !dbg !18997
  %25 = load i32, i32* %indent.addr, align 4, !dbg !18998
  %add14 = add nsw i32 %25, 1, !dbg !18999
  call void @dump_tlv(%struct._IO_FILE* %18, i32 %conv9, %struct._lwm2m_data_t* %24, i32 %add14), !dbg !19000
  br label %sw.epilog, !dbg !19001

sw.bb15:                                          ; preds = %for.body
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19002
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32.270, i32 0, i32 0)), !dbg !19003
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19004
  %28 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19005
  %29 = load i32, i32* %i, align 4, !dbg !19006
  %idxprom17 = sext i32 %29 to i64, !dbg !19005
  %arrayidx18 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %28, i64 %idxprom17, !dbg !19005
  %value19 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx18, i32 0, i32 2, !dbg !19007
  %asChildren20 = bitcast %union.anon.0* %value19 to %struct.anon.0*, !dbg !19008
  %count21 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren20, i32 0, i32 0, !dbg !19009
  %30 = load i64, i64* %count21, align 8, !dbg !19009
  %conv22 = trunc i64 %30 to i32, !dbg !19005
  %31 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19010
  %32 = load i32, i32* %i, align 4, !dbg !19011
  %idxprom23 = sext i32 %32 to i64, !dbg !19010
  %arrayidx24 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %31, i64 %idxprom23, !dbg !19010
  %value25 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx24, i32 0, i32 2, !dbg !19012
  %asChildren26 = bitcast %union.anon.0* %value25 to %struct.anon.0*, !dbg !19013
  %array27 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren26, i32 0, i32 1, !dbg !19014
  %33 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array27, align 8, !dbg !19014
  %34 = load i32, i32* %indent.addr, align 4, !dbg !19015
  %add28 = add nsw i32 %34, 1, !dbg !19016
  call void @dump_tlv(%struct._IO_FILE* %27, i32 %conv22, %struct._lwm2m_data_t* %33, i32 %add28), !dbg !19017
  br label %sw.epilog, !dbg !19018

sw.bb29:                                          ; preds = %for.body
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19019
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.271, i32 0, i32 0)), !dbg !19020
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19021
  %37 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19022
  %38 = load i32, i32* %i, align 4, !dbg !19023
  %idxprom31 = sext i32 %38 to i64, !dbg !19022
  %arrayidx32 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %37, i64 %idxprom31, !dbg !19022
  %value33 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx32, i32 0, i32 2, !dbg !19024
  %asChildren34 = bitcast %union.anon.0* %value33 to %struct.anon.0*, !dbg !19025
  %count35 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren34, i32 0, i32 0, !dbg !19026
  %39 = load i64, i64* %count35, align 8, !dbg !19026
  %conv36 = trunc i64 %39 to i32, !dbg !19022
  %40 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19027
  %41 = load i32, i32* %i, align 4, !dbg !19028
  %idxprom37 = sext i32 %41 to i64, !dbg !19027
  %arrayidx38 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %40, i64 %idxprom37, !dbg !19027
  %value39 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx38, i32 0, i32 2, !dbg !19029
  %asChildren40 = bitcast %union.anon.0* %value39 to %struct.anon.0*, !dbg !19030
  %array41 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %asChildren40, i32 0, i32 1, !dbg !19031
  %42 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %array41, align 8, !dbg !19031
  %43 = load i32, i32* %indent.addr, align 4, !dbg !19032
  %add42 = add nsw i32 %43, 1, !dbg !19033
  call void @dump_tlv(%struct._IO_FILE* %36, i32 %conv36, %struct._lwm2m_data_t* %42, i32 %add42), !dbg !19034
  br label %sw.epilog, !dbg !19035

sw.bb43:                                          ; preds = %for.body
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19036
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.272, i32 0, i32 0)), !dbg !19037
  br label %sw.epilog, !dbg !19038

sw.bb45:                                          ; preds = %for.body
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19039
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35.273, i32 0, i32 0)), !dbg !19040
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19041
  %47 = load i32, i32* %indent.addr, align 4, !dbg !19042
  %add47 = add nsw i32 %47, 1, !dbg !19043
  call void @print_indent(%struct._IO_FILE* %46, i32 %add47), !dbg !19044
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19045
  %49 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19046
  %50 = load i32, i32* %i, align 4, !dbg !19047
  %idxprom48 = sext i32 %50 to i64, !dbg !19046
  %arrayidx49 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %49, i64 %idxprom48, !dbg !19046
  %value50 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx49, i32 0, i32 2, !dbg !19048
  %asBuffer = bitcast %union.anon.0* %value50 to %struct.anon*, !dbg !19049
  %length = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer, i32 0, i32 0, !dbg !19050
  %51 = load i64, i64* %length, align 8, !dbg !19050
  %conv51 = trunc i64 %51 to i32, !dbg !19051
  %52 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19052
  %53 = load i32, i32* %i, align 4, !dbg !19053
  %idxprom52 = sext i32 %53 to i64, !dbg !19052
  %arrayidx53 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %52, i64 %idxprom52, !dbg !19052
  %value54 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx53, i32 0, i32 2, !dbg !19054
  %asBuffer55 = bitcast %union.anon.0* %value54 to %struct.anon*, !dbg !19055
  %buffer = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer55, i32 0, i32 1, !dbg !19056
  %54 = load i8*, i8** %buffer, align 8, !dbg !19056
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36.274, i32 0, i32 0), i32 %conv51, i8* %54), !dbg !19057
  br label %sw.epilog, !dbg !19058

sw.bb57:                                          ; preds = %for.body
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19059
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37.275, i32 0, i32 0)), !dbg !19060
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19061
  %57 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19062
  %58 = load i32, i32* %i, align 4, !dbg !19063
  %idxprom59 = sext i32 %58 to i64, !dbg !19062
  %arrayidx60 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %57, i64 %idxprom59, !dbg !19062
  %value61 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx60, i32 0, i32 2, !dbg !19064
  %asBuffer62 = bitcast %union.anon.0* %value61 to %struct.anon*, !dbg !19065
  %buffer63 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer62, i32 0, i32 1, !dbg !19066
  %59 = load i8*, i8** %buffer63, align 8, !dbg !19066
  %60 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19067
  %61 = load i32, i32* %i, align 4, !dbg !19068
  %idxprom64 = sext i32 %61 to i64, !dbg !19067
  %arrayidx65 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %60, i64 %idxprom64, !dbg !19067
  %value66 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx65, i32 0, i32 2, !dbg !19069
  %asBuffer67 = bitcast %union.anon.0* %value66 to %struct.anon*, !dbg !19070
  %length68 = getelementptr inbounds %struct.anon, %struct.anon* %asBuffer67, i32 0, i32 0, !dbg !19071
  %62 = load i64, i64* %length68, align 8, !dbg !19071
  %conv69 = trunc i64 %62 to i32, !dbg !19067
  %63 = load i32, i32* %indent.addr, align 4, !dbg !19072
  %add70 = add nsw i32 %63, 1, !dbg !19073
  call void @output_buffer(%struct._IO_FILE* %56, i8* %59, i32 %conv69, i32 %add70), !dbg !19074
  br label %sw.epilog, !dbg !19075

sw.bb71:                                          ; preds = %for.body
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19076
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38.276, i32 0, i32 0)), !dbg !19077
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19078
  %66 = load i32, i32* %indent.addr, align 4, !dbg !19079
  %add73 = add nsw i32 %66, 1, !dbg !19080
  call void @print_indent(%struct._IO_FILE* %65, i32 %add73), !dbg !19081
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19082
  %68 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19083
  %69 = load i32, i32* %i, align 4, !dbg !19084
  %idxprom74 = sext i32 %69 to i64, !dbg !19083
  %arrayidx75 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %68, i64 %idxprom74, !dbg !19083
  %value76 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx75, i32 0, i32 2, !dbg !19085
  %asInteger = bitcast %union.anon.0* %value76 to i64*, !dbg !19086
  %70 = load i64, i64* %asInteger, align 8, !dbg !19086
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.253, i32 0, i32 0), i64 %70), !dbg !19087
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19088
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.277, i32 0, i32 0)), !dbg !19089
  br label %sw.epilog, !dbg !19090

sw.bb79:                                          ; preds = %for.body
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19091
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40.278, i32 0, i32 0)), !dbg !19092
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19093
  %74 = load i32, i32* %indent.addr, align 4, !dbg !19094
  %add81 = add nsw i32 %74, 1, !dbg !19095
  call void @print_indent(%struct._IO_FILE* %73, i32 %add81), !dbg !19096
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19097
  %76 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19098
  %77 = load i32, i32* %i, align 4, !dbg !19099
  %idxprom82 = sext i32 %77 to i64, !dbg !19098
  %arrayidx83 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %76, i64 %idxprom82, !dbg !19098
  %value84 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx83, i32 0, i32 2, !dbg !19100
  %asInteger85 = bitcast %union.anon.0* %value84 to i64*, !dbg !19101
  %78 = load i64, i64* %asInteger85, align 8, !dbg !19101
  %call86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.253, i32 0, i32 0), i64 %78), !dbg !19102
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19103
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.277, i32 0, i32 0)), !dbg !19104
  br label %sw.epilog, !dbg !19105

sw.bb88:                                          ; preds = %for.body
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19106
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41.279, i32 0, i32 0)), !dbg !19107
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19108
  %82 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19109
  %83 = load i32, i32* %i, align 4, !dbg !19110
  %idxprom90 = sext i32 %83 to i64, !dbg !19109
  %arrayidx91 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %82, i64 %idxprom90, !dbg !19109
  %value92 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx91, i32 0, i32 2, !dbg !19111
  %asBoolean = bitcast %union.anon.0* %value92 to i8*, !dbg !19112
  %84 = load i8, i8* %asBoolean, align 8, !dbg !19112
  %tobool = trunc i8 %84 to i1, !dbg !19112
  %85 = zext i1 %tobool to i64, !dbg !19109
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43.280, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.281, i32 0, i32 0), !dbg !19109
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42.282, i32 0, i32 0), i8* %cond), !dbg !19113
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19114
  %call95 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.277, i32 0, i32 0)), !dbg !19115
  br label %sw.epilog, !dbg !19116

sw.bb96:                                          ; preds = %for.body
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19117
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.45.283, i32 0, i32 0)), !dbg !19118
  br label %sw.epilog, !dbg !19119

sw.default:                                       ; preds = %for.body
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19120
  %89 = load %struct._lwm2m_data_t*, %struct._lwm2m_data_t** %dataP.addr, align 8, !dbg !19121
  %90 = load i32, i32* %i, align 4, !dbg !19122
  %idxprom98 = sext i32 %90 to i64, !dbg !19121
  %arrayidx99 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %89, i64 %idxprom98, !dbg !19121
  %type100 = getelementptr inbounds %struct._lwm2m_data_t, %struct._lwm2m_data_t* %arrayidx99, i32 0, i32 0, !dbg !19123
  %91 = load i32, i32* %type100, align 8, !dbg !19123
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46.284, i32 0, i32 0), i32 %91), !dbg !19124
  br label %sw.epilog, !dbg !19125

sw.epilog:                                        ; preds = %sw.default, %sw.bb96, %sw.bb88, %sw.bb79, %sw.bb71, %sw.bb57, %sw.bb45, %sw.bb43, %sw.bb29, %sw.bb15, %sw.bb
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19126
  %93 = load i32, i32* %indent.addr, align 4, !dbg !19127
  call void @print_indent(%struct._IO_FILE* %92, i32 %93), !dbg !19128
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19129
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.257, i32 0, i32 0)), !dbg !19130
  br label %for.inc, !dbg !19131

for.inc:                                          ; preds = %sw.epilog
  %95 = load i32, i32* %i, align 4, !dbg !19132
  %inc = add nsw i32 %95, 1, !dbg !19132
  store i32 %inc, i32* %i, align 4, !dbg !19132
  br label %for.cond, !dbg !19133, !llvm.loop !19134

for.end:                                          ; preds = %for.cond
  ret void, !dbg !19136
}

; Function Attrs: noinline nounwind uwtable
define void @print_status(%struct._IO_FILE* %stream, i8 zeroext %status) #0 !dbg !19137 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %status.addr = alloca i8, align 1
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19140, metadata !1190), !dbg !19141
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !19142, metadata !1190), !dbg !19143
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19144
  %1 = load i8, i8* %status.addr, align 1, !dbg !19145
  %conv = zext i8 %1 to i32, !dbg !19145
  %and = and i32 %conv, 224, !dbg !19146
  %shr = ashr i32 %and, 5, !dbg !19147
  %2 = load i8, i8* %status.addr, align 1, !dbg !19148
  %conv1 = zext i8 %2 to i32, !dbg !19148
  %and2 = and i32 %conv1, 31, !dbg !19149
  %3 = load i8, i8* %status.addr, align 1, !dbg !19150
  %conv3 = zext i8 %3 to i32, !dbg !19150
  %call = call i8* @prv_status_to_string(i32 %conv3), !dbg !19151
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47.287, i32 0, i32 0), i32 %shr, i32 %and2, i8* %call), !dbg !19152
  ret void, !dbg !19153
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @prv_status_to_string(i32 %status) #0 !dbg !19154 {
entry:
  %retval = alloca i8*, align 8
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !19157, metadata !1190), !dbg !19158
  %0 = load i32, i32* %status.addr, align 4, !dbg !19159
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 65, label %sw.bb2
    i32 66, label %sw.bb3
    i32 68, label %sw.bb4
    i32 69, label %sw.bb5
    i32 128, label %sw.bb6
    i32 129, label %sw.bb7
    i32 132, label %sw.bb8
    i32 133, label %sw.bb9
    i32 134, label %sw.bb10
    i32 160, label %sw.bb11
    i32 161, label %sw.bb12
    i32 163, label %sw.bb13
  ], !dbg !19160

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52.288, i32 0, i32 0), i8** %retval, align 8, !dbg !19161
  br label %return, !dbg !19161

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53.289, i32 0, i32 0), i8** %retval, align 8, !dbg !19163
  br label %return, !dbg !19163

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54.290, i32 0, i32 0), i8** %retval, align 8, !dbg !19164
  br label %return, !dbg !19164

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.55.291, i32 0, i32 0), i8** %retval, align 8, !dbg !19165
  br label %return, !dbg !19165

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56.292, i32 0, i32 0), i8** %retval, align 8, !dbg !19166
  br label %return, !dbg !19166

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57.293, i32 0, i32 0), i8** %retval, align 8, !dbg !19167
  br label %return, !dbg !19167

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58.294, i32 0, i32 0), i8** %retval, align 8, !dbg !19168
  br label %return, !dbg !19168

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59.295, i32 0, i32 0), i8** %retval, align 8, !dbg !19169
  br label %return, !dbg !19169

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60.296, i32 0, i32 0), i8** %retval, align 8, !dbg !19170
  br label %return, !dbg !19170

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61.297, i32 0, i32 0), i8** %retval, align 8, !dbg !19171
  br label %return, !dbg !19171

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62.298, i32 0, i32 0), i8** %retval, align 8, !dbg !19172
  br label %return, !dbg !19172

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.63.299, i32 0, i32 0), i8** %retval, align 8, !dbg !19173
  br label %return, !dbg !19173

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.64.300, i32 0, i32 0), i8** %retval, align 8, !dbg !19174
  br label %return, !dbg !19174

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65.301, i32 0, i32 0), i8** %retval, align 8, !dbg !19175
  br label %return, !dbg !19175

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.302, i32 0, i32 0), i8** %retval, align 8, !dbg !19176
  br label %return, !dbg !19176

return:                                           ; preds = %sw.default, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !19177
  ret i8* %1, !dbg !19177
}

; Function Attrs: noinline nounwind uwtable
define i64 @base64_decode(i8* %dataP, i64 %dataLen, i8** %bufferP) #0 !dbg !19178 {
entry:
  %retval = alloca i64, align 8
  %dataP.addr = alloca i8*, align 8
  %dataLen.addr = alloca i64, align 8
  %bufferP.addr = alloca i8**, align 8
  %data_index = alloca i64, align 8
  %result_index = alloca i64, align 8
  %result_len = alloca i64, align 8
  %tmp = alloca [2 x i8], align 1
  %tmp38 = alloca [3 x i8], align 1
  store i8* %dataP, i8** %dataP.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dataP.addr, metadata !19181, metadata !1190), !dbg !19182
  store i64 %dataLen, i64* %dataLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataLen.addr, metadata !19183, metadata !1190), !dbg !19184
  store i8** %bufferP, i8*** %bufferP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %bufferP.addr, metadata !19185, metadata !1190), !dbg !19186
  call void @llvm.dbg.declare(metadata i64* %data_index, metadata !19187, metadata !1190), !dbg !19188
  call void @llvm.dbg.declare(metadata i64* %result_index, metadata !19189, metadata !1190), !dbg !19190
  call void @llvm.dbg.declare(metadata i64* %result_len, metadata !19191, metadata !1190), !dbg !19192
  %0 = load i64, i64* %dataLen.addr, align 8, !dbg !19193
  %rem = urem i64 %0, 4, !dbg !19195
  %tobool = icmp ne i64 %rem, 0, !dbg !19195
  br i1 %tobool, label %if.then, label %if.end, !dbg !19196

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !19197
  br label %return, !dbg !19197

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %dataLen.addr, align 8, !dbg !19198
  %shr = lshr i64 %1, 2, !dbg !19199
  %mul = mul i64 %shr, 3, !dbg !19200
  store i64 %mul, i64* %result_len, align 8, !dbg !19201
  %2 = load i64, i64* %result_len, align 8, !dbg !19202
  %call = call i8* @lwm2m_malloc(i64 %2), !dbg !19203
  %3 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19204
  store i8* %call, i8** %3, align 8, !dbg !19205
  %4 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19206
  %5 = load i8*, i8** %4, align 8, !dbg !19208
  %cmp = icmp eq i8* null, %5, !dbg !19209
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !19210

if.then1:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !19211
  br label %return, !dbg !19211

if.end2:                                          ; preds = %if.end
  %6 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19212
  %7 = load i8*, i8** %6, align 8, !dbg !19213
  %8 = load i64, i64* %result_len, align 8, !dbg !19214
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 %8, i32 1, i1 false), !dbg !19215
  br label %while.cond, !dbg !19216

while.cond:                                       ; preds = %while.body, %if.end2
  %9 = load i8*, i8** %dataP.addr, align 8, !dbg !19217
  %10 = load i64, i64* %dataLen.addr, align 8, !dbg !19218
  %sub = sub i64 %10, 1, !dbg !19219
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !19217
  %11 = load i8, i8* %arrayidx, align 1, !dbg !19217
  %conv = zext i8 %11 to i32, !dbg !19217
  %cmp3 = icmp eq i32 %conv, 61, !dbg !19220
  br i1 %cmp3, label %while.body, label %while.end, !dbg !19216

while.body:                                       ; preds = %while.cond
  %12 = load i64, i64* %dataLen.addr, align 8, !dbg !19221
  %dec = add i64 %12, -1, !dbg !19221
  store i64 %dec, i64* %dataLen.addr, align 8, !dbg !19221
  br label %while.cond, !dbg !19216, !llvm.loop !19223

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %data_index, align 8, !dbg !19225
  store i64 0, i64* %result_index, align 8, !dbg !19226
  br label %while.cond5, !dbg !19227

while.cond5:                                      ; preds = %while.body8, %while.end
  %13 = load i64, i64* %data_index, align 8, !dbg !19228
  %14 = load i64, i64* %dataLen.addr, align 8, !dbg !19229
  %cmp6 = icmp ult i64 %13, %14, !dbg !19230
  br i1 %cmp6, label %while.body8, label %while.end11, !dbg !19227

while.body8:                                      ; preds = %while.cond5
  %15 = load i8*, i8** %dataP.addr, align 8, !dbg !19231
  %16 = load i64, i64* %data_index, align 8, !dbg !19233
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %16, !dbg !19234
  %17 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19235
  %18 = load i8*, i8** %17, align 8, !dbg !19236
  %19 = load i64, i64* %result_index, align 8, !dbg !19237
  %add.ptr9 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !19238
  call void @prv_decodeBlock(i8* %add.ptr, i8* %add.ptr9), !dbg !19239
  %20 = load i64, i64* %data_index, align 8, !dbg !19240
  %add = add i64 %20, 4, !dbg !19240
  store i64 %add, i64* %data_index, align 8, !dbg !19240
  %21 = load i64, i64* %result_index, align 8, !dbg !19241
  %add10 = add i64 %21, 3, !dbg !19241
  store i64 %add10, i64* %result_index, align 8, !dbg !19241
  br label %while.cond5, !dbg !19227, !llvm.loop !19242

while.end11:                                      ; preds = %while.cond5
  %22 = load i64, i64* %data_index, align 8, !dbg !19244
  %23 = load i64, i64* %dataLen.addr, align 8, !dbg !19245
  %sub12 = sub i64 %22, %23, !dbg !19246
  switch i64 %sub12, label %sw.default [
    i64 0, label %sw.bb
    i64 2, label %sw.bb13
    i64 3, label %sw.bb37
  ], !dbg !19247

sw.bb:                                            ; preds = %while.end11
  br label %sw.epilog, !dbg !19248

sw.bb13:                                          ; preds = %while.end11
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !19250, metadata !1190), !dbg !19253
  %24 = load i8*, i8** %dataP.addr, align 8, !dbg !19254
  %25 = load i64, i64* %dataLen.addr, align 8, !dbg !19255
  %sub14 = sub i64 %25, 2, !dbg !19256
  %arrayidx15 = getelementptr inbounds i8, i8* %24, i64 %sub14, !dbg !19254
  %26 = load i8, i8* %arrayidx15, align 1, !dbg !19254
  %call16 = call zeroext i8 @prv_b64Revert(i8 zeroext %26), !dbg !19257
  %arrayidx17 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !19258
  store i8 %call16, i8* %arrayidx17, align 1, !dbg !19259
  %27 = load i8*, i8** %dataP.addr, align 8, !dbg !19260
  %28 = load i64, i64* %dataLen.addr, align 8, !dbg !19261
  %sub18 = sub i64 %28, 1, !dbg !19262
  %arrayidx19 = getelementptr inbounds i8, i8* %27, i64 %sub18, !dbg !19260
  %29 = load i8, i8* %arrayidx19, align 1, !dbg !19260
  %call20 = call zeroext i8 @prv_b64Revert(i8 zeroext %29), !dbg !19263
  %arrayidx21 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 1, !dbg !19264
  store i8 %call20, i8* %arrayidx21, align 1, !dbg !19265
  %arrayidx22 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !19266
  %30 = load i8, i8* %arrayidx22, align 1, !dbg !19266
  %conv23 = zext i8 %30 to i32, !dbg !19266
  %shl = shl i32 %conv23, 2, !dbg !19267
  %arrayidx24 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 1, !dbg !19268
  %31 = load i8, i8* %arrayidx24, align 1, !dbg !19268
  %conv25 = zext i8 %31 to i32, !dbg !19268
  %shr26 = ashr i32 %conv25, 4, !dbg !19269
  %or = or i32 %shl, %shr26, !dbg !19270
  %conv27 = trunc i32 %or to i8, !dbg !19271
  %32 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19272
  %33 = load i64, i64* %result_index, align 8, !dbg !19273
  %sub28 = sub i64 %33, 3, !dbg !19274
  %arrayidx29 = getelementptr inbounds i8*, i8** %32, i64 %sub28, !dbg !19272
  %34 = load i8*, i8** %arrayidx29, align 8, !dbg !19272
  store i8 %conv27, i8* %34, align 1, !dbg !19275
  %arrayidx30 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 1, !dbg !19276
  %35 = load i8, i8* %arrayidx30, align 1, !dbg !19276
  %conv31 = zext i8 %35 to i32, !dbg !19276
  %shl32 = shl i32 %conv31, 4, !dbg !19277
  %conv33 = trunc i32 %shl32 to i8, !dbg !19278
  %36 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19279
  %37 = load i64, i64* %result_index, align 8, !dbg !19280
  %sub34 = sub i64 %37, 2, !dbg !19281
  %arrayidx35 = getelementptr inbounds i8*, i8** %36, i64 %sub34, !dbg !19279
  %38 = load i8*, i8** %arrayidx35, align 8, !dbg !19279
  store i8 %conv33, i8* %38, align 1, !dbg !19282
  %39 = load i64, i64* %result_len, align 8, !dbg !19283
  %sub36 = sub i64 %39, 2, !dbg !19283
  store i64 %sub36, i64* %result_len, align 8, !dbg !19283
  br label %sw.epilog, !dbg !19284

sw.bb37:                                          ; preds = %while.end11
  call void @llvm.dbg.declare(metadata [3 x i8]* %tmp38, metadata !19285, metadata !1190), !dbg !19290
  %40 = load i8*, i8** %dataP.addr, align 8, !dbg !19291
  %41 = load i64, i64* %dataLen.addr, align 8, !dbg !19292
  %sub39 = sub i64 %41, 3, !dbg !19293
  %arrayidx40 = getelementptr inbounds i8, i8* %40, i64 %sub39, !dbg !19291
  %42 = load i8, i8* %arrayidx40, align 1, !dbg !19291
  %call41 = call zeroext i8 @prv_b64Revert(i8 zeroext %42), !dbg !19294
  %arrayidx42 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 0, !dbg !19295
  store i8 %call41, i8* %arrayidx42, align 1, !dbg !19296
  %43 = load i8*, i8** %dataP.addr, align 8, !dbg !19297
  %44 = load i64, i64* %dataLen.addr, align 8, !dbg !19298
  %sub43 = sub i64 %44, 2, !dbg !19299
  %arrayidx44 = getelementptr inbounds i8, i8* %43, i64 %sub43, !dbg !19297
  %45 = load i8, i8* %arrayidx44, align 1, !dbg !19297
  %call45 = call zeroext i8 @prv_b64Revert(i8 zeroext %45), !dbg !19300
  %arrayidx46 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 1, !dbg !19301
  store i8 %call45, i8* %arrayidx46, align 1, !dbg !19302
  %46 = load i8*, i8** %dataP.addr, align 8, !dbg !19303
  %47 = load i64, i64* %dataLen.addr, align 8, !dbg !19304
  %sub47 = sub i64 %47, 1, !dbg !19305
  %arrayidx48 = getelementptr inbounds i8, i8* %46, i64 %sub47, !dbg !19303
  %48 = load i8, i8* %arrayidx48, align 1, !dbg !19303
  %call49 = call zeroext i8 @prv_b64Revert(i8 zeroext %48), !dbg !19306
  %arrayidx50 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 2, !dbg !19307
  store i8 %call49, i8* %arrayidx50, align 1, !dbg !19308
  %arrayidx51 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 0, !dbg !19309
  %49 = load i8, i8* %arrayidx51, align 1, !dbg !19309
  %conv52 = zext i8 %49 to i32, !dbg !19309
  %shl53 = shl i32 %conv52, 2, !dbg !19310
  %arrayidx54 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 1, !dbg !19311
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !19311
  %conv55 = zext i8 %50 to i32, !dbg !19311
  %shr56 = ashr i32 %conv55, 4, !dbg !19312
  %or57 = or i32 %shl53, %shr56, !dbg !19313
  %conv58 = trunc i32 %or57 to i8, !dbg !19314
  %51 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19315
  %52 = load i64, i64* %result_index, align 8, !dbg !19316
  %sub59 = sub i64 %52, 3, !dbg !19317
  %arrayidx60 = getelementptr inbounds i8*, i8** %51, i64 %sub59, !dbg !19315
  %53 = load i8*, i8** %arrayidx60, align 8, !dbg !19315
  store i8 %conv58, i8* %53, align 1, !dbg !19318
  %arrayidx61 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 1, !dbg !19319
  %54 = load i8, i8* %arrayidx61, align 1, !dbg !19319
  %conv62 = zext i8 %54 to i32, !dbg !19319
  %shl63 = shl i32 %conv62, 4, !dbg !19320
  %arrayidx64 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 2, !dbg !19321
  %55 = load i8, i8* %arrayidx64, align 1, !dbg !19321
  %conv65 = zext i8 %55 to i32, !dbg !19321
  %shr66 = ashr i32 %conv65, 2, !dbg !19322
  %or67 = or i32 %shl63, %shr66, !dbg !19323
  %conv68 = trunc i32 %or67 to i8, !dbg !19324
  %56 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19325
  %57 = load i64, i64* %result_index, align 8, !dbg !19326
  %sub69 = sub i64 %57, 2, !dbg !19327
  %arrayidx70 = getelementptr inbounds i8*, i8** %56, i64 %sub69, !dbg !19325
  %58 = load i8*, i8** %arrayidx70, align 8, !dbg !19325
  store i8 %conv68, i8* %58, align 1, !dbg !19328
  %arrayidx71 = getelementptr inbounds [3 x i8], [3 x i8]* %tmp38, i64 0, i64 2, !dbg !19329
  %59 = load i8, i8* %arrayidx71, align 1, !dbg !19329
  %conv72 = zext i8 %59 to i32, !dbg !19329
  %shl73 = shl i32 %conv72, 6, !dbg !19330
  %conv74 = trunc i32 %shl73 to i8, !dbg !19331
  %60 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19332
  %61 = load i64, i64* %result_index, align 8, !dbg !19333
  %sub75 = sub i64 %61, 1, !dbg !19334
  %arrayidx76 = getelementptr inbounds i8*, i8** %60, i64 %sub75, !dbg !19332
  %62 = load i8*, i8** %arrayidx76, align 8, !dbg !19332
  store i8 %conv74, i8* %62, align 1, !dbg !19335
  %63 = load i64, i64* %result_len, align 8, !dbg !19336
  %sub77 = sub i64 %63, 1, !dbg !19336
  store i64 %sub77, i64* %result_len, align 8, !dbg !19336
  br label %sw.epilog, !dbg !19337

sw.default:                                       ; preds = %while.end11
  %64 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19338
  %65 = load i8*, i8** %64, align 8, !dbg !19339
  call void @lwm2m_free(i8* %65), !dbg !19340
  %66 = load i8**, i8*** %bufferP.addr, align 8, !dbg !19341
  store i8* null, i8** %66, align 8, !dbg !19342
  store i64 0, i64* %result_len, align 8, !dbg !19343
  br label %sw.epilog, !dbg !19344

sw.epilog:                                        ; preds = %sw.default, %sw.bb37, %sw.bb13, %sw.bb
  %67 = load i64, i64* %result_len, align 8, !dbg !19345
  store i64 %67, i64* %retval, align 8, !dbg !19346
  br label %return, !dbg !19346

return:                                           ; preds = %sw.epilog, %if.then1, %if.then
  %68 = load i64, i64* %retval, align 8, !dbg !19347
  ret i64 %68, !dbg !19347
}

; Function Attrs: noinline nounwind uwtable
define internal void @prv_decodeBlock(i8* %input, i8* %output) #0 !dbg !19348 {
entry:
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %tmp = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  store i8* %input, i8** %input.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %input.addr, metadata !19349, metadata !1190), !dbg !19350
  store i8* %output, i8** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %output.addr, metadata !19351, metadata !1190), !dbg !19352
  call void @llvm.dbg.declare(metadata [4 x i8]* %tmp, metadata !19353, metadata !1190), !dbg !19354
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19355, metadata !1190), !dbg !19356
  %0 = load i8*, i8** %output.addr, align 8, !dbg !19357
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 1, i1 false), !dbg !19358
  store i32 0, i32* %i, align 4, !dbg !19359
  br label %for.cond, !dbg !19361

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !19362
  %cmp = icmp slt i32 %1, 4, !dbg !19364
  br i1 %cmp, label %for.body, label %for.end, !dbg !19365

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %input.addr, align 8, !dbg !19366
  %3 = load i32, i32* %i, align 4, !dbg !19368
  %idxprom = sext i32 %3 to i64, !dbg !19366
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !19366
  %4 = load i8, i8* %arrayidx, align 1, !dbg !19366
  %call = call zeroext i8 @prv_b64Revert(i8 zeroext %4), !dbg !19369
  %5 = load i32, i32* %i, align 4, !dbg !19370
  %idxprom1 = sext i32 %5 to i64, !dbg !19371
  %arrayidx2 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 %idxprom1, !dbg !19371
  store i8 %call, i8* %arrayidx2, align 1, !dbg !19372
  br label %for.inc, !dbg !19373

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !19374
  %inc = add nsw i32 %6, 1, !dbg !19374
  store i32 %inc, i32* %i, align 4, !dbg !19374
  br label %for.cond, !dbg !19375, !llvm.loop !19376

for.end:                                          ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 0, !dbg !19378
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !19378
  %conv = zext i8 %7 to i32, !dbg !19378
  %shl = shl i32 %conv, 2, !dbg !19379
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 1, !dbg !19380
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !19380
  %conv5 = zext i8 %8 to i32, !dbg !19380
  %shr = ashr i32 %conv5, 4, !dbg !19381
  %or = or i32 %shl, %shr, !dbg !19382
  %conv6 = trunc i32 %or to i8, !dbg !19383
  %9 = load i8*, i8** %output.addr, align 8, !dbg !19384
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !19384
  store i8 %conv6, i8* %arrayidx7, align 1, !dbg !19385
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 1, !dbg !19386
  %10 = load i8, i8* %arrayidx8, align 1, !dbg !19386
  %conv9 = zext i8 %10 to i32, !dbg !19386
  %shl10 = shl i32 %conv9, 4, !dbg !19387
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 2, !dbg !19388
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !19388
  %conv12 = zext i8 %11 to i32, !dbg !19388
  %shr13 = ashr i32 %conv12, 2, !dbg !19389
  %or14 = or i32 %shl10, %shr13, !dbg !19390
  %conv15 = trunc i32 %or14 to i8, !dbg !19391
  %12 = load i8*, i8** %output.addr, align 8, !dbg !19392
  %arrayidx16 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !19392
  store i8 %conv15, i8* %arrayidx16, align 1, !dbg !19393
  %arrayidx17 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 2, !dbg !19394
  %13 = load i8, i8* %arrayidx17, align 1, !dbg !19394
  %conv18 = zext i8 %13 to i32, !dbg !19394
  %shl19 = shl i32 %conv18, 6, !dbg !19395
  %arrayidx20 = getelementptr inbounds [4 x i8], [4 x i8]* %tmp, i64 0, i64 3, !dbg !19396
  %14 = load i8, i8* %arrayidx20, align 1, !dbg !19396
  %conv21 = zext i8 %14 to i32, !dbg !19396
  %or22 = or i32 %shl19, %conv21, !dbg !19397
  %conv23 = trunc i32 %or22 to i8, !dbg !19398
  %15 = load i8*, i8** %output.addr, align 8, !dbg !19399
  %arrayidx24 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !19399
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !19400
  ret void, !dbg !19401
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @prv_b64Revert(i8 zeroext %value) #0 !dbg !19402 {
entry:
  %retval = alloca i8, align 1
  %value.addr = alloca i8, align 1
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !19405, metadata !1190), !dbg !19406
  %0 = load i8, i8* %value.addr, align 1, !dbg !19407
  %conv = zext i8 %0 to i32, !dbg !19407
  %cmp = icmp sge i32 %conv, 65, !dbg !19409
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19410

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %value.addr, align 1, !dbg !19411
  %conv2 = zext i8 %1 to i32, !dbg !19411
  %cmp3 = icmp sle i32 %conv2, 90, !dbg !19412
  br i1 %cmp3, label %if.then, label %if.end, !dbg !19413

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8, i8* %value.addr, align 1, !dbg !19414
  %conv5 = zext i8 %2 to i32, !dbg !19414
  %sub = sub nsw i32 %conv5, 65, !dbg !19416
  %conv6 = trunc i32 %sub to i8, !dbg !19417
  store i8 %conv6, i8* %retval, align 1, !dbg !19418
  br label %return, !dbg !19418

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8, i8* %value.addr, align 1, !dbg !19419
  %conv7 = zext i8 %3 to i32, !dbg !19419
  %cmp8 = icmp sge i32 %conv7, 97, !dbg !19421
  br i1 %cmp8, label %land.lhs.true10, label %if.end18, !dbg !19422

land.lhs.true10:                                  ; preds = %if.end
  %4 = load i8, i8* %value.addr, align 1, !dbg !19423
  %conv11 = zext i8 %4 to i32, !dbg !19423
  %cmp12 = icmp sle i32 %conv11, 122, !dbg !19424
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !19425

if.then14:                                        ; preds = %land.lhs.true10
  %5 = load i8, i8* %value.addr, align 1, !dbg !19426
  %conv15 = zext i8 %5 to i32, !dbg !19426
  %add = add nsw i32 26, %conv15, !dbg !19428
  %sub16 = sub nsw i32 %add, 97, !dbg !19429
  %conv17 = trunc i32 %sub16 to i8, !dbg !19430
  store i8 %conv17, i8* %retval, align 1, !dbg !19431
  br label %return, !dbg !19431

if.end18:                                         ; preds = %land.lhs.true10, %if.end
  %6 = load i8, i8* %value.addr, align 1, !dbg !19432
  %conv19 = zext i8 %6 to i32, !dbg !19432
  %cmp20 = icmp sge i32 %conv19, 48, !dbg !19434
  br i1 %cmp20, label %land.lhs.true22, label %if.end31, !dbg !19435

land.lhs.true22:                                  ; preds = %if.end18
  %7 = load i8, i8* %value.addr, align 1, !dbg !19436
  %conv23 = zext i8 %7 to i32, !dbg !19436
  %cmp24 = icmp sle i32 %conv23, 57, !dbg !19437
  br i1 %cmp24, label %if.then26, label %if.end31, !dbg !19438

if.then26:                                        ; preds = %land.lhs.true22
  %8 = load i8, i8* %value.addr, align 1, !dbg !19439
  %conv27 = zext i8 %8 to i32, !dbg !19439
  %add28 = add nsw i32 52, %conv27, !dbg !19441
  %sub29 = sub nsw i32 %add28, 48, !dbg !19442
  %conv30 = trunc i32 %sub29 to i8, !dbg !19443
  store i8 %conv30, i8* %retval, align 1, !dbg !19444
  br label %return, !dbg !19444

if.end31:                                         ; preds = %land.lhs.true22, %if.end18
  %9 = load i8, i8* %value.addr, align 1, !dbg !19445
  %conv32 = zext i8 %9 to i32, !dbg !19445
  switch i32 %conv32, label %sw.default [
    i32 43, label %sw.bb
    i32 47, label %sw.bb33
  ], !dbg !19446

sw.bb:                                            ; preds = %if.end31
  store i8 62, i8* %retval, align 1, !dbg !19447
  br label %return, !dbg !19447

sw.bb33:                                          ; preds = %if.end31
  store i8 63, i8* %retval, align 1, !dbg !19449
  br label %return, !dbg !19449

sw.default:                                       ; preds = %if.end31
  store i8 0, i8* %retval, align 1, !dbg !19450
  br label %return, !dbg !19450

return:                                           ; preds = %sw.default, %sw.bb33, %sw.bb, %if.then26, %if.then14, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !19451
  ret i8 %10, !dbg !19451
}

; Function Attrs: noinline nounwind uwtable
define i8* @lwm2m_malloc(i64 %s) #0 !dbg !19452 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19455, metadata !1190), !dbg !19456
  %0 = load i64, i64* %s.addr, align 8, !dbg !19457
  %call = call noalias i8* @malloc(i64 %0) #7, !dbg !19458
  ret i8* %call, !dbg !19459
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_free(i8* %p) #0 !dbg !19460 {
entry:
  %p.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19461, metadata !1190), !dbg !19462
  %0 = load i8*, i8** %p.addr, align 8, !dbg !19463
  call void @free(i8* %0) #7, !dbg !19464
  ret void, !dbg !19465
}

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: noinline nounwind uwtable
define i8* @lwm2m_strdup(i8* %str) #0 !dbg !19466 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !19469, metadata !1190), !dbg !19470
  %0 = load i8*, i8** %str.addr, align 8, !dbg !19471
  %call = call noalias i8* @strdup(i8* %0) #7, !dbg !19472
  ret i8* %call, !dbg !19473
}

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #5

; Function Attrs: noinline nounwind uwtable
define i32 @lwm2m_strncmp(i8* %s1, i8* %s2, i64 %n) #0 !dbg !19474 {
entry:
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !19477, metadata !1190), !dbg !19478
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !19479, metadata !1190), !dbg !19480
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19481, metadata !1190), !dbg !19482
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !19483
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !19484
  %2 = load i64, i64* %n.addr, align 8, !dbg !19485
  %call = call i32 @strncmp(i8* %0, i8* %1, i64 %2) #9, !dbg !19486
  ret i32 %call, !dbg !19487
}

; Function Attrs: noinline nounwind uwtable
define i64 @lwm2m_gettime() #0 !dbg !19488 {
entry:
  %retval = alloca i64, align 8
  %tv = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !19491, metadata !1190), !dbg !19496
  %call = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #7, !dbg !19497
  %cmp = icmp ne i32 0, %call, !dbg !19499
  br i1 %cmp, label %if.then, label %if.end, !dbg !19500

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !19501
  br label %return, !dbg !19501

if.end:                                           ; preds = %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0, !dbg !19503
  %0 = load i64, i64* %tv_sec, align 8, !dbg !19503
  store i64 %0, i64* %retval, align 8, !dbg !19504
  br label %return, !dbg !19504

return:                                           ; preds = %if.end, %if.then
  %1 = load i64, i64* %retval, align 8, !dbg !19505
  ret i64 %1, !dbg !19505
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #5

; Function Attrs: noinline nounwind uwtable
define void @lwm2m_printf(i8* %format, ...) #0 !dbg !19506 {
entry:
  %format.addr = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !19509, metadata !1190), !dbg !19510
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !19511, metadata !1190), !dbg !19523
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !19524
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19524
  call void @llvm.va_start(i8* %arraydecay1), !dbg !19524
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19525
  %1 = load i8*, i8** %format.addr, align 8, !dbg !19526
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !19527
  %call = call i32 @vfprintf(%struct._IO_FILE* %0, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !19528
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !19529
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19529
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19529
  ret void, !dbg !19530
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind uwtable
define i32 @create_socket(i8* %portStr, i32 %addressFamily) #0 !dbg !19531 {
entry:
  %retval = alloca i32, align 4
  %portStr.addr = alloca i8*, align 8
  %addressFamily.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  %p = alloca %struct.addrinfo*, align 8
  store i8* %portStr, i8** %portStr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %portStr.addr, metadata !19534, metadata !1190), !dbg !19535
  store i32 %addressFamily, i32* %addressFamily.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addressFamily.addr, metadata !19536, metadata !1190), !dbg !19537
  call void @llvm.dbg.declare(metadata i32* %s, metadata !19538, metadata !1190), !dbg !19539
  store i32 -1, i32* %s, align 4, !dbg !19539
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %hints, metadata !19540, metadata !1190), !dbg !19553
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %res, metadata !19554, metadata !1190), !dbg !19555
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %p, metadata !19556, metadata !1190), !dbg !19557
  %0 = bitcast %struct.addrinfo* %hints to i8*, !dbg !19558
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 48, i32 8, i1 false), !dbg !19558
  %1 = load i32, i32* %addressFamily.addr, align 4, !dbg !19559
  %ai_family = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !19560
  store i32 %1, i32* %ai_family, align 4, !dbg !19561
  %ai_socktype = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 2, !dbg !19562
  store i32 2, i32* %ai_socktype, align 8, !dbg !19563
  %ai_flags = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 0, !dbg !19564
  store i32 1, i32* %ai_flags, align 8, !dbg !19565
  %2 = load i8*, i8** %portStr.addr, align 8, !dbg !19566
  %call = call i32 @getaddrinfo(i8* null, i8* %2, %struct.addrinfo* %hints, %struct.addrinfo** %res), !dbg !19568
  %cmp = icmp ne i32 0, %call, !dbg !19569
  br i1 %cmp, label %if.then, label %if.end, !dbg !19570

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !19571
  br label %return, !dbg !19571

if.end:                                           ; preds = %entry
  %3 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !19573
  store %struct.addrinfo* %3, %struct.addrinfo** %p, align 8, !dbg !19575
  br label %for.cond, !dbg !19576

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19577
  %cmp1 = icmp ne %struct.addrinfo* %4, null, !dbg !19579
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !19580

land.rhs:                                         ; preds = %for.cond
  %5 = load i32, i32* %s, align 4, !dbg !19581
  %cmp2 = icmp eq i32 %5, -1, !dbg !19582
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp2, %land.rhs ]
  br i1 %6, label %for.body, label %for.end, !dbg !19583

for.body:                                         ; preds = %land.end
  %7 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19584
  %ai_family3 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %7, i32 0, i32 1, !dbg !19586
  %8 = load i32, i32* %ai_family3, align 4, !dbg !19586
  %9 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19587
  %ai_socktype4 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %9, i32 0, i32 2, !dbg !19588
  %10 = load i32, i32* %ai_socktype4, align 8, !dbg !19588
  %11 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19589
  %ai_protocol = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %11, i32 0, i32 3, !dbg !19590
  %12 = load i32, i32* %ai_protocol, align 4, !dbg !19590
  %call5 = call i32 @socket(i32 %8, i32 %10, i32 %12) #7, !dbg !19591
  store i32 %call5, i32* %s, align 4, !dbg !19592
  %13 = load i32, i32* %s, align 4, !dbg !19593
  %cmp6 = icmp sge i32 %13, 0, !dbg !19595
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !19596

if.then7:                                         ; preds = %for.body
  %14 = load i32, i32* %s, align 4, !dbg !19597
  %15 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19600
  %ai_addr = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %15, i32 0, i32 5, !dbg !19601
  %16 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr, align 8, !dbg !19601
  %17 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19602
  %ai_addrlen = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %17, i32 0, i32 4, !dbg !19603
  %18 = load i32, i32* %ai_addrlen, align 8, !dbg !19603
  %call8 = call i32 @bind(i32 %14, %struct.sockaddr* %16, i32 %18) #7, !dbg !19604
  %cmp9 = icmp eq i32 -1, %call8, !dbg !19605
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !19606

if.then10:                                        ; preds = %if.then7
  %19 = load i32, i32* %s, align 4, !dbg !19607
  %call11 = call i32 @close(i32 %19), !dbg !19609
  store i32 -1, i32* %s, align 4, !dbg !19610
  br label %if.end12, !dbg !19611

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !19612

if.end13:                                         ; preds = %if.end12, %for.body
  br label %for.inc, !dbg !19613

for.inc:                                          ; preds = %if.end13
  %20 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19614
  %ai_next = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i32 0, i32 7, !dbg !19615
  %21 = load %struct.addrinfo*, %struct.addrinfo** %ai_next, align 8, !dbg !19615
  store %struct.addrinfo* %21, %struct.addrinfo** %p, align 8, !dbg !19616
  br label %for.cond, !dbg !19617, !llvm.loop !19618

for.end:                                          ; preds = %land.end
  %22 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !19620
  call void @freeaddrinfo(%struct.addrinfo* %22) #7, !dbg !19621
  %23 = load i32, i32* %s, align 4, !dbg !19622
  store i32 %23, i32* %retval, align 4, !dbg !19623
  br label %return, !dbg !19623

return:                                           ; preds = %for.end, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !19624
  ret i32 %24, !dbg !19624
}

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #2

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #5

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #5

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) #5

; Function Attrs: noinline nounwind uwtable
define %struct._connection_t* @connection_find(%struct._connection_t* %connList, %struct.sockaddr_storage* %addr, i64 %addrLen) #0 !dbg !19625 {
entry:
  %retval = alloca %struct._connection_t*, align 8
  %connList.addr = alloca %struct._connection_t*, align 8
  %addr.addr = alloca %struct.sockaddr_storage*, align 8
  %addrLen.addr = alloca i64, align 8
  %connP = alloca %struct._connection_t*, align 8
  store %struct._connection_t* %connList, %struct._connection_t** %connList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connList.addr, metadata !19634, metadata !1190), !dbg !19635
  store %struct.sockaddr_storage* %addr, %struct.sockaddr_storage** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %addr.addr, metadata !19636, metadata !1190), !dbg !19637
  store i64 %addrLen, i64* %addrLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addrLen.addr, metadata !19638, metadata !1190), !dbg !19639
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connP, metadata !19640, metadata !1190), !dbg !19641
  %0 = load %struct._connection_t*, %struct._connection_t** %connList.addr, align 8, !dbg !19642
  store %struct._connection_t* %0, %struct._connection_t** %connP, align 8, !dbg !19643
  br label %while.cond, !dbg !19644

while.cond:                                       ; preds = %if.end, %entry
  %1 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19645
  %cmp = icmp ne %struct._connection_t* %1, null, !dbg !19646
  br i1 %cmp, label %while.body, label %while.end, !dbg !19644

while.body:                                       ; preds = %while.cond
  %2 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19647
  %addrLen1 = getelementptr inbounds %struct._connection_t, %struct._connection_t* %2, i32 0, i32 3, !dbg !19650
  %3 = load i64, i64* %addrLen1, align 8, !dbg !19650
  %4 = load i64, i64* %addrLen.addr, align 8, !dbg !19651
  %cmp2 = icmp eq i64 %3, %4, !dbg !19652
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !19653

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19654
  %addr3 = getelementptr inbounds %struct._connection_t, %struct._connection_t* %5, i32 0, i32 2, !dbg !19655
  %6 = bitcast %struct.sockaddr_in6* %addr3 to i8*, !dbg !19656
  %7 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !19657
  %8 = bitcast %struct.sockaddr_storage* %7 to i8*, !dbg !19657
  %9 = load i64, i64* %addrLen.addr, align 8, !dbg !19658
  %call = call i32 @memcmp(i8* %6, i8* %8, i64 %9) #9, !dbg !19659
  %cmp4 = icmp eq i32 %call, 0, !dbg !19660
  br i1 %cmp4, label %if.then, label %if.end, !dbg !19661

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19662
  store %struct._connection_t* %10, %struct._connection_t** %retval, align 8, !dbg !19664
  br label %return, !dbg !19664

if.end:                                           ; preds = %land.lhs.true, %while.body
  %11 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19665
  %next = getelementptr inbounds %struct._connection_t, %struct._connection_t* %11, i32 0, i32 0, !dbg !19666
  %12 = load %struct._connection_t*, %struct._connection_t** %next, align 8, !dbg !19666
  store %struct._connection_t* %12, %struct._connection_t** %connP, align 8, !dbg !19667
  br label %while.cond, !dbg !19644, !llvm.loop !19668

while.end:                                        ; preds = %while.cond
  %13 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19670
  store %struct._connection_t* %13, %struct._connection_t** %retval, align 8, !dbg !19671
  br label %return, !dbg !19671

return:                                           ; preds = %while.end, %if.then
  %14 = load %struct._connection_t*, %struct._connection_t** %retval, align 8, !dbg !19672
  ret %struct._connection_t* %14, !dbg !19672
}

; Function Attrs: noinline nounwind uwtable
define %struct._connection_t* @connection_new_incoming(%struct._connection_t* %connList, i32 %sock, %struct.sockaddr* %addr, i64 %addrLen) #0 !dbg !19673 {
entry:
  %connList.addr = alloca %struct._connection_t*, align 8
  %sock.addr = alloca i32, align 4
  %addr.addr = alloca %struct.sockaddr*, align 8
  %addrLen.addr = alloca i64, align 8
  %connP = alloca %struct._connection_t*, align 8
  store %struct._connection_t* %connList, %struct._connection_t** %connList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connList.addr, metadata !19676, metadata !1190), !dbg !19677
  store i32 %sock, i32* %sock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sock.addr, metadata !19678, metadata !1190), !dbg !19679
  store %struct.sockaddr* %addr, %struct.sockaddr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %addr.addr, metadata !19680, metadata !1190), !dbg !19681
  store i64 %addrLen, i64* %addrLen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addrLen.addr, metadata !19682, metadata !1190), !dbg !19683
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connP, metadata !19684, metadata !1190), !dbg !19685
  %call = call noalias i8* @malloc(i64 48) #7, !dbg !19686
  %0 = bitcast i8* %call to %struct._connection_t*, !dbg !19687
  store %struct._connection_t* %0, %struct._connection_t** %connP, align 8, !dbg !19688
  %1 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19689
  %cmp = icmp ne %struct._connection_t* %1, null, !dbg !19691
  br i1 %cmp, label %if.then, label %if.end, !dbg !19692

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %sock.addr, align 4, !dbg !19693
  %3 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19695
  %sock1 = getelementptr inbounds %struct._connection_t, %struct._connection_t* %3, i32 0, i32 1, !dbg !19696
  store i32 %2, i32* %sock1, align 8, !dbg !19697
  %4 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19698
  %addr2 = getelementptr inbounds %struct._connection_t, %struct._connection_t* %4, i32 0, i32 2, !dbg !19699
  %5 = bitcast %struct.sockaddr_in6* %addr2 to i8*, !dbg !19700
  %6 = load %struct.sockaddr*, %struct.sockaddr** %addr.addr, align 8, !dbg !19701
  %7 = bitcast %struct.sockaddr* %6 to i8*, !dbg !19700
  %8 = load i64, i64* %addrLen.addr, align 8, !dbg !19702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 %8, i32 2, i1 false), !dbg !19700
  %9 = load i64, i64* %addrLen.addr, align 8, !dbg !19703
  %10 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19704
  %addrLen3 = getelementptr inbounds %struct._connection_t, %struct._connection_t* %10, i32 0, i32 3, !dbg !19705
  store i64 %9, i64* %addrLen3, align 8, !dbg !19706
  %11 = load %struct._connection_t*, %struct._connection_t** %connList.addr, align 8, !dbg !19707
  %12 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19708
  %next = getelementptr inbounds %struct._connection_t, %struct._connection_t* %12, i32 0, i32 0, !dbg !19709
  store %struct._connection_t* %11, %struct._connection_t** %next, align 8, !dbg !19710
  br label %if.end, !dbg !19711

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19712
  ret %struct._connection_t* %13, !dbg !19713
}

; Function Attrs: noinline nounwind uwtable
define %struct._connection_t* @connection_create(%struct._connection_t* %connList, i32 %sock, i8* %host, i8* %port, i32 %addressFamily) #0 !dbg !19714 {
entry:
  %retval = alloca %struct._connection_t*, align 8
  %connList.addr = alloca %struct._connection_t*, align 8
  %sock.addr = alloca i32, align 4
  %host.addr = alloca i8*, align 8
  %port.addr = alloca i8*, align 8
  %addressFamily.addr = alloca i32, align 4
  %hints = alloca %struct.addrinfo, align 8
  %servinfo = alloca %struct.addrinfo*, align 8
  %p = alloca %struct.addrinfo*, align 8
  %s = alloca i32, align 4
  %sa = alloca %struct.sockaddr*, align 8
  %sl = alloca i32, align 4
  %connP = alloca %struct._connection_t*, align 8
  store %struct._connection_t* %connList, %struct._connection_t** %connList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connList.addr, metadata !19717, metadata !1190), !dbg !19718
  store i32 %sock, i32* %sock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sock.addr, metadata !19719, metadata !1190), !dbg !19720
  store i8* %host, i8** %host.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %host.addr, metadata !19721, metadata !1190), !dbg !19722
  store i8* %port, i8** %port.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port.addr, metadata !19723, metadata !1190), !dbg !19724
  store i32 %addressFamily, i32* %addressFamily.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addressFamily.addr, metadata !19725, metadata !1190), !dbg !19726
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %hints, metadata !19727, metadata !1190), !dbg !19728
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %servinfo, metadata !19729, metadata !1190), !dbg !19730
  store %struct.addrinfo* null, %struct.addrinfo** %servinfo, align 8, !dbg !19730
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %p, metadata !19731, metadata !1190), !dbg !19732
  call void @llvm.dbg.declare(metadata i32* %s, metadata !19733, metadata !1190), !dbg !19734
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !19735, metadata !1190), !dbg !19736
  call void @llvm.dbg.declare(metadata i32* %sl, metadata !19737, metadata !1190), !dbg !19738
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connP, metadata !19739, metadata !1190), !dbg !19740
  store %struct._connection_t* null, %struct._connection_t** %connP, align 8, !dbg !19740
  %0 = bitcast %struct.addrinfo* %hints to i8*, !dbg !19741
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 48, i32 8, i1 false), !dbg !19741
  %1 = load i32, i32* %addressFamily.addr, align 4, !dbg !19742
  %ai_family = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !19743
  store i32 %1, i32* %ai_family, align 4, !dbg !19744
  %ai_socktype = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 2, !dbg !19745
  store i32 2, i32* %ai_socktype, align 8, !dbg !19746
  %2 = load i8*, i8** %host.addr, align 8, !dbg !19747
  %3 = load i8*, i8** %port.addr, align 8, !dbg !19749
  %call = call i32 @getaddrinfo(i8* %2, i8* %3, %struct.addrinfo* %hints, %struct.addrinfo** %servinfo), !dbg !19750
  %cmp = icmp ne i32 0, %call, !dbg !19751
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19752

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.addrinfo*, %struct.addrinfo** %servinfo, align 8, !dbg !19753
  %cmp1 = icmp eq %struct.addrinfo* %4, null, !dbg !19754
  br i1 %cmp1, label %if.then, label %if.end, !dbg !19755

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._connection_t* null, %struct._connection_t** %retval, align 8, !dbg !19756
  br label %return, !dbg !19756

if.end:                                           ; preds = %lor.lhs.false
  store i32 -1, i32* %s, align 4, !dbg !19757
  %5 = load %struct.addrinfo*, %struct.addrinfo** %servinfo, align 8, !dbg !19758
  store %struct.addrinfo* %5, %struct.addrinfo** %p, align 8, !dbg !19760
  br label %for.cond, !dbg !19761

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19762
  %cmp2 = icmp ne %struct.addrinfo* %6, null, !dbg !19764
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !19765

land.rhs:                                         ; preds = %for.cond
  %7 = load i32, i32* %s, align 4, !dbg !19766
  %cmp3 = icmp eq i32 %7, -1, !dbg !19767
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %8, label %for.body, label %for.end, !dbg !19768

for.body:                                         ; preds = %land.end
  %9 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19769
  %ai_family4 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %9, i32 0, i32 1, !dbg !19771
  %10 = load i32, i32* %ai_family4, align 4, !dbg !19771
  %11 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19772
  %ai_socktype5 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %11, i32 0, i32 2, !dbg !19773
  %12 = load i32, i32* %ai_socktype5, align 8, !dbg !19773
  %13 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19774
  %ai_protocol = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %13, i32 0, i32 3, !dbg !19775
  %14 = load i32, i32* %ai_protocol, align 4, !dbg !19775
  %call6 = call i32 @socket(i32 %10, i32 %12, i32 %14) #7, !dbg !19776
  store i32 %call6, i32* %s, align 4, !dbg !19777
  %15 = load i32, i32* %s, align 4, !dbg !19778
  %cmp7 = icmp sge i32 %15, 0, !dbg !19780
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !19781

if.then8:                                         ; preds = %for.body
  %16 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19782
  %ai_addr = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %16, i32 0, i32 5, !dbg !19784
  %17 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr, align 8, !dbg !19784
  store %struct.sockaddr* %17, %struct.sockaddr** %sa, align 8, !dbg !19785
  %18 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19786
  %ai_addrlen = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %18, i32 0, i32 4, !dbg !19787
  %19 = load i32, i32* %ai_addrlen, align 8, !dbg !19787
  store i32 %19, i32* %sl, align 4, !dbg !19788
  %20 = load i32, i32* %s, align 4, !dbg !19789
  %21 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19791
  %ai_addr9 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %21, i32 0, i32 5, !dbg !19792
  %22 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr9, align 8, !dbg !19792
  %23 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19793
  %ai_addrlen10 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %23, i32 0, i32 4, !dbg !19794
  %24 = load i32, i32* %ai_addrlen10, align 8, !dbg !19794
  %call11 = call i32 @connect(i32 %20, %struct.sockaddr* %22, i32 %24), !dbg !19795
  %cmp12 = icmp eq i32 -1, %call11, !dbg !19796
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !19797

if.then13:                                        ; preds = %if.then8
  %25 = load i32, i32* %s, align 4, !dbg !19798
  %call14 = call i32 @close(i32 %25), !dbg !19800
  store i32 -1, i32* %s, align 4, !dbg !19801
  br label %if.end15, !dbg !19802

if.end15:                                         ; preds = %if.then13, %if.then8
  br label %if.end16, !dbg !19803

if.end16:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !19804

for.inc:                                          ; preds = %if.end16
  %26 = load %struct.addrinfo*, %struct.addrinfo** %p, align 8, !dbg !19805
  %ai_next = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %26, i32 0, i32 7, !dbg !19806
  %27 = load %struct.addrinfo*, %struct.addrinfo** %ai_next, align 8, !dbg !19806
  store %struct.addrinfo* %27, %struct.addrinfo** %p, align 8, !dbg !19807
  br label %for.cond, !dbg !19808, !llvm.loop !19809

for.end:                                          ; preds = %land.end
  %28 = load i32, i32* %s, align 4, !dbg !19811
  %cmp17 = icmp sge i32 %28, 0, !dbg !19813
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !19814

if.then18:                                        ; preds = %for.end
  %29 = load %struct._connection_t*, %struct._connection_t** %connList.addr, align 8, !dbg !19815
  %30 = load i32, i32* %sock.addr, align 4, !dbg !19817
  %31 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !19818
  %32 = load i32, i32* %sl, align 4, !dbg !19819
  %conv = zext i32 %32 to i64, !dbg !19819
  %call19 = call %struct._connection_t* @connection_new_incoming(%struct._connection_t* %29, i32 %30, %struct.sockaddr* %31, i64 %conv), !dbg !19820
  store %struct._connection_t* %call19, %struct._connection_t** %connP, align 8, !dbg !19821
  %33 = load i32, i32* %s, align 4, !dbg !19822
  %call20 = call i32 @close(i32 %33), !dbg !19823
  br label %if.end21, !dbg !19824

if.end21:                                         ; preds = %if.then18, %for.end
  %34 = load %struct.addrinfo*, %struct.addrinfo** %servinfo, align 8, !dbg !19825
  %cmp22 = icmp ne %struct.addrinfo* null, %34, !dbg !19827
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !19828

if.then24:                                        ; preds = %if.end21
  %35 = load %struct.addrinfo*, %struct.addrinfo** %servinfo, align 8, !dbg !19829
  %36 = bitcast %struct.addrinfo* %35 to i8*, !dbg !19829
  call void @free(i8* %36) #7, !dbg !19831
  br label %if.end25, !dbg !19832

if.end25:                                         ; preds = %if.then24, %if.end21
  %37 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19833
  store %struct._connection_t* %37, %struct._connection_t** %retval, align 8, !dbg !19834
  br label %return, !dbg !19834

return:                                           ; preds = %if.end25, %if.then
  %38 = load %struct._connection_t*, %struct._connection_t** %retval, align 8, !dbg !19835
  ret %struct._connection_t* %38, !dbg !19835
}

declare i32 @connect(i32, %struct.sockaddr*, i32) #2

; Function Attrs: noinline nounwind uwtable
define void @connection_free(%struct._connection_t* %connList) #0 !dbg !19836 {
entry:
  %connList.addr = alloca %struct._connection_t*, align 8
  %nextP = alloca %struct._connection_t*, align 8
  store %struct._connection_t* %connList, %struct._connection_t** %connList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connList.addr, metadata !19839, metadata !1190), !dbg !19840
  br label %while.cond, !dbg !19841

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct._connection_t*, %struct._connection_t** %connList.addr, align 8, !dbg !19842
  %cmp = icmp ne %struct._connection_t* %0, null, !dbg !19843
  br i1 %cmp, label %while.body, label %while.end, !dbg !19841

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._connection_t** %nextP, metadata !19844, metadata !1190), !dbg !19846
  %1 = load %struct._connection_t*, %struct._connection_t** %connList.addr, align 8, !dbg !19847
  %next = getelementptr inbounds %struct._connection_t, %struct._connection_t* %1, i32 0, i32 0, !dbg !19848
  %2 = load %struct._connection_t*, %struct._connection_t** %next, align 8, !dbg !19848
  store %struct._connection_t* %2, %struct._connection_t** %nextP, align 8, !dbg !19849
  %3 = load %struct._connection_t*, %struct._connection_t** %connList.addr, align 8, !dbg !19850
  %4 = bitcast %struct._connection_t* %3 to i8*, !dbg !19850
  call void @free(i8* %4) #7, !dbg !19851
  %5 = load %struct._connection_t*, %struct._connection_t** %nextP, align 8, !dbg !19852
  store %struct._connection_t* %5, %struct._connection_t** %connList.addr, align 8, !dbg !19853
  br label %while.cond, !dbg !19841, !llvm.loop !19854

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19856
}

; Function Attrs: noinline nounwind uwtable
define i32 @connection_send(%struct._connection_t* %connP, i8* %buffer, i64 %length) #0 !dbg !19857 {
entry:
  %retval = alloca i32, align 4
  %connP.addr = alloca %struct._connection_t*, align 8
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %nbSent = alloca i32, align 4
  %offset = alloca i64, align 8
  store %struct._connection_t* %connP, %struct._connection_t** %connP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connP.addr, metadata !19860, metadata !1190), !dbg !19861
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !19862, metadata !1190), !dbg !19863
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !19864, metadata !1190), !dbg !19865
  call void @llvm.dbg.declare(metadata i32* %nbSent, metadata !19866, metadata !1190), !dbg !19867
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !19868, metadata !1190), !dbg !19869
  store i64 0, i64* %offset, align 8, !dbg !19870
  br label %while.cond, !dbg !19871

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %offset, align 8, !dbg !19872
  %1 = load i64, i64* %length.addr, align 8, !dbg !19873
  %cmp = icmp ne i64 %0, %1, !dbg !19874
  br i1 %cmp, label %while.body, label %while.end, !dbg !19871

while.body:                                       ; preds = %while.cond
  %2 = load %struct._connection_t*, %struct._connection_t** %connP.addr, align 8, !dbg !19875
  %sock = getelementptr inbounds %struct._connection_t, %struct._connection_t* %2, i32 0, i32 1, !dbg !19877
  %3 = load i32, i32* %sock, align 8, !dbg !19877
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !19878
  %5 = load i64, i64* %offset, align 8, !dbg !19879
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !19880
  %6 = load i64, i64* %length.addr, align 8, !dbg !19881
  %7 = load i64, i64* %offset, align 8, !dbg !19882
  %sub = sub i64 %6, %7, !dbg !19883
  %8 = load %struct._connection_t*, %struct._connection_t** %connP.addr, align 8, !dbg !19884
  %addr = getelementptr inbounds %struct._connection_t, %struct._connection_t* %8, i32 0, i32 2, !dbg !19885
  %9 = bitcast %struct.sockaddr_in6* %addr to %struct.sockaddr*, !dbg !19886
  %10 = load %struct._connection_t*, %struct._connection_t** %connP.addr, align 8, !dbg !19887
  %addrLen = getelementptr inbounds %struct._connection_t, %struct._connection_t* %10, i32 0, i32 3, !dbg !19888
  %11 = load i64, i64* %addrLen, align 8, !dbg !19888
  %conv = trunc i64 %11 to i32, !dbg !19887
  %call = call i64 @sendto(i32 %3, i8* %add.ptr, i64 %sub, i32 0, %struct.sockaddr* %9, i32 %conv), !dbg !19889
  %conv1 = trunc i64 %call to i32, !dbg !19889
  store i32 %conv1, i32* %nbSent, align 4, !dbg !19890
  %12 = load i32, i32* %nbSent, align 4, !dbg !19891
  %cmp2 = icmp eq i32 %12, -1, !dbg !19893
  br i1 %cmp2, label %if.then, label %if.end, !dbg !19894

if.then:                                          ; preds = %while.body
  store i32 -1, i32* %retval, align 4, !dbg !19895
  br label %return, !dbg !19895

if.end:                                           ; preds = %while.body
  %13 = load i32, i32* %nbSent, align 4, !dbg !19896
  %conv4 = sext i32 %13 to i64, !dbg !19896
  %14 = load i64, i64* %offset, align 8, !dbg !19897
  %add = add i64 %14, %conv4, !dbg !19897
  store i64 %add, i64* %offset, align 8, !dbg !19897
  br label %while.cond, !dbg !19871, !llvm.loop !19898

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !19900
  br label %return, !dbg !19900

return:                                           ; preds = %while.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !19901
  ret i32 %15, !dbg !19901
}

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #2

; Function Attrs: noinline nounwind uwtable
define zeroext i8 @lwm2m_buffer_send(i8* %sessionH, i8* %buffer, i64 %length, i8* %userdata) #0 !dbg !19902 {
entry:
  %retval = alloca i8, align 1
  %sessionH.addr = alloca i8*, align 8
  %buffer.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %userdata.addr = alloca i8*, align 8
  %connP = alloca %struct._connection_t*, align 8
  store i8* %sessionH, i8** %sessionH.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sessionH.addr, metadata !19905, metadata !1190), !dbg !19906
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !19907, metadata !1190), !dbg !19908
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !19909, metadata !1190), !dbg !19910
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !19911, metadata !1190), !dbg !19912
  call void @llvm.dbg.declare(metadata %struct._connection_t** %connP, metadata !19913, metadata !1190), !dbg !19914
  %0 = load i8*, i8** %sessionH.addr, align 8, !dbg !19915
  %1 = bitcast i8* %0 to %struct._connection_t*, !dbg !19916
  store %struct._connection_t* %1, %struct._connection_t** %connP, align 8, !dbg !19914
  %2 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19917
  %cmp = icmp eq %struct._connection_t* %2, null, !dbg !19919
  br i1 %cmp, label %if.then, label %if.end, !dbg !19920

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19921
  %4 = load i64, i64* %length.addr, align 8, !dbg !19923
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.321, i32 0, i32 0), i64 %4), !dbg !19924
  store i8 -96, i8* %retval, align 1, !dbg !19925
  br label %return, !dbg !19925

if.end:                                           ; preds = %entry
  %5 = load %struct._connection_t*, %struct._connection_t** %connP, align 8, !dbg !19926
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !19928
  %7 = load i64, i64* %length.addr, align 8, !dbg !19929
  %call1 = call i32 @connection_send(%struct._connection_t* %5, i8* %6, i64 %7), !dbg !19930
  %cmp2 = icmp eq i32 -1, %call1, !dbg !19931
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !19932

if.then3:                                         ; preds = %if.end
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19933
  %9 = load i64, i64* %length.addr, align 8, !dbg !19935
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.322, i32 0, i32 0), i64 %9), !dbg !19936
  store i8 -96, i8* %retval, align 1, !dbg !19937
  br label %return, !dbg !19937

if.end5:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !19938
  br label %return, !dbg !19938

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !19939
  ret i8 %10, !dbg !19939
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @lwm2m_session_is_equal(i8* %session1, i8* %session2, i8* %userData) #0 !dbg !19940 {
entry:
  %session1.addr = alloca i8*, align 8
  %session2.addr = alloca i8*, align 8
  %userData.addr = alloca i8*, align 8
  store i8* %session1, i8** %session1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %session1.addr, metadata !19943, metadata !1190), !dbg !19944
  store i8* %session2, i8** %session2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %session2.addr, metadata !19945, metadata !1190), !dbg !19946
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !19947, metadata !1190), !dbg !19948
  %0 = load i8*, i8** %session1.addr, align 8, !dbg !19949
  %1 = load i8*, i8** %session2.addr, align 8, !dbg !19950
  %cmp = icmp eq i8* %0, %1, !dbg !19951
  ret i1 %cmp, !dbg !19952
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!2, !556, !646, !216, !673, !675, !680, !714, !351, !717, !749, !810, !812, !952, !1092, !1122, !1124, !491, !1128, !1132, !1134, !1136}
!llvm.ident = !{!1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182, !1182}
!llvm.module.flags = !{!1183, !1184, !1185}

!0 = !DIGlobalVariableExpression(var: !1)
!1 = distinct !DIGlobalVariable(name: "g_quit", scope: !2, file: !3, line: 78, type: !58, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !213)
!3 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/server/lwm2mserver.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!4 = !{!5, !15, !32, !41}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 435, size: 32, elements: !7)
!6 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/liblwm2m.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!7 = !{!8, !9, !10, !11, !12, !13, !14}
!8 = !DIEnumerator(name: "BINDING_UNKNOWN", value: 0)
!9 = !DIEnumerator(name: "BINDING_U", value: 1)
!10 = !DIEnumerator(name: "BINDING_UQ", value: 2)
!11 = !DIEnumerator(name: "BINDING_S", value: 3)
!12 = !DIEnumerator(name: "BINDING_SQ", value: 4)
!13 = !DIEnumerator(name: "BINDING_US", value: 5)
!14 = !DIEnumerator(name: "BINDING_UQS", value: 6)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 416, size: 32, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31}
!17 = !DIEnumerator(name: "STATE_DEREGISTERED", value: 0)
!18 = !DIEnumerator(name: "STATE_REG_PENDING", value: 1)
!19 = !DIEnumerator(name: "STATE_REGISTERED", value: 2)
!20 = !DIEnumerator(name: "STATE_REG_FAILED", value: 3)
!21 = !DIEnumerator(name: "STATE_REG_UPDATE_PENDING", value: 4)
!22 = !DIEnumerator(name: "STATE_REG_UPDATE_NEEDED", value: 5)
!23 = !DIEnumerator(name: "STATE_REG_FULL_UPDATE_NEEDED", value: 6)
!24 = !DIEnumerator(name: "STATE_DEREG_PENDING", value: 7)
!25 = !DIEnumerator(name: "STATE_BS_HOLD_OFF", value: 8)
!26 = !DIEnumerator(name: "STATE_BS_INITIATED", value: 9)
!27 = !DIEnumerator(name: "STATE_BS_PENDING", value: 10)
!28 = !DIEnumerator(name: "STATE_BS_FINISHING", value: 11)
!29 = !DIEnumerator(name: "STATE_BS_FINISHED", value: 12)
!30 = !DIEnumerator(name: "STATE_BS_FAILING", value: 13)
!31 = !DIEnumerator(name: "STATE_BS_FAILED", value: 14)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 327, size: 32, elements: !33)
!33 = !{!34, !35, !36, !37, !38, !39, !40}
!34 = !DIEnumerator(name: "LWM2M_CONTENT_TEXT", value: 0)
!35 = !DIEnumerator(name: "LWM2M_CONTENT_LINK", value: 40)
!36 = !DIEnumerator(name: "LWM2M_CONTENT_OPAQUE", value: 42)
!37 = !DIEnumerator(name: "LWM2M_CONTENT_TLV_OLD", value: 1542)
!38 = !DIEnumerator(name: "LWM2M_CONTENT_TLV", value: 11542)
!39 = !DIEnumerator(name: "LWM2M_CONTENT_JSON_OLD", value: 1543)
!40 = !DIEnumerator(name: "LWM2M_CONTENT_JSON", value: 11543)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 282, size: 32, elements: !42)
!42 = !{!43, !44, !45, !46, !47, !48, !49, !50, !51, !52}
!43 = !DIEnumerator(name: "LWM2M_TYPE_UNDEFINED", value: 0)
!44 = !DIEnumerator(name: "LWM2M_TYPE_OBJECT", value: 1)
!45 = !DIEnumerator(name: "LWM2M_TYPE_OBJECT_INSTANCE", value: 2)
!46 = !DIEnumerator(name: "LWM2M_TYPE_MULTIPLE_RESOURCE", value: 3)
!47 = !DIEnumerator(name: "LWM2M_TYPE_STRING", value: 4)
!48 = !DIEnumerator(name: "LWM2M_TYPE_OPAQUE", value: 5)
!49 = !DIEnumerator(name: "LWM2M_TYPE_INTEGER", value: 6)
!50 = !DIEnumerator(name: "LWM2M_TYPE_FLOAT", value: 7)
!51 = !DIEnumerator(name: "LWM2M_TYPE_BOOLEAN", value: 8)
!52 = !DIEnumerator(name: "LWM2M_TYPE_OBJECT_LINK", value: 9)
!53 = !{!54, !55, !58, !59, !72, !93, !117, !118, !79, !107, !186, !123, !153}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !56, line: 54, baseType: !57)
!56 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!57 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!58 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !61, line: 153, size: 128, elements: !62)
!61 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!62 = !{!63, !67}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !60, file: !61, line: 155, baseType: !64, size: 16)
!64 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !65, line: 28, baseType: !66)
!65 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!66 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !60, file: !61, line: 156, baseType: !68, size: 112, offset: 16)
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 112, elements: !70)
!69 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!70 = !{!71}
!71 = !DISubrange(count: 14)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !74, line: 239, size: 128, elements: !75)
!74 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!75 = !{!76, !77, !81, !88}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !73, file: !74, line: 241, baseType: !64, size: 16)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !73, file: !74, line: 242, baseType: !78, size: 16, offset: 16)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !74, line: 119, baseType: !79)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !80, line: 49, baseType: !66)
!80 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!81 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !73, file: !74, line: 243, baseType: !82, size: 32, offset: 32)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !74, line: 31, size: 32, elements: !83)
!83 = !{!84}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !82, file: !74, line: 33, baseType: !85, size: 32)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !74, line: 30, baseType: !86)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !80, line: 51, baseType: !87)
!87 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !73, file: !74, line: 246, baseType: !89, size: 64, offset: 64)
!89 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 64, elements: !91)
!90 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!91 = !{!92}
!92 = !DISubrange(count: 8)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !74, line: 254, size: 224, elements: !95)
!95 = !{!96, !97, !98, !99, !116}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !94, file: !74, line: 256, baseType: !64, size: 16)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !94, file: !74, line: 257, baseType: !78, size: 16, offset: 16)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !94, file: !74, line: 258, baseType: !86, size: 32, offset: 32)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !94, file: !74, line: 259, baseType: !100, size: 128, offset: 64)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !74, line: 211, size: 128, elements: !101)
!101 = !{!102}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !100, file: !74, line: 220, baseType: !103, size: 128)
!103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !100, file: !74, line: 213, size: 128, elements: !104)
!104 = !{!105, !110, !112}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !103, file: !74, line: 215, baseType: !106, size: 128)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 128, elements: !108)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !80, line: 48, baseType: !90)
!108 = !{!109}
!109 = !DISubrange(count: 16)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !103, file: !74, line: 217, baseType: !111, size: 128)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 128, elements: !91)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !103, file: !74, line: 218, baseType: !113, size: 128)
!113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 128, elements: !114)
!114 = !{!115}
!115 = !DISubrange(count: 4)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !94, file: !74, line: 260, baseType: !86, size: 32, offset: 192)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !121)
!121 = !{!122, !188, !189, !190, !191, !212}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !120, file: !6, line: 659, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !125)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !126)
!126 = !{!127, !129, !130, !131, !133, !134, !135, !137, !138, !143, !144, !160}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !125, file: !6, line: 545, baseType: !128, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !125, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !125, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !125, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_binding_t", file: !6, line: 444, baseType: !5)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !125, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !125, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !125, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !125, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !125, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !140, line: 75, baseType: !141)
!140 = !DIFile(filename: "/usr/include/time.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !142, line: 139, baseType: !57)
!142 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!143 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !125, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !125, file: !6, line: 555, baseType: !145, size: 64, offset: 576)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !147)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !148)
!148 = !{!149, !151, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !147, file: !6, line: 538, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !147, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !147, file: !6, line: 540, baseType: !153, size: 64, offset: 128)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !156)
!156 = !{!157, !159}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !155, file: !6, line: 214, baseType: !158, size: 64)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !155, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !125, file: !6, line: 556, baseType: !161, size: 64, offset: 640)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !163)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !164)
!164 = !{!165, !167, !168, !169, !177, !179, !187}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !163, file: !6, line: 495, baseType: !166, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !163, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !163, file: !6, line: 497, baseType: !128, size: 64, offset: 128)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !163, file: !6, line: 498, baseType: !170, size: 64, offset: 192)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !171)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !172)
!172 = !{!173, !174, !175, !176}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !171, file: !6, line: 255, baseType: !107, size: 8)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !171, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !171, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !171, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !163, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_status_t", file: !6, line: 433, baseType: !15)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !163, file: !6, line: 500, baseType: !180, size: 64, offset: 320)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !79, !184, !58, !185, !186, !58, !54}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_media_type_t", file: !6, line: 336, baseType: !32)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !163, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !120, file: !6, line: 660, baseType: !180, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !120, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !120, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !120, file: !6, line: 668, baseType: !192, size: 64, offset: 256)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !195)
!195 = !{!196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !211}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !194, file: !6, line: 572, baseType: !192, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !194, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !194, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !194, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !194, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !194, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !194, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !194, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !194, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !194, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !194, file: !6, line: 582, baseType: !207, size: 64, offset: 640)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = !DISubroutineType(types: !210)
!210 = !{null, !192, !54}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !194, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !120, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!213 = !{!0}
!214 = !DIGlobalVariableExpression(var: !215)
!215 = distinct !DIGlobalVariable(name: "b64Alphabet", scope: !216, file: !217, line: 469, type: !256, isLocal: true, isDefinition: true)
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !218, retainedTypes: !252, globals: !255)
!217 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/utils.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!218 = !{!5, !32, !219, !15, !41, !245}
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !220, line: 185, size: 32, elements: !221)
!220 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/er-coap-13/er-coap-13.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!221 = !{!222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!222 = !DIEnumerator(name: "TEXT_PLAIN", value: 0)
!223 = !DIEnumerator(name: "TEXT_XML", value: 1)
!224 = !DIEnumerator(name: "TEXT_CSV", value: 2)
!225 = !DIEnumerator(name: "TEXT_HTML", value: 3)
!226 = !DIEnumerator(name: "IMAGE_GIF", value: 21)
!227 = !DIEnumerator(name: "IMAGE_JPEG", value: 22)
!228 = !DIEnumerator(name: "IMAGE_PNG", value: 23)
!229 = !DIEnumerator(name: "IMAGE_TIFF", value: 24)
!230 = !DIEnumerator(name: "AUDIO_RAW", value: 25)
!231 = !DIEnumerator(name: "VIDEO_RAW", value: 26)
!232 = !DIEnumerator(name: "APPLICATION_LINK_FORMAT", value: 40)
!233 = !DIEnumerator(name: "APPLICATION_XML", value: 41)
!234 = !DIEnumerator(name: "APPLICATION_OCTET_STREAM", value: 42)
!235 = !DIEnumerator(name: "APPLICATION_RDF_XML", value: 43)
!236 = !DIEnumerator(name: "APPLICATION_SOAP_XML", value: 44)
!237 = !DIEnumerator(name: "APPLICATION_ATOM_XML", value: 45)
!238 = !DIEnumerator(name: "APPLICATION_XMPP_XML", value: 46)
!239 = !DIEnumerator(name: "APPLICATION_EXI", value: 47)
!240 = !DIEnumerator(name: "APPLICATION_FASTINFOSET", value: 48)
!241 = !DIEnumerator(name: "APPLICATION_SOAP_FASTINFOSET", value: 49)
!242 = !DIEnumerator(name: "APPLICATION_JSON", value: 50)
!243 = !DIEnumerator(name: "APPLICATION_X_OBIX_BINARY", value: 51)
!244 = !DIEnumerator(name: "CONTENT_MAX_VALUE", value: 65535)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !246, line: 225, size: 32, elements: !247)
!246 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/internals.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!247 = !{!248, !249, !250, !251}
!248 = !DIEnumerator(name: "URI_DEPTH_OBJECT", value: 0)
!249 = !DIEnumerator(name: "URI_DEPTH_OBJECT_INSTANCE", value: 1)
!250 = !DIEnumerator(name: "URI_DEPTH_RESOURCE", value: 2)
!251 = !DIEnumerator(name: "URI_DEPTH_RESOURCE_INSTANCE", value: 3)
!252 = !{!253, !254, !79, !54, !58, !186}
!253 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !80, line: 40, baseType: !57)
!255 = !{!214}
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 512, elements: !257)
!257 = !{!258}
!258 = !DISubrange(count: 64)
!259 = !DIGlobalVariableExpression(var: !260)
!260 = distinct !DIGlobalVariable(name: "message", scope: !261, file: !262, line: 206, type: !420, isLocal: true, isDefinition: true)
!261 = distinct !DISubprogram(name: "lwm2m_handle_packet", scope: !262, file: !262, line: 200, type: !263, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !351, variables: !488)
!262 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/packet.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!263 = !DISubroutineType(types: !264)
!264 = !{null, !265, !186, !58, !54}
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !267)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !268)
!268 = !{!269, !326, !327, !328, !329, !350}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !267, file: !6, line: 659, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !272)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !273)
!273 = !{!274, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !301}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !272, file: !6, line: 545, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !272, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !272, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !272, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !272, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !272, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !272, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !272, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !272, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !272, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !272, file: !6, line: 555, baseType: !286, size: 64, offset: 576)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !289)
!289 = !{!290, !292, !293}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !288, file: !6, line: 538, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !288, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !288, file: !6, line: 540, baseType: !294, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !296)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !297)
!297 = !{!298, !300}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !296, file: !6, line: 214, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !296, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !272, file: !6, line: 556, baseType: !302, size: 64, offset: 640)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !305)
!305 = !{!306, !308, !309, !310, !318, !319, !325}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !6, line: 495, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !304, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !304, file: !6, line: 497, baseType: !275, size: 64, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !304, file: !6, line: 498, baseType: !311, size: 64, offset: 192)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !312)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !313)
!313 = !{!314, !315, !316, !317}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !312, file: !6, line: 255, baseType: !107, size: 8)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !312, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !312, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !312, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !304, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !6, line: 500, baseType: !320, size: 64, offset: 320)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !79, !324, !58, !185, !186, !58, !54}
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !304, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !267, file: !6, line: 660, baseType: !320, size: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !267, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !267, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !267, file: !6, line: 668, baseType: !330, size: 64, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !333)
!333 = !{!334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !349}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !332, file: !6, line: 572, baseType: !330, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !332, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !332, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !332, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !332, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !332, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !332, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !332, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !332, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !332, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !332, file: !6, line: 582, baseType: !345, size: 64, offset: 640)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !346)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DISubroutineType(types: !348)
!348 = !{null, !330, !54}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !332, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !267, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !262, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !352, retainedTypes: !416, globals: !417)
!352 = !{!5, !15, !32, !353, !380, !219, !386, !392, !413}
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !220, line: 125, size: 32, elements: !354)
!354 = !{!355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379}
!355 = !DIEnumerator(name: "NO_ERROR", value: 0)
!356 = !DIEnumerator(name: "CREATED_2_01", value: 65)
!357 = !DIEnumerator(name: "DELETED_2_02", value: 66)
!358 = !DIEnumerator(name: "VALID_2_03", value: 67)
!359 = !DIEnumerator(name: "CHANGED_2_04", value: 68)
!360 = !DIEnumerator(name: "CONTENT_2_05", value: 69)
!361 = !DIEnumerator(name: "BAD_REQUEST_4_00", value: 128)
!362 = !DIEnumerator(name: "UNAUTHORIZED_4_01", value: 129)
!363 = !DIEnumerator(name: "BAD_OPTION_4_02", value: 130)
!364 = !DIEnumerator(name: "FORBIDDEN_4_03", value: 131)
!365 = !DIEnumerator(name: "NOT_FOUND_4_04", value: 132)
!366 = !DIEnumerator(name: "METHOD_NOT_ALLOWED_4_05", value: 133)
!367 = !DIEnumerator(name: "NOT_ACCEPTABLE_4_06", value: 134)
!368 = !DIEnumerator(name: "PRECONDITION_FAILED_4_12", value: 140)
!369 = !DIEnumerator(name: "REQUEST_ENTITY_TOO_LARGE_4_13", value: 141)
!370 = !DIEnumerator(name: "UNSUPPORTED_MEDIA_TYPE_4_15", value: 143)
!371 = !DIEnumerator(name: "INTERNAL_SERVER_ERROR_5_00", value: 160)
!372 = !DIEnumerator(name: "NOT_IMPLEMENTED_5_01", value: 161)
!373 = !DIEnumerator(name: "BAD_GATEWAY_5_02", value: 162)
!374 = !DIEnumerator(name: "SERVICE_UNAVAILABLE_5_03", value: 163)
!375 = !DIEnumerator(name: "GATEWAY_TIMEOUT_5_04", value: 164)
!376 = !DIEnumerator(name: "PROXYING_NOT_SUPPORTED_5_05", value: 165)
!377 = !DIEnumerator(name: "MEMORY_ALLOCATION_ERROR", value: 192)
!378 = !DIEnumerator(name: "PACKET_SERIALIZATION_ERROR", value: 193)
!379 = !DIEnumerator(name: "MANUAL_RESPONSE", value: 194)
!380 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !220, line: 109, size: 32, elements: !381)
!381 = !{!382, !383, !384, !385}
!382 = !DIEnumerator(name: "COAP_TYPE_CON", value: 0)
!383 = !DIEnumerator(name: "COAP_TYPE_NON", value: 1)
!384 = !DIEnumerator(name: "COAP_TYPE_ACK", value: 2)
!385 = !DIEnumerator(name: "COAP_TYPE_RST", value: 3)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !220, line: 117, size: 32, elements: !387)
!387 = !{!388, !389, !390, !391}
!388 = !DIEnumerator(name: "COAP_GET", value: 1)
!389 = !DIEnumerator(name: "COAP_POST", value: 2)
!390 = !DIEnumerator(name: "COAP_PUT", value: 3)
!391 = !DIEnumerator(name: "COAP_DELETE", value: 4)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !220, line: 162, size: 32, elements: !393)
!393 = !{!394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412}
!394 = !DIEnumerator(name: "COAP_OPTION_IF_MATCH", value: 1)
!395 = !DIEnumerator(name: "COAP_OPTION_URI_HOST", value: 3)
!396 = !DIEnumerator(name: "COAP_OPTION_ETAG", value: 4)
!397 = !DIEnumerator(name: "COAP_OPTION_IF_NONE_MATCH", value: 5)
!398 = !DIEnumerator(name: "COAP_OPTION_OBSERVE", value: 6)
!399 = !DIEnumerator(name: "COAP_OPTION_URI_PORT", value: 7)
!400 = !DIEnumerator(name: "COAP_OPTION_LOCATION_PATH", value: 8)
!401 = !DIEnumerator(name: "COAP_OPTION_URI_PATH", value: 11)
!402 = !DIEnumerator(name: "COAP_OPTION_CONTENT_TYPE", value: 12)
!403 = !DIEnumerator(name: "COAP_OPTION_MAX_AGE", value: 14)
!404 = !DIEnumerator(name: "COAP_OPTION_URI_QUERY", value: 15)
!405 = !DIEnumerator(name: "COAP_OPTION_ACCEPT", value: 17)
!406 = !DIEnumerator(name: "COAP_OPTION_TOKEN", value: 19)
!407 = !DIEnumerator(name: "COAP_OPTION_LOCATION_QUERY", value: 20)
!408 = !DIEnumerator(name: "COAP_OPTION_BLOCK2", value: 23)
!409 = !DIEnumerator(name: "COAP_OPTION_BLOCK1", value: 27)
!410 = !DIEnumerator(name: "COAP_OPTION_SIZE", value: 28)
!411 = !DIEnumerator(name: "COAP_OPTION_PROXY_URI", value: 35)
!412 = !DIEnumerator(name: "OPTION_MAX_VALUE", value: 65535)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !220, line: 100, size: 32, elements: !414)
!414 = !{!415}
!415 = !DIEnumerator(name: "OPTION_MAP_SIZE", value: 8)
!416 = !{!79, !107, !186, !54}
!417 = !{!259, !418}
!418 = !DIGlobalVariableExpression(var: !419)
!419 = distinct !DIGlobalVariable(name: "response", scope: !261, file: !262, line: 207, type: !420, isLocal: true, isDefinition: true)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 1664, elements: !486)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_packet_t", file: !220, line: 264, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 219, size: 1664, elements: !423)
!423 = !{!424, !425, !426, !428, !429, !430, !434, !436, !437, !441, !444, !445, !447, !448, !449, !459, !460, !461, !462, !463, !464, !465, !466, !467, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !422, file: !220, line: 220, baseType: !186, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !422, file: !220, line: 222, baseType: !107, size: 8, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !422, file: !220, line: 223, baseType: !427, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_message_type_t", file: !220, line: 114, baseType: !380)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !422, file: !220, line: 224, baseType: !107, size: 8, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !422, file: !220, line: 225, baseType: !79, size: 16, offset: 144)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !422, file: !220, line: 227, baseType: !431, size: 40, offset: 160)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 40, elements: !432)
!432 = !{!433}
!433 = !DISubrange(count: 5)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !422, file: !220, line: 229, baseType: !435, size: 32, offset: 224)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_content_type_t", file: !220, line: 209, baseType: !219)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !422, file: !220, line: 230, baseType: !86, size: 32, offset: 256)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri_len", scope: !422, file: !220, line: 231, baseType: !438, size: 64, offset: 320)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !439, line: 62, baseType: !440)
!439 = !DIFile(filename: "/home/stly/Documents/binutils-gdb/build/installed/lib/clang/5.0.0/include/stddef.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!440 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri", scope: !422, file: !220, line: 232, baseType: !442, size: 64, offset: 384)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "etag_len", scope: !422, file: !220, line: 233, baseType: !107, size: 8, offset: 448)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !422, file: !220, line: 234, baseType: !446, size: 64, offset: 456)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 64, elements: !91)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host_len", scope: !422, file: !220, line: 235, baseType: !438, size: 64, offset: 576)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host", scope: !422, file: !220, line: 236, baseType: !442, size: 64, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "location_path", scope: !422, file: !220, line: 237, baseType: !450, size: 64, offset: 704)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !453)
!453 = !{!454, !456, !457, !458}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !452, file: !220, line: 212, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !452, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !452, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !452, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "uri_port", scope: !422, file: !220, line: 238, baseType: !79, size: 16, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "location_query_len", scope: !422, file: !220, line: 239, baseType: !438, size: 64, offset: 832)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "location_query", scope: !422, file: !220, line: 240, baseType: !186, size: 64, offset: 896)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "uri_path", scope: !422, file: !220, line: 241, baseType: !450, size: 64, offset: 960)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "observe", scope: !422, file: !220, line: 242, baseType: !86, size: 32, offset: 1024)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "token_len", scope: !422, file: !220, line: 243, baseType: !107, size: 8, offset: 1056)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !422, file: !220, line: 244, baseType: !446, size: 64, offset: 1064)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "accept_num", scope: !422, file: !220, line: 245, baseType: !107, size: 8, offset: 1128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !422, file: !220, line: 246, baseType: !468, size: 32, offset: 1136)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 32, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 2)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "if_match_len", scope: !422, file: !220, line: 247, baseType: !107, size: 8, offset: 1168)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "if_match", scope: !422, file: !220, line: 248, baseType: !446, size: 64, offset: 1176)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "block2_num", scope: !422, file: !220, line: 249, baseType: !86, size: 32, offset: 1248)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "block2_more", scope: !422, file: !220, line: 250, baseType: !107, size: 8, offset: 1280)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "block2_size", scope: !422, file: !220, line: 251, baseType: !79, size: 16, offset: 1296)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "block2_offset", scope: !422, file: !220, line: 252, baseType: !86, size: 32, offset: 1312)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "block1_num", scope: !422, file: !220, line: 253, baseType: !86, size: 32, offset: 1344)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "block1_more", scope: !422, file: !220, line: 254, baseType: !107, size: 8, offset: 1376)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "block1_size", scope: !422, file: !220, line: 255, baseType: !79, size: 16, offset: 1392)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "block1_offset", scope: !422, file: !220, line: 256, baseType: !86, size: 32, offset: 1408)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !422, file: !220, line: 257, baseType: !86, size: 32, offset: 1440)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "uri_query", scope: !422, file: !220, line: 258, baseType: !450, size: 64, offset: 1472)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "if_none_match", scope: !422, file: !220, line: 259, baseType: !107, size: 8, offset: 1536)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !422, file: !220, line: 261, baseType: !79, size: 16, offset: 1552)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !422, file: !220, line: 262, baseType: !186, size: 64, offset: 1600)
!486 = !{!487}
!487 = !DISubrange(count: 1)
!488 = !{}
!489 = !DIGlobalVariableExpression(var: !490)
!490 = distinct !DIGlobalVariable(name: "current_mid", scope: !491, file: !492, line: 66, type: !79, isLocal: true, isDefinition: true)
!491 = distinct !DICompileUnit(language: DW_LANG_C99, file: !492, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !493, retainedTypes: !494, globals: !550)
!492 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/er-coap-13/er-coap-13.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!493 = !{!353, !380, !219, !392, !413}
!494 = !{!495, !107, !186, !54, !504, !547, !435, !548, !117, !79, !442}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !497)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !498)
!498 = !{!499, !501, !502, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !497, file: !220, line: 212, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !497, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !497, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !497, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_packet_t", file: !220, line: 264, baseType: !506)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 219, size: 1664, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !506, file: !220, line: 220, baseType: !186, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !506, file: !220, line: 222, baseType: !107, size: 8, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !506, file: !220, line: 223, baseType: !427, size: 32, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !506, file: !220, line: 224, baseType: !107, size: 8, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !506, file: !220, line: 225, baseType: !79, size: 16, offset: 144)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !506, file: !220, line: 227, baseType: !431, size: 40, offset: 160)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !506, file: !220, line: 229, baseType: !435, size: 32, offset: 224)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !506, file: !220, line: 230, baseType: !86, size: 32, offset: 256)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri_len", scope: !506, file: !220, line: 231, baseType: !438, size: 64, offset: 320)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri", scope: !506, file: !220, line: 232, baseType: !442, size: 64, offset: 384)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "etag_len", scope: !506, file: !220, line: 233, baseType: !107, size: 8, offset: 448)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !506, file: !220, line: 234, baseType: !446, size: 64, offset: 456)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host_len", scope: !506, file: !220, line: 235, baseType: !438, size: 64, offset: 576)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host", scope: !506, file: !220, line: 236, baseType: !442, size: 64, offset: 640)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "location_path", scope: !506, file: !220, line: 237, baseType: !495, size: 64, offset: 704)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "uri_port", scope: !506, file: !220, line: 238, baseType: !79, size: 16, offset: 768)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "location_query_len", scope: !506, file: !220, line: 239, baseType: !438, size: 64, offset: 832)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "location_query", scope: !506, file: !220, line: 240, baseType: !186, size: 64, offset: 896)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "uri_path", scope: !506, file: !220, line: 241, baseType: !495, size: 64, offset: 960)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "observe", scope: !506, file: !220, line: 242, baseType: !86, size: 32, offset: 1024)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "token_len", scope: !506, file: !220, line: 243, baseType: !107, size: 8, offset: 1056)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !506, file: !220, line: 244, baseType: !446, size: 64, offset: 1064)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "accept_num", scope: !506, file: !220, line: 245, baseType: !107, size: 8, offset: 1128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !506, file: !220, line: 246, baseType: !468, size: 32, offset: 1136)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "if_match_len", scope: !506, file: !220, line: 247, baseType: !107, size: 8, offset: 1168)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "if_match", scope: !506, file: !220, line: 248, baseType: !446, size: 64, offset: 1176)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "block2_num", scope: !506, file: !220, line: 249, baseType: !86, size: 32, offset: 1248)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "block2_more", scope: !506, file: !220, line: 250, baseType: !107, size: 8, offset: 1280)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "block2_size", scope: !506, file: !220, line: 251, baseType: !79, size: 16, offset: 1296)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "block2_offset", scope: !506, file: !220, line: 252, baseType: !86, size: 32, offset: 1312)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "block1_num", scope: !506, file: !220, line: 253, baseType: !86, size: 32, offset: 1344)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "block1_more", scope: !506, file: !220, line: 254, baseType: !107, size: 8, offset: 1376)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "block1_size", scope: !506, file: !220, line: 255, baseType: !79, size: 16, offset: 1392)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "block1_offset", scope: !506, file: !220, line: 256, baseType: !86, size: 32, offset: 1408)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !220, line: 257, baseType: !86, size: 32, offset: 1440)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "uri_query", scope: !506, file: !220, line: 258, baseType: !495, size: 64, offset: 1472)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "if_none_match", scope: !506, file: !220, line: 259, baseType: !107, size: 8, offset: 1536)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !506, file: !220, line: 261, baseType: !79, size: 16, offset: 1552)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !506, file: !220, line: 262, baseType: !186, size: 64, offset: 1600)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!550 = !{!551, !554, !489}
!551 = !DIGlobalVariableExpression(var: !552)
!552 = distinct !DIGlobalVariable(name: "coap_error_code", scope: !491, file: !492, line: 68, type: !553, isLocal: false, isDefinition: true)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_status_t", file: !220, line: 159, baseType: !353)
!554 = !DIGlobalVariableExpression(var: !555)
!555 = distinct !DIGlobalVariable(name: "coap_error_message", scope: !491, file: !492, line: 69, type: !548, isLocal: false, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !558, retainedTypes: !559)
!557 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/liblwm2m.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!558 = !{!5, !15, !32}
!559 = !{!560, !54, !58, !107}
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !563)
!563 = !{!564, !621, !622, !623, !624, !645}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !562, file: !6, line: 659, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !568)
!568 = !{!569, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !596}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !567, file: !6, line: 545, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !567, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !567, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !567, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !567, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !567, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !567, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !567, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !567, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !567, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !567, file: !6, line: 555, baseType: !581, size: 64, offset: 576)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !584)
!584 = !{!585, !587, !588}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !583, file: !6, line: 538, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !583, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !583, file: !6, line: 540, baseType: !589, size: 64, offset: 128)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !591)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !592)
!592 = !{!593, !595}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !591, file: !6, line: 214, baseType: !594, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !591, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !567, file: !6, line: 556, baseType: !597, size: 64, offset: 640)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !600)
!600 = !{!601, !603, !604, !605, !613, !614, !620}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !6, line: 495, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !599, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !599, file: !6, line: 497, baseType: !570, size: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !599, file: !6, line: 498, baseType: !606, size: 64, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !607)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !608)
!608 = !{!609, !610, !611, !612}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !607, file: !6, line: 255, baseType: !107, size: 8)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !607, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !607, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !607, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !599, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !599, file: !6, line: 500, baseType: !615, size: 64, offset: 320)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !616)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{null, !79, !619, !58, !185, !186, !58, !54}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !599, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !562, file: !6, line: 660, baseType: !615, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !562, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !562, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !562, file: !6, line: 668, baseType: !625, size: 64, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !627)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !628)
!628 = !{!629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !644}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !627, file: !6, line: 572, baseType: !625, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !627, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !627, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !627, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !627, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !627, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !627, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !627, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !627, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !627, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !627, file: !6, line: 582, baseType: !640, size: 64, offset: 640)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !625, !54}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !627, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !562, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !647, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !648, retainedTypes: !664)
!647 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/uri.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!648 = !{!649, !245}
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 46, size: 32, elements: !651)
!650 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!651 = !{!652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663}
!652 = !DIEnumerator(name: "_ISupper", value: 256)
!653 = !DIEnumerator(name: "_ISlower", value: 512)
!654 = !DIEnumerator(name: "_ISalpha", value: 1024)
!655 = !DIEnumerator(name: "_ISdigit", value: 2048)
!656 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!657 = !DIEnumerator(name: "_ISspace", value: 8192)
!658 = !DIEnumerator(name: "_ISprint", value: 16384)
!659 = !DIEnumerator(name: "_ISgraph", value: 32768)
!660 = !DIEnumerator(name: "_ISblank", value: 1)
!661 = !DIEnumerator(name: "_IScntrl", value: 2)
!662 = !DIEnumerator(name: "_ISpunct", value: 4)
!663 = !DIEnumerator(name: "_ISalnum", value: 8)
!664 = !{!665, !54, !117, !107, !79, !58, !66, !186}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !668)
!668 = !{!669, !670, !671, !672}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !667, file: !6, line: 255, baseType: !107, size: 8)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !667, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !667, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !667, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !674, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !488)
!674 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/objects.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !677, retainedTypes: !678)
!676 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/tlv.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!677 = !{!41}
!678 = !{!186, !54, !438, !107, !253, !679}
!679 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !681, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !682, retainedTypes: !683)
!681 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/data.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!682 = !{!41, !32}
!683 = !{!684, !54, !186, !712, !253, !107, !58}
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_data_t", file: !6, line: 298, baseType: !686)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_data_t", file: !6, line: 300, size: 192, elements: !687)
!687 = !{!688, !690, !691}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !686, file: !6, line: 302, baseType: !689, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_data_type_t", file: !6, line: 296, baseType: !41)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !686, file: !6, line: 303, baseType: !79, size: 16, offset: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !686, file: !6, line: 324, baseType: !692, size: 128, offset: 64)
!692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !686, file: !6, line: 304, size: 128, elements: !693)
!693 = !{!694, !695, !696, !697, !702, !707}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "asBoolean", scope: !692, file: !6, line: 306, baseType: !136, size: 8)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "asInteger", scope: !692, file: !6, line: 307, baseType: !254, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "asFloat", scope: !692, file: !6, line: 308, baseType: !253, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "asBuffer", scope: !692, file: !6, line: 313, baseType: !698, size: 128)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !692, file: !6, line: 309, size: 128, elements: !699)
!699 = !{!700, !701}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !698, file: !6, line: 311, baseType: !438, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !698, file: !6, line: 312, baseType: !186, size: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "asChildren", scope: !692, file: !6, line: 318, baseType: !703, size: 128)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !692, file: !6, line: 314, size: 128, elements: !704)
!704 = !{!705, !706}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !703, file: !6, line: 316, baseType: !438, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !703, file: !6, line: 317, baseType: !684, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "asObjLink", scope: !692, file: !6, line: 323, baseType: !708, size: 32)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !692, file: !6, line: 319, size: 32, elements: !709)
!709 = !{!710, !711}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !708, file: !6, line: 321, baseType: !79, size: 16)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "objectInstanceId", scope: !708, file: !6, line: 322, baseType: !79, size: 16, offset: 16)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !80, line: 36, baseType: !713)
!713 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !715, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !488, retainedTypes: !716)
!715 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/list.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!716 = !{!54}
!717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !718, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !719, retainedTypes: !720)
!718 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/transaction.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!719 = !{!386, !380, !5, !15, !32, !219, !392, !413}
!720 = !{!54, !721, !186, !107, !741, !748}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !724)
!724 = !{!725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !740}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !723, file: !6, line: 572, baseType: !721, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !723, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !723, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !723, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !723, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !723, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !723, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !723, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !723, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !723, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !723, file: !6, line: 582, baseType: !736, size: 64, offset: 640)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !737)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !721, !54}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !723, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !744)
!744 = !{!745, !747}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !743, file: !6, line: 214, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !743, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !750, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !751, retainedTypes: !752)
!750 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/registration.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!751 = !{!5, !15, !32, !380, !219}
!752 = !{!54, !107, !435, !753, !777, !769, !809, !117, !79, !186}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !756)
!756 = !{!757, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !784}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !755, file: !6, line: 545, baseType: !758, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !755, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !755, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !755, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !755, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !755, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !755, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !755, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !755, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !755, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !755, file: !6, line: 555, baseType: !769, size: 64, offset: 576)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !771)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !772)
!772 = !{!773, !775, !776}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !771, file: !6, line: 538, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !771, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !771, file: !6, line: 540, baseType: !777, size: 64, offset: 128)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !780)
!780 = !{!781, !783}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !779, file: !6, line: 214, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !779, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !755, file: !6, line: 556, baseType: !785, size: 64, offset: 640)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !788)
!788 = !{!789, !791, !792, !793, !801, !802, !808}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !787, file: !6, line: 495, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !787, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !787, file: !6, line: 497, baseType: !758, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !787, file: !6, line: 498, baseType: !794, size: 64, offset: 192)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !796)
!796 = !{!797, !798, !799, !800}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !795, file: !6, line: 255, baseType: !107, size: 8)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !795, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !795, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !795, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !787, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !787, file: !6, line: 500, baseType: !803, size: 64, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !804)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{null, !79, !807, !58, !185, !186, !58, !54}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !787, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !811, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !488)
!811 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/bootstrap.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !813, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !814, retainedTypes: !815)
!813 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/management.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!814 = !{!5, !15, !32, !386, !380, !219, !392, !413}
!815 = !{!816, !840, !54, !107, !872, !880, !186, !932}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !819)
!819 = !{!820, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !847}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !818, file: !6, line: 545, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !818, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !818, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !818, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !818, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !818, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !818, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !818, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !818, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !818, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !818, file: !6, line: 555, baseType: !832, size: 64, offset: 576)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !835)
!835 = !{!836, !838, !839}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !834, file: !6, line: 538, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !834, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !834, file: !6, line: 540, baseType: !840, size: 64, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !843)
!843 = !{!844, !846}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !842, file: !6, line: 214, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !842, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !818, file: !6, line: 556, baseType: !848, size: 64, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !851)
!851 = !{!852, !854, !855, !856, !864, !865, !871}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !850, file: !6, line: 495, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !850, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !850, file: !6, line: 497, baseType: !821, size: 64, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !850, file: !6, line: 498, baseType: !857, size: 64, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !859)
!859 = !{!860, !861, !862, !863}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !858, file: !6, line: 255, baseType: !107, size: 8)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !858, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !858, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !858, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !850, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !850, file: !6, line: 500, baseType: !866, size: 64, offset: 320)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !867)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !79, !870, !58, !185, !186, !58, !54}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !850, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "dm_data_t", file: !246, line: 223, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !246, line: 217, size: 256, elements: !875)
!875 = !{!876, !877, !878, !879}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "clientID", scope: !874, file: !246, line: 219, baseType: !79, size: 16)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !874, file: !246, line: 220, baseType: !857, size: 64, offset: 16)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !874, file: !246, line: 221, baseType: !866, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !874, file: !246, line: 222, baseType: !54, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_packet_t", file: !220, line: 264, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 219, size: 1664, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !882, file: !220, line: 220, baseType: !186, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !882, file: !220, line: 222, baseType: !107, size: 8, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !882, file: !220, line: 223, baseType: !427, size: 32, offset: 96)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !882, file: !220, line: 224, baseType: !107, size: 8, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !882, file: !220, line: 225, baseType: !79, size: 16, offset: 144)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !882, file: !220, line: 227, baseType: !431, size: 40, offset: 160)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !882, file: !220, line: 229, baseType: !435, size: 32, offset: 224)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !882, file: !220, line: 230, baseType: !86, size: 32, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri_len", scope: !882, file: !220, line: 231, baseType: !438, size: 64, offset: 320)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri", scope: !882, file: !220, line: 232, baseType: !442, size: 64, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "etag_len", scope: !882, file: !220, line: 233, baseType: !107, size: 8, offset: 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !882, file: !220, line: 234, baseType: !446, size: 64, offset: 456)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host_len", scope: !882, file: !220, line: 235, baseType: !438, size: 64, offset: 576)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host", scope: !882, file: !220, line: 236, baseType: !442, size: 64, offset: 640)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "location_path", scope: !882, file: !220, line: 237, baseType: !899, size: 64, offset: 704)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !901)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !902)
!902 = !{!903, !905, !906, !907}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !901, file: !220, line: 212, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !901, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !901, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !901, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "uri_port", scope: !882, file: !220, line: 238, baseType: !79, size: 16, offset: 768)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "location_query_len", scope: !882, file: !220, line: 239, baseType: !438, size: 64, offset: 832)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "location_query", scope: !882, file: !220, line: 240, baseType: !186, size: 64, offset: 896)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "uri_path", scope: !882, file: !220, line: 241, baseType: !899, size: 64, offset: 960)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "observe", scope: !882, file: !220, line: 242, baseType: !86, size: 32, offset: 1024)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "token_len", scope: !882, file: !220, line: 243, baseType: !107, size: 8, offset: 1056)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !882, file: !220, line: 244, baseType: !446, size: 64, offset: 1064)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "accept_num", scope: !882, file: !220, line: 245, baseType: !107, size: 8, offset: 1128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !882, file: !220, line: 246, baseType: !468, size: 32, offset: 1136)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "if_match_len", scope: !882, file: !220, line: 247, baseType: !107, size: 8, offset: 1168)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "if_match", scope: !882, file: !220, line: 248, baseType: !446, size: 64, offset: 1176)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "block2_num", scope: !882, file: !220, line: 249, baseType: !86, size: 32, offset: 1248)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "block2_more", scope: !882, file: !220, line: 250, baseType: !107, size: 8, offset: 1280)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "block2_size", scope: !882, file: !220, line: 251, baseType: !79, size: 16, offset: 1296)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "block2_offset", scope: !882, file: !220, line: 252, baseType: !86, size: 32, offset: 1312)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "block1_num", scope: !882, file: !220, line: 253, baseType: !86, size: 32, offset: 1344)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "block1_more", scope: !882, file: !220, line: 254, baseType: !107, size: 8, offset: 1376)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "block1_size", scope: !882, file: !220, line: 255, baseType: !79, size: 16, offset: 1392)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "block1_offset", scope: !882, file: !220, line: 256, baseType: !86, size: 32, offset: 1408)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !882, file: !220, line: 257, baseType: !86, size: 32, offset: 1440)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "uri_query", scope: !882, file: !220, line: 258, baseType: !899, size: 64, offset: 1472)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "if_none_match", scope: !882, file: !220, line: 259, baseType: !107, size: 8, offset: 1536)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !882, file: !220, line: 261, baseType: !79, size: 16, offset: 1552)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !882, file: !220, line: 262, baseType: !186, size: 64, offset: 1600)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !935)
!935 = !{!936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !951}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !934, file: !6, line: 572, baseType: !932, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !934, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !934, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !934, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !934, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !934, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !934, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !934, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !934, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !934, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !934, file: !6, line: 582, baseType: !947, size: 64, offset: 640)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !948)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{null, !932, !54}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !934, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !953, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !814, retainedTypes: !954)
!953 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/observe.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!954 = !{!955, !985, !1009, !54, !107, !1010, !1012, !1032, !1039, !58, !1040}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !958)
!958 = !{!959, !961, !962, !993, !1001, !1002, !1008}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !957, file: !6, line: 495, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !957, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !957, file: !6, line: 497, baseType: !963, size: 64, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !965)
!965 = !{!966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !992}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !964, file: !6, line: 545, baseType: !963, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !964, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !964, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !964, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !964, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !964, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !964, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !964, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !964, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !964, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !964, file: !6, line: 555, baseType: !977, size: 64, offset: 576)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !980)
!980 = !{!981, !983, !984}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !979, file: !6, line: 538, baseType: !982, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !979, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !979, file: !6, line: 540, baseType: !985, size: 64, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !988)
!988 = !{!989, !991}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !987, file: !6, line: 214, baseType: !990, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !987, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !964, file: !6, line: 556, baseType: !955, size: 64, offset: 640)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !957, file: !6, line: 498, baseType: !994, size: 64, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !995, file: !6, line: 255, baseType: !107, size: 8)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !995, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !995, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !995, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !957, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !957, file: !6, line: 500, baseType: !1003, size: 64, offset: 320)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !1004)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !79, !1007, !58, !185, !186, !58, !54}
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !957, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !964)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1031}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1014, file: !6, line: 572, baseType: !1012, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !1014, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !1014, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !1014, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !1014, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !1014, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !1014, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1014, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !1014, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1014, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1014, file: !6, line: 582, baseType: !1027, size: 64, offset: 640)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !1012, !54}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !1014, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "cancellation_data_t", file: !953, line: 759, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !953, line: 754, size: 192, elements: !1035)
!1035 = !{!1036, !1037, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "observationP", scope: !1034, file: !953, line: 756, baseType: !955, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "callbackP", scope: !1034, file: !953, line: 757, baseType: !1003, size: 64, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "userDataP", scope: !1034, file: !953, line: 758, baseType: !54, size: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_packet_t", file: !220, line: 264, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 219, size: 1664, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1042, file: !220, line: 220, baseType: !186, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1042, file: !220, line: 222, baseType: !107, size: 8, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1042, file: !220, line: 223, baseType: !427, size: 32, offset: 96)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1042, file: !220, line: 224, baseType: !107, size: 8, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !1042, file: !220, line: 225, baseType: !79, size: 16, offset: 144)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1042, file: !220, line: 227, baseType: !431, size: 40, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !1042, file: !220, line: 229, baseType: !435, size: 32, offset: 224)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !1042, file: !220, line: 230, baseType: !86, size: 32, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri_len", scope: !1042, file: !220, line: 231, baseType: !438, size: 64, offset: 320)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri", scope: !1042, file: !220, line: 232, baseType: !442, size: 64, offset: 384)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "etag_len", scope: !1042, file: !220, line: 233, baseType: !107, size: 8, offset: 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !1042, file: !220, line: 234, baseType: !446, size: 64, offset: 456)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host_len", scope: !1042, file: !220, line: 235, baseType: !438, size: 64, offset: 576)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host", scope: !1042, file: !220, line: 236, baseType: !442, size: 64, offset: 640)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "location_path", scope: !1042, file: !220, line: 237, baseType: !1059, size: 64, offset: 704)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !1062)
!1062 = !{!1063, !1065, !1066, !1067}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1061, file: !220, line: 212, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !1061, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1061, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1061, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "uri_port", scope: !1042, file: !220, line: 238, baseType: !79, size: 16, offset: 768)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "location_query_len", scope: !1042, file: !220, line: 239, baseType: !438, size: 64, offset: 832)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "location_query", scope: !1042, file: !220, line: 240, baseType: !186, size: 64, offset: 896)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "uri_path", scope: !1042, file: !220, line: 241, baseType: !1059, size: 64, offset: 960)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "observe", scope: !1042, file: !220, line: 242, baseType: !86, size: 32, offset: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "token_len", scope: !1042, file: !220, line: 243, baseType: !107, size: 8, offset: 1056)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !1042, file: !220, line: 244, baseType: !446, size: 64, offset: 1064)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "accept_num", scope: !1042, file: !220, line: 245, baseType: !107, size: 8, offset: 1128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !1042, file: !220, line: 246, baseType: !468, size: 32, offset: 1136)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "if_match_len", scope: !1042, file: !220, line: 247, baseType: !107, size: 8, offset: 1168)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "if_match", scope: !1042, file: !220, line: 248, baseType: !446, size: 64, offset: 1176)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "block2_num", scope: !1042, file: !220, line: 249, baseType: !86, size: 32, offset: 1248)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "block2_more", scope: !1042, file: !220, line: 250, baseType: !107, size: 8, offset: 1280)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "block2_size", scope: !1042, file: !220, line: 251, baseType: !79, size: 16, offset: 1296)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "block2_offset", scope: !1042, file: !220, line: 252, baseType: !86, size: 32, offset: 1312)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "block1_num", scope: !1042, file: !220, line: 253, baseType: !86, size: 32, offset: 1344)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "block1_more", scope: !1042, file: !220, line: 254, baseType: !107, size: 8, offset: 1376)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "block1_size", scope: !1042, file: !220, line: 255, baseType: !79, size: 16, offset: 1392)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "block1_offset", scope: !1042, file: !220, line: 256, baseType: !86, size: 32, offset: 1408)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1042, file: !220, line: 257, baseType: !86, size: 32, offset: 1440)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "uri_query", scope: !1042, file: !220, line: 258, baseType: !1059, size: 64, offset: 1472)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "if_none_match", scope: !1042, file: !220, line: 259, baseType: !107, size: 8, offset: 1536)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !1042, file: !220, line: 261, baseType: !79, size: 16, offset: 1552)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1042, file: !220, line: 262, baseType: !186, size: 64, offset: 1600)
!1092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1093, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1094, retainedTypes: !1111)
!1093 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/json.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1094 = !{!41, !1095, !245, !1102}
!1095 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1093, line: 81, size: 32, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101}
!1097 = !DIEnumerator(name: "_TYPE_UNSET", value: 0)
!1098 = !DIEnumerator(name: "_TYPE_FALSE", value: 1)
!1099 = !DIEnumerator(name: "_TYPE_TRUE", value: 2)
!1100 = !DIEnumerator(name: "_TYPE_FLOAT", value: 3)
!1101 = !DIEnumerator(name: "_TYPE_STRING", value: 4)
!1102 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1093, line: 70, size: 32, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107, !1108, !1109, !1110}
!1104 = !DIEnumerator(name: "_STEP_START", value: 0)
!1105 = !DIEnumerator(name: "_STEP_TOKEN", value: 1)
!1106 = !DIEnumerator(name: "_STEP_ANY_SEPARATOR", value: 2)
!1107 = !DIEnumerator(name: "_STEP_SEPARATOR", value: 3)
!1108 = !DIEnumerator(name: "_STEP_QUOTED_VALUE", value: 4)
!1109 = !DIEnumerator(name: "_STEP_VALUE", value: 5)
!1110 = !DIEnumerator(name: "_STEP_DONE", value: 6)
!1111 = !{!1112, !54, !117, !107, !58, !186, !79}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "_record_t", file: !1093, line: 96, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1093, line: 90, size: 256, elements: !1115)
!1115 = !{!1116, !1118, !1120, !1121}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !1114, file: !1093, line: 92, baseType: !1117, size: 64)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 64, elements: !114)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1114, file: !1093, line: 93, baseType: !1119, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_type", file: !1093, line: 88, baseType: !1095)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1114, file: !1093, line: 94, baseType: !186, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "valueLen", scope: !1114, file: !1093, line: 95, baseType: !438, size: 64, offset: 192)
!1122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1123, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !488)
!1123 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/discover.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1125, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1126, retainedTypes: !1127)
!1125 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/core/block1.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1126 = !{!353}
!1127 = !{!54, !107}
!1128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1129, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1130, retainedTypes: !1131)
!1129 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/shared/commandline.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1130 = !{!649, !41, !32}
!1131 = !{!58, !66, !54, !186, !548}
!1132 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1133, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !488)
!1133 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/shared/platform.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1135, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !488)
!1135 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/shared/memtrace.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1137, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1138, retainedTypes: !1151)
!1137 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/shared/connection.c", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1138 = !{!1139}
!1139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !1140, line: 24, size: 32, elements: !1141)
!1140 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1141 = !{!1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150}
!1142 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!1143 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!1144 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!1145 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!1146 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!1147 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!1148 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!1149 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!1150 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!1151 = !{!54, !1152, !1177, !107}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "connection_t", file: !1154, line: 43, baseType: !1155)
!1154 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/shared/connection.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_connection_t", file: !1154, line: 37, size: 384, elements: !1156)
!1156 = !{!1157, !1159, !1160, !1176}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1155, file: !1154, line: 39, baseType: !1158, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1155, file: !1154, line: 40, baseType: !58, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1155, file: !1154, line: 41, baseType: !1161, size: 224, offset: 96)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !74, line: 254, size: 224, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1175}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1161, file: !74, line: 256, baseType: !64, size: 16)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1161, file: !74, line: 257, baseType: !78, size: 16, offset: 16)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1161, file: !74, line: 258, baseType: !86, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1161, file: !74, line: 259, baseType: !1167, size: 128, offset: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !74, line: 211, size: 128, elements: !1168)
!1168 = !{!1169}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1167, file: !74, line: 220, baseType: !1170, size: 128)
!1170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1167, file: !74, line: 213, size: 128, elements: !1171)
!1171 = !{!1172, !1173, !1174}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1170, file: !74, line: 215, baseType: !106, size: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1170, file: !74, line: 217, baseType: !111, size: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1170, file: !74, line: 218, baseType: !113, size: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1161, file: !74, line: 260, baseType: !86, size: 32, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "addrLen", scope: !1155, file: !1154, line: 42, baseType: !438, size: 64, offset: 320)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !61, line: 153, size: 128, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1178, file: !61, line: 155, baseType: !64, size: 16)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1178, file: !61, line: 156, baseType: !68, size: 112, offset: 16)
!1182 = !{!"clang version 5.0.0 (tags/RELEASE_500/final)"}
!1183 = !{i32 2, !"Dwarf Version", i32 4}
!1184 = !{i32 2, !"Debug Info Version", i32 3}
!1185 = !{i32 1, !"wchar_size", i32 4}
!1186 = distinct !DISubprogram(name: "handle_sigint", scope: !3, file: !3, line: 789, type: !1187, isLocal: false, isDefinition: true, scopeLine: 790, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{null, !58}
!1189 = !DILocalVariable(name: "signum", arg: 1, scope: !1186, file: !3, line: 789, type: !58)
!1190 = !DIExpression()
!1191 = !DILocation(line: 789, column: 24, scope: !1186)
!1192 = !DILocation(line: 791, column: 12, scope: !1186)
!1193 = !DILocation(line: 792, column: 1, scope: !1186)
!1194 = distinct !DISubprogram(name: "print_usage", scope: !3, file: !3, line: 794, type: !1195, isLocal: false, isDefinition: true, scopeLine: 795, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{null}
!1197 = !DILocation(line: 796, column: 13, scope: !1194)
!1198 = !DILocation(line: 796, column: 5, scope: !1194)
!1199 = !DILocation(line: 797, column: 13, scope: !1194)
!1200 = !DILocation(line: 797, column: 5, scope: !1194)
!1201 = !DILocation(line: 798, column: 13, scope: !1194)
!1202 = !DILocation(line: 798, column: 5, scope: !1194)
!1203 = !DILocation(line: 799, column: 13, scope: !1194)
!1204 = !DILocation(line: 799, column: 5, scope: !1194)
!1205 = !DILocation(line: 800, column: 13, scope: !1194)
!1206 = !DILocation(line: 800, column: 5, scope: !1194)
!1207 = !DILocation(line: 801, column: 13, scope: !1194)
!1208 = !DILocation(line: 801, column: 5, scope: !1194)
!1209 = !DILocation(line: 802, column: 1, scope: !1194)
!1210 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 805, type: !1211, isLocal: false, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!58, !58, !1213}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!1214 = !DILocalVariable(name: "argc", arg: 1, scope: !1210, file: !3, line: 805, type: !58)
!1215 = !DILocation(line: 805, column: 14, scope: !1210)
!1216 = !DILocalVariable(name: "argv", arg: 2, scope: !1210, file: !3, line: 805, type: !1213)
!1217 = !DILocation(line: 805, column: 26, scope: !1210)
!1218 = !DILocalVariable(name: "sock", scope: !1210, file: !3, line: 807, type: !58)
!1219 = !DILocation(line: 807, column: 9, scope: !1210)
!1220 = !DILocalVariable(name: "readfds", scope: !1210, file: !3, line: 808, type: !1221)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !56, line: 75, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 64, size: 1024, elements: !1223)
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !1222, file: !56, line: 72, baseType: !1225, size: 1024)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 1024, elements: !108)
!1226 = !DILocation(line: 808, column: 12, scope: !1210)
!1227 = !DILocalVariable(name: "tv", scope: !1210, file: !3, line: 809, type: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1229, line: 30, size: 128, elements: !1230)
!1229 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1228, file: !1229, line: 32, baseType: !141, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1228, file: !1229, line: 33, baseType: !1233, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !142, line: 141, baseType: !57)
!1234 = !DILocation(line: 809, column: 20, scope: !1210)
!1235 = !DILocalVariable(name: "result", scope: !1210, file: !3, line: 810, type: !58)
!1236 = !DILocation(line: 810, column: 9, scope: !1210)
!1237 = !DILocalVariable(name: "lwm2mH", scope: !1210, file: !3, line: 811, type: !118)
!1238 = !DILocation(line: 811, column: 23, scope: !1210)
!1239 = !DILocalVariable(name: "i", scope: !1210, file: !3, line: 812, type: !58)
!1240 = !DILocation(line: 812, column: 9, scope: !1210)
!1241 = !DILocalVariable(name: "connList", scope: !1210, file: !3, line: 813, type: !1242)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "connection_t", file: !1154, line: 43, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_connection_t", file: !1154, line: 37, size: 384, elements: !1245)
!1245 = !{!1246, !1248, !1249, !1250}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1244, file: !1154, line: 39, baseType: !1247, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1244, file: !1154, line: 40, baseType: !58, size: 32, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1244, file: !1154, line: 41, baseType: !94, size: 224, offset: 96)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "addrLen", scope: !1244, file: !1154, line: 42, baseType: !438, size: 64, offset: 320)
!1251 = !DILocation(line: 813, column: 20, scope: !1210)
!1252 = !DILocalVariable(name: "addressFamily", scope: !1210, file: !3, line: 814, type: !58)
!1253 = !DILocation(line: 814, column: 9, scope: !1210)
!1254 = !DILocalVariable(name: "opt", scope: !1210, file: !3, line: 815, type: !58)
!1255 = !DILocation(line: 815, column: 9, scope: !1210)
!1256 = !DILocalVariable(name: "localPort", scope: !1210, file: !3, line: 816, type: !548)
!1257 = !DILocation(line: 816, column: 18, scope: !1210)
!1258 = !DILocalVariable(name: "commands", scope: !1210, file: !3, line: 818, type: !1259)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 4480, elements: !70)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "command_desc_t", file: !1261, line: 31, baseType: !1262)
!1261 = !DIFile(filename: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/examples/shared/commandline.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1261, line: 24, size: 320, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1272}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1262, file: !1261, line: 26, baseType: !117, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "shortDesc", scope: !1262, file: !1261, line: 27, baseType: !117, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "longDesc", scope: !1262, file: !1261, line: 28, baseType: !117, size: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1262, file: !1261, line: 29, baseType: !1268, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "command_handler_t", file: !1261, line: 22, baseType: !1269)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{null, !117, !54}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !1262, file: !1261, line: 30, baseType: !54, size: 64, offset: 256)
!1273 = !DILocation(line: 818, column: 20, scope: !1210)
!1274 = !DILocation(line: 878, column: 9, scope: !1210)
!1275 = !DILocation(line: 879, column: 5, scope: !1210)
!1276 = !DILocation(line: 879, column: 12, scope: !1210)
!1277 = !DILocation(line: 879, column: 18, scope: !1210)
!1278 = !DILocation(line: 879, column: 16, scope: !1210)
!1279 = !DILocation(line: 881, column: 13, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !3, line: 881, column: 13)
!1281 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 880, column: 5)
!1282 = !DILocation(line: 881, column: 18, scope: !1280)
!1283 = !DILocation(line: 881, column: 23, scope: !1280)
!1284 = !DILocation(line: 882, column: 13, scope: !1280)
!1285 = !DILocation(line: 882, column: 16, scope: !1280)
!1286 = !DILocation(line: 882, column: 21, scope: !1280)
!1287 = !DILocation(line: 882, column: 29, scope: !1280)
!1288 = !DILocation(line: 883, column: 13, scope: !1280)
!1289 = !DILocation(line: 883, column: 16, scope: !1280)
!1290 = !DILocation(line: 883, column: 21, scope: !1280)
!1291 = !DILocation(line: 883, column: 29, scope: !1280)
!1292 = !DILocation(line: 881, column: 13, scope: !1281)
!1293 = !DILocation(line: 885, column: 13, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !1280, file: !3, line: 884, column: 9)
!1295 = !DILocation(line: 886, column: 13, scope: !1294)
!1296 = !DILocation(line: 888, column: 17, scope: !1281)
!1297 = !DILocation(line: 888, column: 22, scope: !1281)
!1298 = !DILocation(line: 888, column: 9, scope: !1281)
!1299 = !DILocation(line: 891, column: 27, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1281, file: !3, line: 889, column: 9)
!1301 = !DILocation(line: 892, column: 13, scope: !1300)
!1302 = !DILocation(line: 894, column: 16, scope: !1300)
!1303 = !DILocation(line: 895, column: 17, scope: !1304)
!1304 = distinct !DILexicalBlock(scope: !1300, file: !3, line: 895, column: 17)
!1305 = !DILocation(line: 895, column: 24, scope: !1304)
!1306 = !DILocation(line: 895, column: 21, scope: !1304)
!1307 = !DILocation(line: 895, column: 17, scope: !1300)
!1308 = !DILocation(line: 897, column: 17, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1304, file: !3, line: 896, column: 13)
!1310 = !DILocation(line: 898, column: 17, scope: !1309)
!1311 = !DILocation(line: 900, column: 25, scope: !1300)
!1312 = !DILocation(line: 900, column: 30, scope: !1300)
!1313 = !DILocation(line: 900, column: 23, scope: !1300)
!1314 = !DILocation(line: 901, column: 13, scope: !1300)
!1315 = !DILocation(line: 903, column: 13, scope: !1300)
!1316 = !DILocation(line: 904, column: 13, scope: !1300)
!1317 = !DILocation(line: 906, column: 13, scope: !1281)
!1318 = distinct !{!1318, !1275, !1319}
!1319 = !DILocation(line: 907, column: 5, scope: !1210)
!1320 = !DILocation(line: 909, column: 26, scope: !1210)
!1321 = !DILocation(line: 909, column: 37, scope: !1210)
!1322 = !DILocation(line: 909, column: 12, scope: !1210)
!1323 = !DILocation(line: 909, column: 10, scope: !1210)
!1324 = !DILocation(line: 910, column: 9, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 910, column: 9)
!1326 = !DILocation(line: 910, column: 14, scope: !1325)
!1327 = !DILocation(line: 910, column: 9, scope: !1210)
!1328 = !DILocation(line: 912, column: 17, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1325, file: !3, line: 911, column: 5)
!1330 = !DILocation(line: 912, column: 57, scope: !1329)
!1331 = !DILocation(line: 912, column: 9, scope: !1329)
!1332 = !DILocation(line: 913, column: 9, scope: !1329)
!1333 = !DILocation(line: 916, column: 14, scope: !1210)
!1334 = !DILocation(line: 916, column: 12, scope: !1210)
!1335 = !DILocation(line: 917, column: 17, scope: !1336)
!1336 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 917, column: 9)
!1337 = !DILocation(line: 917, column: 14, scope: !1336)
!1338 = !DILocation(line: 917, column: 9, scope: !1210)
!1339 = !DILocation(line: 919, column: 17, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !1336, file: !3, line: 918, column: 5)
!1341 = !DILocation(line: 919, column: 9, scope: !1340)
!1342 = !DILocation(line: 920, column: 9, scope: !1340)
!1343 = !DILocation(line: 923, column: 5, scope: !1210)
!1344 = !DILocation(line: 925, column: 12, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 925, column: 5)
!1346 = !DILocation(line: 925, column: 10, scope: !1345)
!1347 = !DILocation(line: 925, column: 27, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1345, file: !3, line: 925, column: 5)
!1349 = !DILocation(line: 925, column: 18, scope: !1348)
!1350 = !DILocation(line: 925, column: 30, scope: !1348)
!1351 = !DILocation(line: 925, column: 35, scope: !1348)
!1352 = !DILocation(line: 925, column: 5, scope: !1345)
!1353 = !DILocation(line: 927, column: 40, scope: !1354)
!1354 = distinct !DILexicalBlock(scope: !1348, file: !3, line: 926, column: 5)
!1355 = !DILocation(line: 927, column: 32, scope: !1354)
!1356 = !DILocation(line: 927, column: 18, scope: !1354)
!1357 = !DILocation(line: 927, column: 9, scope: !1354)
!1358 = !DILocation(line: 927, column: 21, scope: !1354)
!1359 = !DILocation(line: 927, column: 30, scope: !1354)
!1360 = !DILocation(line: 928, column: 5, scope: !1354)
!1361 = !DILocation(line: 925, column: 46, scope: !1348)
!1362 = !DILocation(line: 925, column: 5, scope: !1348)
!1363 = distinct !{!1363, !1352, !1364}
!1364 = !DILocation(line: 928, column: 5, scope: !1345)
!1365 = !DILocation(line: 929, column: 13, scope: !1210)
!1366 = !DILocation(line: 929, column: 5, scope: !1210)
!1367 = !DILocation(line: 929, column: 35, scope: !1210)
!1368 = !DILocation(line: 929, column: 28, scope: !1210)
!1369 = !DILocation(line: 931, column: 35, scope: !1210)
!1370 = !DILocation(line: 931, column: 65, scope: !1210)
!1371 = !DILocation(line: 931, column: 5, scope: !1210)
!1372 = !DILocation(line: 933, column: 5, scope: !1210)
!1373 = !DILocation(line: 933, column: 17, scope: !1210)
!1374 = !DILocation(line: 933, column: 14, scope: !1210)
!1375 = !DILocation(line: 935, column: 9, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 934, column: 5)
!1377 = distinct !{!1377, !1375, !1375}
!1378 = !DILocalVariable(name: "__d0", scope: !1379, file: !3, line: 935, type: !58)
!1379 = distinct !DILexicalBlock(scope: !1376, file: !3, line: 935, column: 9)
!1380 = !DILocation(line: 935, column: 9, scope: !1379)
!1381 = !DILocalVariable(name: "__d1", scope: !1379, file: !3, line: 935, type: !58)
!1382 = !{i32 -2146705829}
!1383 = !DILocation(line: 936, column: 9, scope: !1376)
!1384 = !DILocation(line: 937, column: 9, scope: !1376)
!1385 = !DILocation(line: 939, column: 12, scope: !1376)
!1386 = !DILocation(line: 939, column: 19, scope: !1376)
!1387 = !DILocation(line: 940, column: 12, scope: !1376)
!1388 = !DILocation(line: 940, column: 20, scope: !1376)
!1389 = !DILocation(line: 942, column: 29, scope: !1376)
!1390 = !DILocation(line: 942, column: 42, scope: !1376)
!1391 = !DILocation(line: 942, column: 18, scope: !1376)
!1392 = !DILocation(line: 942, column: 16, scope: !1376)
!1393 = !DILocation(line: 943, column: 13, scope: !1394)
!1394 = distinct !DILexicalBlock(scope: !1376, file: !3, line: 943, column: 13)
!1395 = !DILocation(line: 943, column: 20, scope: !1394)
!1396 = !DILocation(line: 943, column: 13, scope: !1376)
!1397 = !DILocation(line: 945, column: 21, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1394, file: !3, line: 944, column: 9)
!1399 = !DILocation(line: 945, column: 62, scope: !1398)
!1400 = !DILocation(line: 945, column: 13, scope: !1398)
!1401 = !DILocation(line: 946, column: 13, scope: !1398)
!1402 = !DILocation(line: 949, column: 18, scope: !1376)
!1403 = !DILocation(line: 949, column: 16, scope: !1376)
!1404 = !DILocation(line: 951, column: 14, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1376, file: !3, line: 951, column: 14)
!1406 = !DILocation(line: 951, column: 21, scope: !1405)
!1407 = !DILocation(line: 951, column: 14, scope: !1376)
!1408 = !DILocation(line: 953, column: 17, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1410, file: !3, line: 953, column: 17)
!1410 = distinct !DILexicalBlock(scope: !1405, file: !3, line: 952, column: 9)
!1411 = !DILocation(line: 953, column: 23, scope: !1409)
!1412 = !DILocation(line: 953, column: 17, scope: !1410)
!1413 = !DILocation(line: 955, column: 23, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1409, file: !3, line: 954, column: 13)
!1415 = !DILocation(line: 955, column: 60, scope: !1414)
!1416 = !DILocation(line: 955, column: 15, scope: !1414)
!1417 = !DILocation(line: 956, column: 13, scope: !1414)
!1418 = !DILocation(line: 957, column: 9, scope: !1410)
!1419 = !DILocation(line: 958, column: 18, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1405, file: !3, line: 958, column: 18)
!1421 = !DILocation(line: 958, column: 25, scope: !1420)
!1422 = !DILocation(line: 958, column: 18, scope: !1405)
!1423 = !DILocalVariable(name: "buffer", scope: !1424, file: !3, line: 960, type: !1425)
!1424 = distinct !DILexicalBlock(scope: !1420, file: !3, line: 959, column: 9)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 8192, elements: !1426)
!1426 = !{!1427}
!1427 = !DISubrange(count: 1024)
!1428 = !DILocation(line: 960, column: 21, scope: !1424)
!1429 = !DILocalVariable(name: "numBytes", scope: !1424, file: !3, line: 961, type: !58)
!1430 = !DILocation(line: 961, column: 17, scope: !1424)
!1431 = !DILocation(line: 963, column: 17, scope: !1432)
!1432 = distinct !DILexicalBlock(scope: !1424, file: !3, line: 963, column: 17)
!1433 = !DILocation(line: 963, column: 17, scope: !1424)
!1434 = !DILocalVariable(name: "addr", scope: !1435, file: !3, line: 965, type: !1436)
!1435 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 964, column: 13)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !61, line: 166, size: 1024, elements: !1437)
!1437 = !{!1438, !1439, !1443}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !1436, file: !61, line: 168, baseType: !64, size: 16)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !1436, file: !61, line: 169, baseType: !1440, size: 944, offset: 16)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 944, elements: !1441)
!1441 = !{!1442}
!1442 = !DISubrange(count: 118)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !1436, file: !61, line: 170, baseType: !440, size: 64, offset: 960)
!1444 = !DILocation(line: 965, column: 41, scope: !1435)
!1445 = !DILocalVariable(name: "addrLen", scope: !1435, file: !3, line: 966, type: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !1447, line: 277, baseType: !1448)
!1447 = !DIFile(filename: "/usr/include/unistd.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !142, line: 189, baseType: !87)
!1449 = !DILocation(line: 966, column: 27, scope: !1435)
!1450 = !DILocation(line: 968, column: 25, scope: !1435)
!1451 = !DILocation(line: 969, column: 37, scope: !1435)
!1452 = !DILocation(line: 969, column: 43, scope: !1435)
!1453 = !DILocation(line: 969, column: 71, scope: !1435)
!1454 = !DILocation(line: 969, column: 28, scope: !1435)
!1455 = !DILocation(line: 969, column: 26, scope: !1435)
!1456 = !DILocation(line: 971, column: 21, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1435, file: !3, line: 971, column: 21)
!1458 = !DILocation(line: 971, column: 30, scope: !1457)
!1459 = !DILocation(line: 971, column: 21, scope: !1435)
!1460 = !DILocation(line: 973, column: 29, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1457, file: !3, line: 972, column: 17)
!1462 = !DILocation(line: 973, column: 68, scope: !1461)
!1463 = !DILocation(line: 973, column: 21, scope: !1461)
!1464 = !DILocation(line: 974, column: 17, scope: !1461)
!1465 = !DILocalVariable(name: "s", scope: !1466, file: !3, line: 977, type: !1467)
!1466 = distinct !DILexicalBlock(scope: !1457, file: !3, line: 976, column: 17)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 368, elements: !1468)
!1468 = !{!1469}
!1469 = !DISubrange(count: 46)
!1470 = !DILocation(line: 977, column: 26, scope: !1466)
!1471 = !DILocalVariable(name: "port", scope: !1466, file: !3, line: 978, type: !78)
!1472 = !DILocation(line: 978, column: 31, scope: !1466)
!1473 = !DILocalVariable(name: "connP", scope: !1466, file: !3, line: 979, type: !1242)
!1474 = !DILocation(line: 979, column: 36, scope: !1466)
!1475 = !DILocation(line: 981, column: 6, scope: !1466)
!1476 = !DILocation(line: 981, column: 11, scope: !1466)
!1477 = !DILocation(line: 982, column: 41, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 982, column: 25)
!1479 = !DILocation(line: 982, column: 36, scope: !1478)
!1480 = !DILocation(line: 982, column: 33, scope: !1478)
!1481 = !DILocation(line: 982, column: 25, scope: !1466)
!1482 = !DILocalVariable(name: "saddr", scope: !1483, file: !3, line: 984, type: !72)
!1483 = distinct !DILexicalBlock(scope: !1478, file: !3, line: 983, column: 21)
!1484 = !DILocation(line: 984, column: 45, scope: !1483)
!1485 = !DILocation(line: 984, column: 53, scope: !1483)
!1486 = !DILocation(line: 985, column: 35, scope: !1483)
!1487 = !DILocation(line: 985, column: 42, scope: !1483)
!1488 = !DILocation(line: 985, column: 55, scope: !1483)
!1489 = !DILocation(line: 985, column: 62, scope: !1483)
!1490 = !DILocation(line: 985, column: 54, scope: !1483)
!1491 = !DILocation(line: 985, column: 72, scope: !1483)
!1492 = !DILocation(line: 985, column: 25, scope: !1483)
!1493 = !DILocation(line: 986, column: 32, scope: !1483)
!1494 = !DILocation(line: 986, column: 39, scope: !1483)
!1495 = !DILocation(line: 986, column: 30, scope: !1483)
!1496 = !DILocation(line: 987, column: 21, scope: !1483)
!1497 = !DILocation(line: 988, column: 47, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1478, file: !3, line: 988, column: 30)
!1499 = !DILocation(line: 988, column: 42, scope: !1498)
!1500 = !DILocation(line: 988, column: 39, scope: !1498)
!1501 = !DILocation(line: 988, column: 30, scope: !1478)
!1502 = !DILocalVariable(name: "saddr", scope: !1503, file: !3, line: 990, type: !93)
!1503 = distinct !DILexicalBlock(scope: !1498, file: !3, line: 989, column: 21)
!1504 = !DILocation(line: 990, column: 46, scope: !1503)
!1505 = !DILocation(line: 990, column: 54, scope: !1503)
!1506 = !DILocation(line: 991, column: 35, scope: !1503)
!1507 = !DILocation(line: 991, column: 42, scope: !1503)
!1508 = !DILocation(line: 991, column: 56, scope: !1503)
!1509 = !DILocation(line: 991, column: 63, scope: !1503)
!1510 = !DILocation(line: 991, column: 55, scope: !1503)
!1511 = !DILocation(line: 991, column: 74, scope: !1503)
!1512 = !DILocation(line: 991, column: 25, scope: !1503)
!1513 = !DILocation(line: 992, column: 32, scope: !1503)
!1514 = !DILocation(line: 992, column: 39, scope: !1503)
!1515 = !DILocation(line: 992, column: 30, scope: !1503)
!1516 = !DILocation(line: 993, column: 21, scope: !1503)
!1517 = !DILocation(line: 995, column: 29, scope: !1466)
!1518 = !DILocation(line: 995, column: 76, scope: !1466)
!1519 = !DILocation(line: 995, column: 86, scope: !1466)
!1520 = !DILocation(line: 995, column: 95, scope: !1466)
!1521 = !DILocation(line: 995, column: 89, scope: !1466)
!1522 = !DILocation(line: 995, column: 21, scope: !1466)
!1523 = !DILocation(line: 996, column: 35, scope: !1466)
!1524 = !DILocation(line: 996, column: 43, scope: !1466)
!1525 = !DILocation(line: 996, column: 51, scope: !1466)
!1526 = !DILocation(line: 996, column: 21, scope: !1466)
!1527 = !DILocation(line: 998, column: 45, scope: !1466)
!1528 = !DILocation(line: 998, column: 62, scope: !1466)
!1529 = !DILocation(line: 998, column: 29, scope: !1466)
!1530 = !DILocation(line: 998, column: 27, scope: !1466)
!1531 = !DILocation(line: 999, column: 25, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 999, column: 25)
!1533 = !DILocation(line: 999, column: 31, scope: !1532)
!1534 = !DILocation(line: 999, column: 25, scope: !1466)
!1535 = !DILocation(line: 1001, column: 57, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 1000, column: 21)
!1537 = !DILocation(line: 1001, column: 67, scope: !1536)
!1538 = !DILocation(line: 1001, column: 73, scope: !1536)
!1539 = !DILocation(line: 1001, column: 99, scope: !1536)
!1540 = !DILocation(line: 1001, column: 33, scope: !1536)
!1541 = !DILocation(line: 1001, column: 31, scope: !1536)
!1542 = !DILocation(line: 1002, column: 29, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !1536, file: !3, line: 1002, column: 29)
!1544 = !DILocation(line: 1002, column: 35, scope: !1543)
!1545 = !DILocation(line: 1002, column: 29, scope: !1536)
!1546 = !DILocation(line: 1004, column: 40, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 1003, column: 25)
!1548 = !DILocation(line: 1004, column: 38, scope: !1547)
!1549 = !DILocation(line: 1005, column: 25, scope: !1547)
!1550 = !DILocation(line: 1006, column: 21, scope: !1536)
!1551 = !DILocation(line: 1007, column: 25, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 1007, column: 25)
!1553 = !DILocation(line: 1007, column: 31, scope: !1552)
!1554 = !DILocation(line: 1007, column: 25, scope: !1466)
!1555 = !DILocation(line: 1009, column: 45, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 1008, column: 21)
!1557 = !DILocation(line: 1009, column: 53, scope: !1556)
!1558 = !DILocation(line: 1009, column: 61, scope: !1556)
!1559 = !DILocation(line: 1009, column: 71, scope: !1556)
!1560 = !DILocation(line: 1009, column: 25, scope: !1556)
!1561 = !DILocation(line: 1010, column: 21, scope: !1556)
!1562 = !DILocation(line: 1012, column: 13, scope: !1435)
!1563 = !DILocation(line: 1013, column: 22, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 1013, column: 22)
!1565 = !DILocation(line: 1013, column: 22, scope: !1432)
!1566 = !DILocation(line: 1015, column: 47, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1564, file: !3, line: 1014, column: 13)
!1568 = !DILocation(line: 1015, column: 28, scope: !1567)
!1569 = !DILocation(line: 1015, column: 26, scope: !1567)
!1570 = !DILocation(line: 1017, column: 21, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1567, file: !3, line: 1017, column: 21)
!1572 = !DILocation(line: 1017, column: 30, scope: !1571)
!1573 = !DILocation(line: 1017, column: 21, scope: !1567)
!1574 = !DILocation(line: 1019, column: 28, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 1018, column: 17)
!1576 = !DILocation(line: 1019, column: 21, scope: !1575)
!1577 = !DILocation(line: 1019, column: 38, scope: !1575)
!1578 = !DILocation(line: 1020, column: 36, scope: !1575)
!1579 = !DILocation(line: 1020, column: 53, scope: !1575)
!1580 = !DILocation(line: 1020, column: 21, scope: !1575)
!1581 = !DILocation(line: 1021, column: 29, scope: !1575)
!1582 = !DILocation(line: 1021, column: 21, scope: !1575)
!1583 = !DILocation(line: 1022, column: 17, scope: !1575)
!1584 = !DILocation(line: 1023, column: 21, scope: !1585)
!1585 = distinct !DILexicalBlock(scope: !1567, file: !3, line: 1023, column: 21)
!1586 = !DILocation(line: 1023, column: 28, scope: !1585)
!1587 = !DILocation(line: 1023, column: 21, scope: !1567)
!1588 = !DILocation(line: 1025, column: 29, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 1024, column: 17)
!1590 = !DILocation(line: 1025, column: 21, scope: !1589)
!1591 = !DILocation(line: 1026, column: 28, scope: !1589)
!1592 = !DILocation(line: 1026, column: 21, scope: !1589)
!1593 = !DILocation(line: 1027, column: 17, scope: !1589)
!1594 = !DILocation(line: 1030, column: 29, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 1029, column: 17)
!1596 = !DILocation(line: 1030, column: 21, scope: !1595)
!1597 = !DILocation(line: 1032, column: 13, scope: !1567)
!1598 = !DILocation(line: 1033, column: 9, scope: !1424)
!1599 = distinct !{!1599, !1372, !1600}
!1600 = !DILocation(line: 1034, column: 5, scope: !1210)
!1601 = !DILocation(line: 1036, column: 17, scope: !1210)
!1602 = !DILocation(line: 1036, column: 5, scope: !1210)
!1603 = !DILocation(line: 1037, column: 11, scope: !1210)
!1604 = !DILocation(line: 1037, column: 5, scope: !1210)
!1605 = !DILocation(line: 1038, column: 21, scope: !1210)
!1606 = !DILocation(line: 1038, column: 5, scope: !1210)
!1607 = !DILocation(line: 1047, column: 5, scope: !1210)
!1608 = !DILocation(line: 1048, column: 1, scope: !1210)
!1609 = distinct !DISubprogram(name: "prv_monitor_callback", scope: !3, file: !3, line: 740, type: !182, isLocal: true, isDefinition: true, scopeLine: 747, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1610 = !DILocalVariable(name: "clientID", arg: 1, scope: !1609, file: !3, line: 740, type: !79)
!1611 = !DILocation(line: 740, column: 43, scope: !1609)
!1612 = !DILocalVariable(name: "uriP", arg: 2, scope: !1609, file: !3, line: 741, type: !184)
!1613 = !DILocation(line: 741, column: 48, scope: !1609)
!1614 = !DILocalVariable(name: "status", arg: 3, scope: !1609, file: !3, line: 742, type: !58)
!1615 = !DILocation(line: 742, column: 38, scope: !1609)
!1616 = !DILocalVariable(name: "format", arg: 4, scope: !1609, file: !3, line: 743, type: !185)
!1617 = !DILocation(line: 743, column: 53, scope: !1609)
!1618 = !DILocalVariable(name: "data", arg: 5, scope: !1609, file: !3, line: 744, type: !186)
!1619 = !DILocation(line: 744, column: 44, scope: !1609)
!1620 = !DILocalVariable(name: "dataLength", arg: 6, scope: !1609, file: !3, line: 745, type: !58)
!1621 = !DILocation(line: 745, column: 38, scope: !1609)
!1622 = !DILocalVariable(name: "userData", arg: 7, scope: !1609, file: !3, line: 746, type: !54)
!1623 = !DILocation(line: 746, column: 41, scope: !1609)
!1624 = !DILocalVariable(name: "lwm2mH", scope: !1609, file: !3, line: 748, type: !118)
!1625 = !DILocation(line: 748, column: 23, scope: !1609)
!1626 = !DILocation(line: 748, column: 52, scope: !1609)
!1627 = !DILocation(line: 748, column: 32, scope: !1609)
!1628 = !DILocalVariable(name: "targetP", scope: !1609, file: !3, line: 749, type: !123)
!1629 = !DILocation(line: 749, column: 22, scope: !1609)
!1630 = !DILocation(line: 751, column: 13, scope: !1609)
!1631 = !DILocation(line: 751, column: 5, scope: !1609)
!1632 = !DILocation(line: 754, column: 17, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1609, file: !3, line: 752, column: 5)
!1634 = !DILocation(line: 754, column: 63, scope: !1633)
!1635 = !DILocation(line: 754, column: 9, scope: !1633)
!1636 = !DILocation(line: 756, column: 69, scope: !1633)
!1637 = !DILocation(line: 756, column: 77, scope: !1633)
!1638 = !DILocation(line: 756, column: 53, scope: !1633)
!1639 = !DILocation(line: 756, column: 89, scope: !1633)
!1640 = !DILocation(line: 756, column: 37, scope: !1633)
!1641 = !DILocation(line: 756, column: 19, scope: !1633)
!1642 = !DILocation(line: 756, column: 17, scope: !1633)
!1643 = !DILocation(line: 758, column: 25, scope: !1633)
!1644 = !DILocation(line: 758, column: 9, scope: !1633)
!1645 = !DILocation(line: 759, column: 9, scope: !1633)
!1646 = !DILocation(line: 762, column: 17, scope: !1633)
!1647 = !DILocation(line: 762, column: 61, scope: !1633)
!1648 = !DILocation(line: 762, column: 9, scope: !1633)
!1649 = !DILocation(line: 763, column: 9, scope: !1633)
!1650 = !DILocation(line: 766, column: 17, scope: !1633)
!1651 = !DILocation(line: 766, column: 56, scope: !1633)
!1652 = !DILocation(line: 766, column: 9, scope: !1633)
!1653 = !DILocation(line: 768, column: 69, scope: !1633)
!1654 = !DILocation(line: 768, column: 77, scope: !1633)
!1655 = !DILocation(line: 768, column: 53, scope: !1633)
!1656 = !DILocation(line: 768, column: 89, scope: !1633)
!1657 = !DILocation(line: 768, column: 37, scope: !1633)
!1658 = !DILocation(line: 768, column: 19, scope: !1633)
!1659 = !DILocation(line: 768, column: 17, scope: !1633)
!1660 = !DILocation(line: 770, column: 25, scope: !1633)
!1661 = !DILocation(line: 770, column: 9, scope: !1633)
!1662 = !DILocation(line: 771, column: 9, scope: !1633)
!1663 = !DILocation(line: 774, column: 17, scope: !1633)
!1664 = !DILocation(line: 774, column: 88, scope: !1633)
!1665 = !DILocation(line: 774, column: 9, scope: !1633)
!1666 = !DILocation(line: 775, column: 9, scope: !1633)
!1667 = !DILocation(line: 778, column: 13, scope: !1609)
!1668 = !DILocation(line: 778, column: 5, scope: !1609)
!1669 = !DILocation(line: 779, column: 12, scope: !1609)
!1670 = !DILocation(line: 779, column: 5, scope: !1609)
!1671 = !DILocation(line: 780, column: 1, scope: !1609)
!1672 = distinct !DISubprogram(name: "prv_dump_client", scope: !3, file: !3, line: 110, type: !1673, isLocal: true, isDefinition: true, scopeLine: 111, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{null, !123}
!1675 = !DILocalVariable(name: "targetP", arg: 1, scope: !1672, file: !3, line: 110, type: !123)
!1676 = !DILocation(line: 110, column: 46, scope: !1672)
!1677 = !DILocalVariable(name: "objectP", scope: !1672, file: !3, line: 112, type: !145)
!1678 = !DILocation(line: 112, column: 29, scope: !1672)
!1679 = !DILocation(line: 114, column: 13, scope: !1672)
!1680 = !DILocation(line: 114, column: 40, scope: !1672)
!1681 = !DILocation(line: 114, column: 49, scope: !1672)
!1682 = !DILocation(line: 114, column: 5, scope: !1672)
!1683 = !DILocation(line: 115, column: 13, scope: !1672)
!1684 = !DILocation(line: 115, column: 43, scope: !1672)
!1685 = !DILocation(line: 115, column: 52, scope: !1672)
!1686 = !DILocation(line: 115, column: 5, scope: !1672)
!1687 = !DILocation(line: 116, column: 13, scope: !1672)
!1688 = !DILocation(line: 116, column: 63, scope: !1672)
!1689 = !DILocation(line: 116, column: 72, scope: !1672)
!1690 = !DILocation(line: 116, column: 46, scope: !1672)
!1691 = !DILocation(line: 116, column: 5, scope: !1672)
!1692 = !DILocation(line: 117, column: 9, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 117, column: 9)
!1694 = !DILocation(line: 117, column: 18, scope: !1693)
!1695 = !DILocation(line: 117, column: 9, scope: !1672)
!1696 = !DILocation(line: 117, column: 34, scope: !1693)
!1697 = !DILocation(line: 117, column: 66, scope: !1693)
!1698 = !DILocation(line: 117, column: 75, scope: !1693)
!1699 = !DILocation(line: 117, column: 26, scope: !1693)
!1700 = !DILocation(line: 118, column: 9, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 118, column: 9)
!1702 = !DILocation(line: 118, column: 18, scope: !1701)
!1703 = !DILocation(line: 118, column: 9, scope: !1672)
!1704 = !DILocation(line: 118, column: 35, scope: !1701)
!1705 = !DILocation(line: 118, column: 77, scope: !1701)
!1706 = !DILocation(line: 118, column: 86, scope: !1701)
!1707 = !DILocation(line: 118, column: 27, scope: !1701)
!1708 = !DILocation(line: 119, column: 13, scope: !1672)
!1709 = !DILocation(line: 119, column: 47, scope: !1672)
!1710 = !DILocation(line: 119, column: 56, scope: !1672)
!1711 = !DILocation(line: 119, column: 5, scope: !1672)
!1712 = !DILocation(line: 120, column: 13, scope: !1672)
!1713 = !DILocation(line: 120, column: 5, scope: !1672)
!1714 = !DILocation(line: 121, column: 20, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 121, column: 5)
!1716 = !DILocation(line: 121, column: 29, scope: !1715)
!1717 = !DILocation(line: 121, column: 18, scope: !1715)
!1718 = !DILocation(line: 121, column: 10, scope: !1715)
!1719 = !DILocation(line: 121, column: 41, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1715, file: !3, line: 121, column: 5)
!1721 = !DILocation(line: 121, column: 49, scope: !1720)
!1722 = !DILocation(line: 121, column: 5, scope: !1715)
!1723 = !DILocation(line: 123, column: 13, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1725, file: !3, line: 123, column: 13)
!1725 = distinct !DILexicalBlock(scope: !1720, file: !3, line: 122, column: 5)
!1726 = !DILocation(line: 123, column: 22, scope: !1724)
!1727 = !DILocation(line: 123, column: 35, scope: !1724)
!1728 = !DILocation(line: 123, column: 13, scope: !1725)
!1729 = !DILocation(line: 125, column: 21, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 124, column: 9)
!1731 = !DILocation(line: 125, column: 38, scope: !1730)
!1732 = !DILocation(line: 125, column: 47, scope: !1730)
!1733 = !DILocation(line: 125, column: 13, scope: !1730)
!1734 = !DILocation(line: 126, column: 9, scope: !1730)
!1735 = !DILocalVariable(name: "instanceP", scope: !1736, file: !3, line: 129, type: !153)
!1736 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 128, column: 9)
!1737 = !DILocation(line: 129, column: 28, scope: !1736)
!1738 = !DILocation(line: 131, column: 30, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1736, file: !3, line: 131, column: 13)
!1740 = !DILocation(line: 131, column: 39, scope: !1739)
!1741 = !DILocation(line: 131, column: 28, scope: !1739)
!1742 = !DILocation(line: 131, column: 18, scope: !1739)
!1743 = !DILocation(line: 131, column: 53, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1739, file: !3, line: 131, column: 13)
!1745 = !DILocation(line: 131, column: 63, scope: !1744)
!1746 = !DILocation(line: 131, column: 13, scope: !1739)
!1747 = !DILocation(line: 133, column: 25, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1744, file: !3, line: 132, column: 13)
!1749 = !DILocation(line: 133, column: 45, scope: !1748)
!1750 = !DILocation(line: 133, column: 54, scope: !1748)
!1751 = !DILocation(line: 133, column: 58, scope: !1748)
!1752 = !DILocation(line: 133, column: 69, scope: !1748)
!1753 = !DILocation(line: 133, column: 17, scope: !1748)
!1754 = !DILocation(line: 134, column: 13, scope: !1748)
!1755 = !DILocation(line: 131, column: 85, scope: !1744)
!1756 = !DILocation(line: 131, column: 96, scope: !1744)
!1757 = !DILocation(line: 131, column: 83, scope: !1744)
!1758 = !DILocation(line: 131, column: 13, scope: !1744)
!1759 = distinct !{!1759, !1746, !1760}
!1760 = !DILocation(line: 134, column: 13, scope: !1739)
!1761 = !DILocation(line: 136, column: 5, scope: !1725)
!1762 = !DILocation(line: 121, column: 69, scope: !1720)
!1763 = !DILocation(line: 121, column: 78, scope: !1720)
!1764 = !DILocation(line: 121, column: 67, scope: !1720)
!1765 = !DILocation(line: 121, column: 5, scope: !1720)
!1766 = distinct !{!1766, !1722, !1767}
!1767 = !DILocation(line: 136, column: 5, scope: !1715)
!1768 = !DILocation(line: 137, column: 13, scope: !1672)
!1769 = !DILocation(line: 137, column: 5, scope: !1672)
!1770 = !DILocation(line: 138, column: 1, scope: !1672)
!1771 = distinct !DISubprogram(name: "prv_dump_binding", scope: !3, file: !3, line: 87, type: !1772, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!117, !132}
!1774 = !DILocalVariable(name: "binding", arg: 1, scope: !1771, file: !3, line: 87, type: !132)
!1775 = !DILocation(line: 87, column: 48, scope: !1771)
!1776 = !DILocation(line: 89, column: 13, scope: !1771)
!1777 = !DILocation(line: 89, column: 5, scope: !1771)
!1778 = !DILocation(line: 92, column: 9, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1771, file: !3, line: 90, column: 5)
!1780 = !DILocation(line: 94, column: 9, scope: !1779)
!1781 = !DILocation(line: 96, column: 9, scope: !1779)
!1782 = !DILocation(line: 98, column: 9, scope: !1779)
!1783 = !DILocation(line: 100, column: 9, scope: !1779)
!1784 = !DILocation(line: 102, column: 9, scope: !1779)
!1785 = !DILocation(line: 104, column: 9, scope: !1779)
!1786 = !DILocation(line: 106, column: 9, scope: !1779)
!1787 = !DILocation(line: 108, column: 1, scope: !1771)
!1788 = distinct !DISubprogram(name: "prv_output_clients", scope: !3, file: !3, line: 140, type: !1270, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1789 = !DILocalVariable(name: "buffer", arg: 1, scope: !1788, file: !3, line: 140, type: !117)
!1790 = !DILocation(line: 140, column: 39, scope: !1788)
!1791 = !DILocalVariable(name: "user_data", arg: 2, scope: !1788, file: !3, line: 141, type: !54)
!1792 = !DILocation(line: 141, column: 39, scope: !1788)
!1793 = !DILocalVariable(name: "lwm2mH", scope: !1788, file: !3, line: 143, type: !118)
!1794 = !DILocation(line: 143, column: 23, scope: !1788)
!1795 = !DILocation(line: 143, column: 52, scope: !1788)
!1796 = !DILocation(line: 143, column: 32, scope: !1788)
!1797 = !DILocalVariable(name: "targetP", scope: !1788, file: !3, line: 144, type: !123)
!1798 = !DILocation(line: 144, column: 22, scope: !1788)
!1799 = !DILocation(line: 146, column: 15, scope: !1788)
!1800 = !DILocation(line: 146, column: 23, scope: !1788)
!1801 = !DILocation(line: 146, column: 13, scope: !1788)
!1802 = !DILocation(line: 148, column: 9, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1788, file: !3, line: 148, column: 9)
!1804 = !DILocation(line: 148, column: 17, scope: !1803)
!1805 = !DILocation(line: 148, column: 9, scope: !1788)
!1806 = !DILocation(line: 150, column: 17, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1803, file: !3, line: 149, column: 5)
!1808 = !DILocation(line: 150, column: 9, scope: !1807)
!1809 = !DILocation(line: 151, column: 9, scope: !1807)
!1810 = !DILocation(line: 154, column: 20, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1788, file: !3, line: 154, column: 5)
!1812 = !DILocation(line: 154, column: 28, scope: !1811)
!1813 = !DILocation(line: 154, column: 18, scope: !1811)
!1814 = !DILocation(line: 154, column: 10, scope: !1811)
!1815 = !DILocation(line: 154, column: 41, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1811, file: !3, line: 154, column: 5)
!1817 = !DILocation(line: 154, column: 49, scope: !1816)
!1818 = !DILocation(line: 154, column: 5, scope: !1811)
!1819 = !DILocation(line: 156, column: 25, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 155, column: 5)
!1821 = !DILocation(line: 156, column: 9, scope: !1820)
!1822 = !DILocation(line: 157, column: 5, scope: !1820)
!1823 = !DILocation(line: 154, column: 69, scope: !1816)
!1824 = !DILocation(line: 154, column: 78, scope: !1816)
!1825 = !DILocation(line: 154, column: 67, scope: !1816)
!1826 = !DILocation(line: 154, column: 5, scope: !1816)
!1827 = distinct !{!1827, !1818, !1828}
!1828 = !DILocation(line: 157, column: 5, scope: !1811)
!1829 = !DILocation(line: 158, column: 1, scope: !1788)
!1830 = distinct !DISubprogram(name: "prv_read_client", scope: !3, file: !3, line: 231, type: !1270, isLocal: true, isDefinition: true, scopeLine: 233, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1831 = !DILocalVariable(name: "buffer", arg: 1, scope: !1830, file: !3, line: 231, type: !117)
!1832 = !DILocation(line: 231, column: 36, scope: !1830)
!1833 = !DILocalVariable(name: "user_data", arg: 2, scope: !1830, file: !3, line: 232, type: !54)
!1834 = !DILocation(line: 232, column: 36, scope: !1830)
!1835 = !DILocalVariable(name: "lwm2mH", scope: !1830, file: !3, line: 234, type: !118)
!1836 = !DILocation(line: 234, column: 23, scope: !1830)
!1837 = !DILocation(line: 234, column: 52, scope: !1830)
!1838 = !DILocation(line: 234, column: 32, scope: !1830)
!1839 = !DILocalVariable(name: "clientId", scope: !1830, file: !3, line: 235, type: !79)
!1840 = !DILocation(line: 235, column: 14, scope: !1830)
!1841 = !DILocalVariable(name: "uri", scope: !1830, file: !3, line: 236, type: !170)
!1842 = !DILocation(line: 236, column: 17, scope: !1830)
!1843 = !DILocalVariable(name: "end", scope: !1830, file: !3, line: 237, type: !117)
!1844 = !DILocation(line: 237, column: 11, scope: !1830)
!1845 = !DILocalVariable(name: "result", scope: !1830, file: !3, line: 238, type: !58)
!1846 = !DILocation(line: 238, column: 9, scope: !1830)
!1847 = !DILocation(line: 240, column: 26, scope: !1830)
!1848 = !DILocation(line: 240, column: 14, scope: !1830)
!1849 = !DILocation(line: 240, column: 12, scope: !1830)
!1850 = !DILocation(line: 241, column: 9, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 241, column: 9)
!1852 = !DILocation(line: 241, column: 16, scope: !1851)
!1853 = !DILocation(line: 241, column: 9, scope: !1830)
!1854 = !DILocation(line: 241, column: 22, scope: !1851)
!1855 = !DILocation(line: 243, column: 27, scope: !1830)
!1856 = !DILocation(line: 243, column: 14, scope: !1830)
!1857 = !DILocation(line: 243, column: 12, scope: !1830)
!1858 = !DILocation(line: 244, column: 9, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 244, column: 9)
!1860 = !DILocation(line: 244, column: 19, scope: !1859)
!1861 = !DILocation(line: 244, column: 9, scope: !1830)
!1862 = !DILocation(line: 244, column: 25, scope: !1859)
!1863 = !DILocation(line: 246, column: 32, scope: !1830)
!1864 = !DILocation(line: 246, column: 40, scope: !1830)
!1865 = !DILocation(line: 246, column: 46, scope: !1830)
!1866 = !DILocation(line: 246, column: 44, scope: !1830)
!1867 = !DILocation(line: 246, column: 14, scope: !1830)
!1868 = !DILocation(line: 246, column: 12, scope: !1830)
!1869 = !DILocation(line: 247, column: 9, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 247, column: 9)
!1871 = !DILocation(line: 247, column: 16, scope: !1870)
!1872 = !DILocation(line: 247, column: 9, scope: !1830)
!1873 = !DILocation(line: 247, column: 22, scope: !1870)
!1874 = !DILocation(line: 249, column: 28, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 249, column: 9)
!1876 = !DILocation(line: 249, column: 10, scope: !1875)
!1877 = !DILocation(line: 249, column: 9, scope: !1830)
!1878 = !DILocation(line: 249, column: 34, scope: !1875)
!1879 = !DILocation(line: 251, column: 28, scope: !1830)
!1880 = !DILocation(line: 251, column: 36, scope: !1830)
!1881 = !DILocation(line: 251, column: 14, scope: !1830)
!1882 = !DILocation(line: 251, column: 12, scope: !1830)
!1883 = !DILocation(line: 253, column: 9, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 253, column: 9)
!1885 = !DILocation(line: 253, column: 16, scope: !1884)
!1886 = !DILocation(line: 253, column: 9, scope: !1830)
!1887 = !DILocation(line: 255, column: 17, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 254, column: 5)
!1889 = !DILocation(line: 255, column: 9, scope: !1888)
!1890 = !DILocation(line: 256, column: 5, scope: !1888)
!1891 = !DILocation(line: 259, column: 25, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 258, column: 5)
!1893 = !DILocation(line: 259, column: 9, scope: !1892)
!1894 = !DILocation(line: 261, column: 5, scope: !1830)
!1895 = !DILocation(line: 264, column: 13, scope: !1830)
!1896 = !DILocation(line: 264, column: 5, scope: !1830)
!1897 = !DILocation(line: 265, column: 1, scope: !1830)
!1898 = distinct !DISubprogram(name: "prv_discover_client", scope: !3, file: !3, line: 267, type: !1270, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1899 = !DILocalVariable(name: "buffer", arg: 1, scope: !1898, file: !3, line: 267, type: !117)
!1900 = !DILocation(line: 267, column: 40, scope: !1898)
!1901 = !DILocalVariable(name: "user_data", arg: 2, scope: !1898, file: !3, line: 268, type: !54)
!1902 = !DILocation(line: 268, column: 40, scope: !1898)
!1903 = !DILocalVariable(name: "lwm2mH", scope: !1898, file: !3, line: 270, type: !118)
!1904 = !DILocation(line: 270, column: 23, scope: !1898)
!1905 = !DILocation(line: 270, column: 52, scope: !1898)
!1906 = !DILocation(line: 270, column: 32, scope: !1898)
!1907 = !DILocalVariable(name: "clientId", scope: !1898, file: !3, line: 271, type: !79)
!1908 = !DILocation(line: 271, column: 14, scope: !1898)
!1909 = !DILocalVariable(name: "uri", scope: !1898, file: !3, line: 272, type: !170)
!1910 = !DILocation(line: 272, column: 17, scope: !1898)
!1911 = !DILocalVariable(name: "end", scope: !1898, file: !3, line: 273, type: !117)
!1912 = !DILocation(line: 273, column: 11, scope: !1898)
!1913 = !DILocalVariable(name: "result", scope: !1898, file: !3, line: 274, type: !58)
!1914 = !DILocation(line: 274, column: 9, scope: !1898)
!1915 = !DILocation(line: 276, column: 26, scope: !1898)
!1916 = !DILocation(line: 276, column: 14, scope: !1898)
!1917 = !DILocation(line: 276, column: 12, scope: !1898)
!1918 = !DILocation(line: 277, column: 9, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 277, column: 9)
!1920 = !DILocation(line: 277, column: 16, scope: !1919)
!1921 = !DILocation(line: 277, column: 9, scope: !1898)
!1922 = !DILocation(line: 277, column: 22, scope: !1919)
!1923 = !DILocation(line: 279, column: 27, scope: !1898)
!1924 = !DILocation(line: 279, column: 14, scope: !1898)
!1925 = !DILocation(line: 279, column: 12, scope: !1898)
!1926 = !DILocation(line: 280, column: 9, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 280, column: 9)
!1928 = !DILocation(line: 280, column: 19, scope: !1927)
!1929 = !DILocation(line: 280, column: 9, scope: !1898)
!1930 = !DILocation(line: 280, column: 25, scope: !1927)
!1931 = !DILocation(line: 282, column: 32, scope: !1898)
!1932 = !DILocation(line: 282, column: 40, scope: !1898)
!1933 = !DILocation(line: 282, column: 46, scope: !1898)
!1934 = !DILocation(line: 282, column: 44, scope: !1898)
!1935 = !DILocation(line: 282, column: 14, scope: !1898)
!1936 = !DILocation(line: 282, column: 12, scope: !1898)
!1937 = !DILocation(line: 283, column: 9, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 283, column: 9)
!1939 = !DILocation(line: 283, column: 16, scope: !1938)
!1940 = !DILocation(line: 283, column: 9, scope: !1898)
!1941 = !DILocation(line: 283, column: 22, scope: !1938)
!1942 = !DILocation(line: 285, column: 28, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 285, column: 9)
!1944 = !DILocation(line: 285, column: 10, scope: !1943)
!1945 = !DILocation(line: 285, column: 9, scope: !1898)
!1946 = !DILocation(line: 285, column: 34, scope: !1943)
!1947 = !DILocation(line: 287, column: 32, scope: !1898)
!1948 = !DILocation(line: 287, column: 40, scope: !1898)
!1949 = !DILocation(line: 287, column: 14, scope: !1898)
!1950 = !DILocation(line: 287, column: 12, scope: !1898)
!1951 = !DILocation(line: 289, column: 9, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 289, column: 9)
!1953 = !DILocation(line: 289, column: 16, scope: !1952)
!1954 = !DILocation(line: 289, column: 9, scope: !1898)
!1955 = !DILocation(line: 291, column: 17, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 290, column: 5)
!1957 = !DILocation(line: 291, column: 9, scope: !1956)
!1958 = !DILocation(line: 292, column: 5, scope: !1956)
!1959 = !DILocation(line: 295, column: 25, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 294, column: 5)
!1961 = !DILocation(line: 295, column: 9, scope: !1960)
!1962 = !DILocation(line: 297, column: 5, scope: !1898)
!1963 = !DILocation(line: 300, column: 13, scope: !1898)
!1964 = !DILocation(line: 300, column: 5, scope: !1898)
!1965 = !DILocation(line: 301, column: 1, scope: !1898)
!1966 = distinct !DISubprogram(name: "prv_write_client", scope: !3, file: !3, line: 303, type: !1270, isLocal: true, isDefinition: true, scopeLine: 305, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!1967 = !DILocalVariable(name: "buffer", arg: 1, scope: !1966, file: !3, line: 303, type: !117)
!1968 = !DILocation(line: 303, column: 37, scope: !1966)
!1969 = !DILocalVariable(name: "user_data", arg: 2, scope: !1966, file: !3, line: 304, type: !54)
!1970 = !DILocation(line: 304, column: 37, scope: !1966)
!1971 = !DILocalVariable(name: "lwm2mH", scope: !1966, file: !3, line: 306, type: !118)
!1972 = !DILocation(line: 306, column: 23, scope: !1966)
!1973 = !DILocation(line: 306, column: 52, scope: !1966)
!1974 = !DILocation(line: 306, column: 32, scope: !1966)
!1975 = !DILocalVariable(name: "clientId", scope: !1966, file: !3, line: 307, type: !79)
!1976 = !DILocation(line: 307, column: 14, scope: !1966)
!1977 = !DILocalVariable(name: "uri", scope: !1966, file: !3, line: 308, type: !170)
!1978 = !DILocation(line: 308, column: 17, scope: !1966)
!1979 = !DILocalVariable(name: "end", scope: !1966, file: !3, line: 309, type: !117)
!1980 = !DILocation(line: 309, column: 12, scope: !1966)
!1981 = !DILocalVariable(name: "result", scope: !1966, file: !3, line: 310, type: !58)
!1982 = !DILocation(line: 310, column: 9, scope: !1966)
!1983 = !DILocation(line: 312, column: 26, scope: !1966)
!1984 = !DILocation(line: 312, column: 14, scope: !1966)
!1985 = !DILocation(line: 312, column: 12, scope: !1966)
!1986 = !DILocation(line: 313, column: 9, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 313, column: 9)
!1988 = !DILocation(line: 313, column: 16, scope: !1987)
!1989 = !DILocation(line: 313, column: 9, scope: !1966)
!1990 = !DILocation(line: 313, column: 22, scope: !1987)
!1991 = !DILocation(line: 315, column: 27, scope: !1966)
!1992 = !DILocation(line: 315, column: 14, scope: !1966)
!1993 = !DILocation(line: 315, column: 12, scope: !1966)
!1994 = !DILocation(line: 316, column: 9, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 316, column: 9)
!1996 = !DILocation(line: 316, column: 19, scope: !1995)
!1997 = !DILocation(line: 316, column: 9, scope: !1966)
!1998 = !DILocation(line: 316, column: 25, scope: !1995)
!1999 = !DILocation(line: 318, column: 32, scope: !1966)
!2000 = !DILocation(line: 318, column: 40, scope: !1966)
!2001 = !DILocation(line: 318, column: 46, scope: !1966)
!2002 = !DILocation(line: 318, column: 44, scope: !1966)
!2003 = !DILocation(line: 318, column: 14, scope: !1966)
!2004 = !DILocation(line: 318, column: 12, scope: !1966)
!2005 = !DILocation(line: 319, column: 9, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 319, column: 9)
!2007 = !DILocation(line: 319, column: 16, scope: !2006)
!2008 = !DILocation(line: 319, column: 9, scope: !1966)
!2009 = !DILocation(line: 319, column: 22, scope: !2006)
!2010 = !DILocation(line: 321, column: 27, scope: !1966)
!2011 = !DILocation(line: 321, column: 14, scope: !1966)
!2012 = !DILocation(line: 321, column: 12, scope: !1966)
!2013 = !DILocation(line: 322, column: 9, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 322, column: 9)
!2015 = !DILocation(line: 322, column: 19, scope: !2014)
!2016 = !DILocation(line: 322, column: 9, scope: !1966)
!2017 = !DILocation(line: 322, column: 25, scope: !2014)
!2018 = !DILocation(line: 324, column: 28, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 324, column: 9)
!2020 = !DILocation(line: 324, column: 10, scope: !2019)
!2021 = !DILocation(line: 324, column: 9, scope: !1966)
!2022 = !DILocation(line: 324, column: 34, scope: !2019)
!2023 = !DILocation(line: 326, column: 29, scope: !1966)
!2024 = !DILocation(line: 326, column: 37, scope: !1966)
!2025 = !DILocation(line: 326, column: 84, scope: !1966)
!2026 = !DILocation(line: 326, column: 92, scope: !1966)
!2027 = !DILocation(line: 326, column: 98, scope: !1966)
!2028 = !DILocation(line: 326, column: 96, scope: !1966)
!2029 = !DILocation(line: 326, column: 14, scope: !1966)
!2030 = !DILocation(line: 326, column: 12, scope: !1966)
!2031 = !DILocation(line: 328, column: 9, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 328, column: 9)
!2033 = !DILocation(line: 328, column: 16, scope: !2032)
!2034 = !DILocation(line: 328, column: 9, scope: !1966)
!2035 = !DILocation(line: 330, column: 17, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2032, file: !3, line: 329, column: 5)
!2037 = !DILocation(line: 330, column: 9, scope: !2036)
!2038 = !DILocation(line: 331, column: 5, scope: !2036)
!2039 = !DILocation(line: 334, column: 25, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2032, file: !3, line: 333, column: 5)
!2041 = !DILocation(line: 334, column: 9, scope: !2040)
!2042 = !DILocation(line: 336, column: 5, scope: !1966)
!2043 = !DILocation(line: 339, column: 13, scope: !1966)
!2044 = !DILocation(line: 339, column: 5, scope: !1966)
!2045 = !DILocation(line: 340, column: 1, scope: !1966)
!2046 = distinct !DISubprogram(name: "prv_time_client", scope: !3, file: !3, line: 343, type: !1270, isLocal: true, isDefinition: true, scopeLine: 345, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2047 = !DILocalVariable(name: "buffer", arg: 1, scope: !2046, file: !3, line: 343, type: !117)
!2048 = !DILocation(line: 343, column: 36, scope: !2046)
!2049 = !DILocalVariable(name: "user_data", arg: 2, scope: !2046, file: !3, line: 344, type: !54)
!2050 = !DILocation(line: 344, column: 36, scope: !2046)
!2051 = !DILocalVariable(name: "lwm2mH", scope: !2046, file: !3, line: 346, type: !118)
!2052 = !DILocation(line: 346, column: 23, scope: !2046)
!2053 = !DILocation(line: 346, column: 52, scope: !2046)
!2054 = !DILocation(line: 346, column: 32, scope: !2046)
!2055 = !DILocalVariable(name: "clientId", scope: !2046, file: !3, line: 347, type: !79)
!2056 = !DILocation(line: 347, column: 14, scope: !2046)
!2057 = !DILocalVariable(name: "uri", scope: !2046, file: !3, line: 348, type: !170)
!2058 = !DILocation(line: 348, column: 17, scope: !2046)
!2059 = !DILocalVariable(name: "end", scope: !2046, file: !3, line: 349, type: !117)
!2060 = !DILocation(line: 349, column: 12, scope: !2046)
!2061 = !DILocalVariable(name: "result", scope: !2046, file: !3, line: 350, type: !58)
!2062 = !DILocation(line: 350, column: 9, scope: !2046)
!2063 = !DILocalVariable(name: "attr", scope: !2046, file: !3, line: 351, type: !2064)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_attributes_t", file: !6, line: 526, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 517, size: 320, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "toSet", scope: !2065, file: !6, line: 519, baseType: !107, size: 8)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "toClear", scope: !2065, file: !6, line: 520, baseType: !107, size: 8, offset: 8)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "minPeriod", scope: !2065, file: !6, line: 521, baseType: !86, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "maxPeriod", scope: !2065, file: !6, line: 522, baseType: !86, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "greaterThan", scope: !2065, file: !6, line: 523, baseType: !253, size: 64, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "lessThan", scope: !2065, file: !6, line: 524, baseType: !253, size: 64, offset: 192)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2065, file: !6, line: 525, baseType: !253, size: 64, offset: 256)
!2074 = !DILocation(line: 351, column: 24, scope: !2046)
!2075 = !DILocalVariable(name: "nb", scope: !2046, file: !3, line: 352, type: !58)
!2076 = !DILocation(line: 352, column: 9, scope: !2046)
!2077 = !DILocalVariable(name: "value", scope: !2046, file: !3, line: 353, type: !58)
!2078 = !DILocation(line: 353, column: 9, scope: !2046)
!2079 = !DILocation(line: 355, column: 26, scope: !2046)
!2080 = !DILocation(line: 355, column: 14, scope: !2046)
!2081 = !DILocation(line: 355, column: 12, scope: !2046)
!2082 = !DILocation(line: 356, column: 9, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 356, column: 9)
!2084 = !DILocation(line: 356, column: 16, scope: !2083)
!2085 = !DILocation(line: 356, column: 9, scope: !2046)
!2086 = !DILocation(line: 356, column: 22, scope: !2083)
!2087 = !DILocation(line: 358, column: 27, scope: !2046)
!2088 = !DILocation(line: 358, column: 14, scope: !2046)
!2089 = !DILocation(line: 358, column: 12, scope: !2046)
!2090 = !DILocation(line: 359, column: 9, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 359, column: 9)
!2092 = !DILocation(line: 359, column: 19, scope: !2091)
!2093 = !DILocation(line: 359, column: 9, scope: !2046)
!2094 = !DILocation(line: 359, column: 25, scope: !2091)
!2095 = !DILocation(line: 361, column: 32, scope: !2046)
!2096 = !DILocation(line: 361, column: 40, scope: !2046)
!2097 = !DILocation(line: 361, column: 46, scope: !2046)
!2098 = !DILocation(line: 361, column: 44, scope: !2046)
!2099 = !DILocation(line: 361, column: 14, scope: !2046)
!2100 = !DILocation(line: 361, column: 12, scope: !2046)
!2101 = !DILocation(line: 362, column: 9, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 362, column: 9)
!2103 = !DILocation(line: 362, column: 16, scope: !2102)
!2104 = !DILocation(line: 362, column: 9, scope: !2046)
!2105 = !DILocation(line: 362, column: 22, scope: !2102)
!2106 = !DILocation(line: 364, column: 5, scope: !2046)
!2107 = !DILocation(line: 365, column: 10, scope: !2046)
!2108 = !DILocation(line: 365, column: 16, scope: !2046)
!2109 = !DILocation(line: 367, column: 27, scope: !2046)
!2110 = !DILocation(line: 367, column: 14, scope: !2046)
!2111 = !DILocation(line: 367, column: 12, scope: !2046)
!2112 = !DILocation(line: 368, column: 9, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 368, column: 9)
!2114 = !DILocation(line: 368, column: 19, scope: !2113)
!2115 = !DILocation(line: 368, column: 9, scope: !2046)
!2116 = !DILocation(line: 368, column: 25, scope: !2113)
!2117 = !DILocation(line: 370, column: 17, scope: !2046)
!2118 = !DILocation(line: 370, column: 10, scope: !2046)
!2119 = !DILocation(line: 370, column: 8, scope: !2046)
!2120 = !DILocation(line: 371, column: 9, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 371, column: 9)
!2122 = !DILocation(line: 371, column: 12, scope: !2121)
!2123 = !DILocation(line: 371, column: 9, scope: !2046)
!2124 = !DILocation(line: 371, column: 18, scope: !2121)
!2125 = !DILocation(line: 372, column: 9, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 372, column: 9)
!2127 = !DILocation(line: 372, column: 15, scope: !2126)
!2128 = !DILocation(line: 372, column: 9, scope: !2046)
!2129 = !DILocation(line: 372, column: 20, scope: !2126)
!2130 = !DILocation(line: 373, column: 22, scope: !2046)
!2131 = !DILocation(line: 373, column: 10, scope: !2046)
!2132 = !DILocation(line: 373, column: 20, scope: !2046)
!2133 = !DILocation(line: 375, column: 27, scope: !2046)
!2134 = !DILocation(line: 375, column: 14, scope: !2046)
!2135 = !DILocation(line: 375, column: 12, scope: !2046)
!2136 = !DILocation(line: 376, column: 9, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 376, column: 9)
!2138 = !DILocation(line: 376, column: 19, scope: !2137)
!2139 = !DILocation(line: 376, column: 9, scope: !2046)
!2140 = !DILocation(line: 376, column: 25, scope: !2137)
!2141 = !DILocation(line: 378, column: 17, scope: !2046)
!2142 = !DILocation(line: 378, column: 10, scope: !2046)
!2143 = !DILocation(line: 378, column: 8, scope: !2046)
!2144 = !DILocation(line: 379, column: 9, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 379, column: 9)
!2146 = !DILocation(line: 379, column: 12, scope: !2145)
!2147 = !DILocation(line: 379, column: 9, scope: !2046)
!2148 = !DILocation(line: 379, column: 18, scope: !2145)
!2149 = !DILocation(line: 380, column: 9, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 380, column: 9)
!2151 = !DILocation(line: 380, column: 15, scope: !2150)
!2152 = !DILocation(line: 380, column: 9, scope: !2046)
!2153 = !DILocation(line: 380, column: 20, scope: !2150)
!2154 = !DILocation(line: 381, column: 22, scope: !2046)
!2155 = !DILocation(line: 381, column: 10, scope: !2046)
!2156 = !DILocation(line: 381, column: 20, scope: !2046)
!2157 = !DILocation(line: 383, column: 28, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 383, column: 9)
!2159 = !DILocation(line: 383, column: 10, scope: !2158)
!2160 = !DILocation(line: 383, column: 9, scope: !2046)
!2161 = !DILocation(line: 383, column: 34, scope: !2158)
!2162 = !DILocation(line: 385, column: 40, scope: !2046)
!2163 = !DILocation(line: 385, column: 48, scope: !2046)
!2164 = !DILocation(line: 385, column: 14, scope: !2046)
!2165 = !DILocation(line: 385, column: 12, scope: !2046)
!2166 = !DILocation(line: 387, column: 9, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 387, column: 9)
!2168 = !DILocation(line: 387, column: 16, scope: !2167)
!2169 = !DILocation(line: 387, column: 9, scope: !2046)
!2170 = !DILocation(line: 389, column: 17, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 388, column: 5)
!2172 = !DILocation(line: 389, column: 9, scope: !2171)
!2173 = !DILocation(line: 390, column: 5, scope: !2171)
!2174 = !DILocation(line: 393, column: 25, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 392, column: 5)
!2176 = !DILocation(line: 393, column: 9, scope: !2175)
!2177 = !DILocation(line: 395, column: 5, scope: !2046)
!2178 = !DILocation(line: 398, column: 13, scope: !2046)
!2179 = !DILocation(line: 398, column: 5, scope: !2046)
!2180 = !DILocation(line: 399, column: 1, scope: !2046)
!2181 = distinct !DISubprogram(name: "prv_attr_client", scope: !3, file: !3, line: 402, type: !1270, isLocal: true, isDefinition: true, scopeLine: 404, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2182 = !DILocalVariable(name: "buffer", arg: 1, scope: !2181, file: !3, line: 402, type: !117)
!2183 = !DILocation(line: 402, column: 36, scope: !2181)
!2184 = !DILocalVariable(name: "user_data", arg: 2, scope: !2181, file: !3, line: 403, type: !54)
!2185 = !DILocation(line: 403, column: 36, scope: !2181)
!2186 = !DILocalVariable(name: "lwm2mH", scope: !2181, file: !3, line: 405, type: !118)
!2187 = !DILocation(line: 405, column: 23, scope: !2181)
!2188 = !DILocation(line: 405, column: 52, scope: !2181)
!2189 = !DILocation(line: 405, column: 32, scope: !2181)
!2190 = !DILocalVariable(name: "clientId", scope: !2181, file: !3, line: 406, type: !79)
!2191 = !DILocation(line: 406, column: 14, scope: !2181)
!2192 = !DILocalVariable(name: "uri", scope: !2181, file: !3, line: 407, type: !170)
!2193 = !DILocation(line: 407, column: 17, scope: !2181)
!2194 = !DILocalVariable(name: "end", scope: !2181, file: !3, line: 408, type: !117)
!2195 = !DILocation(line: 408, column: 12, scope: !2181)
!2196 = !DILocalVariable(name: "result", scope: !2181, file: !3, line: 409, type: !58)
!2197 = !DILocation(line: 409, column: 9, scope: !2181)
!2198 = !DILocalVariable(name: "attr", scope: !2181, file: !3, line: 410, type: !2064)
!2199 = !DILocation(line: 410, column: 24, scope: !2181)
!2200 = !DILocalVariable(name: "nb", scope: !2181, file: !3, line: 411, type: !58)
!2201 = !DILocation(line: 411, column: 9, scope: !2181)
!2202 = !DILocalVariable(name: "value", scope: !2181, file: !3, line: 412, type: !679)
!2203 = !DILocation(line: 412, column: 11, scope: !2181)
!2204 = !DILocation(line: 414, column: 26, scope: !2181)
!2205 = !DILocation(line: 414, column: 14, scope: !2181)
!2206 = !DILocation(line: 414, column: 12, scope: !2181)
!2207 = !DILocation(line: 415, column: 9, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 415, column: 9)
!2209 = !DILocation(line: 415, column: 16, scope: !2208)
!2210 = !DILocation(line: 415, column: 9, scope: !2181)
!2211 = !DILocation(line: 415, column: 22, scope: !2208)
!2212 = !DILocation(line: 417, column: 27, scope: !2181)
!2213 = !DILocation(line: 417, column: 14, scope: !2181)
!2214 = !DILocation(line: 417, column: 12, scope: !2181)
!2215 = !DILocation(line: 418, column: 9, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 418, column: 9)
!2217 = !DILocation(line: 418, column: 19, scope: !2216)
!2218 = !DILocation(line: 418, column: 9, scope: !2181)
!2219 = !DILocation(line: 418, column: 25, scope: !2216)
!2220 = !DILocation(line: 420, column: 32, scope: !2181)
!2221 = !DILocation(line: 420, column: 40, scope: !2181)
!2222 = !DILocation(line: 420, column: 46, scope: !2181)
!2223 = !DILocation(line: 420, column: 44, scope: !2181)
!2224 = !DILocation(line: 420, column: 14, scope: !2181)
!2225 = !DILocation(line: 420, column: 12, scope: !2181)
!2226 = !DILocation(line: 421, column: 9, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 421, column: 9)
!2228 = !DILocation(line: 421, column: 16, scope: !2227)
!2229 = !DILocation(line: 421, column: 9, scope: !2181)
!2230 = !DILocation(line: 421, column: 22, scope: !2227)
!2231 = !DILocation(line: 423, column: 5, scope: !2181)
!2232 = !DILocation(line: 424, column: 10, scope: !2181)
!2233 = !DILocation(line: 424, column: 16, scope: !2181)
!2234 = !DILocation(line: 426, column: 27, scope: !2181)
!2235 = !DILocation(line: 426, column: 14, scope: !2181)
!2236 = !DILocation(line: 426, column: 12, scope: !2181)
!2237 = !DILocation(line: 427, column: 9, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 427, column: 9)
!2239 = !DILocation(line: 427, column: 19, scope: !2238)
!2240 = !DILocation(line: 427, column: 9, scope: !2181)
!2241 = !DILocation(line: 427, column: 25, scope: !2238)
!2242 = !DILocation(line: 429, column: 17, scope: !2181)
!2243 = !DILocation(line: 429, column: 10, scope: !2181)
!2244 = !DILocation(line: 429, column: 8, scope: !2181)
!2245 = !DILocation(line: 430, column: 9, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 430, column: 9)
!2247 = !DILocation(line: 430, column: 12, scope: !2246)
!2248 = !DILocation(line: 430, column: 9, scope: !2181)
!2249 = !DILocation(line: 430, column: 18, scope: !2246)
!2250 = !DILocation(line: 431, column: 21, scope: !2181)
!2251 = !DILocation(line: 431, column: 10, scope: !2181)
!2252 = !DILocation(line: 431, column: 19, scope: !2181)
!2253 = !DILocation(line: 433, column: 27, scope: !2181)
!2254 = !DILocation(line: 433, column: 14, scope: !2181)
!2255 = !DILocation(line: 433, column: 12, scope: !2181)
!2256 = !DILocation(line: 434, column: 9, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 434, column: 9)
!2258 = !DILocation(line: 434, column: 19, scope: !2257)
!2259 = !DILocation(line: 434, column: 9, scope: !2181)
!2260 = !DILocation(line: 434, column: 25, scope: !2257)
!2261 = !DILocation(line: 436, column: 17, scope: !2181)
!2262 = !DILocation(line: 436, column: 10, scope: !2181)
!2263 = !DILocation(line: 436, column: 8, scope: !2181)
!2264 = !DILocation(line: 437, column: 9, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 437, column: 9)
!2266 = !DILocation(line: 437, column: 12, scope: !2265)
!2267 = !DILocation(line: 437, column: 9, scope: !2181)
!2268 = !DILocation(line: 437, column: 18, scope: !2265)
!2269 = !DILocation(line: 438, column: 24, scope: !2181)
!2270 = !DILocation(line: 438, column: 10, scope: !2181)
!2271 = !DILocation(line: 438, column: 22, scope: !2181)
!2272 = !DILocation(line: 440, column: 27, scope: !2181)
!2273 = !DILocation(line: 440, column: 14, scope: !2181)
!2274 = !DILocation(line: 440, column: 12, scope: !2181)
!2275 = !DILocation(line: 441, column: 9, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 441, column: 9)
!2277 = !DILocation(line: 441, column: 19, scope: !2276)
!2278 = !DILocation(line: 441, column: 9, scope: !2181)
!2279 = !DILocation(line: 443, column: 21, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 442, column: 5)
!2281 = !DILocation(line: 443, column: 14, scope: !2280)
!2282 = !DILocation(line: 443, column: 12, scope: !2280)
!2283 = !DILocation(line: 444, column: 13, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 444, column: 13)
!2285 = !DILocation(line: 444, column: 16, scope: !2284)
!2286 = !DILocation(line: 444, column: 13, scope: !2280)
!2287 = !DILocation(line: 444, column: 22, scope: !2284)
!2288 = !DILocation(line: 445, column: 21, scope: !2280)
!2289 = !DILocation(line: 445, column: 14, scope: !2280)
!2290 = !DILocation(line: 445, column: 19, scope: !2280)
!2291 = !DILocation(line: 447, column: 14, scope: !2280)
!2292 = !DILocation(line: 447, column: 20, scope: !2280)
!2293 = !DILocation(line: 448, column: 5, scope: !2280)
!2294 = !DILocation(line: 450, column: 28, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 450, column: 9)
!2296 = !DILocation(line: 450, column: 10, scope: !2295)
!2297 = !DILocation(line: 450, column: 9, scope: !2181)
!2298 = !DILocation(line: 450, column: 34, scope: !2295)
!2299 = !DILocation(line: 452, column: 40, scope: !2181)
!2300 = !DILocation(line: 452, column: 48, scope: !2181)
!2301 = !DILocation(line: 452, column: 14, scope: !2181)
!2302 = !DILocation(line: 452, column: 12, scope: !2181)
!2303 = !DILocation(line: 454, column: 9, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 454, column: 9)
!2305 = !DILocation(line: 454, column: 16, scope: !2304)
!2306 = !DILocation(line: 454, column: 9, scope: !2181)
!2307 = !DILocation(line: 456, column: 17, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2304, file: !3, line: 455, column: 5)
!2309 = !DILocation(line: 456, column: 9, scope: !2308)
!2310 = !DILocation(line: 457, column: 5, scope: !2308)
!2311 = !DILocation(line: 460, column: 25, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2304, file: !3, line: 459, column: 5)
!2313 = !DILocation(line: 460, column: 9, scope: !2312)
!2314 = !DILocation(line: 462, column: 5, scope: !2181)
!2315 = !DILocation(line: 465, column: 13, scope: !2181)
!2316 = !DILocation(line: 465, column: 5, scope: !2181)
!2317 = !DILocation(line: 466, column: 1, scope: !2181)
!2318 = distinct !DISubprogram(name: "prv_clear_client", scope: !3, file: !3, line: 469, type: !1270, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2319 = !DILocalVariable(name: "buffer", arg: 1, scope: !2318, file: !3, line: 469, type: !117)
!2320 = !DILocation(line: 469, column: 37, scope: !2318)
!2321 = !DILocalVariable(name: "user_data", arg: 2, scope: !2318, file: !3, line: 470, type: !54)
!2322 = !DILocation(line: 470, column: 37, scope: !2318)
!2323 = !DILocalVariable(name: "lwm2mH", scope: !2318, file: !3, line: 472, type: !118)
!2324 = !DILocation(line: 472, column: 23, scope: !2318)
!2325 = !DILocation(line: 472, column: 52, scope: !2318)
!2326 = !DILocation(line: 472, column: 32, scope: !2318)
!2327 = !DILocalVariable(name: "clientId", scope: !2318, file: !3, line: 473, type: !79)
!2328 = !DILocation(line: 473, column: 14, scope: !2318)
!2329 = !DILocalVariable(name: "uri", scope: !2318, file: !3, line: 474, type: !170)
!2330 = !DILocation(line: 474, column: 17, scope: !2318)
!2331 = !DILocalVariable(name: "end", scope: !2318, file: !3, line: 475, type: !117)
!2332 = !DILocation(line: 475, column: 12, scope: !2318)
!2333 = !DILocalVariable(name: "result", scope: !2318, file: !3, line: 476, type: !58)
!2334 = !DILocation(line: 476, column: 9, scope: !2318)
!2335 = !DILocalVariable(name: "attr", scope: !2318, file: !3, line: 477, type: !2064)
!2336 = !DILocation(line: 477, column: 24, scope: !2318)
!2337 = !DILocation(line: 479, column: 26, scope: !2318)
!2338 = !DILocation(line: 479, column: 14, scope: !2318)
!2339 = !DILocation(line: 479, column: 12, scope: !2318)
!2340 = !DILocation(line: 480, column: 9, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 480, column: 9)
!2342 = !DILocation(line: 480, column: 16, scope: !2341)
!2343 = !DILocation(line: 480, column: 9, scope: !2318)
!2344 = !DILocation(line: 480, column: 22, scope: !2341)
!2345 = !DILocation(line: 482, column: 27, scope: !2318)
!2346 = !DILocation(line: 482, column: 14, scope: !2318)
!2347 = !DILocation(line: 482, column: 12, scope: !2318)
!2348 = !DILocation(line: 483, column: 9, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 483, column: 9)
!2350 = !DILocation(line: 483, column: 19, scope: !2349)
!2351 = !DILocation(line: 483, column: 9, scope: !2318)
!2352 = !DILocation(line: 483, column: 25, scope: !2349)
!2353 = !DILocation(line: 485, column: 32, scope: !2318)
!2354 = !DILocation(line: 485, column: 40, scope: !2318)
!2355 = !DILocation(line: 485, column: 46, scope: !2318)
!2356 = !DILocation(line: 485, column: 44, scope: !2318)
!2357 = !DILocation(line: 485, column: 14, scope: !2318)
!2358 = !DILocation(line: 485, column: 12, scope: !2318)
!2359 = !DILocation(line: 486, column: 9, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 486, column: 9)
!2361 = !DILocation(line: 486, column: 16, scope: !2360)
!2362 = !DILocation(line: 486, column: 9, scope: !2318)
!2363 = !DILocation(line: 486, column: 22, scope: !2360)
!2364 = !DILocation(line: 488, column: 5, scope: !2318)
!2365 = !DILocation(line: 489, column: 10, scope: !2318)
!2366 = !DILocation(line: 489, column: 18, scope: !2318)
!2367 = !DILocation(line: 491, column: 27, scope: !2318)
!2368 = !DILocation(line: 491, column: 14, scope: !2318)
!2369 = !DILocation(line: 491, column: 12, scope: !2318)
!2370 = !DILocation(line: 492, column: 28, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 492, column: 9)
!2372 = !DILocation(line: 492, column: 10, scope: !2371)
!2373 = !DILocation(line: 492, column: 9, scope: !2318)
!2374 = !DILocation(line: 492, column: 34, scope: !2371)
!2375 = !DILocation(line: 494, column: 40, scope: !2318)
!2376 = !DILocation(line: 494, column: 48, scope: !2318)
!2377 = !DILocation(line: 494, column: 14, scope: !2318)
!2378 = !DILocation(line: 494, column: 12, scope: !2318)
!2379 = !DILocation(line: 496, column: 9, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2318, file: !3, line: 496, column: 9)
!2381 = !DILocation(line: 496, column: 16, scope: !2380)
!2382 = !DILocation(line: 496, column: 9, scope: !2318)
!2383 = !DILocation(line: 498, column: 17, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 497, column: 5)
!2385 = !DILocation(line: 498, column: 9, scope: !2384)
!2386 = !DILocation(line: 499, column: 5, scope: !2384)
!2387 = !DILocation(line: 502, column: 25, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 501, column: 5)
!2389 = !DILocation(line: 502, column: 9, scope: !2388)
!2390 = !DILocation(line: 504, column: 5, scope: !2318)
!2391 = !DILocation(line: 507, column: 13, scope: !2318)
!2392 = !DILocation(line: 507, column: 5, scope: !2318)
!2393 = !DILocation(line: 508, column: 1, scope: !2318)
!2394 = distinct !DISubprogram(name: "prv_exec_client", scope: !3, file: !3, line: 511, type: !1270, isLocal: true, isDefinition: true, scopeLine: 513, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2395 = !DILocalVariable(name: "buffer", arg: 1, scope: !2394, file: !3, line: 511, type: !117)
!2396 = !DILocation(line: 511, column: 36, scope: !2394)
!2397 = !DILocalVariable(name: "user_data", arg: 2, scope: !2394, file: !3, line: 512, type: !54)
!2398 = !DILocation(line: 512, column: 36, scope: !2394)
!2399 = !DILocalVariable(name: "lwm2mH", scope: !2394, file: !3, line: 514, type: !118)
!2400 = !DILocation(line: 514, column: 23, scope: !2394)
!2401 = !DILocation(line: 514, column: 52, scope: !2394)
!2402 = !DILocation(line: 514, column: 32, scope: !2394)
!2403 = !DILocalVariable(name: "clientId", scope: !2394, file: !3, line: 515, type: !79)
!2404 = !DILocation(line: 515, column: 14, scope: !2394)
!2405 = !DILocalVariable(name: "uri", scope: !2394, file: !3, line: 516, type: !170)
!2406 = !DILocation(line: 516, column: 17, scope: !2394)
!2407 = !DILocalVariable(name: "end", scope: !2394, file: !3, line: 517, type: !117)
!2408 = !DILocation(line: 517, column: 12, scope: !2394)
!2409 = !DILocalVariable(name: "result", scope: !2394, file: !3, line: 518, type: !58)
!2410 = !DILocation(line: 518, column: 9, scope: !2394)
!2411 = !DILocation(line: 520, column: 26, scope: !2394)
!2412 = !DILocation(line: 520, column: 14, scope: !2394)
!2413 = !DILocation(line: 520, column: 12, scope: !2394)
!2414 = !DILocation(line: 521, column: 9, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 521, column: 9)
!2416 = !DILocation(line: 521, column: 16, scope: !2415)
!2417 = !DILocation(line: 521, column: 9, scope: !2394)
!2418 = !DILocation(line: 521, column: 22, scope: !2415)
!2419 = !DILocation(line: 523, column: 27, scope: !2394)
!2420 = !DILocation(line: 523, column: 14, scope: !2394)
!2421 = !DILocation(line: 523, column: 12, scope: !2394)
!2422 = !DILocation(line: 524, column: 9, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 524, column: 9)
!2424 = !DILocation(line: 524, column: 19, scope: !2423)
!2425 = !DILocation(line: 524, column: 9, scope: !2394)
!2426 = !DILocation(line: 524, column: 25, scope: !2423)
!2427 = !DILocation(line: 526, column: 32, scope: !2394)
!2428 = !DILocation(line: 526, column: 40, scope: !2394)
!2429 = !DILocation(line: 526, column: 46, scope: !2394)
!2430 = !DILocation(line: 526, column: 44, scope: !2394)
!2431 = !DILocation(line: 526, column: 14, scope: !2394)
!2432 = !DILocation(line: 526, column: 12, scope: !2394)
!2433 = !DILocation(line: 527, column: 9, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 527, column: 9)
!2435 = !DILocation(line: 527, column: 16, scope: !2434)
!2436 = !DILocation(line: 527, column: 9, scope: !2394)
!2437 = !DILocation(line: 527, column: 22, scope: !2434)
!2438 = !DILocation(line: 529, column: 27, scope: !2394)
!2439 = !DILocation(line: 529, column: 14, scope: !2394)
!2440 = !DILocation(line: 529, column: 12, scope: !2394)
!2441 = !DILocation(line: 532, column: 9, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 532, column: 9)
!2443 = !DILocation(line: 532, column: 19, scope: !2442)
!2444 = !DILocation(line: 532, column: 9, scope: !2394)
!2445 = !DILocation(line: 534, column: 35, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 533, column: 5)
!2447 = !DILocation(line: 534, column: 43, scope: !2446)
!2448 = !DILocation(line: 534, column: 18, scope: !2446)
!2449 = !DILocation(line: 534, column: 16, scope: !2446)
!2450 = !DILocation(line: 535, column: 5, scope: !2446)
!2451 = !DILocation(line: 538, column: 32, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 538, column: 13)
!2453 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 537, column: 5)
!2454 = !DILocation(line: 538, column: 14, scope: !2452)
!2455 = !DILocation(line: 538, column: 13, scope: !2453)
!2456 = !DILocation(line: 538, column: 38, scope: !2452)
!2457 = !DILocation(line: 540, column: 35, scope: !2453)
!2458 = !DILocation(line: 540, column: 43, scope: !2453)
!2459 = !DILocation(line: 540, column: 90, scope: !2453)
!2460 = !DILocation(line: 540, column: 98, scope: !2453)
!2461 = !DILocation(line: 540, column: 104, scope: !2453)
!2462 = !DILocation(line: 540, column: 102, scope: !2453)
!2463 = !DILocation(line: 540, column: 18, scope: !2453)
!2464 = !DILocation(line: 540, column: 16, scope: !2453)
!2465 = !DILocation(line: 543, column: 9, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 543, column: 9)
!2467 = !DILocation(line: 543, column: 16, scope: !2466)
!2468 = !DILocation(line: 543, column: 9, scope: !2394)
!2469 = !DILocation(line: 545, column: 17, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 544, column: 5)
!2471 = !DILocation(line: 545, column: 9, scope: !2470)
!2472 = !DILocation(line: 546, column: 5, scope: !2470)
!2473 = !DILocation(line: 549, column: 25, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 548, column: 5)
!2475 = !DILocation(line: 549, column: 9, scope: !2474)
!2476 = !DILocation(line: 551, column: 5, scope: !2394)
!2477 = !DILocation(line: 554, column: 13, scope: !2394)
!2478 = !DILocation(line: 554, column: 5, scope: !2394)
!2479 = !DILocation(line: 555, column: 1, scope: !2394)
!2480 = distinct !DISubprogram(name: "prv_delete_client", scope: !3, file: !3, line: 632, type: !1270, isLocal: true, isDefinition: true, scopeLine: 634, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2481 = !DILocalVariable(name: "buffer", arg: 1, scope: !2480, file: !3, line: 632, type: !117)
!2482 = !DILocation(line: 632, column: 38, scope: !2480)
!2483 = !DILocalVariable(name: "user_data", arg: 2, scope: !2480, file: !3, line: 633, type: !54)
!2484 = !DILocation(line: 633, column: 38, scope: !2480)
!2485 = !DILocalVariable(name: "lwm2mH", scope: !2480, file: !3, line: 635, type: !118)
!2486 = !DILocation(line: 635, column: 23, scope: !2480)
!2487 = !DILocation(line: 635, column: 52, scope: !2480)
!2488 = !DILocation(line: 635, column: 32, scope: !2480)
!2489 = !DILocalVariable(name: "clientId", scope: !2480, file: !3, line: 636, type: !79)
!2490 = !DILocation(line: 636, column: 14, scope: !2480)
!2491 = !DILocalVariable(name: "uri", scope: !2480, file: !3, line: 637, type: !170)
!2492 = !DILocation(line: 637, column: 17, scope: !2480)
!2493 = !DILocalVariable(name: "end", scope: !2480, file: !3, line: 638, type: !117)
!2494 = !DILocation(line: 638, column: 11, scope: !2480)
!2495 = !DILocalVariable(name: "result", scope: !2480, file: !3, line: 639, type: !58)
!2496 = !DILocation(line: 639, column: 9, scope: !2480)
!2497 = !DILocation(line: 641, column: 26, scope: !2480)
!2498 = !DILocation(line: 641, column: 14, scope: !2480)
!2499 = !DILocation(line: 641, column: 12, scope: !2480)
!2500 = !DILocation(line: 642, column: 9, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 642, column: 9)
!2502 = !DILocation(line: 642, column: 16, scope: !2501)
!2503 = !DILocation(line: 642, column: 9, scope: !2480)
!2504 = !DILocation(line: 642, column: 22, scope: !2501)
!2505 = !DILocation(line: 644, column: 27, scope: !2480)
!2506 = !DILocation(line: 644, column: 14, scope: !2480)
!2507 = !DILocation(line: 644, column: 12, scope: !2480)
!2508 = !DILocation(line: 645, column: 9, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 645, column: 9)
!2510 = !DILocation(line: 645, column: 19, scope: !2509)
!2511 = !DILocation(line: 645, column: 9, scope: !2480)
!2512 = !DILocation(line: 645, column: 25, scope: !2509)
!2513 = !DILocation(line: 647, column: 32, scope: !2480)
!2514 = !DILocation(line: 647, column: 40, scope: !2480)
!2515 = !DILocation(line: 647, column: 46, scope: !2480)
!2516 = !DILocation(line: 647, column: 44, scope: !2480)
!2517 = !DILocation(line: 647, column: 14, scope: !2480)
!2518 = !DILocation(line: 647, column: 12, scope: !2480)
!2519 = !DILocation(line: 648, column: 9, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 648, column: 9)
!2521 = !DILocation(line: 648, column: 16, scope: !2520)
!2522 = !DILocation(line: 648, column: 9, scope: !2480)
!2523 = !DILocation(line: 648, column: 22, scope: !2520)
!2524 = !DILocation(line: 650, column: 28, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 650, column: 9)
!2526 = !DILocation(line: 650, column: 10, scope: !2525)
!2527 = !DILocation(line: 650, column: 9, scope: !2480)
!2528 = !DILocation(line: 650, column: 34, scope: !2525)
!2529 = !DILocation(line: 652, column: 30, scope: !2480)
!2530 = !DILocation(line: 652, column: 38, scope: !2480)
!2531 = !DILocation(line: 652, column: 14, scope: !2480)
!2532 = !DILocation(line: 652, column: 12, scope: !2480)
!2533 = !DILocation(line: 654, column: 9, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 654, column: 9)
!2535 = !DILocation(line: 654, column: 16, scope: !2534)
!2536 = !DILocation(line: 654, column: 9, scope: !2480)
!2537 = !DILocation(line: 656, column: 17, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 655, column: 5)
!2539 = !DILocation(line: 656, column: 9, scope: !2538)
!2540 = !DILocation(line: 657, column: 5, scope: !2538)
!2541 = !DILocation(line: 660, column: 25, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 659, column: 5)
!2543 = !DILocation(line: 660, column: 9, scope: !2542)
!2544 = !DILocation(line: 662, column: 5, scope: !2480)
!2545 = !DILocation(line: 665, column: 13, scope: !2480)
!2546 = !DILocation(line: 665, column: 5, scope: !2480)
!2547 = !DILocation(line: 666, column: 1, scope: !2480)
!2548 = distinct !DISubprogram(name: "prv_create_client", scope: !3, file: !3, line: 557, type: !1270, isLocal: true, isDefinition: true, scopeLine: 559, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2549 = !DILocalVariable(name: "buffer", arg: 1, scope: !2548, file: !3, line: 557, type: !117)
!2550 = !DILocation(line: 557, column: 38, scope: !2548)
!2551 = !DILocalVariable(name: "user_data", arg: 2, scope: !2548, file: !3, line: 558, type: !54)
!2552 = !DILocation(line: 558, column: 38, scope: !2548)
!2553 = !DILocalVariable(name: "lwm2mH", scope: !2548, file: !3, line: 560, type: !118)
!2554 = !DILocation(line: 560, column: 23, scope: !2548)
!2555 = !DILocation(line: 560, column: 52, scope: !2548)
!2556 = !DILocation(line: 560, column: 32, scope: !2548)
!2557 = !DILocalVariable(name: "clientId", scope: !2548, file: !3, line: 561, type: !79)
!2558 = !DILocation(line: 561, column: 14, scope: !2548)
!2559 = !DILocalVariable(name: "uri", scope: !2548, file: !3, line: 562, type: !170)
!2560 = !DILocation(line: 562, column: 17, scope: !2548)
!2561 = !DILocalVariable(name: "end", scope: !2548, file: !3, line: 563, type: !117)
!2562 = !DILocation(line: 563, column: 12, scope: !2548)
!2563 = !DILocalVariable(name: "result", scope: !2548, file: !3, line: 564, type: !58)
!2564 = !DILocation(line: 564, column: 9, scope: !2548)
!2565 = !DILocalVariable(name: "value", scope: !2548, file: !3, line: 565, type: !254)
!2566 = !DILocation(line: 565, column: 13, scope: !2548)
!2567 = !DILocalVariable(name: "temp_buffer", scope: !2548, file: !3, line: 566, type: !186)
!2568 = !DILocation(line: 566, column: 15, scope: !2548)
!2569 = !DILocalVariable(name: "temp_length", scope: !2548, file: !3, line: 567, type: !58)
!2570 = !DILocation(line: 567, column: 9, scope: !2548)
!2571 = !DILocalVariable(name: "format", scope: !2548, file: !3, line: 568, type: !185)
!2572 = !DILocation(line: 568, column: 24, scope: !2548)
!2573 = !DILocation(line: 571, column: 26, scope: !2548)
!2574 = !DILocation(line: 571, column: 14, scope: !2548)
!2575 = !DILocation(line: 571, column: 12, scope: !2548)
!2576 = !DILocation(line: 572, column: 9, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 572, column: 9)
!2578 = !DILocation(line: 572, column: 16, scope: !2577)
!2579 = !DILocation(line: 572, column: 9, scope: !2548)
!2580 = !DILocation(line: 572, column: 22, scope: !2577)
!2581 = !DILocation(line: 575, column: 27, scope: !2548)
!2582 = !DILocation(line: 575, column: 14, scope: !2548)
!2583 = !DILocation(line: 575, column: 12, scope: !2548)
!2584 = !DILocation(line: 576, column: 9, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 576, column: 9)
!2586 = !DILocation(line: 576, column: 19, scope: !2585)
!2587 = !DILocation(line: 576, column: 9, scope: !2548)
!2588 = !DILocation(line: 576, column: 25, scope: !2585)
!2589 = !DILocation(line: 578, column: 32, scope: !2548)
!2590 = !DILocation(line: 578, column: 40, scope: !2548)
!2591 = !DILocation(line: 578, column: 46, scope: !2548)
!2592 = !DILocation(line: 578, column: 44, scope: !2548)
!2593 = !DILocation(line: 578, column: 14, scope: !2548)
!2594 = !DILocation(line: 578, column: 12, scope: !2548)
!2595 = !DILocation(line: 579, column: 9, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 579, column: 9)
!2597 = !DILocation(line: 579, column: 16, scope: !2596)
!2598 = !DILocation(line: 579, column: 9, scope: !2548)
!2599 = !DILocation(line: 579, column: 22, scope: !2596)
!2600 = !DILocation(line: 582, column: 27, scope: !2548)
!2601 = !DILocation(line: 582, column: 14, scope: !2548)
!2602 = !DILocation(line: 582, column: 12, scope: !2548)
!2603 = !DILocation(line: 583, column: 9, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 583, column: 9)
!2605 = !DILocation(line: 583, column: 19, scope: !2604)
!2606 = !DILocation(line: 583, column: 9, scope: !2548)
!2607 = !DILocation(line: 583, column: 25, scope: !2604)
!2608 = !DILocation(line: 585, column: 28, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 585, column: 9)
!2610 = !DILocation(line: 585, column: 10, scope: !2609)
!2611 = !DILocation(line: 585, column: 9, scope: !2548)
!2612 = !DILocation(line: 585, column: 34, scope: !2609)
!2613 = !DILocation(line: 591, column: 13, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 591, column: 9)
!2615 = !DILocation(line: 591, column: 9, scope: !2614)
!2616 = !DILocation(line: 591, column: 22, scope: !2614)
!2617 = !DILocation(line: 591, column: 9, scope: !2548)
!2618 = !DILocalVariable(name: "dataP", scope: !2619, file: !3, line: 593, type: !2620)
!2619 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 592, column: 5)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_data_t", file: !6, line: 298, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_data_t", file: !6, line: 300, size: 192, elements: !2623)
!2623 = !{!2624, !2625, !2626}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2622, file: !6, line: 302, baseType: !689, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2622, file: !6, line: 303, baseType: !79, size: 16, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2622, file: !6, line: 324, baseType: !2627, size: 128, offset: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2622, file: !6, line: 304, size: 128, elements: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2637, !2642}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "asBoolean", scope: !2627, file: !6, line: 306, baseType: !136, size: 8)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "asInteger", scope: !2627, file: !6, line: 307, baseType: !254, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "asFloat", scope: !2627, file: !6, line: 308, baseType: !253, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "asBuffer", scope: !2627, file: !6, line: 313, baseType: !2633, size: 128)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2627, file: !6, line: 309, size: 128, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2633, file: !6, line: 311, baseType: !438, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2633, file: !6, line: 312, baseType: !186, size: 64, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "asChildren", scope: !2627, file: !6, line: 318, baseType: !2638, size: 128)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2627, file: !6, line: 314, size: 128, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2638, file: !6, line: 316, baseType: !438, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !2638, file: !6, line: 317, baseType: !2620, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "asObjLink", scope: !2627, file: !6, line: 323, baseType: !2643, size: 32)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2627, file: !6, line: 319, size: 32, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !2643, file: !6, line: 321, baseType: !79, size: 16)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "objectInstanceId", scope: !2643, file: !6, line: 322, baseType: !79, size: 16, offset: 16)
!2647 = !DILocation(line: 593, column: 24, scope: !2619)
!2648 = !DILocation(line: 595, column: 25, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 595, column: 13)
!2650 = !DILocation(line: 595, column: 18, scope: !2649)
!2651 = !DILocation(line: 595, column: 15, scope: !2649)
!2652 = !DILocation(line: 595, column: 13, scope: !2619)
!2653 = !DILocation(line: 597, column: 21, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 596, column: 9)
!2655 = !DILocation(line: 597, column: 13, scope: !2654)
!2656 = !DILocation(line: 598, column: 13, scope: !2654)
!2657 = !DILocation(line: 601, column: 17, scope: !2619)
!2658 = !DILocation(line: 601, column: 15, scope: !2619)
!2659 = !DILocation(line: 602, column: 13, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 602, column: 13)
!2661 = !DILocation(line: 602, column: 19, scope: !2660)
!2662 = !DILocation(line: 602, column: 13, scope: !2619)
!2663 = !DILocation(line: 604, column: 21, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 603, column: 9)
!2665 = !DILocation(line: 604, column: 13, scope: !2664)
!2666 = !DILocation(line: 605, column: 13, scope: !2664)
!2667 = !DILocation(line: 607, column: 31, scope: !2619)
!2668 = !DILocation(line: 607, column: 38, scope: !2619)
!2669 = !DILocation(line: 607, column: 9, scope: !2619)
!2670 = !DILocation(line: 608, column: 9, scope: !2619)
!2671 = !DILocation(line: 608, column: 16, scope: !2619)
!2672 = !DILocation(line: 608, column: 19, scope: !2619)
!2673 = !DILocation(line: 610, column: 16, scope: !2619)
!2674 = !DILocation(line: 611, column: 53, scope: !2619)
!2675 = !DILocation(line: 611, column: 23, scope: !2619)
!2676 = !DILocation(line: 611, column: 21, scope: !2619)
!2677 = !DILocation(line: 612, column: 5, scope: !2619)
!2678 = !DILocation(line: 616, column: 30, scope: !2548)
!2679 = !DILocation(line: 616, column: 38, scope: !2548)
!2680 = !DILocation(line: 616, column: 54, scope: !2548)
!2681 = !DILocation(line: 616, column: 62, scope: !2548)
!2682 = !DILocation(line: 616, column: 75, scope: !2548)
!2683 = !DILocation(line: 616, column: 14, scope: !2548)
!2684 = !DILocation(line: 616, column: 12, scope: !2548)
!2685 = !DILocation(line: 618, column: 9, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 618, column: 9)
!2687 = !DILocation(line: 618, column: 16, scope: !2686)
!2688 = !DILocation(line: 618, column: 9, scope: !2548)
!2689 = !DILocation(line: 620, column: 17, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 619, column: 5)
!2691 = !DILocation(line: 620, column: 9, scope: !2690)
!2692 = !DILocation(line: 621, column: 5, scope: !2690)
!2693 = !DILocation(line: 624, column: 25, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 623, column: 5)
!2695 = !DILocation(line: 624, column: 9, scope: !2694)
!2696 = !DILocation(line: 626, column: 5, scope: !2548)
!2697 = !DILocation(line: 629, column: 13, scope: !2548)
!2698 = !DILocation(line: 629, column: 5, scope: !2548)
!2699 = !DILocation(line: 630, column: 1, scope: !2548)
!2700 = distinct !DISubprogram(name: "prv_observe_client", scope: !3, file: !3, line: 668, type: !1270, isLocal: true, isDefinition: true, scopeLine: 670, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2701 = !DILocalVariable(name: "buffer", arg: 1, scope: !2700, file: !3, line: 668, type: !117)
!2702 = !DILocation(line: 668, column: 39, scope: !2700)
!2703 = !DILocalVariable(name: "user_data", arg: 2, scope: !2700, file: !3, line: 669, type: !54)
!2704 = !DILocation(line: 669, column: 39, scope: !2700)
!2705 = !DILocalVariable(name: "lwm2mH", scope: !2700, file: !3, line: 671, type: !118)
!2706 = !DILocation(line: 671, column: 23, scope: !2700)
!2707 = !DILocation(line: 671, column: 52, scope: !2700)
!2708 = !DILocation(line: 671, column: 32, scope: !2700)
!2709 = !DILocalVariable(name: "clientId", scope: !2700, file: !3, line: 672, type: !79)
!2710 = !DILocation(line: 672, column: 14, scope: !2700)
!2711 = !DILocalVariable(name: "uri", scope: !2700, file: !3, line: 673, type: !170)
!2712 = !DILocation(line: 673, column: 17, scope: !2700)
!2713 = !DILocalVariable(name: "end", scope: !2700, file: !3, line: 674, type: !117)
!2714 = !DILocation(line: 674, column: 11, scope: !2700)
!2715 = !DILocalVariable(name: "result", scope: !2700, file: !3, line: 675, type: !58)
!2716 = !DILocation(line: 675, column: 9, scope: !2700)
!2717 = !DILocation(line: 677, column: 26, scope: !2700)
!2718 = !DILocation(line: 677, column: 14, scope: !2700)
!2719 = !DILocation(line: 677, column: 12, scope: !2700)
!2720 = !DILocation(line: 678, column: 9, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 678, column: 9)
!2722 = !DILocation(line: 678, column: 16, scope: !2721)
!2723 = !DILocation(line: 678, column: 9, scope: !2700)
!2724 = !DILocation(line: 678, column: 22, scope: !2721)
!2725 = !DILocation(line: 680, column: 27, scope: !2700)
!2726 = !DILocation(line: 680, column: 14, scope: !2700)
!2727 = !DILocation(line: 680, column: 12, scope: !2700)
!2728 = !DILocation(line: 681, column: 9, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 681, column: 9)
!2730 = !DILocation(line: 681, column: 19, scope: !2729)
!2731 = !DILocation(line: 681, column: 9, scope: !2700)
!2732 = !DILocation(line: 681, column: 25, scope: !2729)
!2733 = !DILocation(line: 683, column: 32, scope: !2700)
!2734 = !DILocation(line: 683, column: 40, scope: !2700)
!2735 = !DILocation(line: 683, column: 46, scope: !2700)
!2736 = !DILocation(line: 683, column: 44, scope: !2700)
!2737 = !DILocation(line: 683, column: 14, scope: !2700)
!2738 = !DILocation(line: 683, column: 12, scope: !2700)
!2739 = !DILocation(line: 684, column: 9, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 684, column: 9)
!2741 = !DILocation(line: 684, column: 16, scope: !2740)
!2742 = !DILocation(line: 684, column: 9, scope: !2700)
!2743 = !DILocation(line: 684, column: 22, scope: !2740)
!2744 = !DILocation(line: 686, column: 28, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 686, column: 9)
!2746 = !DILocation(line: 686, column: 10, scope: !2745)
!2747 = !DILocation(line: 686, column: 9, scope: !2700)
!2748 = !DILocation(line: 686, column: 34, scope: !2745)
!2749 = !DILocation(line: 688, column: 28, scope: !2700)
!2750 = !DILocation(line: 688, column: 36, scope: !2700)
!2751 = !DILocation(line: 688, column: 14, scope: !2700)
!2752 = !DILocation(line: 688, column: 12, scope: !2700)
!2753 = !DILocation(line: 690, column: 9, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 690, column: 9)
!2755 = !DILocation(line: 690, column: 16, scope: !2754)
!2756 = !DILocation(line: 690, column: 9, scope: !2700)
!2757 = !DILocation(line: 692, column: 17, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2754, file: !3, line: 691, column: 5)
!2759 = !DILocation(line: 692, column: 9, scope: !2758)
!2760 = !DILocation(line: 693, column: 5, scope: !2758)
!2761 = !DILocation(line: 696, column: 25, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2754, file: !3, line: 695, column: 5)
!2763 = !DILocation(line: 696, column: 9, scope: !2762)
!2764 = !DILocation(line: 698, column: 5, scope: !2700)
!2765 = !DILocation(line: 701, column: 13, scope: !2700)
!2766 = !DILocation(line: 701, column: 5, scope: !2700)
!2767 = !DILocation(line: 702, column: 1, scope: !2700)
!2768 = distinct !DISubprogram(name: "prv_cancel_client", scope: !3, file: !3, line: 704, type: !1270, isLocal: true, isDefinition: true, scopeLine: 706, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2769 = !DILocalVariable(name: "buffer", arg: 1, scope: !2768, file: !3, line: 704, type: !117)
!2770 = !DILocation(line: 704, column: 38, scope: !2768)
!2771 = !DILocalVariable(name: "user_data", arg: 2, scope: !2768, file: !3, line: 705, type: !54)
!2772 = !DILocation(line: 705, column: 38, scope: !2768)
!2773 = !DILocalVariable(name: "lwm2mH", scope: !2768, file: !3, line: 707, type: !118)
!2774 = !DILocation(line: 707, column: 23, scope: !2768)
!2775 = !DILocation(line: 707, column: 52, scope: !2768)
!2776 = !DILocation(line: 707, column: 32, scope: !2768)
!2777 = !DILocalVariable(name: "clientId", scope: !2768, file: !3, line: 708, type: !79)
!2778 = !DILocation(line: 708, column: 14, scope: !2768)
!2779 = !DILocalVariable(name: "uri", scope: !2768, file: !3, line: 709, type: !170)
!2780 = !DILocation(line: 709, column: 17, scope: !2768)
!2781 = !DILocalVariable(name: "end", scope: !2768, file: !3, line: 710, type: !117)
!2782 = !DILocation(line: 710, column: 11, scope: !2768)
!2783 = !DILocalVariable(name: "result", scope: !2768, file: !3, line: 711, type: !58)
!2784 = !DILocation(line: 711, column: 9, scope: !2768)
!2785 = !DILocation(line: 713, column: 26, scope: !2768)
!2786 = !DILocation(line: 713, column: 14, scope: !2768)
!2787 = !DILocation(line: 713, column: 12, scope: !2768)
!2788 = !DILocation(line: 714, column: 9, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 714, column: 9)
!2790 = !DILocation(line: 714, column: 16, scope: !2789)
!2791 = !DILocation(line: 714, column: 9, scope: !2768)
!2792 = !DILocation(line: 714, column: 22, scope: !2789)
!2793 = !DILocation(line: 716, column: 27, scope: !2768)
!2794 = !DILocation(line: 716, column: 14, scope: !2768)
!2795 = !DILocation(line: 716, column: 12, scope: !2768)
!2796 = !DILocation(line: 717, column: 9, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 717, column: 9)
!2798 = !DILocation(line: 717, column: 19, scope: !2797)
!2799 = !DILocation(line: 717, column: 9, scope: !2768)
!2800 = !DILocation(line: 717, column: 25, scope: !2797)
!2801 = !DILocation(line: 719, column: 32, scope: !2768)
!2802 = !DILocation(line: 719, column: 40, scope: !2768)
!2803 = !DILocation(line: 719, column: 46, scope: !2768)
!2804 = !DILocation(line: 719, column: 44, scope: !2768)
!2805 = !DILocation(line: 719, column: 14, scope: !2768)
!2806 = !DILocation(line: 719, column: 12, scope: !2768)
!2807 = !DILocation(line: 720, column: 9, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 720, column: 9)
!2809 = !DILocation(line: 720, column: 16, scope: !2808)
!2810 = !DILocation(line: 720, column: 9, scope: !2768)
!2811 = !DILocation(line: 720, column: 22, scope: !2808)
!2812 = !DILocation(line: 722, column: 28, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 722, column: 9)
!2814 = !DILocation(line: 722, column: 10, scope: !2813)
!2815 = !DILocation(line: 722, column: 9, scope: !2768)
!2816 = !DILocation(line: 722, column: 34, scope: !2813)
!2817 = !DILocation(line: 724, column: 35, scope: !2768)
!2818 = !DILocation(line: 724, column: 43, scope: !2768)
!2819 = !DILocation(line: 724, column: 14, scope: !2768)
!2820 = !DILocation(line: 724, column: 12, scope: !2768)
!2821 = !DILocation(line: 726, column: 9, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 726, column: 9)
!2823 = !DILocation(line: 726, column: 16, scope: !2822)
!2824 = !DILocation(line: 726, column: 9, scope: !2768)
!2825 = !DILocation(line: 728, column: 17, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 727, column: 5)
!2827 = !DILocation(line: 728, column: 9, scope: !2826)
!2828 = !DILocation(line: 729, column: 5, scope: !2826)
!2829 = !DILocation(line: 732, column: 25, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 731, column: 5)
!2831 = !DILocation(line: 732, column: 9, scope: !2830)
!2832 = !DILocation(line: 734, column: 5, scope: !2768)
!2833 = !DILocation(line: 737, column: 13, scope: !2768)
!2834 = !DILocation(line: 737, column: 5, scope: !2768)
!2835 = !DILocation(line: 738, column: 1, scope: !2768)
!2836 = distinct !DISubprogram(name: "prv_quit", scope: !3, file: !3, line: 783, type: !1270, isLocal: true, isDefinition: true, scopeLine: 785, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2837 = !DILocalVariable(name: "buffer", arg: 1, scope: !2836, file: !3, line: 783, type: !117)
!2838 = !DILocation(line: 783, column: 29, scope: !2836)
!2839 = !DILocalVariable(name: "user_data", arg: 2, scope: !2836, file: !3, line: 784, type: !54)
!2840 = !DILocation(line: 784, column: 29, scope: !2836)
!2841 = !DILocation(line: 786, column: 12, scope: !2836)
!2842 = !DILocation(line: 787, column: 1, scope: !2836)
!2843 = distinct !DISubprogram(name: "prv_read_id", scope: !3, file: !3, line: 160, type: !2844, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!58, !117, !2846}
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!2847 = !DILocalVariable(name: "buffer", arg: 1, scope: !2843, file: !3, line: 160, type: !117)
!2848 = !DILocation(line: 160, column: 31, scope: !2843)
!2849 = !DILocalVariable(name: "idP", arg: 2, scope: !2843, file: !3, line: 161, type: !2846)
!2850 = !DILocation(line: 161, column: 35, scope: !2843)
!2851 = !DILocalVariable(name: "nb", scope: !2843, file: !3, line: 163, type: !58)
!2852 = !DILocation(line: 163, column: 9, scope: !2843)
!2853 = !DILocalVariable(name: "value", scope: !2843, file: !3, line: 164, type: !58)
!2854 = !DILocation(line: 164, column: 9, scope: !2843)
!2855 = !DILocation(line: 166, column: 17, scope: !2843)
!2856 = !DILocation(line: 166, column: 10, scope: !2843)
!2857 = !DILocation(line: 166, column: 8, scope: !2843)
!2858 = !DILocation(line: 167, column: 9, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 167, column: 9)
!2860 = !DILocation(line: 167, column: 12, scope: !2859)
!2861 = !DILocation(line: 167, column: 9, scope: !2843)
!2862 = !DILocation(line: 169, column: 13, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 169, column: 13)
!2864 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 168, column: 5)
!2865 = !DILocation(line: 169, column: 19, scope: !2863)
!2866 = !DILocation(line: 169, column: 23, scope: !2863)
!2867 = !DILocation(line: 169, column: 26, scope: !2863)
!2868 = !DILocation(line: 169, column: 32, scope: !2863)
!2869 = !DILocation(line: 169, column: 13, scope: !2864)
!2870 = !DILocation(line: 171, column: 16, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 170, column: 9)
!2872 = !DILocation(line: 172, column: 9, scope: !2871)
!2873 = !DILocation(line: 175, column: 20, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 174, column: 9)
!2875 = !DILocation(line: 175, column: 14, scope: !2874)
!2876 = !DILocation(line: 175, column: 18, scope: !2874)
!2877 = !DILocation(line: 177, column: 5, scope: !2864)
!2878 = !DILocation(line: 179, column: 12, scope: !2843)
!2879 = !DILocation(line: 179, column: 5, scope: !2843)
!2880 = distinct !DISubprogram(name: "prv_result_callback", scope: !3, file: !3, line: 183, type: !182, isLocal: true, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2881 = !DILocalVariable(name: "clientID", arg: 1, scope: !2880, file: !3, line: 183, type: !79)
!2882 = !DILocation(line: 183, column: 42, scope: !2880)
!2883 = !DILocalVariable(name: "uriP", arg: 2, scope: !2880, file: !3, line: 184, type: !184)
!2884 = !DILocation(line: 184, column: 47, scope: !2880)
!2885 = !DILocalVariable(name: "status", arg: 3, scope: !2880, file: !3, line: 185, type: !58)
!2886 = !DILocation(line: 185, column: 37, scope: !2880)
!2887 = !DILocalVariable(name: "format", arg: 4, scope: !2880, file: !3, line: 186, type: !185)
!2888 = !DILocation(line: 186, column: 52, scope: !2880)
!2889 = !DILocalVariable(name: "data", arg: 5, scope: !2880, file: !3, line: 187, type: !186)
!2890 = !DILocation(line: 187, column: 43, scope: !2880)
!2891 = !DILocalVariable(name: "dataLength", arg: 6, scope: !2880, file: !3, line: 188, type: !58)
!2892 = !DILocation(line: 188, column: 37, scope: !2880)
!2893 = !DILocalVariable(name: "userData", arg: 7, scope: !2880, file: !3, line: 189, type: !54)
!2894 = !DILocation(line: 189, column: 40, scope: !2880)
!2895 = !DILocation(line: 191, column: 13, scope: !2880)
!2896 = !DILocation(line: 191, column: 43, scope: !2880)
!2897 = !DILocation(line: 191, column: 53, scope: !2880)
!2898 = !DILocation(line: 191, column: 59, scope: !2880)
!2899 = !DILocation(line: 191, column: 5, scope: !2880)
!2900 = !DILocation(line: 192, column: 9, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 192, column: 9)
!2902 = !DILocation(line: 192, column: 9, scope: !2880)
!2903 = !DILocation(line: 193, column: 17, scope: !2901)
!2904 = !DILocation(line: 193, column: 32, scope: !2901)
!2905 = !DILocation(line: 193, column: 38, scope: !2901)
!2906 = !DILocation(line: 193, column: 9, scope: !2901)
!2907 = !DILocation(line: 194, column: 14, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 194, column: 14)
!2909 = !DILocation(line: 194, column: 14, scope: !2901)
!2910 = !DILocation(line: 195, column: 17, scope: !2908)
!2911 = !DILocation(line: 195, column: 9, scope: !2908)
!2912 = !DILocation(line: 196, column: 9, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 196, column: 9)
!2914 = !DILocation(line: 196, column: 9, scope: !2880)
!2915 = !DILocation(line: 197, column: 21, scope: !2913)
!2916 = !DILocation(line: 197, column: 36, scope: !2913)
!2917 = !DILocation(line: 197, column: 42, scope: !2913)
!2918 = !DILocation(line: 197, column: 13, scope: !2913)
!2919 = !DILocation(line: 198, column: 13, scope: !2880)
!2920 = !DILocation(line: 198, column: 5, scope: !2880)
!2921 = !DILocation(line: 199, column: 18, scope: !2880)
!2922 = !DILocation(line: 199, column: 26, scope: !2880)
!2923 = !DILocation(line: 199, column: 5, scope: !2880)
!2924 = !DILocation(line: 200, column: 13, scope: !2880)
!2925 = !DILocation(line: 200, column: 5, scope: !2880)
!2926 = !DILocation(line: 202, column: 17, scope: !2880)
!2927 = !DILocation(line: 202, column: 25, scope: !2880)
!2928 = !DILocation(line: 202, column: 33, scope: !2880)
!2929 = !DILocation(line: 202, column: 39, scope: !2880)
!2930 = !DILocation(line: 202, column: 5, scope: !2880)
!2931 = !DILocation(line: 204, column: 13, scope: !2880)
!2932 = !DILocation(line: 204, column: 5, scope: !2880)
!2933 = !DILocation(line: 205, column: 12, scope: !2880)
!2934 = !DILocation(line: 205, column: 5, scope: !2880)
!2935 = !DILocation(line: 206, column: 1, scope: !2880)
!2936 = distinct !DISubprogram(name: "prv_print_error", scope: !3, file: !3, line: 80, type: !2937, isLocal: true, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !107}
!2939 = !DILocalVariable(name: "status", arg: 1, scope: !2936, file: !3, line: 80, type: !107)
!2940 = !DILocation(line: 80, column: 37, scope: !2936)
!2941 = !DILocation(line: 82, column: 13, scope: !2936)
!2942 = !DILocation(line: 82, column: 5, scope: !2936)
!2943 = !DILocation(line: 83, column: 18, scope: !2936)
!2944 = !DILocation(line: 83, column: 26, scope: !2936)
!2945 = !DILocation(line: 83, column: 5, scope: !2936)
!2946 = !DILocation(line: 84, column: 13, scope: !2936)
!2947 = !DILocation(line: 84, column: 5, scope: !2936)
!2948 = !DILocation(line: 85, column: 1, scope: !2936)
!2949 = distinct !DISubprogram(name: "prv_notify_callback", scope: !3, file: !3, line: 208, type: !182, isLocal: true, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !488)
!2950 = !DILocalVariable(name: "clientID", arg: 1, scope: !2949, file: !3, line: 208, type: !79)
!2951 = !DILocation(line: 208, column: 42, scope: !2949)
!2952 = !DILocalVariable(name: "uriP", arg: 2, scope: !2949, file: !3, line: 209, type: !184)
!2953 = !DILocation(line: 209, column: 47, scope: !2949)
!2954 = !DILocalVariable(name: "count", arg: 3, scope: !2949, file: !3, line: 210, type: !58)
!2955 = !DILocation(line: 210, column: 37, scope: !2949)
!2956 = !DILocalVariable(name: "format", arg: 4, scope: !2949, file: !3, line: 211, type: !185)
!2957 = !DILocation(line: 211, column: 52, scope: !2949)
!2958 = !DILocalVariable(name: "data", arg: 5, scope: !2949, file: !3, line: 212, type: !186)
!2959 = !DILocation(line: 212, column: 43, scope: !2949)
!2960 = !DILocalVariable(name: "dataLength", arg: 6, scope: !2949, file: !3, line: 213, type: !58)
!2961 = !DILocation(line: 213, column: 37, scope: !2949)
!2962 = !DILocalVariable(name: "userData", arg: 7, scope: !2949, file: !3, line: 214, type: !54)
!2963 = !DILocation(line: 214, column: 40, scope: !2949)
!2964 = !DILocation(line: 216, column: 13, scope: !2949)
!2965 = !DILocation(line: 216, column: 55, scope: !2949)
!2966 = !DILocation(line: 216, column: 65, scope: !2949)
!2967 = !DILocation(line: 216, column: 71, scope: !2949)
!2968 = !DILocation(line: 216, column: 5, scope: !2949)
!2969 = !DILocation(line: 217, column: 9, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 217, column: 9)
!2971 = !DILocation(line: 217, column: 9, scope: !2949)
!2972 = !DILocation(line: 218, column: 17, scope: !2970)
!2973 = !DILocation(line: 218, column: 32, scope: !2970)
!2974 = !DILocation(line: 218, column: 38, scope: !2970)
!2975 = !DILocation(line: 218, column: 9, scope: !2970)
!2976 = !DILocation(line: 219, column: 14, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 219, column: 14)
!2978 = !DILocation(line: 219, column: 14, scope: !2970)
!2979 = !DILocation(line: 220, column: 17, scope: !2977)
!2980 = !DILocation(line: 220, column: 9, scope: !2977)
!2981 = !DILocation(line: 221, column: 9, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 221, column: 9)
!2983 = !DILocation(line: 221, column: 9, scope: !2949)
!2984 = !DILocation(line: 222, column: 21, scope: !2982)
!2985 = !DILocation(line: 222, column: 36, scope: !2982)
!2986 = !DILocation(line: 222, column: 42, scope: !2982)
!2987 = !DILocation(line: 222, column: 13, scope: !2982)
!2988 = !DILocation(line: 223, column: 13, scope: !2949)
!2989 = !DILocation(line: 223, column: 39, scope: !2949)
!2990 = !DILocation(line: 223, column: 5, scope: !2949)
!2991 = !DILocation(line: 225, column: 17, scope: !2949)
!2992 = !DILocation(line: 225, column: 25, scope: !2949)
!2993 = !DILocation(line: 225, column: 33, scope: !2949)
!2994 = !DILocation(line: 225, column: 39, scope: !2949)
!2995 = !DILocation(line: 225, column: 5, scope: !2949)
!2996 = !DILocation(line: 227, column: 13, scope: !2949)
!2997 = !DILocation(line: 227, column: 5, scope: !2949)
!2998 = !DILocation(line: 228, column: 12, scope: !2949)
!2999 = !DILocation(line: 228, column: 5, scope: !2949)
!3000 = !DILocation(line: 229, column: 1, scope: !2949)
!3001 = distinct !DISubprogram(name: "lwm2m_init", scope: !557, file: !557, line: 60, type: !3002, isLocal: false, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, unit: !556, variables: !488)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!560, !54}
!3004 = !DILocalVariable(name: "userData", arg: 1, scope: !3001, file: !557, line: 60, type: !54)
!3005 = !DILocation(line: 60, column: 37, scope: !3001)
!3006 = !DILocalVariable(name: "contextP", scope: !3001, file: !557, line: 62, type: !560)
!3007 = !DILocation(line: 62, column: 23, scope: !3001)
!3008 = !DILocation(line: 65, column: 35, scope: !3001)
!3009 = !DILocation(line: 65, column: 16, scope: !3001)
!3010 = !DILocation(line: 65, column: 14, scope: !3001)
!3011 = !DILocation(line: 66, column: 17, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3001, file: !557, line: 66, column: 9)
!3013 = !DILocation(line: 66, column: 14, scope: !3012)
!3014 = !DILocation(line: 66, column: 9, scope: !3001)
!3015 = !DILocation(line: 68, column: 16, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3012, file: !557, line: 67, column: 5)
!3017 = !DILocation(line: 68, column: 9, scope: !3016)
!3018 = !DILocation(line: 69, column: 30, scope: !3016)
!3019 = !DILocation(line: 69, column: 9, scope: !3016)
!3020 = !DILocation(line: 69, column: 19, scope: !3016)
!3021 = !DILocation(line: 69, column: 28, scope: !3016)
!3022 = !DILocation(line: 70, column: 20, scope: !3016)
!3023 = !DILocation(line: 70, column: 15, scope: !3016)
!3024 = !DILocation(line: 70, column: 9, scope: !3016)
!3025 = !DILocation(line: 71, column: 29, scope: !3016)
!3026 = !DILocation(line: 71, column: 9, scope: !3016)
!3027 = !DILocation(line: 71, column: 19, scope: !3016)
!3028 = !DILocation(line: 71, column: 27, scope: !3016)
!3029 = !DILocation(line: 72, column: 5, scope: !3016)
!3030 = !DILocation(line: 74, column: 12, scope: !3001)
!3031 = !DILocation(line: 74, column: 5, scope: !3001)
!3032 = distinct !DISubprogram(name: "prv_deleteTransactionList", scope: !557, file: !557, line: 160, type: !3033, isLocal: false, isDefinition: true, scopeLine: 161, flags: DIFlagPrototyped, isOptimized: false, unit: !556, variables: !488)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{null, !560}
!3035 = !DILocalVariable(name: "context", arg: 1, scope: !3032, file: !557, line: 160, type: !560)
!3036 = !DILocation(line: 160, column: 50, scope: !3032)
!3037 = !DILocation(line: 162, column: 5, scope: !3032)
!3038 = !DILocation(line: 162, column: 20, scope: !3032)
!3039 = !DILocation(line: 162, column: 29, scope: !3032)
!3040 = !DILocation(line: 162, column: 17, scope: !3032)
!3041 = !DILocalVariable(name: "transaction", scope: !3042, file: !557, line: 164, type: !625)
!3042 = distinct !DILexicalBlock(scope: !3032, file: !557, line: 163, column: 5)
!3043 = !DILocation(line: 164, column: 31, scope: !3042)
!3044 = !DILocation(line: 166, column: 23, scope: !3042)
!3045 = !DILocation(line: 166, column: 32, scope: !3042)
!3046 = !DILocation(line: 166, column: 21, scope: !3042)
!3047 = !DILocation(line: 167, column: 36, scope: !3042)
!3048 = !DILocation(line: 167, column: 45, scope: !3042)
!3049 = !DILocation(line: 167, column: 62, scope: !3042)
!3050 = !DILocation(line: 167, column: 9, scope: !3042)
!3051 = !DILocation(line: 167, column: 18, scope: !3042)
!3052 = !DILocation(line: 167, column: 34, scope: !3042)
!3053 = !DILocation(line: 168, column: 26, scope: !3042)
!3054 = !DILocation(line: 168, column: 9, scope: !3042)
!3055 = distinct !{!3055, !3037, !3056}
!3056 = !DILocation(line: 169, column: 5, scope: !3032)
!3057 = !DILocation(line: 170, column: 1, scope: !3032)
!3058 = distinct !DISubprogram(name: "lwm2m_close", scope: !557, file: !557, line: 172, type: !3033, isLocal: false, isDefinition: true, scopeLine: 173, flags: DIFlagPrototyped, isOptimized: false, unit: !556, variables: !488)
!3059 = !DILocalVariable(name: "contextP", arg: 1, scope: !3058, file: !557, line: 172, type: !560)
!3060 = !DILocation(line: 172, column: 36, scope: !3058)
!3061 = !DILocation(line: 194, column: 5, scope: !3058)
!3062 = !DILocation(line: 194, column: 20, scope: !3058)
!3063 = !DILocation(line: 194, column: 30, scope: !3058)
!3064 = !DILocation(line: 194, column: 17, scope: !3058)
!3065 = !DILocalVariable(name: "clientP", scope: !3066, file: !557, line: 196, type: !565)
!3066 = distinct !DILexicalBlock(scope: !3058, file: !557, line: 195, column: 5)
!3067 = !DILocation(line: 196, column: 26, scope: !3066)
!3068 = !DILocation(line: 198, column: 19, scope: !3066)
!3069 = !DILocation(line: 198, column: 29, scope: !3066)
!3070 = !DILocation(line: 198, column: 17, scope: !3066)
!3071 = !DILocation(line: 199, column: 32, scope: !3066)
!3072 = !DILocation(line: 199, column: 42, scope: !3066)
!3073 = !DILocation(line: 199, column: 54, scope: !3066)
!3074 = !DILocation(line: 199, column: 9, scope: !3066)
!3075 = !DILocation(line: 199, column: 19, scope: !3066)
!3076 = !DILocation(line: 199, column: 30, scope: !3066)
!3077 = !DILocation(line: 201, column: 33, scope: !3066)
!3078 = !DILocation(line: 201, column: 9, scope: !3066)
!3079 = distinct !{!3079, !3061, !3080}
!3080 = !DILocation(line: 202, column: 5, scope: !3058)
!3081 = !DILocation(line: 205, column: 31, scope: !3058)
!3082 = !DILocation(line: 205, column: 5, scope: !3058)
!3083 = !DILocation(line: 206, column: 16, scope: !3058)
!3084 = !DILocation(line: 206, column: 5, scope: !3058)
!3085 = !DILocation(line: 207, column: 1, scope: !3058)
!3086 = distinct !DISubprogram(name: "lwm2m_step", scope: !557, file: !557, line: 364, type: !3087, isLocal: false, isDefinition: true, scopeLine: 366, flags: DIFlagPrototyped, isOptimized: false, unit: !556, variables: !488)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{!58, !560, !3089}
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!3090 = !DILocalVariable(name: "contextP", arg: 1, scope: !3086, file: !557, line: 364, type: !560)
!3091 = !DILocation(line: 364, column: 34, scope: !3086)
!3092 = !DILocalVariable(name: "timeoutP", arg: 2, scope: !3086, file: !557, line: 365, type: !3089)
!3093 = !DILocation(line: 365, column: 25, scope: !3086)
!3094 = !DILocalVariable(name: "tv_sec", scope: !3086, file: !557, line: 367, type: !139)
!3095 = !DILocation(line: 367, column: 12, scope: !3086)
!3096 = !DILocalVariable(name: "result", scope: !3086, file: !557, line: 368, type: !58)
!3097 = !DILocation(line: 368, column: 9, scope: !3086)
!3098 = !DILocation(line: 371, column: 14, scope: !3086)
!3099 = !DILocation(line: 371, column: 12, scope: !3086)
!3100 = !DILocation(line: 372, column: 9, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3086, file: !557, line: 372, column: 9)
!3102 = !DILocation(line: 372, column: 16, scope: !3101)
!3103 = !DILocation(line: 372, column: 9, scope: !3086)
!3104 = !DILocation(line: 372, column: 21, scope: !3101)
!3105 = !DILocation(line: 475, column: 23, scope: !3086)
!3106 = !DILocation(line: 475, column: 33, scope: !3086)
!3107 = !DILocation(line: 475, column: 41, scope: !3086)
!3108 = !DILocation(line: 475, column: 5, scope: !3086)
!3109 = !DILocation(line: 476, column: 22, scope: !3086)
!3110 = !DILocation(line: 476, column: 32, scope: !3086)
!3111 = !DILocation(line: 476, column: 40, scope: !3086)
!3112 = !DILocation(line: 476, column: 5, scope: !3086)
!3113 = !DILocation(line: 482, column: 5, scope: !3086)
!3114 = !DILocation(line: 483, column: 1, scope: !3086)
!3115 = distinct !DISubprogram(name: "uri_getNumber", scope: !647, file: !647, line: 87, type: !3116, isLocal: false, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !646, variables: !488)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!58, !186, !438}
!3118 = !DILocalVariable(name: "uriString", arg: 1, scope: !3115, file: !647, line: 87, type: !186)
!3119 = !DILocation(line: 87, column: 29, scope: !3115)
!3120 = !DILocalVariable(name: "uriLength", arg: 2, scope: !3115, file: !647, line: 88, type: !438)
!3121 = !DILocation(line: 88, column: 27, scope: !3115)
!3122 = !DILocalVariable(name: "index", scope: !3115, file: !647, line: 90, type: !438)
!3123 = !DILocation(line: 90, column: 12, scope: !3115)
!3124 = !DILocation(line: 92, column: 28, scope: !3115)
!3125 = !DILocation(line: 92, column: 39, scope: !3115)
!3126 = !DILocation(line: 92, column: 12, scope: !3115)
!3127 = !DILocation(line: 92, column: 5, scope: !3115)
!3128 = distinct !DISubprogram(name: "prv_parseNumber", scope: !647, file: !647, line: 57, type: !3129, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !646, variables: !488)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!58, !186, !438, !3131}
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!3132 = !DILocalVariable(name: "uriString", arg: 1, scope: !3128, file: !647, line: 57, type: !186)
!3133 = !DILocation(line: 57, column: 38, scope: !3128)
!3134 = !DILocalVariable(name: "uriLength", arg: 2, scope: !3128, file: !647, line: 58, type: !438)
!3135 = !DILocation(line: 58, column: 36, scope: !3128)
!3136 = !DILocalVariable(name: "headP", arg: 3, scope: !3128, file: !647, line: 59, type: !3131)
!3137 = !DILocation(line: 59, column: 38, scope: !3128)
!3138 = !DILocalVariable(name: "result", scope: !3128, file: !647, line: 61, type: !58)
!3139 = !DILocation(line: 61, column: 9, scope: !3128)
!3140 = !DILocation(line: 63, column: 9, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3128, file: !647, line: 63, column: 9)
!3142 = !DILocation(line: 63, column: 20, scope: !3141)
!3143 = !DILocation(line: 63, column: 19, scope: !3141)
!3144 = !DILocation(line: 63, column: 27, scope: !3141)
!3145 = !DILocation(line: 63, column: 9, scope: !3128)
!3146 = !DILocation(line: 66, column: 9, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3141, file: !647, line: 64, column: 5)
!3148 = !DILocation(line: 68, column: 5, scope: !3128)
!3149 = !DILocation(line: 68, column: 13, scope: !3128)
!3150 = !DILocation(line: 68, column: 12, scope: !3128)
!3151 = !DILocation(line: 68, column: 21, scope: !3128)
!3152 = !DILocation(line: 68, column: 19, scope: !3128)
!3153 = !DILocation(line: 68, column: 31, scope: !3128)
!3154 = !DILocation(line: 68, column: 34, scope: !3128)
!3155 = !DILocation(line: 68, column: 45, scope: !3128)
!3156 = !DILocation(line: 68, column: 44, scope: !3128)
!3157 = !DILocation(line: 68, column: 52, scope: !3128)
!3158 = !DILocation(line: 70, column: 20, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !647, line: 70, column: 13)
!3160 = distinct !DILexicalBlock(scope: !3128, file: !647, line: 69, column: 5)
!3161 = !DILocation(line: 70, column: 31, scope: !3159)
!3162 = !DILocation(line: 70, column: 30, scope: !3159)
!3163 = !DILocation(line: 70, column: 17, scope: !3159)
!3164 = !DILocation(line: 70, column: 38, scope: !3159)
!3165 = !DILocation(line: 70, column: 41, scope: !3159)
!3166 = !DILocation(line: 70, column: 52, scope: !3159)
!3167 = !DILocation(line: 70, column: 51, scope: !3159)
!3168 = !DILocation(line: 70, column: 59, scope: !3159)
!3169 = !DILocation(line: 70, column: 13, scope: !3160)
!3170 = !DILocation(line: 72, column: 23, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3159, file: !647, line: 71, column: 9)
!3172 = !DILocation(line: 72, column: 34, scope: !3171)
!3173 = !DILocation(line: 72, column: 33, scope: !3171)
!3174 = !DILocation(line: 72, column: 41, scope: !3171)
!3175 = !DILocation(line: 72, column: 20, scope: !3171)
!3176 = !DILocation(line: 73, column: 20, scope: !3171)
!3177 = !DILocation(line: 74, column: 9, scope: !3171)
!3178 = !DILocation(line: 77, column: 13, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3159, file: !647, line: 76, column: 9)
!3180 = !DILocation(line: 79, column: 10, scope: !3160)
!3181 = !DILocation(line: 79, column: 16, scope: !3160)
!3182 = distinct !{!3182, !3148, !3183}
!3183 = !DILocation(line: 80, column: 5, scope: !3128)
!3184 = !DILocation(line: 82, column: 12, scope: !3128)
!3185 = !DILocation(line: 83, column: 12, scope: !3128)
!3186 = !DILocation(line: 83, column: 5, scope: !3128)
!3187 = !DILocation(line: 84, column: 1, scope: !3128)
!3188 = distinct !DISubprogram(name: "uri_decode", scope: !647, file: !647, line: 96, type: !3189, isLocal: false, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, unit: !646, variables: !488)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!665, !117, !3191}
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !3193)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !3194)
!3194 = !{!3195, !3197, !3198, !3199}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3193, file: !220, line: 212, baseType: !3196, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !3193, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3193, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3193, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!3200 = !DILocalVariable(name: "altPath", arg: 1, scope: !3188, file: !647, line: 96, type: !117)
!3201 = !DILocation(line: 96, column: 33, scope: !3188)
!3202 = !DILocalVariable(name: "uriPath", arg: 2, scope: !3188, file: !647, line: 97, type: !3191)
!3203 = !DILocation(line: 97, column: 42, scope: !3188)
!3204 = !DILocalVariable(name: "uriP", scope: !3188, file: !647, line: 99, type: !665)
!3205 = !DILocation(line: 99, column: 19, scope: !3188)
!3206 = !DILocalVariable(name: "readNum", scope: !3188, file: !647, line: 100, type: !58)
!3207 = !DILocation(line: 100, column: 9, scope: !3188)
!3208 = !DILocation(line: 104, column: 27, scope: !3188)
!3209 = !DILocation(line: 104, column: 12, scope: !3188)
!3210 = !DILocation(line: 104, column: 10, scope: !3188)
!3211 = !DILocation(line: 105, column: 17, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 105, column: 9)
!3213 = !DILocation(line: 105, column: 14, scope: !3212)
!3214 = !DILocation(line: 105, column: 9, scope: !3188)
!3215 = !DILocation(line: 105, column: 23, scope: !3212)
!3216 = !DILocation(line: 107, column: 12, scope: !3188)
!3217 = !DILocation(line: 107, column: 5, scope: !3188)
!3218 = !DILocation(line: 110, column: 17, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 110, column: 9)
!3220 = !DILocation(line: 110, column: 14, scope: !3219)
!3221 = !DILocation(line: 111, column: 6, scope: !3219)
!3222 = !DILocation(line: 111, column: 41, scope: !3219)
!3223 = !DILocation(line: 111, column: 50, scope: !3219)
!3224 = !DILocation(line: 111, column: 38, scope: !3219)
!3225 = !DILocation(line: 112, column: 6, scope: !3219)
!3226 = !DILocation(line: 112, column: 56, scope: !3219)
!3227 = !DILocation(line: 112, column: 65, scope: !3219)
!3228 = !DILocation(line: 112, column: 71, scope: !3219)
!3229 = !DILocation(line: 112, column: 80, scope: !3219)
!3230 = !DILocation(line: 112, column: 14, scope: !3219)
!3231 = !DILocation(line: 112, column: 11, scope: !3219)
!3232 = !DILocation(line: 110, column: 9, scope: !3188)
!3233 = !DILocation(line: 114, column: 9, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3219, file: !647, line: 113, column: 5)
!3235 = !DILocation(line: 114, column: 15, scope: !3234)
!3236 = !DILocation(line: 114, column: 20, scope: !3234)
!3237 = !DILocation(line: 115, column: 19, scope: !3234)
!3238 = !DILocation(line: 115, column: 28, scope: !3234)
!3239 = !DILocation(line: 115, column: 17, scope: !3234)
!3240 = !DILocation(line: 116, column: 13, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3234, file: !647, line: 116, column: 13)
!3242 = !DILocation(line: 116, column: 21, scope: !3241)
!3243 = !DILocation(line: 116, column: 13, scope: !3234)
!3244 = !DILocation(line: 116, column: 37, scope: !3241)
!3245 = !DILocation(line: 116, column: 30, scope: !3241)
!3246 = !DILocation(line: 117, column: 5, scope: !3234)
!3247 = !DILocation(line: 118, column: 22, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3219, file: !647, line: 118, column: 14)
!3249 = !DILocation(line: 118, column: 19, scope: !3248)
!3250 = !DILocation(line: 119, column: 6, scope: !3248)
!3251 = !DILocation(line: 119, column: 38, scope: !3248)
!3252 = !DILocation(line: 119, column: 47, scope: !3248)
!3253 = !DILocation(line: 119, column: 35, scope: !3248)
!3254 = !DILocation(line: 120, column: 6, scope: !3248)
!3255 = !DILocation(line: 120, column: 53, scope: !3248)
!3256 = !DILocation(line: 120, column: 62, scope: !3248)
!3257 = !DILocation(line: 120, column: 68, scope: !3248)
!3258 = !DILocation(line: 120, column: 77, scope: !3248)
!3259 = !DILocation(line: 120, column: 14, scope: !3248)
!3260 = !DILocation(line: 120, column: 11, scope: !3248)
!3261 = !DILocation(line: 118, column: 14, scope: !3219)
!3262 = !DILocation(line: 122, column: 9, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3248, file: !647, line: 121, column: 5)
!3264 = !DILocation(line: 122, column: 15, scope: !3263)
!3265 = !DILocation(line: 122, column: 20, scope: !3263)
!3266 = !DILocation(line: 123, column: 19, scope: !3263)
!3267 = !DILocation(line: 123, column: 28, scope: !3263)
!3268 = !DILocation(line: 123, column: 17, scope: !3263)
!3269 = !DILocation(line: 124, column: 13, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3263, file: !647, line: 124, column: 13)
!3271 = !DILocation(line: 124, column: 21, scope: !3270)
!3272 = !DILocation(line: 124, column: 13, scope: !3263)
!3273 = !DILocation(line: 124, column: 30, scope: !3270)
!3274 = !DILocation(line: 125, column: 16, scope: !3263)
!3275 = !DILocation(line: 125, column: 9, scope: !3263)
!3276 = !DILocation(line: 128, column: 10, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 128, column: 9)
!3278 = !DILocation(line: 128, column: 16, scope: !3277)
!3279 = !DILocation(line: 128, column: 21, scope: !3277)
!3280 = !DILocation(line: 128, column: 44, scope: !3277)
!3281 = !DILocation(line: 128, column: 9, scope: !3188)
!3282 = !DILocation(line: 131, column: 13, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !647, line: 131, column: 13)
!3284 = distinct !DILexicalBlock(scope: !3277, file: !647, line: 129, column: 5)
!3285 = !DILocation(line: 131, column: 21, scope: !3283)
!3286 = !DILocation(line: 131, column: 13, scope: !3284)
!3287 = !DILocalVariable(name: "i", scope: !3288, file: !647, line: 133, type: !58)
!3288 = distinct !DILexicalBlock(scope: !3283, file: !647, line: 132, column: 9)
!3289 = !DILocation(line: 133, column: 17, scope: !3288)
!3290 = !DILocation(line: 134, column: 25, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3288, file: !647, line: 134, column: 17)
!3292 = !DILocation(line: 134, column: 22, scope: !3291)
!3293 = !DILocation(line: 134, column: 17, scope: !3288)
!3294 = !DILocation(line: 136, column: 28, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3291, file: !647, line: 135, column: 13)
!3296 = !DILocation(line: 136, column: 17, scope: !3295)
!3297 = !DILocation(line: 137, column: 17, scope: !3295)
!3298 = !DILocation(line: 139, column: 20, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3288, file: !647, line: 139, column: 13)
!3300 = !DILocation(line: 139, column: 18, scope: !3299)
!3301 = !DILocation(line: 139, column: 26, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3299, file: !647, line: 139, column: 13)
!3303 = !DILocation(line: 139, column: 30, scope: !3302)
!3304 = !DILocation(line: 139, column: 39, scope: !3302)
!3305 = !DILocation(line: 139, column: 28, scope: !3302)
!3306 = !DILocation(line: 139, column: 13, scope: !3299)
!3307 = !DILocation(line: 141, column: 21, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !647, line: 141, column: 21)
!3309 = distinct !DILexicalBlock(scope: !3302, file: !647, line: 140, column: 13)
!3310 = !DILocation(line: 141, column: 30, scope: !3308)
!3311 = !DILocation(line: 141, column: 35, scope: !3308)
!3312 = !DILocation(line: 141, column: 41, scope: !3308)
!3313 = !DILocation(line: 141, column: 49, scope: !3308)
!3314 = !DILocation(line: 141, column: 50, scope: !3308)
!3315 = !DILocation(line: 141, column: 38, scope: !3308)
!3316 = !DILocation(line: 141, column: 21, scope: !3309)
!3317 = !DILocation(line: 143, column: 32, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3308, file: !647, line: 142, column: 17)
!3319 = !DILocation(line: 143, column: 21, scope: !3318)
!3320 = !DILocation(line: 144, column: 21, scope: !3318)
!3321 = !DILocation(line: 146, column: 13, scope: !3309)
!3322 = !DILocation(line: 139, column: 46, scope: !3302)
!3323 = !DILocation(line: 139, column: 13, scope: !3302)
!3324 = distinct !{!3324, !3306, !3325}
!3325 = !DILocation(line: 146, column: 13, scope: !3299)
!3326 = !DILocation(line: 147, column: 23, scope: !3288)
!3327 = !DILocation(line: 147, column: 32, scope: !3288)
!3328 = !DILocation(line: 147, column: 21, scope: !3288)
!3329 = !DILocation(line: 148, column: 9, scope: !3288)
!3330 = !DILocation(line: 149, column: 21, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3284, file: !647, line: 149, column: 13)
!3332 = !DILocation(line: 149, column: 18, scope: !3331)
!3333 = !DILocation(line: 149, column: 29, scope: !3331)
!3334 = !DILocation(line: 149, column: 32, scope: !3331)
!3335 = !DILocation(line: 149, column: 41, scope: !3331)
!3336 = !DILocation(line: 149, column: 45, scope: !3331)
!3337 = !DILocation(line: 149, column: 13, scope: !3284)
!3338 = !DILocation(line: 151, column: 13, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3331, file: !647, line: 150, column: 9)
!3340 = !DILocation(line: 151, column: 19, scope: !3339)
!3341 = !DILocation(line: 151, column: 24, scope: !3339)
!3342 = !DILocation(line: 152, column: 20, scope: !3339)
!3343 = !DILocation(line: 152, column: 13, scope: !3339)
!3344 = !DILocation(line: 154, column: 5, scope: !3284)
!3345 = !DILocation(line: 156, column: 29, scope: !3188)
!3346 = !DILocation(line: 156, column: 38, scope: !3188)
!3347 = !DILocation(line: 156, column: 44, scope: !3188)
!3348 = !DILocation(line: 156, column: 53, scope: !3188)
!3349 = !DILocation(line: 156, column: 15, scope: !3188)
!3350 = !DILocation(line: 156, column: 13, scope: !3188)
!3351 = !DILocation(line: 157, column: 9, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 157, column: 9)
!3353 = !DILocation(line: 157, column: 17, scope: !3352)
!3354 = !DILocation(line: 157, column: 21, scope: !3352)
!3355 = !DILocation(line: 157, column: 24, scope: !3352)
!3356 = !DILocation(line: 157, column: 32, scope: !3352)
!3357 = !DILocation(line: 157, column: 9, scope: !3188)
!3358 = !DILocation(line: 157, column: 48, scope: !3352)
!3359 = !DILocation(line: 158, column: 32, scope: !3188)
!3360 = !DILocation(line: 158, column: 22, scope: !3188)
!3361 = !DILocation(line: 158, column: 5, scope: !3188)
!3362 = !DILocation(line: 158, column: 11, scope: !3188)
!3363 = !DILocation(line: 158, column: 20, scope: !3188)
!3364 = !DILocation(line: 159, column: 5, scope: !3188)
!3365 = !DILocation(line: 159, column: 11, scope: !3188)
!3366 = !DILocation(line: 159, column: 16, scope: !3188)
!3367 = !DILocation(line: 160, column: 15, scope: !3188)
!3368 = !DILocation(line: 160, column: 24, scope: !3188)
!3369 = !DILocation(line: 160, column: 13, scope: !3188)
!3370 = !DILocation(line: 162, column: 10, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 162, column: 9)
!3372 = !DILocation(line: 162, column: 16, scope: !3371)
!3373 = !DILocation(line: 162, column: 21, scope: !3371)
!3374 = !DILocation(line: 162, column: 44, scope: !3371)
!3375 = !DILocation(line: 162, column: 9, scope: !3188)
!3376 = !DILocation(line: 164, column: 13, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !647, line: 164, column: 13)
!3378 = distinct !DILexicalBlock(scope: !3371, file: !647, line: 163, column: 5)
!3379 = !DILocation(line: 164, column: 21, scope: !3377)
!3380 = !DILocation(line: 164, column: 13, scope: !3378)
!3381 = !DILocation(line: 164, column: 30, scope: !3377)
!3382 = !DILocation(line: 165, column: 16, scope: !3378)
!3383 = !DILocation(line: 165, column: 9, scope: !3378)
!3384 = !DILocation(line: 167, column: 5, scope: !3188)
!3385 = !DILocation(line: 167, column: 11, scope: !3188)
!3386 = !DILocation(line: 167, column: 16, scope: !3188)
!3387 = !DILocation(line: 169, column: 9, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 169, column: 9)
!3389 = !DILocation(line: 169, column: 17, scope: !3388)
!3390 = !DILocation(line: 169, column: 9, scope: !3188)
!3391 = !DILocation(line: 169, column: 33, scope: !3388)
!3392 = !DILocation(line: 169, column: 26, scope: !3388)
!3393 = !DILocation(line: 172, column: 9, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 172, column: 9)
!3395 = !DILocation(line: 172, column: 18, scope: !3394)
!3396 = !DILocation(line: 172, column: 22, scope: !3394)
!3397 = !DILocation(line: 172, column: 9, scope: !3188)
!3398 = !DILocation(line: 174, column: 33, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3394, file: !647, line: 173, column: 5)
!3400 = !DILocation(line: 174, column: 42, scope: !3399)
!3401 = !DILocation(line: 174, column: 48, scope: !3399)
!3402 = !DILocation(line: 174, column: 57, scope: !3399)
!3403 = !DILocation(line: 174, column: 19, scope: !3399)
!3404 = !DILocation(line: 174, column: 17, scope: !3399)
!3405 = !DILocation(line: 175, column: 13, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3399, file: !647, line: 175, column: 13)
!3407 = !DILocation(line: 175, column: 21, scope: !3406)
!3408 = !DILocation(line: 175, column: 25, scope: !3406)
!3409 = !DILocation(line: 175, column: 28, scope: !3406)
!3410 = !DILocation(line: 175, column: 36, scope: !3406)
!3411 = !DILocation(line: 175, column: 13, scope: !3399)
!3412 = !DILocation(line: 175, column: 53, scope: !3406)
!3413 = !DILocation(line: 176, column: 38, scope: !3399)
!3414 = !DILocation(line: 176, column: 28, scope: !3399)
!3415 = !DILocation(line: 176, column: 9, scope: !3399)
!3416 = !DILocation(line: 176, column: 15, scope: !3399)
!3417 = !DILocation(line: 176, column: 26, scope: !3399)
!3418 = !DILocation(line: 177, column: 9, scope: !3399)
!3419 = !DILocation(line: 177, column: 15, scope: !3399)
!3420 = !DILocation(line: 177, column: 20, scope: !3399)
!3421 = !DILocation(line: 178, column: 5, scope: !3399)
!3422 = !DILocation(line: 179, column: 15, scope: !3188)
!3423 = !DILocation(line: 179, column: 24, scope: !3188)
!3424 = !DILocation(line: 179, column: 13, scope: !3188)
!3425 = !DILocation(line: 181, column: 9, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 181, column: 9)
!3427 = !DILocation(line: 181, column: 17, scope: !3426)
!3428 = !DILocation(line: 181, column: 9, scope: !3188)
!3429 = !DILocation(line: 181, column: 33, scope: !3426)
!3430 = !DILocation(line: 181, column: 26, scope: !3426)
!3431 = !DILocation(line: 184, column: 9, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 184, column: 9)
!3433 = !DILocation(line: 184, column: 18, scope: !3432)
!3434 = !DILocation(line: 184, column: 22, scope: !3432)
!3435 = !DILocation(line: 184, column: 9, scope: !3188)
!3436 = !DILocation(line: 187, column: 14, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !647, line: 187, column: 13)
!3438 = distinct !DILexicalBlock(scope: !3432, file: !647, line: 185, column: 5)
!3439 = !DILocation(line: 187, column: 20, scope: !3437)
!3440 = !DILocation(line: 187, column: 25, scope: !3437)
!3441 = !DILocation(line: 187, column: 55, scope: !3437)
!3442 = !DILocation(line: 187, column: 13, scope: !3438)
!3443 = !DILocation(line: 187, column: 61, scope: !3437)
!3444 = !DILocation(line: 189, column: 33, scope: !3438)
!3445 = !DILocation(line: 189, column: 42, scope: !3438)
!3446 = !DILocation(line: 189, column: 48, scope: !3438)
!3447 = !DILocation(line: 189, column: 57, scope: !3438)
!3448 = !DILocation(line: 189, column: 19, scope: !3438)
!3449 = !DILocation(line: 189, column: 17, scope: !3438)
!3450 = !DILocation(line: 190, column: 13, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3438, file: !647, line: 190, column: 13)
!3452 = !DILocation(line: 190, column: 21, scope: !3451)
!3453 = !DILocation(line: 190, column: 25, scope: !3451)
!3454 = !DILocation(line: 190, column: 28, scope: !3451)
!3455 = !DILocation(line: 190, column: 36, scope: !3451)
!3456 = !DILocation(line: 190, column: 13, scope: !3438)
!3457 = !DILocation(line: 190, column: 52, scope: !3451)
!3458 = !DILocation(line: 191, column: 38, scope: !3438)
!3459 = !DILocation(line: 191, column: 28, scope: !3438)
!3460 = !DILocation(line: 191, column: 9, scope: !3438)
!3461 = !DILocation(line: 191, column: 15, scope: !3438)
!3462 = !DILocation(line: 191, column: 26, scope: !3438)
!3463 = !DILocation(line: 192, column: 9, scope: !3438)
!3464 = !DILocation(line: 192, column: 15, scope: !3438)
!3465 = !DILocation(line: 192, column: 20, scope: !3438)
!3466 = !DILocation(line: 193, column: 5, scope: !3438)
!3467 = !DILocation(line: 196, column: 17, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3188, file: !647, line: 196, column: 9)
!3469 = !DILocation(line: 196, column: 26, scope: !3468)
!3470 = !DILocation(line: 196, column: 14, scope: !3468)
!3471 = !DILocation(line: 196, column: 9, scope: !3188)
!3472 = !DILocation(line: 199, column: 16, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3468, file: !647, line: 197, column: 5)
!3474 = !DILocation(line: 199, column: 9, scope: !3473)
!3475 = !DILocation(line: 204, column: 16, scope: !3188)
!3476 = !DILocation(line: 204, column: 5, scope: !3188)
!3477 = !DILocation(line: 205, column: 5, scope: !3188)
!3478 = !DILocation(line: 206, column: 1, scope: !3188)
!3479 = distinct !DISubprogram(name: "lwm2m_stringToUri", scope: !647, file: !647, line: 208, type: !3480, isLocal: false, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: false, unit: !646, variables: !488)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!58, !548, !438, !665}
!3482 = !DILocalVariable(name: "buffer", arg: 1, scope: !3479, file: !647, line: 208, type: !548)
!3483 = !DILocation(line: 208, column: 36, scope: !3479)
!3484 = !DILocalVariable(name: "buffer_len", arg: 2, scope: !3479, file: !647, line: 209, type: !438)
!3485 = !DILocation(line: 209, column: 30, scope: !3479)
!3486 = !DILocalVariable(name: "uriP", arg: 3, scope: !3479, file: !647, line: 210, type: !665)
!3487 = !DILocation(line: 210, column: 37, scope: !3479)
!3488 = !DILocalVariable(name: "head", scope: !3479, file: !647, line: 212, type: !438)
!3489 = !DILocation(line: 212, column: 12, scope: !3479)
!3490 = !DILocalVariable(name: "readNum", scope: !3479, file: !647, line: 213, type: !58)
!3491 = !DILocation(line: 213, column: 9, scope: !3479)
!3492 = !DILocation(line: 217, column: 9, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 217, column: 9)
!3494 = !DILocation(line: 217, column: 16, scope: !3493)
!3495 = !DILocation(line: 217, column: 24, scope: !3493)
!3496 = !DILocation(line: 217, column: 27, scope: !3493)
!3497 = !DILocation(line: 217, column: 38, scope: !3493)
!3498 = !DILocation(line: 217, column: 43, scope: !3493)
!3499 = !DILocation(line: 217, column: 46, scope: !3493)
!3500 = !DILocation(line: 217, column: 51, scope: !3493)
!3501 = !DILocation(line: 217, column: 9, scope: !3479)
!3502 = !DILocation(line: 217, column: 60, scope: !3493)
!3503 = !DILocation(line: 219, column: 12, scope: !3479)
!3504 = !DILocation(line: 219, column: 5, scope: !3479)
!3505 = !DILocation(line: 222, column: 10, scope: !3479)
!3506 = !DILocation(line: 223, column: 5, scope: !3479)
!3507 = !DILocation(line: 223, column: 12, scope: !3479)
!3508 = !DILocation(line: 223, column: 19, scope: !3479)
!3509 = !DILocation(line: 223, column: 17, scope: !3479)
!3510 = !DILocation(line: 223, column: 30, scope: !3479)
!3511 = !DILocation(line: 223, column: 33, scope: !3479)
!3512 = !DILocation(line: 225, column: 13, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 224, column: 5)
!3514 = distinct !{!3514, !3506, !3515}
!3515 = !DILocation(line: 226, column: 5, scope: !3479)
!3516 = !DILocation(line: 227, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 227, column: 9)
!3518 = !DILocation(line: 227, column: 17, scope: !3517)
!3519 = !DILocation(line: 227, column: 14, scope: !3517)
!3520 = !DILocation(line: 227, column: 9, scope: !3479)
!3521 = !DILocation(line: 227, column: 29, scope: !3517)
!3522 = !DILocation(line: 230, column: 9, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 230, column: 9)
!3524 = !DILocation(line: 230, column: 16, scope: !3523)
!3525 = !DILocation(line: 230, column: 22, scope: !3523)
!3526 = !DILocation(line: 230, column: 9, scope: !3479)
!3527 = !DILocation(line: 230, column: 30, scope: !3523)
!3528 = !DILocation(line: 231, column: 9, scope: !3479)
!3529 = !DILocation(line: 232, column: 9, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 232, column: 9)
!3531 = !DILocation(line: 232, column: 17, scope: !3530)
!3532 = !DILocation(line: 232, column: 14, scope: !3530)
!3533 = !DILocation(line: 232, column: 9, scope: !3479)
!3534 = !DILocation(line: 232, column: 29, scope: !3530)
!3535 = !DILocation(line: 235, column: 42, scope: !3479)
!3536 = !DILocation(line: 235, column: 50, scope: !3479)
!3537 = !DILocation(line: 235, column: 15, scope: !3479)
!3538 = !DILocation(line: 235, column: 13, scope: !3479)
!3539 = !DILocation(line: 236, column: 9, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 236, column: 9)
!3541 = !DILocation(line: 236, column: 17, scope: !3540)
!3542 = !DILocation(line: 236, column: 21, scope: !3540)
!3543 = !DILocation(line: 236, column: 24, scope: !3540)
!3544 = !DILocation(line: 236, column: 32, scope: !3540)
!3545 = !DILocation(line: 236, column: 9, scope: !3479)
!3546 = !DILocation(line: 236, column: 48, scope: !3540)
!3547 = !DILocation(line: 237, column: 32, scope: !3479)
!3548 = !DILocation(line: 237, column: 22, scope: !3479)
!3549 = !DILocation(line: 237, column: 5, scope: !3479)
!3550 = !DILocation(line: 237, column: 11, scope: !3479)
!3551 = !DILocation(line: 237, column: 20, scope: !3479)
!3552 = !DILocation(line: 238, column: 5, scope: !3479)
!3553 = !DILocation(line: 238, column: 11, scope: !3479)
!3554 = !DILocation(line: 238, column: 16, scope: !3479)
!3555 = !DILocation(line: 240, column: 9, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 240, column: 9)
!3557 = !DILocation(line: 240, column: 16, scope: !3556)
!3558 = !DILocation(line: 240, column: 22, scope: !3556)
!3559 = !DILocation(line: 240, column: 9, scope: !3479)
!3560 = !DILocation(line: 240, column: 35, scope: !3556)
!3561 = !DILocation(line: 240, column: 30, scope: !3556)
!3562 = !DILocation(line: 241, column: 9, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 241, column: 9)
!3564 = !DILocation(line: 241, column: 17, scope: !3563)
!3565 = !DILocation(line: 241, column: 14, scope: !3563)
!3566 = !DILocation(line: 241, column: 9, scope: !3479)
!3567 = !DILocation(line: 245, column: 16, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3563, file: !647, line: 242, column: 5)
!3569 = !DILocation(line: 245, column: 9, scope: !3568)
!3570 = !DILocation(line: 248, column: 42, scope: !3479)
!3571 = !DILocation(line: 248, column: 50, scope: !3479)
!3572 = !DILocation(line: 248, column: 15, scope: !3479)
!3573 = !DILocation(line: 248, column: 13, scope: !3479)
!3574 = !DILocation(line: 249, column: 9, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 249, column: 9)
!3576 = !DILocation(line: 249, column: 17, scope: !3575)
!3577 = !DILocation(line: 249, column: 21, scope: !3575)
!3578 = !DILocation(line: 249, column: 24, scope: !3575)
!3579 = !DILocation(line: 249, column: 32, scope: !3575)
!3580 = !DILocation(line: 249, column: 9, scope: !3479)
!3581 = !DILocation(line: 249, column: 49, scope: !3575)
!3582 = !DILocation(line: 250, column: 34, scope: !3479)
!3583 = !DILocation(line: 250, column: 24, scope: !3479)
!3584 = !DILocation(line: 250, column: 5, scope: !3479)
!3585 = !DILocation(line: 250, column: 11, scope: !3479)
!3586 = !DILocation(line: 250, column: 22, scope: !3479)
!3587 = !DILocation(line: 251, column: 5, scope: !3479)
!3588 = !DILocation(line: 251, column: 11, scope: !3479)
!3589 = !DILocation(line: 251, column: 16, scope: !3479)
!3590 = !DILocation(line: 253, column: 9, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 253, column: 9)
!3592 = !DILocation(line: 253, column: 16, scope: !3591)
!3593 = !DILocation(line: 253, column: 22, scope: !3591)
!3594 = !DILocation(line: 253, column: 9, scope: !3479)
!3595 = !DILocation(line: 253, column: 35, scope: !3591)
!3596 = !DILocation(line: 253, column: 30, scope: !3591)
!3597 = !DILocation(line: 254, column: 9, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 254, column: 9)
!3599 = !DILocation(line: 254, column: 17, scope: !3598)
!3600 = !DILocation(line: 254, column: 14, scope: !3598)
!3601 = !DILocation(line: 254, column: 9, scope: !3479)
!3602 = !DILocation(line: 258, column: 16, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !647, line: 255, column: 5)
!3604 = !DILocation(line: 258, column: 9, scope: !3603)
!3605 = !DILocation(line: 261, column: 42, scope: !3479)
!3606 = !DILocation(line: 261, column: 50, scope: !3479)
!3607 = !DILocation(line: 261, column: 15, scope: !3479)
!3608 = !DILocation(line: 261, column: 13, scope: !3479)
!3609 = !DILocation(line: 262, column: 9, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 262, column: 9)
!3611 = !DILocation(line: 262, column: 17, scope: !3610)
!3612 = !DILocation(line: 262, column: 21, scope: !3610)
!3613 = !DILocation(line: 262, column: 24, scope: !3610)
!3614 = !DILocation(line: 262, column: 32, scope: !3610)
!3615 = !DILocation(line: 262, column: 9, scope: !3479)
!3616 = !DILocation(line: 262, column: 49, scope: !3610)
!3617 = !DILocation(line: 263, column: 34, scope: !3479)
!3618 = !DILocation(line: 263, column: 24, scope: !3479)
!3619 = !DILocation(line: 263, column: 5, scope: !3479)
!3620 = !DILocation(line: 263, column: 11, scope: !3479)
!3621 = !DILocation(line: 263, column: 22, scope: !3479)
!3622 = !DILocation(line: 264, column: 5, scope: !3479)
!3623 = !DILocation(line: 264, column: 11, scope: !3479)
!3624 = !DILocation(line: 264, column: 16, scope: !3479)
!3625 = !DILocation(line: 266, column: 9, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3479, file: !647, line: 266, column: 9)
!3627 = !DILocation(line: 266, column: 17, scope: !3626)
!3628 = !DILocation(line: 266, column: 14, scope: !3626)
!3629 = !DILocation(line: 266, column: 9, scope: !3479)
!3630 = !DILocation(line: 266, column: 29, scope: !3626)
!3631 = !DILocation(line: 271, column: 12, scope: !3479)
!3632 = !DILocation(line: 271, column: 5, scope: !3479)
!3633 = !DILocation(line: 272, column: 1, scope: !3479)
!3634 = distinct !DISubprogram(name: "uri_toString", scope: !647, file: !647, line: 274, type: !3635, isLocal: false, isDefinition: true, scopeLine: 278, flags: DIFlagPrototyped, isOptimized: false, unit: !646, variables: !488)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!58, !665, !186, !438, !3637}
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DIDerivedType(tag: DW_TAG_typedef, name: "uri_depth_t", file: !246, line: 231, baseType: !245)
!3639 = !DILocalVariable(name: "uriP", arg: 1, scope: !3634, file: !647, line: 274, type: !665)
!3640 = !DILocation(line: 274, column: 32, scope: !3634)
!3641 = !DILocalVariable(name: "buffer", arg: 2, scope: !3634, file: !647, line: 275, type: !186)
!3642 = !DILocation(line: 275, column: 28, scope: !3634)
!3643 = !DILocalVariable(name: "bufferLen", arg: 3, scope: !3634, file: !647, line: 276, type: !438)
!3644 = !DILocation(line: 276, column: 25, scope: !3634)
!3645 = !DILocalVariable(name: "depthP", arg: 4, scope: !3634, file: !647, line: 277, type: !3637)
!3646 = !DILocation(line: 277, column: 32, scope: !3634)
!3647 = !DILocalVariable(name: "head", scope: !3634, file: !647, line: 279, type: !438)
!3648 = !DILocation(line: 279, column: 12, scope: !3634)
!3649 = !DILocalVariable(name: "res", scope: !3634, file: !647, line: 280, type: !58)
!3650 = !DILocation(line: 280, column: 9, scope: !3634)
!3651 = !DILocation(line: 285, column: 5, scope: !3634)
!3652 = !DILocation(line: 285, column: 15, scope: !3634)
!3653 = !DILocation(line: 287, column: 9, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3634, file: !647, line: 287, column: 9)
!3655 = !DILocation(line: 287, column: 14, scope: !3654)
!3656 = !DILocation(line: 287, column: 9, scope: !3634)
!3657 = !DILocation(line: 289, column: 13, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !647, line: 289, column: 13)
!3659 = distinct !DILexicalBlock(scope: !3654, file: !647, line: 288, column: 5)
!3660 = !DILocation(line: 289, column: 13, scope: !3659)
!3661 = !DILocation(line: 289, column: 22, scope: !3658)
!3662 = !DILocation(line: 289, column: 29, scope: !3658)
!3663 = !DILocation(line: 289, column: 21, scope: !3658)
!3664 = !DILocation(line: 290, column: 9, scope: !3659)
!3665 = !DILocation(line: 293, column: 10, scope: !3634)
!3666 = !DILocation(line: 295, column: 27, scope: !3634)
!3667 = !DILocation(line: 295, column: 33, scope: !3634)
!3668 = !DILocation(line: 295, column: 43, scope: !3634)
!3669 = !DILocation(line: 295, column: 52, scope: !3634)
!3670 = !DILocation(line: 295, column: 50, scope: !3634)
!3671 = !DILocation(line: 295, column: 58, scope: !3634)
!3672 = !DILocation(line: 295, column: 70, scope: !3634)
!3673 = !DILocation(line: 295, column: 68, scope: !3634)
!3674 = !DILocation(line: 295, column: 11, scope: !3634)
!3675 = !DILocation(line: 295, column: 9, scope: !3634)
!3676 = !DILocation(line: 296, column: 9, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3634, file: !647, line: 296, column: 9)
!3678 = !DILocation(line: 296, column: 13, scope: !3677)
!3679 = !DILocation(line: 296, column: 9, scope: !3634)
!3680 = !DILocation(line: 296, column: 19, scope: !3677)
!3681 = !DILocation(line: 297, column: 13, scope: !3634)
!3682 = !DILocation(line: 297, column: 10, scope: !3634)
!3683 = !DILocation(line: 298, column: 9, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3634, file: !647, line: 298, column: 9)
!3685 = !DILocation(line: 298, column: 17, scope: !3684)
!3686 = !DILocation(line: 298, column: 27, scope: !3684)
!3687 = !DILocation(line: 298, column: 14, scope: !3684)
!3688 = !DILocation(line: 298, column: 9, scope: !3634)
!3689 = !DILocation(line: 298, column: 32, scope: !3684)
!3690 = !DILocation(line: 299, column: 9, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3634, file: !647, line: 299, column: 9)
!3692 = !DILocation(line: 299, column: 9, scope: !3634)
!3693 = !DILocation(line: 299, column: 18, scope: !3691)
!3694 = !DILocation(line: 299, column: 25, scope: !3691)
!3695 = !DILocation(line: 299, column: 17, scope: !3691)
!3696 = !DILocation(line: 301, column: 9, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3634, file: !647, line: 301, column: 9)
!3698 = !DILocation(line: 301, column: 9, scope: !3634)
!3699 = !DILocation(line: 303, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3697, file: !647, line: 302, column: 5)
!3701 = !DILocation(line: 303, column: 16, scope: !3700)
!3702 = !DILocation(line: 303, column: 22, scope: !3700)
!3703 = !DILocation(line: 304, column: 13, scope: !3700)
!3704 = !DILocation(line: 305, column: 31, scope: !3700)
!3705 = !DILocation(line: 305, column: 37, scope: !3700)
!3706 = !DILocation(line: 305, column: 49, scope: !3700)
!3707 = !DILocation(line: 305, column: 58, scope: !3700)
!3708 = !DILocation(line: 305, column: 56, scope: !3700)
!3709 = !DILocation(line: 305, column: 64, scope: !3700)
!3710 = !DILocation(line: 305, column: 76, scope: !3700)
!3711 = !DILocation(line: 305, column: 74, scope: !3700)
!3712 = !DILocation(line: 305, column: 15, scope: !3700)
!3713 = !DILocation(line: 305, column: 13, scope: !3700)
!3714 = !DILocation(line: 306, column: 13, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3700, file: !647, line: 306, column: 13)
!3716 = !DILocation(line: 306, column: 17, scope: !3715)
!3717 = !DILocation(line: 306, column: 13, scope: !3700)
!3718 = !DILocation(line: 306, column: 23, scope: !3715)
!3719 = !DILocation(line: 307, column: 17, scope: !3700)
!3720 = !DILocation(line: 307, column: 14, scope: !3700)
!3721 = !DILocation(line: 308, column: 13, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3700, file: !647, line: 308, column: 13)
!3723 = !DILocation(line: 308, column: 21, scope: !3722)
!3724 = !DILocation(line: 308, column: 31, scope: !3722)
!3725 = !DILocation(line: 308, column: 18, scope: !3722)
!3726 = !DILocation(line: 308, column: 13, scope: !3700)
!3727 = !DILocation(line: 308, column: 36, scope: !3722)
!3728 = !DILocation(line: 309, column: 13, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3700, file: !647, line: 309, column: 13)
!3730 = !DILocation(line: 309, column: 13, scope: !3700)
!3731 = !DILocation(line: 309, column: 22, scope: !3729)
!3732 = !DILocation(line: 309, column: 29, scope: !3729)
!3733 = !DILocation(line: 309, column: 21, scope: !3729)
!3734 = !DILocation(line: 310, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3700, file: !647, line: 310, column: 13)
!3736 = !DILocation(line: 310, column: 13, scope: !3700)
!3737 = !DILocation(line: 312, column: 13, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !647, line: 311, column: 9)
!3739 = !DILocation(line: 312, column: 20, scope: !3738)
!3740 = !DILocation(line: 312, column: 26, scope: !3738)
!3741 = !DILocation(line: 313, column: 17, scope: !3738)
!3742 = !DILocation(line: 314, column: 35, scope: !3738)
!3743 = !DILocation(line: 314, column: 41, scope: !3738)
!3744 = !DILocation(line: 314, column: 53, scope: !3738)
!3745 = !DILocation(line: 314, column: 62, scope: !3738)
!3746 = !DILocation(line: 314, column: 60, scope: !3738)
!3747 = !DILocation(line: 314, column: 68, scope: !3738)
!3748 = !DILocation(line: 314, column: 80, scope: !3738)
!3749 = !DILocation(line: 314, column: 78, scope: !3738)
!3750 = !DILocation(line: 314, column: 19, scope: !3738)
!3751 = !DILocation(line: 314, column: 17, scope: !3738)
!3752 = !DILocation(line: 315, column: 17, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3738, file: !647, line: 315, column: 17)
!3754 = !DILocation(line: 315, column: 21, scope: !3753)
!3755 = !DILocation(line: 315, column: 17, scope: !3738)
!3756 = !DILocation(line: 315, column: 27, scope: !3753)
!3757 = !DILocation(line: 316, column: 21, scope: !3738)
!3758 = !DILocation(line: 316, column: 18, scope: !3738)
!3759 = !DILocation(line: 317, column: 17, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3738, file: !647, line: 317, column: 17)
!3761 = !DILocation(line: 317, column: 25, scope: !3760)
!3762 = !DILocation(line: 317, column: 35, scope: !3760)
!3763 = !DILocation(line: 317, column: 22, scope: !3760)
!3764 = !DILocation(line: 317, column: 17, scope: !3738)
!3765 = !DILocation(line: 317, column: 40, scope: !3760)
!3766 = !DILocation(line: 318, column: 17, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3738, file: !647, line: 318, column: 17)
!3768 = !DILocation(line: 318, column: 17, scope: !3738)
!3769 = !DILocation(line: 318, column: 26, scope: !3767)
!3770 = !DILocation(line: 318, column: 33, scope: !3767)
!3771 = !DILocation(line: 318, column: 25, scope: !3767)
!3772 = !DILocation(line: 319, column: 9, scope: !3738)
!3773 = !DILocation(line: 320, column: 5, scope: !3700)
!3774 = !DILocation(line: 322, column: 5, scope: !3634)
!3775 = !DILocation(line: 322, column: 12, scope: !3634)
!3776 = !DILocation(line: 322, column: 18, scope: !3634)
!3777 = !DILocation(line: 323, column: 9, scope: !3634)
!3778 = !DILocation(line: 327, column: 12, scope: !3634)
!3779 = !DILocation(line: 327, column: 5, scope: !3634)
!3780 = !DILocation(line: 328, column: 1, scope: !3634)
!3781 = distinct !DISubprogram(name: "utils_textToInt", scope: !217, file: !217, line: 56, type: !3782, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!58, !186, !58, !3784}
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!3785 = !DILocalVariable(name: "buffer", arg: 1, scope: !3781, file: !217, line: 56, type: !186)
!3786 = !DILocation(line: 56, column: 31, scope: !3781)
!3787 = !DILocalVariable(name: "length", arg: 2, scope: !3781, file: !217, line: 57, type: !58)
!3788 = !DILocation(line: 57, column: 25, scope: !3781)
!3789 = !DILocalVariable(name: "dataP", arg: 3, scope: !3781, file: !217, line: 58, type: !3784)
!3790 = !DILocation(line: 58, column: 31, scope: !3781)
!3791 = !DILocalVariable(name: "result", scope: !3781, file: !217, line: 60, type: !3792)
!3792 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !80, line: 55, baseType: !440)
!3793 = !DILocation(line: 60, column: 14, scope: !3781)
!3794 = !DILocalVariable(name: "sign", scope: !3781, file: !217, line: 61, type: !58)
!3795 = !DILocation(line: 61, column: 9, scope: !3781)
!3796 = !DILocalVariable(name: "i", scope: !3781, file: !217, line: 62, type: !58)
!3797 = !DILocation(line: 62, column: 9, scope: !3781)
!3798 = !DILocation(line: 64, column: 14, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3781, file: !217, line: 64, column: 9)
!3800 = !DILocation(line: 64, column: 11, scope: !3799)
!3801 = !DILocation(line: 64, column: 9, scope: !3781)
!3802 = !DILocation(line: 64, column: 22, scope: !3799)
!3803 = !DILocation(line: 66, column: 9, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3781, file: !217, line: 66, column: 9)
!3805 = !DILocation(line: 66, column: 19, scope: !3804)
!3806 = !DILocation(line: 66, column: 9, scope: !3781)
!3807 = !DILocation(line: 68, column: 14, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3804, file: !217, line: 67, column: 5)
!3809 = !DILocation(line: 69, column: 11, scope: !3808)
!3810 = !DILocation(line: 70, column: 5, scope: !3808)
!3811 = !DILocation(line: 72, column: 5, scope: !3781)
!3812 = !DILocation(line: 72, column: 12, scope: !3781)
!3813 = !DILocation(line: 72, column: 16, scope: !3781)
!3814 = !DILocation(line: 72, column: 14, scope: !3781)
!3815 = !DILocation(line: 74, column: 20, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !217, line: 74, column: 13)
!3817 = distinct !DILexicalBlock(scope: !3781, file: !217, line: 73, column: 5)
!3818 = !DILocation(line: 74, column: 27, scope: !3816)
!3819 = !DILocation(line: 74, column: 17, scope: !3816)
!3820 = !DILocation(line: 74, column: 30, scope: !3816)
!3821 = !DILocation(line: 74, column: 33, scope: !3816)
!3822 = !DILocation(line: 74, column: 40, scope: !3816)
!3823 = !DILocation(line: 74, column: 43, scope: !3816)
!3824 = !DILocation(line: 74, column: 13, scope: !3817)
!3825 = !DILocation(line: 76, column: 17, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !217, line: 76, column: 17)
!3827 = distinct !DILexicalBlock(scope: !3816, file: !217, line: 75, column: 9)
!3828 = !DILocation(line: 76, column: 24, scope: !3826)
!3829 = !DILocation(line: 76, column: 17, scope: !3827)
!3830 = !DILocation(line: 76, column: 45, scope: !3826)
!3831 = !DILocation(line: 77, column: 20, scope: !3827)
!3832 = !DILocation(line: 78, column: 23, scope: !3827)
!3833 = !DILocation(line: 78, column: 30, scope: !3827)
!3834 = !DILocation(line: 78, column: 33, scope: !3827)
!3835 = !DILocation(line: 78, column: 20, scope: !3827)
!3836 = !DILocation(line: 79, column: 9, scope: !3827)
!3837 = !DILocation(line: 82, column: 13, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3816, file: !217, line: 81, column: 9)
!3839 = !DILocation(line: 84, column: 10, scope: !3817)
!3840 = distinct !{!3840, !3811, !3841}
!3841 = !DILocation(line: 85, column: 5, scope: !3781)
!3842 = !DILocation(line: 87, column: 9, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3781, file: !217, line: 87, column: 9)
!3844 = !DILocation(line: 87, column: 16, scope: !3843)
!3845 = !DILocation(line: 87, column: 9, scope: !3781)
!3846 = !DILocation(line: 87, column: 29, scope: !3843)
!3847 = !DILocation(line: 89, column: 9, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3781, file: !217, line: 89, column: 9)
!3849 = !DILocation(line: 89, column: 14, scope: !3848)
!3850 = !DILocation(line: 89, column: 9, scope: !3781)
!3851 = !DILocation(line: 91, column: 22, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3848, file: !217, line: 90, column: 5)
!3853 = !DILocation(line: 91, column: 20, scope: !3852)
!3854 = !DILocation(line: 91, column: 10, scope: !3852)
!3855 = !DILocation(line: 91, column: 16, scope: !3852)
!3856 = !DILocation(line: 92, column: 5, scope: !3852)
!3857 = !DILocation(line: 95, column: 18, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3848, file: !217, line: 94, column: 5)
!3859 = !DILocation(line: 95, column: 10, scope: !3858)
!3860 = !DILocation(line: 95, column: 16, scope: !3858)
!3861 = !DILocation(line: 98, column: 5, scope: !3781)
!3862 = !DILocation(line: 99, column: 1, scope: !3781)
!3863 = distinct !DISubprogram(name: "utils_textToFloat", scope: !217, file: !217, line: 101, type: !3864, isLocal: false, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!58, !186, !58, !3866}
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!3867 = !DILocalVariable(name: "buffer", arg: 1, scope: !3863, file: !217, line: 101, type: !186)
!3868 = !DILocation(line: 101, column: 33, scope: !3863)
!3869 = !DILocalVariable(name: "length", arg: 2, scope: !3863, file: !217, line: 102, type: !58)
!3870 = !DILocation(line: 102, column: 27, scope: !3863)
!3871 = !DILocalVariable(name: "dataP", arg: 3, scope: !3863, file: !217, line: 103, type: !3866)
!3872 = !DILocation(line: 103, column: 32, scope: !3863)
!3873 = !DILocalVariable(name: "result", scope: !3863, file: !217, line: 105, type: !253)
!3874 = !DILocation(line: 105, column: 12, scope: !3863)
!3875 = !DILocalVariable(name: "sign", scope: !3863, file: !217, line: 106, type: !58)
!3876 = !DILocation(line: 106, column: 9, scope: !3863)
!3877 = !DILocalVariable(name: "i", scope: !3863, file: !217, line: 107, type: !58)
!3878 = !DILocation(line: 107, column: 9, scope: !3863)
!3879 = !DILocation(line: 109, column: 14, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3863, file: !217, line: 109, column: 9)
!3881 = !DILocation(line: 109, column: 11, scope: !3880)
!3882 = !DILocation(line: 109, column: 9, scope: !3863)
!3883 = !DILocation(line: 109, column: 22, scope: !3880)
!3884 = !DILocation(line: 111, column: 9, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3863, file: !217, line: 111, column: 9)
!3886 = !DILocation(line: 111, column: 19, scope: !3885)
!3887 = !DILocation(line: 111, column: 9, scope: !3863)
!3888 = !DILocation(line: 113, column: 14, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3885, file: !217, line: 112, column: 5)
!3890 = !DILocation(line: 114, column: 11, scope: !3889)
!3891 = !DILocation(line: 115, column: 5, scope: !3889)
!3892 = !DILocation(line: 118, column: 14, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3885, file: !217, line: 117, column: 5)
!3894 = !DILocation(line: 119, column: 11, scope: !3893)
!3895 = !DILocation(line: 122, column: 12, scope: !3863)
!3896 = !DILocation(line: 123, column: 5, scope: !3863)
!3897 = !DILocation(line: 123, column: 12, scope: !3863)
!3898 = !DILocation(line: 123, column: 16, scope: !3863)
!3899 = !DILocation(line: 123, column: 14, scope: !3863)
!3900 = !DILocation(line: 123, column: 23, scope: !3863)
!3901 = !DILocation(line: 123, column: 26, scope: !3863)
!3902 = !DILocation(line: 123, column: 33, scope: !3863)
!3903 = !DILocation(line: 123, column: 36, scope: !3863)
!3904 = !DILocation(line: 125, column: 20, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !217, line: 125, column: 13)
!3906 = distinct !DILexicalBlock(scope: !3863, file: !217, line: 124, column: 5)
!3907 = !DILocation(line: 125, column: 27, scope: !3905)
!3908 = !DILocation(line: 125, column: 17, scope: !3905)
!3909 = !DILocation(line: 125, column: 30, scope: !3905)
!3910 = !DILocation(line: 125, column: 33, scope: !3905)
!3911 = !DILocation(line: 125, column: 40, scope: !3905)
!3912 = !DILocation(line: 125, column: 43, scope: !3905)
!3913 = !DILocation(line: 125, column: 13, scope: !3906)
!3914 = !DILocation(line: 127, column: 17, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !217, line: 127, column: 17)
!3916 = distinct !DILexicalBlock(scope: !3905, file: !217, line: 126, column: 9)
!3917 = !DILocation(line: 127, column: 24, scope: !3915)
!3918 = !DILocation(line: 127, column: 17, scope: !3916)
!3919 = !DILocation(line: 127, column: 42, scope: !3915)
!3920 = !DILocation(line: 128, column: 20, scope: !3916)
!3921 = !DILocation(line: 129, column: 24, scope: !3916)
!3922 = !DILocation(line: 129, column: 31, scope: !3916)
!3923 = !DILocation(line: 129, column: 34, scope: !3916)
!3924 = !DILocation(line: 129, column: 23, scope: !3916)
!3925 = !DILocation(line: 129, column: 20, scope: !3916)
!3926 = !DILocation(line: 130, column: 9, scope: !3916)
!3927 = !DILocation(line: 133, column: 13, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3905, file: !217, line: 132, column: 9)
!3929 = !DILocation(line: 135, column: 10, scope: !3906)
!3930 = distinct !{!3930, !3896, !3931}
!3931 = !DILocation(line: 136, column: 5, scope: !3863)
!3932 = !DILocation(line: 137, column: 9, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3863, file: !217, line: 137, column: 9)
!3934 = !DILocation(line: 137, column: 16, scope: !3933)
!3935 = !DILocation(line: 137, column: 19, scope: !3933)
!3936 = !DILocation(line: 137, column: 9, scope: !3863)
!3937 = !DILocalVariable(name: "dec", scope: !3938, file: !217, line: 139, type: !253)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !217, line: 138, column: 5)
!3939 = !DILocation(line: 139, column: 16, scope: !3938)
!3940 = !DILocation(line: 141, column: 10, scope: !3938)
!3941 = !DILocation(line: 142, column: 13, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3938, file: !217, line: 142, column: 13)
!3943 = !DILocation(line: 142, column: 18, scope: !3942)
!3944 = !DILocation(line: 142, column: 15, scope: !3942)
!3945 = !DILocation(line: 142, column: 13, scope: !3938)
!3946 = !DILocation(line: 142, column: 26, scope: !3942)
!3947 = !DILocation(line: 144, column: 13, scope: !3938)
!3948 = !DILocation(line: 145, column: 9, scope: !3938)
!3949 = !DILocation(line: 145, column: 16, scope: !3938)
!3950 = !DILocation(line: 145, column: 20, scope: !3938)
!3951 = !DILocation(line: 145, column: 18, scope: !3938)
!3952 = !DILocation(line: 147, column: 24, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !217, line: 147, column: 17)
!3954 = distinct !DILexicalBlock(scope: !3938, file: !217, line: 146, column: 9)
!3955 = !DILocation(line: 147, column: 31, scope: !3953)
!3956 = !DILocation(line: 147, column: 21, scope: !3953)
!3957 = !DILocation(line: 147, column: 34, scope: !3953)
!3958 = !DILocation(line: 147, column: 37, scope: !3953)
!3959 = !DILocation(line: 147, column: 44, scope: !3953)
!3960 = !DILocation(line: 147, column: 47, scope: !3953)
!3961 = !DILocation(line: 147, column: 17, scope: !3954)
!3962 = !DILocation(line: 149, column: 21, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !217, line: 149, column: 21)
!3964 = distinct !DILexicalBlock(scope: !3953, file: !217, line: 148, column: 13)
!3965 = !DILocation(line: 149, column: 28, scope: !3963)
!3966 = !DILocation(line: 149, column: 21, scope: !3964)
!3967 = !DILocation(line: 149, column: 45, scope: !3963)
!3968 = !DILocation(line: 150, column: 28, scope: !3964)
!3969 = !DILocation(line: 150, column: 35, scope: !3964)
!3970 = !DILocation(line: 150, column: 38, scope: !3964)
!3971 = !DILocation(line: 150, column: 27, scope: !3964)
!3972 = !DILocation(line: 150, column: 47, scope: !3964)
!3973 = !DILocation(line: 150, column: 45, scope: !3964)
!3974 = !DILocation(line: 150, column: 24, scope: !3964)
!3975 = !DILocation(line: 151, column: 21, scope: !3964)
!3976 = !DILocation(line: 152, column: 13, scope: !3964)
!3977 = !DILocation(line: 155, column: 17, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3953, file: !217, line: 154, column: 13)
!3979 = !DILocation(line: 157, column: 14, scope: !3954)
!3980 = distinct !{!3980, !3948, !3981}
!3981 = !DILocation(line: 158, column: 9, scope: !3938)
!3982 = !DILocation(line: 159, column: 5, scope: !3938)
!3983 = !DILocation(line: 161, column: 14, scope: !3863)
!3984 = !DILocation(line: 161, column: 23, scope: !3863)
!3985 = !DILocation(line: 161, column: 21, scope: !3863)
!3986 = !DILocation(line: 161, column: 6, scope: !3863)
!3987 = !DILocation(line: 161, column: 12, scope: !3863)
!3988 = !DILocation(line: 162, column: 5, scope: !3863)
!3989 = !DILocation(line: 163, column: 1, scope: !3863)
!3990 = distinct !DISubprogram(name: "utils_intToText", scope: !217, file: !217, line: 165, type: !3991, isLocal: false, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!438, !254, !186, !438}
!3993 = !DILocalVariable(name: "data", arg: 1, scope: !3990, file: !217, line: 165, type: !254)
!3994 = !DILocation(line: 165, column: 32, scope: !3990)
!3995 = !DILocalVariable(name: "string", arg: 2, scope: !3990, file: !217, line: 166, type: !186)
!3996 = !DILocation(line: 166, column: 34, scope: !3990)
!3997 = !DILocalVariable(name: "length", arg: 3, scope: !3990, file: !217, line: 167, type: !438)
!3998 = !DILocation(line: 167, column: 31, scope: !3990)
!3999 = !DILocalVariable(name: "index", scope: !3990, file: !217, line: 169, type: !58)
!4000 = !DILocation(line: 169, column: 9, scope: !3990)
!4001 = !DILocalVariable(name: "minus", scope: !3990, file: !217, line: 170, type: !136)
!4002 = !DILocation(line: 170, column: 10, scope: !3990)
!4003 = !DILocalVariable(name: "result", scope: !3990, file: !217, line: 171, type: !438)
!4004 = !DILocation(line: 171, column: 12, scope: !3990)
!4005 = !DILocation(line: 173, column: 9, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3990, file: !217, line: 173, column: 9)
!4007 = !DILocation(line: 173, column: 14, scope: !4006)
!4008 = !DILocation(line: 173, column: 9, scope: !3990)
!4009 = !DILocation(line: 175, column: 15, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4006, file: !217, line: 174, column: 5)
!4011 = !DILocation(line: 176, column: 20, scope: !4010)
!4012 = !DILocation(line: 176, column: 18, scope: !4010)
!4013 = !DILocation(line: 176, column: 14, scope: !4010)
!4014 = !DILocation(line: 177, column: 5, scope: !4010)
!4015 = !DILocation(line: 180, column: 15, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4006, file: !217, line: 179, column: 5)
!4017 = !DILocation(line: 183, column: 13, scope: !3990)
!4018 = !DILocation(line: 183, column: 20, scope: !3990)
!4019 = !DILocation(line: 183, column: 11, scope: !3990)
!4020 = !DILocation(line: 184, column: 5, scope: !3990)
!4021 = distinct !{!4021, !4020, !4022}
!4022 = !DILocation(line: 189, column: 36, scope: !3990)
!4023 = !DILocation(line: 186, column: 31, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3990, file: !217, line: 185, column: 5)
!4025 = !DILocation(line: 186, column: 35, scope: !4024)
!4026 = !DILocation(line: 186, column: 29, scope: !4024)
!4027 = !DILocation(line: 186, column: 25, scope: !4024)
!4028 = !DILocation(line: 186, column: 9, scope: !4024)
!4029 = !DILocation(line: 186, column: 16, scope: !4024)
!4030 = !DILocation(line: 186, column: 23, scope: !4024)
!4031 = !DILocation(line: 187, column: 14, scope: !4024)
!4032 = !DILocation(line: 188, column: 15, scope: !4024)
!4033 = !DILocation(line: 189, column: 5, scope: !4024)
!4034 = !DILocation(line: 189, column: 14, scope: !3990)
!4035 = !DILocation(line: 189, column: 20, scope: !3990)
!4036 = !DILocation(line: 189, column: 25, scope: !3990)
!4037 = !DILocation(line: 189, column: 28, scope: !3990)
!4038 = !DILocation(line: 189, column: 33, scope: !3990)
!4039 = !DILocation(line: 191, column: 9, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !3990, file: !217, line: 191, column: 9)
!4041 = !DILocation(line: 191, column: 14, scope: !4040)
!4042 = !DILocation(line: 191, column: 9, scope: !3990)
!4043 = !DILocation(line: 191, column: 19, scope: !4040)
!4044 = !DILocation(line: 193, column: 9, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !3990, file: !217, line: 193, column: 9)
!4046 = !DILocation(line: 193, column: 15, scope: !4045)
!4047 = !DILocation(line: 193, column: 9, scope: !3990)
!4048 = !DILocation(line: 195, column: 13, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !217, line: 195, column: 13)
!4050 = distinct !DILexicalBlock(scope: !4045, file: !217, line: 194, column: 5)
!4051 = !DILocation(line: 195, column: 19, scope: !4049)
!4052 = !DILocation(line: 195, column: 13, scope: !4050)
!4053 = !DILocation(line: 195, column: 25, scope: !4049)
!4054 = !DILocation(line: 196, column: 9, scope: !4050)
!4055 = !DILocation(line: 196, column: 16, scope: !4050)
!4056 = !DILocation(line: 196, column: 23, scope: !4050)
!4057 = !DILocation(line: 197, column: 5, scope: !4050)
!4058 = !DILocation(line: 200, column: 14, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4045, file: !217, line: 199, column: 5)
!4060 = !DILocation(line: 203, column: 14, scope: !3990)
!4061 = !DILocation(line: 203, column: 23, scope: !3990)
!4062 = !DILocation(line: 203, column: 21, scope: !3990)
!4063 = !DILocation(line: 203, column: 12, scope: !3990)
!4064 = !DILocation(line: 205, column: 9, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3990, file: !217, line: 205, column: 9)
!4066 = !DILocation(line: 205, column: 18, scope: !4065)
!4067 = !DILocation(line: 205, column: 16, scope: !4065)
!4068 = !DILocation(line: 205, column: 9, scope: !3990)
!4069 = !DILocation(line: 207, column: 17, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4065, file: !217, line: 206, column: 5)
!4071 = !DILocation(line: 207, column: 25, scope: !4070)
!4072 = !DILocation(line: 207, column: 34, scope: !4070)
!4073 = !DILocation(line: 207, column: 32, scope: !4070)
!4074 = !DILocation(line: 207, column: 41, scope: !4070)
!4075 = !DILocation(line: 207, column: 9, scope: !4070)
!4076 = !DILocation(line: 208, column: 5, scope: !4070)
!4077 = !DILocation(line: 210, column: 12, scope: !3990)
!4078 = !DILocation(line: 210, column: 5, scope: !3990)
!4079 = !DILocation(line: 211, column: 1, scope: !3990)
!4080 = distinct !DISubprogram(name: "utils_floatToText", scope: !217, file: !217, line: 213, type: !4081, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!438, !253, !186, !438}
!4083 = !DILocalVariable(name: "data", arg: 1, scope: !4080, file: !217, line: 213, type: !253)
!4084 = !DILocation(line: 213, column: 33, scope: !4080)
!4085 = !DILocalVariable(name: "string", arg: 2, scope: !4080, file: !217, line: 214, type: !186)
!4086 = !DILocation(line: 214, column: 36, scope: !4080)
!4087 = !DILocalVariable(name: "length", arg: 3, scope: !4080, file: !217, line: 215, type: !438)
!4088 = !DILocation(line: 215, column: 33, scope: !4080)
!4089 = !DILocalVariable(name: "intLength", scope: !4080, file: !217, line: 217, type: !438)
!4090 = !DILocation(line: 217, column: 12, scope: !4080)
!4091 = !DILocalVariable(name: "decLength", scope: !4080, file: !217, line: 218, type: !438)
!4092 = !DILocation(line: 218, column: 12, scope: !4080)
!4093 = !DILocalVariable(name: "intPart", scope: !4080, file: !217, line: 219, type: !254)
!4094 = !DILocation(line: 219, column: 13, scope: !4080)
!4095 = !DILocalVariable(name: "decPart", scope: !4080, file: !217, line: 220, type: !253)
!4096 = !DILocation(line: 220, column: 12, scope: !4080)
!4097 = !DILocation(line: 222, column: 9, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4080, file: !217, line: 222, column: 9)
!4099 = !DILocation(line: 222, column: 14, scope: !4098)
!4100 = !DILocation(line: 222, column: 35, scope: !4098)
!4101 = !DILocation(line: 222, column: 38, scope: !4098)
!4102 = !DILocation(line: 222, column: 43, scope: !4098)
!4103 = !DILocation(line: 222, column: 9, scope: !4080)
!4104 = !DILocation(line: 222, column: 65, scope: !4098)
!4105 = !DILocation(line: 224, column: 24, scope: !4080)
!4106 = !DILocation(line: 224, column: 15, scope: !4080)
!4107 = !DILocation(line: 224, column: 13, scope: !4080)
!4108 = !DILocation(line: 225, column: 15, scope: !4080)
!4109 = !DILocation(line: 225, column: 22, scope: !4080)
!4110 = !DILocation(line: 225, column: 20, scope: !4080)
!4111 = !DILocation(line: 225, column: 13, scope: !4080)
!4112 = !DILocation(line: 226, column: 9, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4080, file: !217, line: 226, column: 9)
!4114 = !DILocation(line: 226, column: 17, scope: !4113)
!4115 = !DILocation(line: 226, column: 9, scope: !4080)
!4116 = !DILocation(line: 228, column: 23, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4113, file: !217, line: 227, column: 5)
!4118 = !DILocation(line: 228, column: 21, scope: !4117)
!4119 = !DILocation(line: 228, column: 17, scope: !4117)
!4120 = !DILocation(line: 229, column: 5, scope: !4117)
!4121 = !DILocation(line: 232, column: 23, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4113, file: !217, line: 231, column: 5)
!4123 = !DILocation(line: 232, column: 21, scope: !4122)
!4124 = !DILocation(line: 232, column: 17, scope: !4122)
!4125 = !DILocation(line: 235, column: 9, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4080, file: !217, line: 235, column: 9)
!4127 = !DILocation(line: 235, column: 17, scope: !4126)
!4128 = !DILocation(line: 235, column: 9, scope: !4080)
!4129 = !DILocation(line: 237, column: 17, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4126, file: !217, line: 236, column: 5)
!4131 = !DILocation(line: 238, column: 5, scope: !4130)
!4132 = !DILocation(line: 240, column: 9, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4080, file: !217, line: 240, column: 9)
!4134 = !DILocation(line: 240, column: 17, scope: !4133)
!4135 = !DILocation(line: 240, column: 22, scope: !4133)
!4136 = !DILocation(line: 240, column: 25, scope: !4133)
!4137 = !DILocation(line: 240, column: 30, scope: !4133)
!4138 = !DILocation(line: 240, column: 9, scope: !4080)
!4139 = !DILocation(line: 243, column: 13, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !217, line: 243, column: 13)
!4141 = distinct !DILexicalBlock(scope: !4133, file: !217, line: 241, column: 5)
!4142 = !DILocation(line: 243, column: 20, scope: !4140)
!4143 = !DILocation(line: 243, column: 13, scope: !4141)
!4144 = !DILocation(line: 243, column: 25, scope: !4140)
!4145 = !DILocation(line: 244, column: 9, scope: !4141)
!4146 = !DILocation(line: 244, column: 19, scope: !4141)
!4147 = !DILocation(line: 245, column: 9, scope: !4141)
!4148 = !DILocation(line: 245, column: 19, scope: !4141)
!4149 = !DILocation(line: 246, column: 19, scope: !4141)
!4150 = !DILocation(line: 247, column: 5, scope: !4141)
!4151 = !DILocation(line: 250, column: 37, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4133, file: !217, line: 249, column: 5)
!4153 = !DILocation(line: 250, column: 46, scope: !4152)
!4154 = !DILocation(line: 250, column: 54, scope: !4152)
!4155 = !DILocation(line: 250, column: 21, scope: !4152)
!4156 = !DILocation(line: 250, column: 19, scope: !4152)
!4157 = !DILocation(line: 251, column: 13, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !217, line: 251, column: 13)
!4159 = !DILocation(line: 251, column: 23, scope: !4158)
!4160 = !DILocation(line: 251, column: 13, scope: !4152)
!4161 = !DILocation(line: 251, column: 29, scope: !4158)
!4162 = !DILocation(line: 253, column: 15, scope: !4080)
!4163 = !DILocation(line: 254, column: 9, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4080, file: !217, line: 254, column: 9)
!4165 = !DILocation(line: 254, column: 17, scope: !4164)
!4166 = !DILocation(line: 254, column: 9, scope: !4080)
!4167 = !DILocalVariable(name: "noiseFloor", scope: !4168, file: !217, line: 256, type: !253)
!4168 = distinct !DILexicalBlock(scope: !4164, file: !217, line: 255, column: 5)
!4169 = !DILocation(line: 256, column: 16, scope: !4168)
!4170 = !DILocation(line: 258, column: 13, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4168, file: !217, line: 258, column: 13)
!4172 = !DILocation(line: 258, column: 26, scope: !4171)
!4173 = !DILocation(line: 258, column: 33, scope: !4171)
!4174 = !DILocation(line: 258, column: 23, scope: !4171)
!4175 = !DILocation(line: 258, column: 13, scope: !4168)
!4176 = !DILocation(line: 258, column: 38, scope: !4171)
!4177 = !DILocation(line: 260, column: 20, scope: !4168)
!4178 = !DILocation(line: 261, column: 9, scope: !4168)
!4179 = distinct !{!4179, !4178, !4180}
!4180 = !DILocation(line: 265, column: 57, scope: !4168)
!4181 = !DILocation(line: 263, column: 21, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4168, file: !217, line: 262, column: 9)
!4183 = !DILocation(line: 264, column: 24, scope: !4182)
!4184 = !DILocation(line: 265, column: 9, scope: !4182)
!4185 = !DILocation(line: 265, column: 18, scope: !4168)
!4186 = !DILocation(line: 265, column: 37, scope: !4168)
!4187 = !DILocation(line: 265, column: 28, scope: !4168)
!4188 = !DILocation(line: 265, column: 26, scope: !4168)
!4189 = !DILocation(line: 265, column: 47, scope: !4168)
!4190 = !DILocation(line: 265, column: 45, scope: !4168)
!4191 = !DILocation(line: 267, column: 37, scope: !4168)
!4192 = !DILocation(line: 267, column: 46, scope: !4168)
!4193 = !DILocation(line: 267, column: 55, scope: !4168)
!4194 = !DILocation(line: 267, column: 53, scope: !4168)
!4195 = !DILocation(line: 267, column: 66, scope: !4168)
!4196 = !DILocation(line: 267, column: 75, scope: !4168)
!4197 = !DILocation(line: 267, column: 73, scope: !4168)
!4198 = !DILocation(line: 267, column: 21, scope: !4168)
!4199 = !DILocation(line: 267, column: 19, scope: !4168)
!4200 = !DILocation(line: 268, column: 13, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4168, file: !217, line: 268, column: 13)
!4202 = !DILocation(line: 268, column: 23, scope: !4201)
!4203 = !DILocation(line: 268, column: 13, scope: !4168)
!4204 = !DILocation(line: 268, column: 29, scope: !4201)
!4205 = !DILocation(line: 271, column: 9, scope: !4168)
!4206 = !DILocation(line: 271, column: 16, scope: !4168)
!4207 = !DILocation(line: 271, column: 27, scope: !4168)
!4208 = !DILocation(line: 272, column: 5, scope: !4168)
!4209 = !DILocation(line: 274, column: 12, scope: !4080)
!4210 = !DILocation(line: 274, column: 24, scope: !4080)
!4211 = !DILocation(line: 274, column: 22, scope: !4080)
!4212 = !DILocation(line: 274, column: 5, scope: !4080)
!4213 = !DILocation(line: 275, column: 1, scope: !4080)
!4214 = distinct !DISubprogram(name: "utils_stringToBinding", scope: !217, file: !217, line: 277, type: !4215, isLocal: false, isDefinition: true, scopeLine: 279, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!132, !186, !438}
!4217 = !DILocalVariable(name: "buffer", arg: 1, scope: !4214, file: !217, line: 277, type: !186)
!4218 = !DILocation(line: 277, column: 49, scope: !4214)
!4219 = !DILocalVariable(name: "length", arg: 2, scope: !4214, file: !217, line: 278, type: !438)
!4220 = !DILocation(line: 278, column: 46, scope: !4214)
!4221 = !DILocation(line: 280, column: 9, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4214, file: !217, line: 280, column: 9)
!4223 = !DILocation(line: 280, column: 16, scope: !4222)
!4224 = !DILocation(line: 280, column: 9, scope: !4214)
!4225 = !DILocation(line: 280, column: 22, scope: !4222)
!4226 = !DILocation(line: 282, column: 13, scope: !4214)
!4227 = !DILocation(line: 282, column: 5, scope: !4214)
!4228 = !DILocation(line: 285, column: 17, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4214, file: !217, line: 283, column: 5)
!4230 = !DILocation(line: 285, column: 9, scope: !4229)
!4231 = !DILocation(line: 288, column: 13, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !217, line: 286, column: 9)
!4233 = !DILocation(line: 290, column: 21, scope: !4232)
!4234 = !DILocation(line: 290, column: 13, scope: !4232)
!4235 = !DILocation(line: 293, column: 18, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !217, line: 291, column: 13)
!4237 = !DILocation(line: 295, column: 18, scope: !4236)
!4238 = !DILocation(line: 297, column: 17, scope: !4236)
!4239 = !DILocation(line: 299, column: 13, scope: !4232)
!4240 = !DILocation(line: 301, column: 17, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4232, file: !217, line: 301, column: 17)
!4242 = !DILocation(line: 301, column: 27, scope: !4241)
!4243 = !DILocation(line: 301, column: 34, scope: !4241)
!4244 = !DILocation(line: 301, column: 37, scope: !4241)
!4245 = !DILocation(line: 301, column: 47, scope: !4241)
!4246 = !DILocation(line: 301, column: 17, scope: !4232)
!4247 = !DILocation(line: 303, column: 17, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4241, file: !217, line: 302, column: 13)
!4249 = !DILocation(line: 305, column: 13, scope: !4232)
!4250 = !DILocation(line: 307, column: 13, scope: !4232)
!4251 = !DILocation(line: 309, column: 9, scope: !4229)
!4252 = !DILocation(line: 312, column: 21, scope: !4229)
!4253 = !DILocation(line: 312, column: 13, scope: !4229)
!4254 = !DILocation(line: 315, column: 17, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4229, file: !217, line: 313, column: 13)
!4256 = !DILocation(line: 317, column: 21, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4255, file: !217, line: 317, column: 21)
!4258 = !DILocation(line: 317, column: 31, scope: !4257)
!4259 = !DILocation(line: 317, column: 21, scope: !4255)
!4260 = !DILocation(line: 319, column: 21, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !217, line: 318, column: 17)
!4262 = !DILocation(line: 321, column: 17, scope: !4255)
!4263 = !DILocation(line: 323, column: 17, scope: !4255)
!4264 = !DILocation(line: 325, column: 13, scope: !4229)
!4265 = !DILocation(line: 328, column: 13, scope: !4229)
!4266 = !DILocation(line: 331, column: 5, scope: !4214)
!4267 = !DILocation(line: 332, column: 1, scope: !4214)
!4268 = distinct !DISubprogram(name: "utils_convertMediaType", scope: !217, file: !217, line: 334, type: !4269, isLocal: false, isDefinition: true, scopeLine: 335, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!185, !435}
!4271 = !DILocalVariable(name: "type", arg: 1, scope: !4268, file: !217, line: 334, type: !435)
!4272 = !DILocation(line: 334, column: 63, scope: !4268)
!4273 = !DILocation(line: 337, column: 22, scope: !4268)
!4274 = !DILocation(line: 337, column: 12, scope: !4268)
!4275 = !DILocation(line: 337, column: 5, scope: !4268)
!4276 = !DILocation(line: 340, column: 9, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4268, file: !217, line: 338, column: 5)
!4278 = !DILocation(line: 342, column: 9, scope: !4277)
!4279 = !DILocation(line: 344, column: 9, scope: !4277)
!4280 = !DILocation(line: 346, column: 9, scope: !4277)
!4281 = !DILocation(line: 348, column: 9, scope: !4277)
!4282 = !DILocation(line: 350, column: 9, scope: !4277)
!4283 = !DILocation(line: 352, column: 9, scope: !4277)
!4284 = !DILocation(line: 355, column: 9, scope: !4277)
!4285 = !DILocation(line: 357, column: 1, scope: !4268)
!4286 = distinct !DISubprogram(name: "utils_findBootstrapServer", scope: !217, file: !217, line: 376, type: !4287, isLocal: false, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!4289, !4312, !54}
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_server_t", file: !6, line: 474, baseType: !4291)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_server_", file: !6, line: 461, size: 640, elements: !4292)
!4292 = !{!4293, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4291, file: !6, line: 463, baseType: !4294, size: 64)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "secObjInstID", scope: !4291, file: !6, line: 464, baseType: !79, size: 16, offset: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "shortID", scope: !4291, file: !6, line: 465, baseType: !79, size: 16, offset: 80)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !4291, file: !6, line: 466, baseType: !139, size: 64, offset: 128)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "registration", scope: !4291, file: !6, line: 467, baseType: !139, size: 64, offset: 192)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !4291, file: !6, line: 468, baseType: !132, size: 32, offset: 256)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !4291, file: !6, line: 469, baseType: !54, size: 64, offset: 320)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4291, file: !6, line: 470, baseType: !178, size: 32, offset: 384)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !4291, file: !6, line: 471, baseType: !117, size: 64, offset: 448)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !4291, file: !6, line: 472, baseType: !136, size: 8, offset: 512)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "block1Data", scope: !4291, file: !6, line: 473, baseType: !4305, size: 64, offset: 576)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_block1_data_t", file: !6, line: 452, baseType: !4307)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_block1_data_", file: !6, line: 454, size: 192, elements: !4308)
!4308 = !{!4309, !4310, !4311}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "block1buffer", scope: !4307, file: !6, line: 456, baseType: !186, size: 64)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "block1bufferSize", scope: !4307, file: !6, line: 457, baseType: !438, size: 64, offset: 64)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "lastmid", scope: !4307, file: !6, line: 458, baseType: !79, size: 16, offset: 128)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64)
!4313 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !4314)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !4315)
!4315 = !{!4316, !4373, !4374, !4375, !4376, !4397}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !4314, file: !6, line: 659, baseType: !4317, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !4319)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !4320)
!4320 = !{!4321, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4348}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4319, file: !6, line: 545, baseType: !4322, size: 64)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !4319, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4319, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !4319, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !4319, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !4319, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !4319, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !4319, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !4319, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !4319, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !4319, file: !6, line: 555, baseType: !4333, size: 64, offset: 576)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !4335)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !4336)
!4336 = !{!4337, !4339, !4340}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4335, file: !6, line: 538, baseType: !4338, size: 64)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4335, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !4335, file: !6, line: 540, baseType: !4341, size: 64, offset: 128)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !4343)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !4344)
!4344 = !{!4345, !4347}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4343, file: !6, line: 214, baseType: !4346, size: 64)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4343, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !4319, file: !6, line: 556, baseType: !4349, size: 64, offset: 640)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !4351)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !4352)
!4352 = !{!4353, !4355, !4356, !4357, !4365, !4366, !4372}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4351, file: !6, line: 495, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4351, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !4351, file: !6, line: 497, baseType: !4322, size: 64, offset: 128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !4351, file: !6, line: 498, baseType: !4358, size: 64, offset: 192)
!4358 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !4359)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !4360)
!4360 = !{!4361, !4362, !4363, !4364}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4359, file: !6, line: 255, baseType: !107, size: 8)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !4359, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !4359, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !4359, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4351, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4351, file: !6, line: 500, baseType: !4367, size: 64, offset: 320)
!4367 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !4368)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{null, !79, !4371, !58, !185, !186, !58, !54}
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !4351, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !4314, file: !6, line: 660, baseType: !4367, size: 64, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !4314, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !4314, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !4314, file: !6, line: 668, baseType: !4377, size: 64, offset: 256)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !4379)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !4380)
!4380 = !{!4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4396}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4379, file: !6, line: 572, baseType: !4377, size: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !4379, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !4379, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !4379, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !4379, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !4379, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !4379, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !4379, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !4379, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4379, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4379, file: !6, line: 582, baseType: !4392, size: 64, offset: 640)
!4392 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !4393)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{null, !4377, !54}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !4379, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !4314, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!4398 = !DILocalVariable(name: "contextP", arg: 1, scope: !4286, file: !217, line: 376, type: !4312)
!4399 = !DILocation(line: 376, column: 62, scope: !4286)
!4400 = !DILocalVariable(name: "fromSessionH", arg: 2, scope: !4286, file: !217, line: 377, type: !54)
!4401 = !DILocation(line: 377, column: 51, scope: !4286)
!4402 = !DILocation(line: 394, column: 5, scope: !4286)
!4403 = distinct !DISubprogram(name: "utils_isAltPathValid", scope: !217, file: !217, line: 399, type: !4404, isLocal: false, isDefinition: true, scopeLine: 400, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!58, !548}
!4406 = !DILocalVariable(name: "altPath", arg: 1, scope: !4403, file: !217, line: 399, type: !548)
!4407 = !DILocation(line: 399, column: 39, scope: !4403)
!4408 = !DILocalVariable(name: "i", scope: !4403, file: !217, line: 401, type: !58)
!4409 = !DILocation(line: 401, column: 9, scope: !4403)
!4410 = !DILocation(line: 403, column: 9, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4403, file: !217, line: 403, column: 9)
!4412 = !DILocation(line: 403, column: 17, scope: !4411)
!4413 = !DILocation(line: 403, column: 9, scope: !4403)
!4414 = !DILocation(line: 403, column: 26, scope: !4411)
!4415 = !DILocation(line: 405, column: 9, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4403, file: !217, line: 405, column: 9)
!4417 = !DILocation(line: 405, column: 20, scope: !4416)
!4418 = !DILocation(line: 405, column: 9, scope: !4403)
!4419 = !DILocation(line: 405, column: 28, scope: !4416)
!4420 = !DILocation(line: 407, column: 12, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4403, file: !217, line: 407, column: 5)
!4422 = !DILocation(line: 407, column: 10, scope: !4421)
!4423 = !DILocation(line: 407, column: 18, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4421, file: !217, line: 407, column: 5)
!4425 = !DILocation(line: 407, column: 26, scope: !4424)
!4426 = !DILocation(line: 407, column: 29, scope: !4424)
!4427 = !DILocation(line: 407, column: 5, scope: !4421)
!4428 = !DILocation(line: 410, column: 13, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !217, line: 410, column: 13)
!4430 = distinct !DILexicalBlock(scope: !4424, file: !217, line: 408, column: 5)
!4431 = !DILocation(line: 410, column: 21, scope: !4429)
!4432 = !DILocation(line: 410, column: 24, scope: !4429)
!4433 = !DILocation(line: 410, column: 13, scope: !4430)
!4434 = !DILocation(line: 410, column: 32, scope: !4429)
!4435 = !DILocation(line: 412, column: 14, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4430, file: !217, line: 412, column: 13)
!4437 = !DILocation(line: 412, column: 22, scope: !4436)
!4438 = !DILocation(line: 412, column: 25, scope: !4436)
!4439 = !DILocation(line: 412, column: 31, scope: !4436)
!4440 = !DILocation(line: 412, column: 34, scope: !4436)
!4441 = !DILocation(line: 412, column: 42, scope: !4436)
!4442 = !DILocation(line: 412, column: 45, scope: !4436)
!4443 = !DILocation(line: 413, column: 10, scope: !4436)
!4444 = !DILocation(line: 413, column: 14, scope: !4436)
!4445 = !DILocation(line: 413, column: 22, scope: !4436)
!4446 = !DILocation(line: 413, column: 25, scope: !4436)
!4447 = !DILocation(line: 413, column: 31, scope: !4436)
!4448 = !DILocation(line: 413, column: 34, scope: !4436)
!4449 = !DILocation(line: 413, column: 42, scope: !4436)
!4450 = !DILocation(line: 413, column: 45, scope: !4436)
!4451 = !DILocation(line: 414, column: 10, scope: !4436)
!4452 = !DILocation(line: 414, column: 14, scope: !4436)
!4453 = !DILocation(line: 414, column: 22, scope: !4436)
!4454 = !DILocation(line: 414, column: 25, scope: !4436)
!4455 = !DILocation(line: 414, column: 31, scope: !4436)
!4456 = !DILocation(line: 414, column: 34, scope: !4436)
!4457 = !DILocation(line: 414, column: 42, scope: !4436)
!4458 = !DILocation(line: 414, column: 45, scope: !4436)
!4459 = !DILocation(line: 415, column: 10, scope: !4436)
!4460 = !DILocation(line: 415, column: 14, scope: !4436)
!4461 = !DILocation(line: 415, column: 22, scope: !4436)
!4462 = !DILocation(line: 415, column: 25, scope: !4436)
!4463 = !DILocation(line: 416, column: 10, scope: !4436)
!4464 = !DILocation(line: 416, column: 14, scope: !4436)
!4465 = !DILocation(line: 416, column: 22, scope: !4436)
!4466 = !DILocation(line: 416, column: 25, scope: !4436)
!4467 = !DILocation(line: 417, column: 10, scope: !4436)
!4468 = !DILocation(line: 417, column: 14, scope: !4436)
!4469 = !DILocation(line: 417, column: 22, scope: !4436)
!4470 = !DILocation(line: 417, column: 25, scope: !4436)
!4471 = !DILocation(line: 418, column: 10, scope: !4436)
!4472 = !DILocation(line: 418, column: 14, scope: !4436)
!4473 = !DILocation(line: 418, column: 22, scope: !4436)
!4474 = !DILocation(line: 418, column: 25, scope: !4436)
!4475 = !DILocation(line: 419, column: 10, scope: !4436)
!4476 = !DILocation(line: 419, column: 14, scope: !4436)
!4477 = !DILocation(line: 419, column: 22, scope: !4436)
!4478 = !DILocation(line: 419, column: 25, scope: !4436)
!4479 = !DILocation(line: 412, column: 13, scope: !4430)
!4480 = !DILocation(line: 421, column: 13, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4436, file: !217, line: 420, column: 9)
!4482 = !DILocation(line: 424, column: 5, scope: !4430)
!4483 = !DILocation(line: 407, column: 37, scope: !4424)
!4484 = !DILocation(line: 407, column: 5, scope: !4424)
!4485 = distinct !{!4485, !4427, !4486}
!4486 = !DILocation(line: 424, column: 5, scope: !4421)
!4487 = !DILocation(line: 425, column: 5, scope: !4403)
!4488 = !DILocation(line: 426, column: 1, scope: !4403)
!4489 = distinct !DISubprogram(name: "utils_stringCopy", scope: !217, file: !217, line: 430, type: !4490, isLocal: false, isDefinition: true, scopeLine: 433, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!58, !117, !438, !548}
!4492 = !DILocalVariable(name: "buffer", arg: 1, scope: !4489, file: !217, line: 430, type: !117)
!4493 = !DILocation(line: 430, column: 29, scope: !4489)
!4494 = !DILocalVariable(name: "length", arg: 2, scope: !4489, file: !217, line: 431, type: !438)
!4495 = !DILocation(line: 431, column: 29, scope: !4489)
!4496 = !DILocalVariable(name: "str", arg: 3, scope: !4489, file: !217, line: 432, type: !548)
!4497 = !DILocation(line: 432, column: 35, scope: !4489)
!4498 = !DILocalVariable(name: "i", scope: !4489, file: !217, line: 434, type: !438)
!4499 = !DILocation(line: 434, column: 12, scope: !4489)
!4500 = !DILocation(line: 436, column: 12, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4489, file: !217, line: 436, column: 5)
!4502 = !DILocation(line: 436, column: 10, scope: !4501)
!4503 = !DILocation(line: 436, column: 18, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4501, file: !217, line: 436, column: 5)
!4505 = !DILocation(line: 436, column: 22, scope: !4504)
!4506 = !DILocation(line: 436, column: 20, scope: !4504)
!4507 = !DILocation(line: 436, column: 29, scope: !4504)
!4508 = !DILocation(line: 436, column: 32, scope: !4504)
!4509 = !DILocation(line: 436, column: 36, scope: !4504)
!4510 = !DILocation(line: 436, column: 39, scope: !4504)
!4511 = !DILocation(line: 436, column: 5, scope: !4501)
!4512 = !DILocation(line: 438, column: 21, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4504, file: !217, line: 437, column: 5)
!4514 = !DILocation(line: 438, column: 25, scope: !4513)
!4515 = !DILocation(line: 438, column: 9, scope: !4513)
!4516 = !DILocation(line: 438, column: 16, scope: !4513)
!4517 = !DILocation(line: 438, column: 19, scope: !4513)
!4518 = !DILocation(line: 439, column: 5, scope: !4513)
!4519 = !DILocation(line: 436, column: 47, scope: !4504)
!4520 = !DILocation(line: 436, column: 5, scope: !4504)
!4521 = distinct !{!4521, !4511, !4522}
!4522 = !DILocation(line: 439, column: 5, scope: !4501)
!4523 = !DILocation(line: 441, column: 9, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4489, file: !217, line: 441, column: 9)
!4525 = !DILocation(line: 441, column: 14, scope: !4524)
!4526 = !DILocation(line: 441, column: 11, scope: !4524)
!4527 = !DILocation(line: 441, column: 9, scope: !4489)
!4528 = !DILocation(line: 441, column: 22, scope: !4524)
!4529 = !DILocation(line: 443, column: 5, scope: !4489)
!4530 = !DILocation(line: 443, column: 12, scope: !4489)
!4531 = !DILocation(line: 443, column: 15, scope: !4489)
!4532 = !DILocation(line: 445, column: 17, scope: !4489)
!4533 = !DILocation(line: 445, column: 12, scope: !4489)
!4534 = !DILocation(line: 445, column: 5, scope: !4489)
!4535 = !DILocation(line: 446, column: 1, scope: !4489)
!4536 = distinct !DISubprogram(name: "utils_copyValue", scope: !217, file: !217, line: 448, type: !4537, isLocal: false, isDefinition: true, scopeLine: 451, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{null, !54, !4539, !438}
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4541 = !DILocalVariable(name: "dst", arg: 1, scope: !4536, file: !217, line: 448, type: !54)
!4542 = !DILocation(line: 448, column: 29, scope: !4536)
!4543 = !DILocalVariable(name: "src", arg: 2, scope: !4536, file: !217, line: 449, type: !4539)
!4544 = !DILocation(line: 449, column: 35, scope: !4536)
!4545 = !DILocalVariable(name: "len", arg: 3, scope: !4536, file: !217, line: 450, type: !438)
!4546 = !DILocation(line: 450, column: 29, scope: !4536)
!4547 = !DILocalVariable(name: "i", scope: !4536, file: !217, line: 456, type: !438)
!4548 = !DILocation(line: 456, column: 12, scope: !4536)
!4549 = !DILocation(line: 458, column: 12, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4536, file: !217, line: 458, column: 5)
!4551 = !DILocation(line: 458, column: 10, scope: !4550)
!4552 = !DILocation(line: 458, column: 17, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4550, file: !217, line: 458, column: 5)
!4554 = !DILocation(line: 458, column: 21, scope: !4553)
!4555 = !DILocation(line: 458, column: 19, scope: !4553)
!4556 = !DILocation(line: 458, column: 5, scope: !4550)
!4557 = !DILocation(line: 460, column: 43, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4553, file: !217, line: 459, column: 5)
!4559 = !DILocation(line: 460, column: 48, scope: !4558)
!4560 = !DILocation(line: 460, column: 52, scope: !4558)
!4561 = !DILocation(line: 460, column: 58, scope: !4558)
!4562 = !DILocation(line: 460, column: 56, scope: !4558)
!4563 = !DILocation(line: 460, column: 31, scope: !4558)
!4564 = !DILocation(line: 460, column: 21, scope: !4558)
!4565 = !DILocation(line: 460, column: 26, scope: !4558)
!4566 = !DILocation(line: 460, column: 9, scope: !4558)
!4567 = !DILocation(line: 460, column: 29, scope: !4558)
!4568 = !DILocation(line: 461, column: 5, scope: !4558)
!4569 = !DILocation(line: 458, column: 27, scope: !4553)
!4570 = !DILocation(line: 458, column: 5, scope: !4553)
!4571 = distinct !{!4571, !4556, !4572}
!4572 = !DILocation(line: 461, column: 5, scope: !4550)
!4573 = !DILocation(line: 464, column: 1, scope: !4536)
!4574 = distinct !DISubprogram(name: "utils_base64GetSize", scope: !217, file: !217, line: 486, type: !4575, isLocal: false, isDefinition: true, scopeLine: 487, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{!438, !438}
!4577 = !DILocalVariable(name: "dataLen", arg: 1, scope: !4574, file: !217, line: 486, type: !438)
!4578 = !DILocation(line: 486, column: 35, scope: !4574)
!4579 = !DILocalVariable(name: "result_len", scope: !4574, file: !217, line: 488, type: !438)
!4580 = !DILocation(line: 488, column: 12, scope: !4574)
!4581 = !DILocation(line: 490, column: 23, scope: !4574)
!4582 = !DILocation(line: 490, column: 31, scope: !4574)
!4583 = !DILocation(line: 490, column: 20, scope: !4574)
!4584 = !DILocation(line: 490, column: 16, scope: !4574)
!4585 = !DILocation(line: 491, column: 9, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4574, file: !217, line: 491, column: 9)
!4587 = !DILocation(line: 491, column: 17, scope: !4586)
!4588 = !DILocation(line: 491, column: 9, scope: !4574)
!4589 = !DILocation(line: 491, column: 33, scope: !4586)
!4590 = !DILocation(line: 491, column: 22, scope: !4586)
!4591 = !DILocation(line: 493, column: 12, scope: !4574)
!4592 = !DILocation(line: 493, column: 5, scope: !4574)
!4593 = distinct !DISubprogram(name: "utils_base64Encode", scope: !217, file: !217, line: 496, type: !4594, isLocal: false, isDefinition: true, scopeLine: 500, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!438, !186, !438, !186, !438}
!4596 = !DILocalVariable(name: "dataP", arg: 1, scope: !4593, file: !217, line: 496, type: !186)
!4597 = !DILocation(line: 496, column: 37, scope: !4593)
!4598 = !DILocalVariable(name: "dataLen", arg: 2, scope: !4593, file: !217, line: 497, type: !438)
!4599 = !DILocation(line: 497, column: 34, scope: !4593)
!4600 = !DILocalVariable(name: "bufferP", arg: 3, scope: !4593, file: !217, line: 498, type: !186)
!4601 = !DILocation(line: 498, column: 37, scope: !4593)
!4602 = !DILocalVariable(name: "bufferLen", arg: 4, scope: !4593, file: !217, line: 499, type: !438)
!4603 = !DILocation(line: 499, column: 34, scope: !4593)
!4604 = !DILocalVariable(name: "data_index", scope: !4593, file: !217, line: 501, type: !87)
!4605 = !DILocation(line: 501, column: 18, scope: !4593)
!4606 = !DILocalVariable(name: "result_index", scope: !4593, file: !217, line: 502, type: !87)
!4607 = !DILocation(line: 502, column: 18, scope: !4593)
!4608 = !DILocalVariable(name: "result_len", scope: !4593, file: !217, line: 503, type: !438)
!4609 = !DILocation(line: 503, column: 12, scope: !4593)
!4610 = !DILocation(line: 505, column: 38, scope: !4593)
!4611 = !DILocation(line: 505, column: 18, scope: !4593)
!4612 = !DILocation(line: 505, column: 16, scope: !4593)
!4613 = !DILocation(line: 507, column: 9, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4593, file: !217, line: 507, column: 9)
!4615 = !DILocation(line: 507, column: 22, scope: !4614)
!4616 = !DILocation(line: 507, column: 20, scope: !4614)
!4617 = !DILocation(line: 507, column: 9, scope: !4593)
!4618 = !DILocation(line: 507, column: 33, scope: !4614)
!4619 = !DILocation(line: 509, column: 16, scope: !4593)
!4620 = !DILocation(line: 510, column: 18, scope: !4593)
!4621 = !DILocation(line: 511, column: 5, scope: !4593)
!4622 = !DILocation(line: 511, column: 12, scope: !4593)
!4623 = !DILocation(line: 511, column: 25, scope: !4593)
!4624 = !DILocation(line: 511, column: 23, scope: !4593)
!4625 = !DILocation(line: 513, column: 17, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4593, file: !217, line: 512, column: 5)
!4627 = !DILocation(line: 513, column: 27, scope: !4626)
!4628 = !DILocation(line: 513, column: 25, scope: !4626)
!4629 = !DILocation(line: 513, column: 9, scope: !4626)
!4630 = !DILocation(line: 517, column: 13, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !217, line: 514, column: 9)
!4632 = !DILocation(line: 519, column: 49, scope: !4631)
!4633 = !DILocation(line: 519, column: 55, scope: !4631)
!4634 = !DILocation(line: 519, column: 67, scope: !4631)
!4635 = !DILocation(line: 519, column: 37, scope: !4631)
!4636 = !DILocation(line: 519, column: 13, scope: !4631)
!4637 = !DILocation(line: 519, column: 21, scope: !4631)
!4638 = !DILocation(line: 519, column: 35, scope: !4631)
!4639 = !DILocation(line: 520, column: 54, scope: !4631)
!4640 = !DILocation(line: 520, column: 60, scope: !4631)
!4641 = !DILocation(line: 520, column: 72, scope: !4631)
!4642 = !DILocation(line: 520, column: 80, scope: !4631)
!4643 = !DILocation(line: 520, column: 41, scope: !4631)
!4644 = !DILocation(line: 520, column: 13, scope: !4631)
!4645 = !DILocation(line: 520, column: 21, scope: !4631)
!4646 = !DILocation(line: 520, column: 34, scope: !4631)
!4647 = !DILocation(line: 520, column: 39, scope: !4631)
!4648 = !DILocation(line: 521, column: 13, scope: !4631)
!4649 = !DILocation(line: 521, column: 21, scope: !4631)
!4650 = !DILocation(line: 521, column: 34, scope: !4631)
!4651 = !DILocation(line: 521, column: 39, scope: !4631)
!4652 = !DILocation(line: 522, column: 13, scope: !4631)
!4653 = !DILocation(line: 522, column: 21, scope: !4631)
!4654 = !DILocation(line: 522, column: 34, scope: !4631)
!4655 = !DILocation(line: 522, column: 39, scope: !4631)
!4656 = !DILocation(line: 523, column: 13, scope: !4631)
!4657 = !DILocation(line: 525, column: 49, scope: !4631)
!4658 = !DILocation(line: 525, column: 55, scope: !4631)
!4659 = !DILocation(line: 525, column: 67, scope: !4631)
!4660 = !DILocation(line: 525, column: 37, scope: !4631)
!4661 = !DILocation(line: 525, column: 13, scope: !4631)
!4662 = !DILocation(line: 525, column: 21, scope: !4631)
!4663 = !DILocation(line: 525, column: 35, scope: !4631)
!4664 = !DILocation(line: 526, column: 54, scope: !4631)
!4665 = !DILocation(line: 526, column: 60, scope: !4631)
!4666 = !DILocation(line: 526, column: 72, scope: !4631)
!4667 = !DILocation(line: 526, column: 80, scope: !4631)
!4668 = !DILocation(line: 526, column: 88, scope: !4631)
!4669 = !DILocation(line: 526, column: 94, scope: !4631)
!4670 = !DILocation(line: 526, column: 105, scope: !4631)
!4671 = !DILocation(line: 526, column: 110, scope: !4631)
!4672 = !DILocation(line: 526, column: 85, scope: !4631)
!4673 = !DILocation(line: 526, column: 41, scope: !4631)
!4674 = !DILocation(line: 526, column: 13, scope: !4631)
!4675 = !DILocation(line: 526, column: 21, scope: !4631)
!4676 = !DILocation(line: 526, column: 34, scope: !4631)
!4677 = !DILocation(line: 526, column: 39, scope: !4631)
!4678 = !DILocation(line: 527, column: 54, scope: !4631)
!4679 = !DILocation(line: 527, column: 60, scope: !4631)
!4680 = !DILocation(line: 527, column: 71, scope: !4631)
!4681 = !DILocation(line: 527, column: 76, scope: !4631)
!4682 = !DILocation(line: 527, column: 84, scope: !4631)
!4683 = !DILocation(line: 527, column: 41, scope: !4631)
!4684 = !DILocation(line: 527, column: 13, scope: !4631)
!4685 = !DILocation(line: 527, column: 21, scope: !4631)
!4686 = !DILocation(line: 527, column: 34, scope: !4631)
!4687 = !DILocation(line: 527, column: 39, scope: !4631)
!4688 = !DILocation(line: 528, column: 13, scope: !4631)
!4689 = !DILocation(line: 528, column: 21, scope: !4631)
!4690 = !DILocation(line: 528, column: 34, scope: !4631)
!4691 = !DILocation(line: 528, column: 39, scope: !4631)
!4692 = !DILocation(line: 529, column: 13, scope: !4631)
!4693 = !DILocation(line: 531, column: 29, scope: !4631)
!4694 = !DILocation(line: 531, column: 37, scope: !4631)
!4695 = !DILocation(line: 531, column: 35, scope: !4631)
!4696 = !DILocation(line: 531, column: 49, scope: !4631)
!4697 = !DILocation(line: 531, column: 59, scope: !4631)
!4698 = !DILocation(line: 531, column: 57, scope: !4631)
!4699 = !DILocation(line: 531, column: 13, scope: !4631)
!4700 = !DILocation(line: 532, column: 13, scope: !4631)
!4701 = !DILocation(line: 534, column: 20, scope: !4626)
!4702 = !DILocation(line: 535, column: 22, scope: !4626)
!4703 = distinct !{!4703, !4621, !4704}
!4704 = !DILocation(line: 536, column: 5, scope: !4593)
!4705 = !DILocation(line: 538, column: 12, scope: !4593)
!4706 = !DILocation(line: 538, column: 5, scope: !4593)
!4707 = !DILocation(line: 539, column: 1, scope: !4593)
!4708 = distinct !DISubprogram(name: "prv_encodeBlock", scope: !217, file: !217, line: 477, type: !4709, isLocal: true, isDefinition: true, scopeLine: 479, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{null, !186, !186}
!4711 = !DILocalVariable(name: "input", arg: 1, scope: !4708, file: !217, line: 477, type: !186)
!4712 = !DILocation(line: 477, column: 37, scope: !4708)
!4713 = !DILocalVariable(name: "output", arg: 2, scope: !4708, file: !217, line: 478, type: !186)
!4714 = !DILocation(line: 478, column: 37, scope: !4708)
!4715 = !DILocation(line: 480, column: 29, scope: !4708)
!4716 = !DILocation(line: 480, column: 38, scope: !4708)
!4717 = !DILocation(line: 480, column: 17, scope: !4708)
!4718 = !DILocation(line: 480, column: 5, scope: !4708)
!4719 = !DILocation(line: 480, column: 15, scope: !4708)
!4720 = !DILocation(line: 481, column: 31, scope: !4708)
!4721 = !DILocation(line: 481, column: 40, scope: !4708)
!4722 = !DILocation(line: 481, column: 48, scope: !4708)
!4723 = !DILocation(line: 481, column: 57, scope: !4708)
!4724 = !DILocation(line: 481, column: 66, scope: !4708)
!4725 = !DILocation(line: 481, column: 54, scope: !4708)
!4726 = !DILocation(line: 481, column: 17, scope: !4708)
!4727 = !DILocation(line: 481, column: 5, scope: !4708)
!4728 = !DILocation(line: 481, column: 15, scope: !4708)
!4729 = !DILocation(line: 482, column: 31, scope: !4708)
!4730 = !DILocation(line: 482, column: 40, scope: !4708)
!4731 = !DILocation(line: 482, column: 48, scope: !4708)
!4732 = !DILocation(line: 482, column: 57, scope: !4708)
!4733 = !DILocation(line: 482, column: 66, scope: !4708)
!4734 = !DILocation(line: 482, column: 54, scope: !4708)
!4735 = !DILocation(line: 482, column: 17, scope: !4708)
!4736 = !DILocation(line: 482, column: 5, scope: !4708)
!4737 = !DILocation(line: 482, column: 15, scope: !4708)
!4738 = !DILocation(line: 483, column: 29, scope: !4708)
!4739 = !DILocation(line: 483, column: 38, scope: !4708)
!4740 = !DILocation(line: 483, column: 17, scope: !4708)
!4741 = !DILocation(line: 483, column: 5, scope: !4708)
!4742 = !DILocation(line: 483, column: 15, scope: !4708)
!4743 = !DILocation(line: 484, column: 1, scope: !4708)
!4744 = distinct !DISubprogram(name: "utils_depthToDatatype", scope: !217, file: !217, line: 541, type: !4745, isLocal: false, isDefinition: true, scopeLine: 542, flags: DIFlagPrototyped, isOptimized: false, unit: !216, variables: !488)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!689, !3638}
!4747 = !DILocalVariable(name: "depth", arg: 1, scope: !4744, file: !217, line: 541, type: !3638)
!4748 = !DILocation(line: 541, column: 53, scope: !4744)
!4749 = !DILocation(line: 543, column: 13, scope: !4744)
!4750 = !DILocation(line: 543, column: 5, scope: !4744)
!4751 = !DILocation(line: 546, column: 9, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4744, file: !217, line: 544, column: 5)
!4753 = !DILocation(line: 548, column: 9, scope: !4752)
!4754 = !DILocation(line: 550, column: 9, scope: !4752)
!4755 = !DILocation(line: 553, column: 5, scope: !4744)
!4756 = !DILocation(line: 554, column: 1, scope: !4744)
!4757 = distinct !DISubprogram(name: "lwm2m_decode_TLV", scope: !676, file: !676, line: 240, type: !4758, isLocal: false, isDefinition: true, scopeLine: 246, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!58, !442, !438, !4760, !2846, !3131, !3131}
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!4761 = !DILocalVariable(name: "buffer", arg: 1, scope: !4757, file: !676, line: 240, type: !442)
!4762 = !DILocation(line: 240, column: 38, scope: !4757)
!4763 = !DILocalVariable(name: "buffer_len", arg: 2, scope: !4757, file: !676, line: 241, type: !438)
!4764 = !DILocation(line: 241, column: 28, scope: !4757)
!4765 = !DILocalVariable(name: "oType", arg: 3, scope: !4757, file: !676, line: 242, type: !4760)
!4766 = !DILocation(line: 242, column: 41, scope: !4757)
!4767 = !DILocalVariable(name: "oID", arg: 4, scope: !4757, file: !676, line: 243, type: !2846)
!4768 = !DILocation(line: 243, column: 32, scope: !4757)
!4769 = !DILocalVariable(name: "oDataIndex", arg: 5, scope: !4757, file: !676, line: 244, type: !3131)
!4770 = !DILocation(line: 244, column: 30, scope: !4757)
!4771 = !DILocalVariable(name: "oDataLen", arg: 6, scope: !4757, file: !676, line: 245, type: !3131)
!4772 = !DILocation(line: 245, column: 30, scope: !4757)
!4773 = !DILocation(line: 250, column: 9, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4757, file: !676, line: 250, column: 9)
!4775 = !DILocation(line: 250, column: 20, scope: !4774)
!4776 = !DILocation(line: 250, column: 9, scope: !4757)
!4777 = !DILocation(line: 250, column: 25, scope: !4774)
!4778 = !DILocation(line: 252, column: 6, scope: !4757)
!4779 = !DILocation(line: 252, column: 17, scope: !4757)
!4780 = !DILocation(line: 254, column: 30, scope: !4757)
!4781 = !DILocation(line: 254, column: 39, scope: !4757)
!4782 = !DILocation(line: 254, column: 14, scope: !4757)
!4783 = !DILocation(line: 254, column: 6, scope: !4757)
!4784 = !DILocation(line: 254, column: 12, scope: !4757)
!4785 = !DILocation(line: 256, column: 10, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4757, file: !676, line: 256, column: 9)
!4787 = !DILocation(line: 256, column: 19, scope: !4786)
!4788 = !DILocation(line: 256, column: 26, scope: !4786)
!4789 = !DILocation(line: 256, column: 9, scope: !4757)
!4790 = !DILocation(line: 259, column: 13, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !676, line: 259, column: 13)
!4792 = distinct !DILexicalBlock(scope: !4786, file: !676, line: 257, column: 5)
!4793 = !DILocation(line: 259, column: 24, scope: !4791)
!4794 = !DILocation(line: 259, column: 13, scope: !4792)
!4795 = !DILocation(line: 259, column: 29, scope: !4791)
!4796 = !DILocation(line: 260, column: 10, scope: !4792)
!4797 = !DILocation(line: 260, column: 21, scope: !4792)
!4798 = !DILocation(line: 261, column: 17, scope: !4792)
!4799 = !DILocation(line: 261, column: 26, scope: !4792)
!4800 = !DILocation(line: 261, column: 33, scope: !4792)
!4801 = !DILocation(line: 261, column: 31, scope: !4792)
!4802 = !DILocation(line: 261, column: 16, scope: !4792)
!4803 = !DILocation(line: 261, column: 10, scope: !4792)
!4804 = !DILocation(line: 261, column: 14, scope: !4792)
!4805 = !DILocation(line: 262, column: 5, scope: !4792)
!4806 = !DILocation(line: 266, column: 16, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4786, file: !676, line: 264, column: 5)
!4808 = !DILocation(line: 266, column: 10, scope: !4807)
!4809 = !DILocation(line: 266, column: 14, scope: !4807)
!4810 = !DILocation(line: 269, column: 13, scope: !4757)
!4811 = !DILocation(line: 269, column: 22, scope: !4757)
!4812 = !DILocation(line: 269, column: 5, scope: !4757)
!4813 = !DILocation(line: 273, column: 21, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4757, file: !676, line: 270, column: 5)
!4815 = !DILocation(line: 273, column: 30, scope: !4814)
!4816 = !DILocation(line: 273, column: 10, scope: !4814)
!4817 = !DILocation(line: 273, column: 19, scope: !4814)
!4818 = !DILocation(line: 274, column: 9, scope: !4814)
!4819 = !DILocation(line: 277, column: 13, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4814, file: !676, line: 277, column: 13)
!4821 = !DILocation(line: 277, column: 27, scope: !4820)
!4822 = !DILocation(line: 277, column: 26, scope: !4820)
!4823 = !DILocation(line: 277, column: 38, scope: !4820)
!4824 = !DILocation(line: 277, column: 24, scope: !4820)
!4825 = !DILocation(line: 277, column: 13, scope: !4814)
!4826 = !DILocation(line: 277, column: 43, scope: !4820)
!4827 = !DILocation(line: 278, column: 21, scope: !4814)
!4828 = !DILocation(line: 278, column: 29, scope: !4814)
!4829 = !DILocation(line: 278, column: 28, scope: !4814)
!4830 = !DILocation(line: 278, column: 10, scope: !4814)
!4831 = !DILocation(line: 278, column: 19, scope: !4814)
!4832 = !DILocation(line: 279, column: 10, scope: !4814)
!4833 = !DILocation(line: 279, column: 21, scope: !4814)
!4834 = !DILocation(line: 280, column: 9, scope: !4814)
!4835 = !DILocation(line: 283, column: 13, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4814, file: !676, line: 283, column: 13)
!4837 = !DILocation(line: 283, column: 27, scope: !4836)
!4838 = !DILocation(line: 283, column: 26, scope: !4836)
!4839 = !DILocation(line: 283, column: 38, scope: !4836)
!4840 = !DILocation(line: 283, column: 24, scope: !4836)
!4841 = !DILocation(line: 283, column: 13, scope: !4814)
!4842 = !DILocation(line: 283, column: 43, scope: !4836)
!4843 = !DILocation(line: 284, column: 22, scope: !4814)
!4844 = !DILocation(line: 284, column: 30, scope: !4814)
!4845 = !DILocation(line: 284, column: 29, scope: !4814)
!4846 = !DILocation(line: 284, column: 41, scope: !4814)
!4847 = !DILocation(line: 284, column: 48, scope: !4814)
!4848 = !DILocation(line: 284, column: 56, scope: !4814)
!4849 = !DILocation(line: 284, column: 55, scope: !4814)
!4850 = !DILocation(line: 284, column: 66, scope: !4814)
!4851 = !DILocation(line: 284, column: 46, scope: !4814)
!4852 = !DILocation(line: 284, column: 21, scope: !4814)
!4853 = !DILocation(line: 284, column: 10, scope: !4814)
!4854 = !DILocation(line: 284, column: 19, scope: !4814)
!4855 = !DILocation(line: 285, column: 10, scope: !4814)
!4856 = !DILocation(line: 285, column: 21, scope: !4814)
!4857 = !DILocation(line: 286, column: 9, scope: !4814)
!4858 = !DILocation(line: 289, column: 13, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4814, file: !676, line: 289, column: 13)
!4860 = !DILocation(line: 289, column: 27, scope: !4859)
!4861 = !DILocation(line: 289, column: 26, scope: !4859)
!4862 = !DILocation(line: 289, column: 38, scope: !4859)
!4863 = !DILocation(line: 289, column: 24, scope: !4859)
!4864 = !DILocation(line: 289, column: 13, scope: !4814)
!4865 = !DILocation(line: 289, column: 43, scope: !4859)
!4866 = !DILocation(line: 290, column: 22, scope: !4814)
!4867 = !DILocation(line: 290, column: 30, scope: !4814)
!4868 = !DILocation(line: 290, column: 29, scope: !4814)
!4869 = !DILocation(line: 290, column: 41, scope: !4814)
!4870 = !DILocation(line: 290, column: 50, scope: !4814)
!4871 = !DILocation(line: 290, column: 58, scope: !4814)
!4872 = !DILocation(line: 290, column: 57, scope: !4814)
!4873 = !DILocation(line: 290, column: 68, scope: !4814)
!4874 = !DILocation(line: 290, column: 71, scope: !4814)
!4875 = !DILocation(line: 290, column: 47, scope: !4814)
!4876 = !DILocation(line: 290, column: 78, scope: !4814)
!4877 = !DILocation(line: 290, column: 86, scope: !4814)
!4878 = !DILocation(line: 290, column: 85, scope: !4814)
!4879 = !DILocation(line: 290, column: 96, scope: !4814)
!4880 = !DILocation(line: 290, column: 76, scope: !4814)
!4881 = !DILocation(line: 290, column: 21, scope: !4814)
!4882 = !DILocation(line: 290, column: 10, scope: !4814)
!4883 = !DILocation(line: 290, column: 19, scope: !4814)
!4884 = !DILocation(line: 291, column: 10, scope: !4814)
!4885 = !DILocation(line: 291, column: 21, scope: !4814)
!4886 = !DILocation(line: 292, column: 9, scope: !4814)
!4887 = !DILocation(line: 295, column: 9, scope: !4814)
!4888 = !DILocation(line: 298, column: 10, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4757, file: !676, line: 298, column: 9)
!4890 = !DILocation(line: 298, column: 9, scope: !4889)
!4891 = !DILocation(line: 298, column: 24, scope: !4889)
!4892 = !DILocation(line: 298, column: 23, scope: !4889)
!4893 = !DILocation(line: 298, column: 21, scope: !4889)
!4894 = !DILocation(line: 298, column: 35, scope: !4889)
!4895 = !DILocation(line: 298, column: 33, scope: !4889)
!4896 = !DILocation(line: 298, column: 9, scope: !4757)
!4897 = !DILocation(line: 298, column: 47, scope: !4889)
!4898 = !DILocation(line: 300, column: 13, scope: !4757)
!4899 = !DILocation(line: 300, column: 12, scope: !4757)
!4900 = !DILocation(line: 300, column: 27, scope: !4757)
!4901 = !DILocation(line: 300, column: 26, scope: !4757)
!4902 = !DILocation(line: 300, column: 24, scope: !4757)
!4903 = !DILocation(line: 300, column: 5, scope: !4757)
!4904 = !DILocation(line: 301, column: 1, scope: !4757)
!4905 = distinct !DISubprogram(name: "prv_getDataType", scope: !676, file: !676, line: 129, type: !4906, isLocal: true, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!689, !107}
!4908 = !DILocalVariable(name: "type", arg: 1, scope: !4905, file: !676, line: 129, type: !107)
!4909 = !DILocation(line: 129, column: 50, scope: !4905)
!4910 = !DILocation(line: 131, column: 13, scope: !4905)
!4911 = !DILocation(line: 131, column: 5, scope: !4905)
!4912 = !DILocation(line: 134, column: 9, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4905, file: !676, line: 132, column: 5)
!4914 = !DILocation(line: 137, column: 9, scope: !4913)
!4915 = !DILocation(line: 140, column: 9, scope: !4913)
!4916 = !DILocation(line: 144, column: 9, scope: !4913)
!4917 = !DILocation(line: 147, column: 9, scope: !4913)
!4918 = !DILocation(line: 149, column: 1, scope: !4905)
!4919 = distinct !DISubprogram(name: "tlv_parse", scope: !676, file: !676, line: 304, type: !4920, isLocal: false, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!58, !186, !438, !4922}
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_data_t", file: !6, line: 298, baseType: !4925)
!4925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_data_t", file: !6, line: 300, size: 192, elements: !4926)
!4926 = !{!4927, !4928, !4929}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4925, file: !6, line: 302, baseType: !689, size: 32)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4925, file: !6, line: 303, baseType: !79, size: 16, offset: 32)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4925, file: !6, line: 324, baseType: !4930, size: 128, offset: 64)
!4930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4925, file: !6, line: 304, size: 128, elements: !4931)
!4931 = !{!4932, !4933, !4934, !4935, !4940, !4945}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "asBoolean", scope: !4930, file: !6, line: 306, baseType: !136, size: 8)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "asInteger", scope: !4930, file: !6, line: 307, baseType: !254, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "asFloat", scope: !4930, file: !6, line: 308, baseType: !253, size: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "asBuffer", scope: !4930, file: !6, line: 313, baseType: !4936, size: 128)
!4936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4930, file: !6, line: 309, size: 128, elements: !4937)
!4937 = !{!4938, !4939}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4936, file: !6, line: 311, baseType: !438, size: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4936, file: !6, line: 312, baseType: !186, size: 64, offset: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "asChildren", scope: !4930, file: !6, line: 318, baseType: !4941, size: 128)
!4941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4930, file: !6, line: 314, size: 128, elements: !4942)
!4942 = !{!4943, !4944}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4941, file: !6, line: 316, baseType: !438, size: 64)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4941, file: !6, line: 317, baseType: !4923, size: 64, offset: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "asObjLink", scope: !4930, file: !6, line: 323, baseType: !4946, size: 32)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4930, file: !6, line: 319, size: 32, elements: !4947)
!4947 = !{!4948, !4949}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !4946, file: !6, line: 321, baseType: !79, size: 16)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "objectInstanceId", scope: !4946, file: !6, line: 322, baseType: !79, size: 16, offset: 16)
!4950 = !DILocalVariable(name: "buffer", arg: 1, scope: !4919, file: !676, line: 304, type: !186)
!4951 = !DILocation(line: 304, column: 25, scope: !4919)
!4952 = !DILocalVariable(name: "bufferLen", arg: 2, scope: !4919, file: !676, line: 305, type: !438)
!4953 = !DILocation(line: 305, column: 22, scope: !4919)
!4954 = !DILocalVariable(name: "dataP", arg: 3, scope: !4919, file: !676, line: 306, type: !4922)
!4955 = !DILocation(line: 306, column: 31, scope: !4919)
!4956 = !DILocalVariable(name: "type", scope: !4919, file: !676, line: 308, type: !689)
!4957 = !DILocation(line: 308, column: 23, scope: !4919)
!4958 = !DILocalVariable(name: "id", scope: !4919, file: !676, line: 309, type: !79)
!4959 = !DILocation(line: 309, column: 14, scope: !4919)
!4960 = !DILocalVariable(name: "dataIndex", scope: !4919, file: !676, line: 310, type: !438)
!4961 = !DILocation(line: 310, column: 12, scope: !4919)
!4962 = !DILocalVariable(name: "dataLen", scope: !4919, file: !676, line: 311, type: !438)
!4963 = !DILocation(line: 311, column: 12, scope: !4919)
!4964 = !DILocalVariable(name: "index", scope: !4919, file: !676, line: 312, type: !58)
!4965 = !DILocation(line: 312, column: 9, scope: !4919)
!4966 = !DILocalVariable(name: "result", scope: !4919, file: !676, line: 313, type: !58)
!4967 = !DILocation(line: 313, column: 9, scope: !4919)
!4968 = !DILocalVariable(name: "size", scope: !4919, file: !676, line: 314, type: !58)
!4969 = !DILocation(line: 314, column: 9, scope: !4919)
!4970 = !DILocation(line: 318, column: 6, scope: !4919)
!4971 = !DILocation(line: 318, column: 12, scope: !4919)
!4972 = !DILocation(line: 320, column: 5, scope: !4919)
!4973 = !DILocation(line: 320, column: 54, scope: !4919)
!4974 = !DILocation(line: 320, column: 63, scope: !4919)
!4975 = !DILocation(line: 320, column: 61, scope: !4919)
!4976 = !DILocation(line: 320, column: 70, scope: !4919)
!4977 = !DILocation(line: 320, column: 82, scope: !4919)
!4978 = !DILocation(line: 320, column: 80, scope: !4919)
!4979 = !DILocation(line: 320, column: 27, scope: !4919)
!4980 = !DILocation(line: 320, column: 25, scope: !4919)
!4981 = !DILocation(line: 320, column: 14, scope: !4919)
!4982 = !DILocalVariable(name: "newTlvP", scope: !4983, file: !676, line: 322, type: !4923)
!4983 = distinct !DILexicalBlock(scope: !4919, file: !676, line: 321, column: 5)
!4984 = !DILocation(line: 322, column: 24, scope: !4983)
!4985 = !DILocation(line: 324, column: 34, scope: !4983)
!4986 = !DILocation(line: 324, column: 39, scope: !4983)
!4987 = !DILocation(line: 324, column: 19, scope: !4983)
!4988 = !DILocation(line: 324, column: 17, scope: !4983)
!4989 = !DILocation(line: 325, column: 13, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4983, file: !676, line: 325, column: 13)
!4991 = !DILocation(line: 325, column: 18, scope: !4990)
!4992 = !DILocation(line: 325, column: 13, scope: !4983)
!4993 = !DILocation(line: 327, column: 17, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !676, line: 327, column: 17)
!4995 = distinct !DILexicalBlock(scope: !4990, file: !676, line: 326, column: 9)
!4996 = !DILocation(line: 327, column: 25, scope: !4994)
!4997 = !DILocation(line: 327, column: 17, scope: !4995)
!4998 = !DILocation(line: 329, column: 33, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4994, file: !676, line: 328, column: 13)
!5000 = !DILocation(line: 329, column: 40, scope: !4999)
!5001 = !DILocation(line: 329, column: 39, scope: !4999)
!5002 = !DILocation(line: 329, column: 17, scope: !4999)
!5003 = !DILocation(line: 330, column: 17, scope: !4999)
!5004 = !DILocation(line: 334, column: 24, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4994, file: !676, line: 333, column: 13)
!5006 = !DILocation(line: 334, column: 17, scope: !5005)
!5007 = !DILocation(line: 334, column: 34, scope: !5005)
!5008 = !DILocation(line: 334, column: 33, scope: !5005)
!5009 = !DILocation(line: 334, column: 41, scope: !5005)
!5010 = !DILocation(line: 334, column: 46, scope: !5005)
!5011 = !DILocation(line: 335, column: 29, scope: !5005)
!5012 = !DILocation(line: 335, column: 28, scope: !5005)
!5013 = !DILocation(line: 335, column: 17, scope: !5005)
!5014 = !DILocation(line: 337, column: 9, scope: !4995)
!5015 = !DILocation(line: 338, column: 18, scope: !4983)
!5016 = !DILocation(line: 338, column: 10, scope: !4983)
!5017 = !DILocation(line: 338, column: 16, scope: !4983)
!5018 = !DILocation(line: 340, column: 31, scope: !4983)
!5019 = !DILocation(line: 340, column: 11, scope: !4983)
!5020 = !DILocation(line: 340, column: 10, scope: !4983)
!5021 = !DILocation(line: 340, column: 18, scope: !4983)
!5022 = !DILocation(line: 340, column: 9, scope: !4983)
!5023 = !DILocation(line: 340, column: 24, scope: !4983)
!5024 = !DILocation(line: 340, column: 29, scope: !4983)
!5025 = !DILocation(line: 341, column: 29, scope: !4983)
!5026 = !DILocation(line: 341, column: 11, scope: !4983)
!5027 = !DILocation(line: 341, column: 10, scope: !4983)
!5028 = !DILocation(line: 341, column: 18, scope: !4983)
!5029 = !DILocation(line: 341, column: 9, scope: !4983)
!5030 = !DILocation(line: 341, column: 24, scope: !4983)
!5031 = !DILocation(line: 341, column: 27, scope: !4983)
!5032 = !DILocation(line: 342, column: 13, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4983, file: !676, line: 342, column: 13)
!5034 = !DILocation(line: 342, column: 18, scope: !5033)
!5035 = !DILocation(line: 342, column: 48, scope: !5033)
!5036 = !DILocation(line: 342, column: 51, scope: !5033)
!5037 = !DILocation(line: 342, column: 56, scope: !5033)
!5038 = !DILocation(line: 342, column: 13, scope: !4983)
!5039 = !DILocation(line: 344, column: 63, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5033, file: !676, line: 343, column: 9)
!5041 = !DILocation(line: 344, column: 72, scope: !5040)
!5042 = !DILocation(line: 344, column: 70, scope: !5040)
!5043 = !DILocation(line: 344, column: 80, scope: !5040)
!5044 = !DILocation(line: 344, column: 78, scope: !5040)
!5045 = !DILocation(line: 345, column: 59, scope: !5040)
!5046 = !DILocation(line: 346, column: 63, scope: !5040)
!5047 = !DILocation(line: 346, column: 62, scope: !5040)
!5048 = !DILocation(line: 346, column: 70, scope: !5040)
!5049 = !DILocation(line: 346, column: 61, scope: !5040)
!5050 = !DILocation(line: 346, column: 76, scope: !5040)
!5051 = !DILocation(line: 346, column: 82, scope: !5040)
!5052 = !DILocation(line: 346, column: 93, scope: !5040)
!5053 = !DILocation(line: 344, column: 53, scope: !5040)
!5054 = !DILocation(line: 344, column: 15, scope: !5040)
!5055 = !DILocation(line: 344, column: 14, scope: !5040)
!5056 = !DILocation(line: 344, column: 22, scope: !5040)
!5057 = !DILocation(line: 344, column: 13, scope: !5040)
!5058 = !DILocation(line: 344, column: 28, scope: !5040)
!5059 = !DILocation(line: 344, column: 34, scope: !5040)
!5060 = !DILocation(line: 344, column: 45, scope: !5040)
!5061 = !DILocation(line: 344, column: 51, scope: !5040)
!5062 = !DILocation(line: 347, column: 19, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5040, file: !676, line: 347, column: 17)
!5064 = !DILocation(line: 347, column: 18, scope: !5063)
!5065 = !DILocation(line: 347, column: 26, scope: !5063)
!5066 = !DILocation(line: 347, column: 17, scope: !5063)
!5067 = !DILocation(line: 347, column: 32, scope: !5063)
!5068 = !DILocation(line: 347, column: 38, scope: !5063)
!5069 = !DILocation(line: 347, column: 49, scope: !5063)
!5070 = !DILocation(line: 347, column: 55, scope: !5063)
!5071 = !DILocation(line: 347, column: 17, scope: !5040)
!5072 = !DILocation(line: 349, column: 33, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5063, file: !676, line: 348, column: 13)
!5074 = !DILocation(line: 349, column: 38, scope: !5073)
!5075 = !DILocation(line: 349, column: 44, scope: !5073)
!5076 = !DILocation(line: 349, column: 43, scope: !5073)
!5077 = !DILocation(line: 349, column: 17, scope: !5073)
!5078 = !DILocation(line: 350, column: 17, scope: !5073)
!5079 = !DILocation(line: 352, column: 9, scope: !5040)
!5080 = !DILocation(line: 355, column: 38, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5033, file: !676, line: 354, column: 9)
!5082 = !DILocation(line: 355, column: 47, scope: !5081)
!5083 = !DILocation(line: 355, column: 45, scope: !5081)
!5084 = !DILocation(line: 355, column: 55, scope: !5081)
!5085 = !DILocation(line: 355, column: 53, scope: !5081)
!5086 = !DILocation(line: 355, column: 66, scope: !5081)
!5087 = !DILocation(line: 355, column: 77, scope: !5081)
!5088 = !DILocation(line: 355, column: 76, scope: !5081)
!5089 = !DILocation(line: 355, column: 86, scope: !5081)
!5090 = !DILocation(line: 355, column: 84, scope: !5081)
!5091 = !DILocation(line: 355, column: 13, scope: !5081)
!5092 = !DILocation(line: 357, column: 13, scope: !4983)
!5093 = !DILocation(line: 358, column: 18, scope: !4983)
!5094 = !DILocation(line: 358, column: 15, scope: !4983)
!5095 = distinct !{!5095, !4972, !5096}
!5096 = !DILocation(line: 359, column: 5, scope: !4919)
!5097 = !DILocation(line: 361, column: 12, scope: !4919)
!5098 = !DILocation(line: 361, column: 5, scope: !4919)
!5099 = !DILocation(line: 362, column: 1, scope: !4919)
!5100 = distinct !DISubprogram(name: "tlv_serialize", scope: !676, file: !676, line: 447, type: !5101, isLocal: false, isDefinition: true, scopeLine: 451, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!58, !136, !58, !4923, !5103}
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!5104 = !DILocalVariable(name: "isResourceInstance", arg: 1, scope: !5100, file: !676, line: 447, type: !136)
!5105 = !DILocation(line: 447, column: 24, scope: !5100)
!5106 = !DILocalVariable(name: "size", arg: 2, scope: !5100, file: !676, line: 448, type: !58)
!5107 = !DILocation(line: 448, column: 23, scope: !5100)
!5108 = !DILocalVariable(name: "dataP", arg: 3, scope: !5100, file: !676, line: 449, type: !4923)
!5109 = !DILocation(line: 449, column: 34, scope: !5100)
!5110 = !DILocalVariable(name: "bufferP", arg: 4, scope: !5100, file: !676, line: 450, type: !5103)
!5111 = !DILocation(line: 450, column: 30, scope: !5100)
!5112 = !DILocalVariable(name: "length", scope: !5100, file: !676, line: 452, type: !58)
!5113 = !DILocation(line: 452, column: 9, scope: !5100)
!5114 = !DILocalVariable(name: "index", scope: !5100, file: !676, line: 453, type: !58)
!5115 = !DILocation(line: 453, column: 9, scope: !5100)
!5116 = !DILocalVariable(name: "i", scope: !5100, file: !676, line: 454, type: !58)
!5117 = !DILocation(line: 454, column: 9, scope: !5100)
!5118 = !DILocation(line: 458, column: 6, scope: !5100)
!5119 = !DILocation(line: 458, column: 14, scope: !5100)
!5120 = !DILocation(line: 459, column: 28, scope: !5100)
!5121 = !DILocation(line: 459, column: 34, scope: !5100)
!5122 = !DILocation(line: 459, column: 14, scope: !5100)
!5123 = !DILocation(line: 459, column: 12, scope: !5100)
!5124 = !DILocation(line: 460, column: 9, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5100, file: !676, line: 460, column: 9)
!5126 = !DILocation(line: 460, column: 16, scope: !5125)
!5127 = !DILocation(line: 460, column: 9, scope: !5100)
!5128 = !DILocation(line: 460, column: 29, scope: !5125)
!5129 = !DILocation(line: 460, column: 22, scope: !5125)
!5130 = !DILocation(line: 462, column: 40, scope: !5100)
!5131 = !DILocation(line: 462, column: 27, scope: !5100)
!5132 = !DILocation(line: 462, column: 6, scope: !5100)
!5133 = !DILocation(line: 462, column: 14, scope: !5100)
!5134 = !DILocation(line: 463, column: 10, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5100, file: !676, line: 463, column: 9)
!5136 = !DILocation(line: 463, column: 9, scope: !5135)
!5137 = !DILocation(line: 463, column: 18, scope: !5135)
!5138 = !DILocation(line: 463, column: 9, scope: !5100)
!5139 = !DILocation(line: 463, column: 27, scope: !5135)
!5140 = !DILocation(line: 465, column: 11, scope: !5100)
!5141 = !DILocation(line: 466, column: 12, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5100, file: !676, line: 466, column: 5)
!5143 = !DILocation(line: 466, column: 10, scope: !5142)
!5144 = !DILocation(line: 466, column: 18, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !676, line: 466, column: 5)
!5146 = !DILocation(line: 466, column: 22, scope: !5145)
!5147 = !DILocation(line: 466, column: 20, scope: !5145)
!5148 = !DILocation(line: 466, column: 27, scope: !5145)
!5149 = !DILocation(line: 466, column: 30, scope: !5145)
!5150 = !DILocation(line: 466, column: 37, scope: !5145)
!5151 = !DILocation(line: 466, column: 5, scope: !5142)
!5152 = !DILocalVariable(name: "headerLen", scope: !5153, file: !676, line: 468, type: !58)
!5153 = distinct !DILexicalBlock(scope: !5145, file: !676, line: 467, column: 5)
!5154 = !DILocation(line: 468, column: 13, scope: !5153)
!5155 = !DILocalVariable(name: "isInstance", scope: !5153, file: !676, line: 469, type: !136)
!5156 = !DILocation(line: 469, column: 14, scope: !5153)
!5157 = !DILocation(line: 471, column: 22, scope: !5153)
!5158 = !DILocation(line: 471, column: 20, scope: !5153)
!5159 = !DILocation(line: 472, column: 17, scope: !5153)
!5160 = !DILocation(line: 472, column: 23, scope: !5153)
!5161 = !DILocation(line: 472, column: 26, scope: !5153)
!5162 = !DILocation(line: 472, column: 9, scope: !5153)
!5163 = !DILocation(line: 475, column: 24, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5153, file: !676, line: 473, column: 9)
!5165 = !DILocation(line: 475, column: 13, scope: !5164)
!5166 = !DILocalVariable(name: "tmpBuffer", scope: !5167, file: !676, line: 479, type: !186)
!5167 = distinct !DILexicalBlock(scope: !5164, file: !676, line: 478, column: 13)
!5168 = !DILocation(line: 479, column: 27, scope: !5167)
!5169 = !DILocalVariable(name: "res", scope: !5167, file: !676, line: 480, type: !58)
!5170 = !DILocation(line: 480, column: 21, scope: !5167)
!5171 = !DILocation(line: 482, column: 37, scope: !5167)
!5172 = !DILocation(line: 482, column: 49, scope: !5167)
!5173 = !DILocation(line: 482, column: 55, scope: !5167)
!5174 = !DILocation(line: 482, column: 58, scope: !5167)
!5175 = !DILocation(line: 482, column: 64, scope: !5167)
!5176 = !DILocation(line: 482, column: 75, scope: !5167)
!5177 = !DILocation(line: 482, column: 82, scope: !5167)
!5178 = !DILocation(line: 482, column: 88, scope: !5167)
!5179 = !DILocation(line: 482, column: 91, scope: !5167)
!5180 = !DILocation(line: 482, column: 97, scope: !5167)
!5181 = !DILocation(line: 482, column: 108, scope: !5167)
!5182 = !DILocation(line: 482, column: 23, scope: !5167)
!5183 = !DILocation(line: 482, column: 21, scope: !5167)
!5184 = !DILocation(line: 483, column: 21, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5167, file: !676, line: 483, column: 21)
!5186 = !DILocation(line: 483, column: 25, scope: !5185)
!5187 = !DILocation(line: 483, column: 21, scope: !5167)
!5188 = !DILocation(line: 485, column: 28, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5185, file: !676, line: 484, column: 17)
!5190 = !DILocation(line: 486, column: 17, scope: !5189)
!5191 = !DILocalVariable(name: "tmpLength", scope: !5192, file: !676, line: 489, type: !438)
!5192 = distinct !DILexicalBlock(scope: !5185, file: !676, line: 488, column: 17)
!5193 = !DILocation(line: 489, column: 28, scope: !5192)
!5194 = !DILocation(line: 491, column: 41, scope: !5192)
!5195 = !DILocation(line: 491, column: 33, scope: !5192)
!5196 = !DILocation(line: 491, column: 31, scope: !5192)
!5197 = !DILocation(line: 492, column: 51, scope: !5192)
!5198 = !DILocation(line: 492, column: 50, scope: !5192)
!5199 = !DILocation(line: 492, column: 61, scope: !5192)
!5200 = !DILocation(line: 492, column: 59, scope: !5192)
!5201 = !DILocation(line: 492, column: 75, scope: !5192)
!5202 = !DILocation(line: 492, column: 81, scope: !5192)
!5203 = !DILocation(line: 492, column: 84, scope: !5192)
!5204 = !DILocation(line: 492, column: 90, scope: !5192)
!5205 = !DILocation(line: 492, column: 96, scope: !5192)
!5206 = !DILocation(line: 492, column: 99, scope: !5192)
!5207 = !DILocation(line: 492, column: 103, scope: !5192)
!5208 = !DILocation(line: 492, column: 33, scope: !5192)
!5209 = !DILocation(line: 492, column: 31, scope: !5192)
!5210 = !DILocation(line: 493, column: 30, scope: !5192)
!5211 = !DILocation(line: 493, column: 27, scope: !5192)
!5212 = !DILocation(line: 494, column: 25, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5192, file: !676, line: 494, column: 25)
!5214 = !DILocation(line: 494, column: 35, scope: !5213)
!5215 = !DILocation(line: 494, column: 25, scope: !5192)
!5216 = !DILocation(line: 496, column: 33, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5213, file: !676, line: 495, column: 21)
!5218 = !DILocation(line: 496, column: 32, scope: !5217)
!5219 = !DILocation(line: 496, column: 43, scope: !5217)
!5220 = !DILocation(line: 496, column: 41, scope: !5217)
!5221 = !DILocation(line: 496, column: 50, scope: !5217)
!5222 = !DILocation(line: 496, column: 61, scope: !5217)
!5223 = !DILocation(line: 496, column: 25, scope: !5217)
!5224 = !DILocation(line: 497, column: 34, scope: !5217)
!5225 = !DILocation(line: 497, column: 31, scope: !5217)
!5226 = !DILocation(line: 498, column: 36, scope: !5217)
!5227 = !DILocation(line: 498, column: 25, scope: !5217)
!5228 = !DILocation(line: 499, column: 21, scope: !5217)
!5229 = !DILocation(line: 502, column: 13, scope: !5164)
!5230 = !DILocalVariable(name: "k", scope: !5231, file: !676, line: 506, type: !58)
!5231 = distinct !DILexicalBlock(scope: !5164, file: !676, line: 505, column: 13)
!5232 = !DILocation(line: 506, column: 21, scope: !5231)
!5233 = !DILocalVariable(name: "buf", scope: !5231, file: !676, line: 507, type: !5234)
!5234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 32, elements: !114)
!5235 = !DILocation(line: 507, column: 25, scope: !5231)
!5236 = !DILocalVariable(name: "v", scope: !5231, file: !676, line: 508, type: !86)
!5237 = !DILocation(line: 508, column: 26, scope: !5231)
!5238 = !DILocation(line: 508, column: 30, scope: !5231)
!5239 = !DILocation(line: 508, column: 36, scope: !5231)
!5240 = !DILocation(line: 508, column: 39, scope: !5231)
!5241 = !DILocation(line: 508, column: 45, scope: !5231)
!5242 = !DILocation(line: 508, column: 55, scope: !5231)
!5243 = !DILocation(line: 509, column: 19, scope: !5231)
!5244 = !DILocation(line: 510, column: 22, scope: !5231)
!5245 = !DILocation(line: 510, column: 28, scope: !5231)
!5246 = !DILocation(line: 510, column: 31, scope: !5231)
!5247 = !DILocation(line: 510, column: 37, scope: !5231)
!5248 = !DILocation(line: 510, column: 47, scope: !5231)
!5249 = !DILocation(line: 510, column: 19, scope: !5231)
!5250 = !DILocation(line: 511, column: 24, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5231, file: !676, line: 511, column: 17)
!5252 = !DILocation(line: 511, column: 22, scope: !5251)
!5253 = !DILocation(line: 511, column: 29, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5251, file: !676, line: 511, column: 17)
!5255 = !DILocation(line: 511, column: 31, scope: !5254)
!5256 = !DILocation(line: 511, column: 17, scope: !5251)
!5257 = !DILocation(line: 512, column: 40, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5254, file: !676, line: 511, column: 42)
!5259 = !DILocation(line: 512, column: 42, scope: !5258)
!5260 = !DILocation(line: 512, column: 30, scope: !5258)
!5261 = !DILocation(line: 512, column: 25, scope: !5258)
!5262 = !DILocation(line: 512, column: 21, scope: !5258)
!5263 = !DILocation(line: 512, column: 28, scope: !5258)
!5264 = !DILocation(line: 513, column: 23, scope: !5258)
!5265 = !DILocation(line: 514, column: 17, scope: !5258)
!5266 = !DILocation(line: 511, column: 37, scope: !5254)
!5267 = !DILocation(line: 511, column: 17, scope: !5254)
!5268 = distinct !{!5268, !5256, !5269}
!5269 = !DILocation(line: 514, column: 17, scope: !5251)
!5270 = !DILocation(line: 516, column: 47, scope: !5231)
!5271 = !DILocation(line: 516, column: 46, scope: !5231)
!5272 = !DILocation(line: 516, column: 57, scope: !5231)
!5273 = !DILocation(line: 516, column: 55, scope: !5231)
!5274 = !DILocation(line: 516, column: 64, scope: !5231)
!5275 = !DILocation(line: 516, column: 76, scope: !5231)
!5276 = !DILocation(line: 516, column: 82, scope: !5231)
!5277 = !DILocation(line: 516, column: 85, scope: !5231)
!5278 = !DILocation(line: 516, column: 91, scope: !5231)
!5279 = !DILocation(line: 516, column: 97, scope: !5231)
!5280 = !DILocation(line: 516, column: 100, scope: !5231)
!5281 = !DILocation(line: 516, column: 29, scope: !5231)
!5282 = !DILocation(line: 516, column: 27, scope: !5231)
!5283 = !DILocation(line: 517, column: 26, scope: !5231)
!5284 = !DILocation(line: 517, column: 23, scope: !5231)
!5285 = !DILocation(line: 518, column: 25, scope: !5231)
!5286 = !DILocation(line: 518, column: 24, scope: !5231)
!5287 = !DILocation(line: 518, column: 35, scope: !5231)
!5288 = !DILocation(line: 518, column: 33, scope: !5231)
!5289 = !DILocation(line: 518, column: 17, scope: !5231)
!5290 = !DILocation(line: 519, column: 23, scope: !5231)
!5291 = !DILocation(line: 521, column: 13, scope: !5164)
!5292 = !DILocation(line: 525, column: 43, scope: !5164)
!5293 = !DILocation(line: 525, column: 42, scope: !5164)
!5294 = !DILocation(line: 525, column: 53, scope: !5164)
!5295 = !DILocation(line: 525, column: 51, scope: !5164)
!5296 = !DILocation(line: 525, column: 60, scope: !5164)
!5297 = !DILocation(line: 525, column: 72, scope: !5164)
!5298 = !DILocation(line: 525, column: 78, scope: !5164)
!5299 = !DILocation(line: 525, column: 81, scope: !5164)
!5300 = !DILocation(line: 525, column: 87, scope: !5164)
!5301 = !DILocation(line: 525, column: 93, scope: !5164)
!5302 = !DILocation(line: 525, column: 96, scope: !5164)
!5303 = !DILocation(line: 525, column: 100, scope: !5164)
!5304 = !DILocation(line: 525, column: 106, scope: !5164)
!5305 = !DILocation(line: 525, column: 109, scope: !5164)
!5306 = !DILocation(line: 525, column: 115, scope: !5164)
!5307 = !DILocation(line: 525, column: 124, scope: !5164)
!5308 = !DILocation(line: 525, column: 25, scope: !5164)
!5309 = !DILocation(line: 525, column: 23, scope: !5164)
!5310 = !DILocation(line: 526, column: 22, scope: !5164)
!5311 = !DILocation(line: 526, column: 19, scope: !5164)
!5312 = !DILocation(line: 527, column: 21, scope: !5164)
!5313 = !DILocation(line: 527, column: 20, scope: !5164)
!5314 = !DILocation(line: 527, column: 31, scope: !5164)
!5315 = !DILocation(line: 527, column: 29, scope: !5164)
!5316 = !DILocation(line: 527, column: 38, scope: !5164)
!5317 = !DILocation(line: 527, column: 44, scope: !5164)
!5318 = !DILocation(line: 527, column: 47, scope: !5164)
!5319 = !DILocation(line: 527, column: 53, scope: !5164)
!5320 = !DILocation(line: 527, column: 62, scope: !5164)
!5321 = !DILocation(line: 527, column: 70, scope: !5164)
!5322 = !DILocation(line: 527, column: 76, scope: !5164)
!5323 = !DILocation(line: 527, column: 79, scope: !5164)
!5324 = !DILocation(line: 527, column: 85, scope: !5164)
!5325 = !DILocation(line: 527, column: 94, scope: !5164)
!5326 = !DILocation(line: 527, column: 13, scope: !5164)
!5327 = !DILocation(line: 528, column: 22, scope: !5164)
!5328 = !DILocation(line: 528, column: 28, scope: !5164)
!5329 = !DILocation(line: 528, column: 31, scope: !5164)
!5330 = !DILocation(line: 528, column: 37, scope: !5164)
!5331 = !DILocation(line: 528, column: 46, scope: !5164)
!5332 = !DILocation(line: 528, column: 19, scope: !5164)
!5333 = !DILocation(line: 529, column: 13, scope: !5164)
!5334 = !DILocalVariable(name: "data_len", scope: !5335, file: !676, line: 533, type: !438)
!5335 = distinct !DILexicalBlock(scope: !5164, file: !676, line: 532, column: 13)
!5336 = !DILocation(line: 533, column: 24, scope: !5335)
!5337 = !DILocalVariable(name: "data_buffer", scope: !5335, file: !676, line: 534, type: !446)
!5338 = !DILocation(line: 534, column: 25, scope: !5335)
!5339 = !DILocation(line: 536, column: 42, scope: !5335)
!5340 = !DILocation(line: 536, column: 48, scope: !5335)
!5341 = !DILocation(line: 536, column: 51, scope: !5335)
!5342 = !DILocation(line: 536, column: 57, scope: !5335)
!5343 = !DILocation(line: 536, column: 68, scope: !5335)
!5344 = !DILocation(line: 536, column: 28, scope: !5335)
!5345 = !DILocation(line: 536, column: 26, scope: !5335)
!5346 = !DILocation(line: 537, column: 47, scope: !5335)
!5347 = !DILocation(line: 537, column: 46, scope: !5335)
!5348 = !DILocation(line: 537, column: 57, scope: !5335)
!5349 = !DILocation(line: 537, column: 55, scope: !5335)
!5350 = !DILocation(line: 537, column: 64, scope: !5335)
!5351 = !DILocation(line: 537, column: 76, scope: !5335)
!5352 = !DILocation(line: 537, column: 82, scope: !5335)
!5353 = !DILocation(line: 537, column: 85, scope: !5335)
!5354 = !DILocation(line: 537, column: 91, scope: !5335)
!5355 = !DILocation(line: 537, column: 97, scope: !5335)
!5356 = !DILocation(line: 537, column: 100, scope: !5335)
!5357 = !DILocation(line: 537, column: 104, scope: !5335)
!5358 = !DILocation(line: 537, column: 29, scope: !5335)
!5359 = !DILocation(line: 537, column: 27, scope: !5335)
!5360 = !DILocation(line: 538, column: 26, scope: !5335)
!5361 = !DILocation(line: 538, column: 23, scope: !5335)
!5362 = !DILocation(line: 539, column: 25, scope: !5335)
!5363 = !DILocation(line: 539, column: 24, scope: !5335)
!5364 = !DILocation(line: 539, column: 35, scope: !5335)
!5365 = !DILocation(line: 539, column: 33, scope: !5335)
!5366 = !DILocation(line: 539, column: 17, scope: !5335)
!5367 = !DILocation(line: 539, column: 55, scope: !5335)
!5368 = !DILocation(line: 540, column: 26, scope: !5335)
!5369 = !DILocation(line: 540, column: 23, scope: !5335)
!5370 = !DILocation(line: 542, column: 13, scope: !5164)
!5371 = !DILocalVariable(name: "data_len", scope: !5372, file: !676, line: 546, type: !438)
!5372 = distinct !DILexicalBlock(scope: !5164, file: !676, line: 545, column: 13)
!5373 = !DILocation(line: 546, column: 24, scope: !5372)
!5374 = !DILocalVariable(name: "data_buffer", scope: !5372, file: !676, line: 547, type: !446)
!5375 = !DILocation(line: 547, column: 25, scope: !5372)
!5376 = !DILocation(line: 549, column: 44, scope: !5372)
!5377 = !DILocation(line: 549, column: 50, scope: !5372)
!5378 = !DILocation(line: 549, column: 53, scope: !5372)
!5379 = !DILocation(line: 549, column: 59, scope: !5372)
!5380 = !DILocation(line: 549, column: 68, scope: !5372)
!5381 = !DILocation(line: 549, column: 28, scope: !5372)
!5382 = !DILocation(line: 549, column: 26, scope: !5372)
!5383 = !DILocation(line: 550, column: 47, scope: !5372)
!5384 = !DILocation(line: 550, column: 46, scope: !5372)
!5385 = !DILocation(line: 550, column: 57, scope: !5372)
!5386 = !DILocation(line: 550, column: 55, scope: !5372)
!5387 = !DILocation(line: 550, column: 64, scope: !5372)
!5388 = !DILocation(line: 550, column: 76, scope: !5372)
!5389 = !DILocation(line: 550, column: 82, scope: !5372)
!5390 = !DILocation(line: 550, column: 85, scope: !5372)
!5391 = !DILocation(line: 550, column: 91, scope: !5372)
!5392 = !DILocation(line: 550, column: 97, scope: !5372)
!5393 = !DILocation(line: 550, column: 100, scope: !5372)
!5394 = !DILocation(line: 550, column: 104, scope: !5372)
!5395 = !DILocation(line: 550, column: 29, scope: !5372)
!5396 = !DILocation(line: 550, column: 27, scope: !5372)
!5397 = !DILocation(line: 551, column: 26, scope: !5372)
!5398 = !DILocation(line: 551, column: 23, scope: !5372)
!5399 = !DILocation(line: 552, column: 25, scope: !5372)
!5400 = !DILocation(line: 552, column: 24, scope: !5372)
!5401 = !DILocation(line: 552, column: 35, scope: !5372)
!5402 = !DILocation(line: 552, column: 33, scope: !5372)
!5403 = !DILocation(line: 552, column: 17, scope: !5372)
!5404 = !DILocation(line: 552, column: 55, scope: !5372)
!5405 = !DILocation(line: 553, column: 26, scope: !5372)
!5406 = !DILocation(line: 553, column: 23, scope: !5372)
!5407 = !DILocation(line: 555, column: 13, scope: !5164)
!5408 = !DILocation(line: 558, column: 43, scope: !5164)
!5409 = !DILocation(line: 558, column: 42, scope: !5164)
!5410 = !DILocation(line: 558, column: 53, scope: !5164)
!5411 = !DILocation(line: 558, column: 51, scope: !5164)
!5412 = !DILocation(line: 558, column: 60, scope: !5164)
!5413 = !DILocation(line: 558, column: 72, scope: !5164)
!5414 = !DILocation(line: 558, column: 78, scope: !5164)
!5415 = !DILocation(line: 558, column: 81, scope: !5164)
!5416 = !DILocation(line: 558, column: 87, scope: !5164)
!5417 = !DILocation(line: 558, column: 93, scope: !5164)
!5418 = !DILocation(line: 558, column: 96, scope: !5164)
!5419 = !DILocation(line: 558, column: 25, scope: !5164)
!5420 = !DILocation(line: 558, column: 23, scope: !5164)
!5421 = !DILocation(line: 559, column: 22, scope: !5164)
!5422 = !DILocation(line: 559, column: 19, scope: !5164)
!5423 = !DILocation(line: 560, column: 33, scope: !5164)
!5424 = !DILocation(line: 560, column: 39, scope: !5164)
!5425 = !DILocation(line: 560, column: 42, scope: !5164)
!5426 = !DILocation(line: 560, column: 48, scope: !5164)
!5427 = !DILocation(line: 560, column: 15, scope: !5164)
!5428 = !DILocation(line: 560, column: 14, scope: !5164)
!5429 = !DILocation(line: 560, column: 24, scope: !5164)
!5430 = !DILocation(line: 560, column: 13, scope: !5164)
!5431 = !DILocation(line: 560, column: 31, scope: !5164)
!5432 = !DILocation(line: 561, column: 19, scope: !5164)
!5433 = !DILocation(line: 562, column: 13, scope: !5164)
!5434 = !DILocation(line: 565, column: 20, scope: !5164)
!5435 = !DILocation(line: 566, column: 13, scope: !5164)
!5436 = !DILocation(line: 568, column: 5, scope: !5153)
!5437 = !DILocation(line: 466, column: 45, scope: !5145)
!5438 = !DILocation(line: 466, column: 5, scope: !5145)
!5439 = distinct !{!5439, !5151, !5440}
!5440 = !DILocation(line: 568, column: 5, scope: !5142)
!5441 = !DILocation(line: 570, column: 9, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5100, file: !676, line: 570, column: 9)
!5443 = !DILocation(line: 570, column: 16, scope: !5442)
!5444 = !DILocation(line: 570, column: 9, scope: !5100)
!5445 = !DILocation(line: 572, column: 21, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5442, file: !676, line: 571, column: 5)
!5447 = !DILocation(line: 572, column: 20, scope: !5446)
!5448 = !DILocation(line: 572, column: 9, scope: !5446)
!5449 = !DILocation(line: 573, column: 10, scope: !5446)
!5450 = !DILocation(line: 573, column: 18, scope: !5446)
!5451 = !DILocation(line: 574, column: 5, scope: !5446)
!5452 = !DILocation(line: 578, column: 12, scope: !5100)
!5453 = !DILocation(line: 578, column: 5, scope: !5100)
!5454 = !DILocation(line: 579, column: 1, scope: !5100)
!5455 = distinct !DISubprogram(name: "prv_getLength", scope: !676, file: !676, line: 365, type: !5456, isLocal: true, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{!58, !58, !4923}
!5458 = !DILocalVariable(name: "size", arg: 1, scope: !5455, file: !676, line: 365, type: !58)
!5459 = !DILocation(line: 365, column: 30, scope: !5455)
!5460 = !DILocalVariable(name: "dataP", arg: 2, scope: !5455, file: !676, line: 366, type: !4923)
!5461 = !DILocation(line: 366, column: 41, scope: !5455)
!5462 = !DILocalVariable(name: "length", scope: !5455, file: !676, line: 368, type: !58)
!5463 = !DILocation(line: 368, column: 9, scope: !5455)
!5464 = !DILocalVariable(name: "i", scope: !5455, file: !676, line: 369, type: !58)
!5465 = !DILocation(line: 369, column: 9, scope: !5455)
!5466 = !DILocation(line: 371, column: 12, scope: !5455)
!5467 = !DILocation(line: 373, column: 12, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5455, file: !676, line: 373, column: 5)
!5469 = !DILocation(line: 373, column: 10, scope: !5468)
!5470 = !DILocation(line: 373, column: 18, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5468, file: !676, line: 373, column: 5)
!5472 = !DILocation(line: 373, column: 22, scope: !5471)
!5473 = !DILocation(line: 373, column: 20, scope: !5471)
!5474 = !DILocation(line: 373, column: 27, scope: !5471)
!5475 = !DILocation(line: 373, column: 30, scope: !5471)
!5476 = !DILocation(line: 373, column: 37, scope: !5471)
!5477 = !DILocation(line: 373, column: 5, scope: !5468)
!5478 = !DILocation(line: 375, column: 17, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5471, file: !676, line: 374, column: 5)
!5480 = !DILocation(line: 375, column: 23, scope: !5479)
!5481 = !DILocation(line: 375, column: 26, scope: !5479)
!5482 = !DILocation(line: 375, column: 9, scope: !5479)
!5483 = !DILocalVariable(name: "subLength", scope: !5484, file: !676, line: 380, type: !58)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !676, line: 379, column: 13)
!5485 = distinct !DILexicalBlock(scope: !5479, file: !676, line: 376, column: 9)
!5486 = !DILocation(line: 380, column: 21, scope: !5484)
!5487 = !DILocation(line: 382, column: 43, scope: !5484)
!5488 = !DILocation(line: 382, column: 49, scope: !5484)
!5489 = !DILocation(line: 382, column: 52, scope: !5484)
!5490 = !DILocation(line: 382, column: 58, scope: !5484)
!5491 = !DILocation(line: 382, column: 69, scope: !5484)
!5492 = !DILocation(line: 382, column: 76, scope: !5484)
!5493 = !DILocation(line: 382, column: 82, scope: !5484)
!5494 = !DILocation(line: 382, column: 85, scope: !5484)
!5495 = !DILocation(line: 382, column: 91, scope: !5484)
!5496 = !DILocation(line: 382, column: 102, scope: !5484)
!5497 = !DILocation(line: 382, column: 29, scope: !5484)
!5498 = !DILocation(line: 382, column: 27, scope: !5484)
!5499 = !DILocation(line: 383, column: 21, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5484, file: !676, line: 383, column: 21)
!5501 = !DILocation(line: 383, column: 31, scope: !5500)
!5502 = !DILocation(line: 383, column: 21, scope: !5484)
!5503 = !DILocation(line: 385, column: 28, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5500, file: !676, line: 384, column: 17)
!5505 = !DILocation(line: 386, column: 17, scope: !5504)
!5506 = !DILocation(line: 389, column: 51, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5500, file: !676, line: 388, column: 17)
!5508 = !DILocation(line: 389, column: 57, scope: !5507)
!5509 = !DILocation(line: 389, column: 60, scope: !5507)
!5510 = !DILocation(line: 389, column: 64, scope: !5507)
!5511 = !DILocation(line: 389, column: 31, scope: !5507)
!5512 = !DILocation(line: 389, column: 77, scope: !5507)
!5513 = !DILocation(line: 389, column: 75, scope: !5507)
!5514 = !DILocation(line: 389, column: 28, scope: !5507)
!5515 = !DILocation(line: 392, column: 13, scope: !5485)
!5516 = !DILocation(line: 396, column: 43, scope: !5485)
!5517 = !DILocation(line: 396, column: 49, scope: !5485)
!5518 = !DILocation(line: 396, column: 52, scope: !5485)
!5519 = !DILocation(line: 396, column: 56, scope: !5485)
!5520 = !DILocation(line: 396, column: 62, scope: !5485)
!5521 = !DILocation(line: 396, column: 65, scope: !5485)
!5522 = !DILocation(line: 396, column: 71, scope: !5485)
!5523 = !DILocation(line: 396, column: 80, scope: !5485)
!5524 = !DILocation(line: 396, column: 23, scope: !5485)
!5525 = !DILocation(line: 396, column: 90, scope: !5485)
!5526 = !DILocation(line: 396, column: 96, scope: !5485)
!5527 = !DILocation(line: 396, column: 99, scope: !5485)
!5528 = !DILocation(line: 396, column: 105, scope: !5485)
!5529 = !DILocation(line: 396, column: 114, scope: !5485)
!5530 = !DILocation(line: 396, column: 88, scope: !5485)
!5531 = !DILocation(line: 396, column: 20, scope: !5485)
!5532 = !DILocation(line: 397, column: 13, scope: !5485)
!5533 = !DILocalVariable(name: "data_len", scope: !5534, file: !676, line: 401, type: !438)
!5534 = distinct !DILexicalBlock(scope: !5485, file: !676, line: 400, column: 13)
!5535 = !DILocation(line: 401, column: 24, scope: !5534)
!5536 = !DILocalVariable(name: "unused_buffer", scope: !5534, file: !676, line: 402, type: !446)
!5537 = !DILocation(line: 402, column: 25, scope: !5534)
!5538 = !DILocation(line: 404, column: 42, scope: !5534)
!5539 = !DILocation(line: 404, column: 48, scope: !5534)
!5540 = !DILocation(line: 404, column: 51, scope: !5534)
!5541 = !DILocation(line: 404, column: 57, scope: !5534)
!5542 = !DILocation(line: 404, column: 68, scope: !5534)
!5543 = !DILocation(line: 404, column: 28, scope: !5534)
!5544 = !DILocation(line: 404, column: 26, scope: !5534)
!5545 = !DILocation(line: 405, column: 47, scope: !5534)
!5546 = !DILocation(line: 405, column: 53, scope: !5534)
!5547 = !DILocation(line: 405, column: 56, scope: !5534)
!5548 = !DILocation(line: 405, column: 60, scope: !5534)
!5549 = !DILocation(line: 405, column: 27, scope: !5534)
!5550 = !DILocation(line: 405, column: 72, scope: !5534)
!5551 = !DILocation(line: 405, column: 70, scope: !5534)
!5552 = !DILocation(line: 405, column: 24, scope: !5534)
!5553 = !DILocation(line: 407, column: 13, scope: !5485)
!5554 = !DILocalVariable(name: "data_len", scope: !5555, file: !676, line: 411, type: !438)
!5555 = distinct !DILexicalBlock(scope: !5485, file: !676, line: 410, column: 13)
!5556 = !DILocation(line: 411, column: 24, scope: !5555)
!5557 = !DILocation(line: 413, column: 22, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5555, file: !676, line: 413, column: 21)
!5559 = !DILocation(line: 413, column: 28, scope: !5558)
!5560 = !DILocation(line: 413, column: 31, scope: !5558)
!5561 = !DILocation(line: 413, column: 37, scope: !5558)
!5562 = !DILocation(line: 413, column: 45, scope: !5558)
!5563 = !DILocation(line: 414, column: 21, scope: !5558)
!5564 = !DILocation(line: 414, column: 25, scope: !5558)
!5565 = !DILocation(line: 414, column: 31, scope: !5558)
!5566 = !DILocation(line: 414, column: 34, scope: !5558)
!5567 = !DILocation(line: 414, column: 40, scope: !5558)
!5568 = !DILocation(line: 414, column: 48, scope: !5558)
!5569 = !DILocation(line: 413, column: 21, scope: !5555)
!5570 = !DILocation(line: 416, column: 30, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5558, file: !676, line: 415, column: 17)
!5572 = !DILocation(line: 417, column: 17, scope: !5571)
!5573 = !DILocation(line: 420, column: 30, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5558, file: !676, line: 419, column: 17)
!5575 = !DILocation(line: 423, column: 47, scope: !5555)
!5576 = !DILocation(line: 423, column: 53, scope: !5555)
!5577 = !DILocation(line: 423, column: 56, scope: !5555)
!5578 = !DILocation(line: 423, column: 60, scope: !5555)
!5579 = !DILocation(line: 423, column: 27, scope: !5555)
!5580 = !DILocation(line: 423, column: 72, scope: !5555)
!5581 = !DILocation(line: 423, column: 70, scope: !5555)
!5582 = !DILocation(line: 423, column: 24, scope: !5555)
!5583 = !DILocation(line: 425, column: 13, scope: !5485)
!5584 = !DILocation(line: 429, column: 43, scope: !5485)
!5585 = !DILocation(line: 429, column: 49, scope: !5485)
!5586 = !DILocation(line: 429, column: 52, scope: !5485)
!5587 = !DILocation(line: 429, column: 23, scope: !5485)
!5588 = !DILocation(line: 429, column: 59, scope: !5485)
!5589 = !DILocation(line: 429, column: 20, scope: !5485)
!5590 = !DILocation(line: 430, column: 13, scope: !5485)
!5591 = !DILocation(line: 434, column: 43, scope: !5485)
!5592 = !DILocation(line: 434, column: 49, scope: !5485)
!5593 = !DILocation(line: 434, column: 52, scope: !5485)
!5594 = !DILocation(line: 434, column: 23, scope: !5485)
!5595 = !DILocation(line: 434, column: 59, scope: !5485)
!5596 = !DILocation(line: 434, column: 20, scope: !5485)
!5597 = !DILocation(line: 435, column: 13, scope: !5485)
!5598 = !DILocation(line: 438, column: 20, scope: !5485)
!5599 = !DILocation(line: 439, column: 13, scope: !5485)
!5600 = !DILocation(line: 441, column: 5, scope: !5479)
!5601 = !DILocation(line: 373, column: 46, scope: !5471)
!5602 = !DILocation(line: 373, column: 5, scope: !5471)
!5603 = distinct !{!5603, !5477, !5604}
!5604 = !DILocation(line: 441, column: 5, scope: !5468)
!5605 = !DILocation(line: 443, column: 12, scope: !5455)
!5606 = !DILocation(line: 443, column: 5, scope: !5455)
!5607 = distinct !DISubprogram(name: "prv_createHeader", scope: !676, file: !676, line: 179, type: !5608, isLocal: true, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5608 = !DISubroutineType(types: !5609)
!5609 = !{!58, !186, !136, !689, !79, !438}
!5610 = !DILocalVariable(name: "header", arg: 1, scope: !5607, file: !676, line: 179, type: !186)
!5611 = !DILocation(line: 179, column: 39, scope: !5607)
!5612 = !DILocalVariable(name: "isInstance", arg: 2, scope: !5607, file: !676, line: 180, type: !136)
!5613 = !DILocation(line: 180, column: 34, scope: !5607)
!5614 = !DILocalVariable(name: "type", arg: 3, scope: !5607, file: !676, line: 181, type: !689)
!5615 = !DILocation(line: 181, column: 47, scope: !5607)
!5616 = !DILocalVariable(name: "id", arg: 4, scope: !5607, file: !676, line: 182, type: !79)
!5617 = !DILocation(line: 182, column: 38, scope: !5607)
!5618 = !DILocalVariable(name: "data_len", arg: 5, scope: !5607, file: !676, line: 183, type: !438)
!5619 = !DILocation(line: 183, column: 36, scope: !5607)
!5620 = !DILocalVariable(name: "header_len", scope: !5607, file: !676, line: 185, type: !58)
!5621 = !DILocation(line: 185, column: 9, scope: !5607)
!5622 = !DILocalVariable(name: "offset", scope: !5607, file: !676, line: 186, type: !58)
!5623 = !DILocation(line: 186, column: 9, scope: !5607)
!5624 = !DILocalVariable(name: "hdrType", scope: !5607, file: !676, line: 187, type: !107)
!5625 = !DILocation(line: 187, column: 13, scope: !5607)
!5626 = !DILocation(line: 189, column: 38, scope: !5607)
!5627 = !DILocation(line: 189, column: 42, scope: !5607)
!5628 = !DILocation(line: 189, column: 18, scope: !5607)
!5629 = !DILocation(line: 189, column: 16, scope: !5607)
!5630 = !DILocation(line: 190, column: 9, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5607, file: !676, line: 190, column: 9)
!5632 = !DILocation(line: 190, column: 20, scope: !5631)
!5633 = !DILocation(line: 190, column: 9, scope: !5607)
!5634 = !DILocation(line: 192, column: 17, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !676, line: 191, column: 5)
!5636 = !DILocation(line: 193, column: 5, scope: !5635)
!5637 = !DILocation(line: 196, column: 37, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5631, file: !676, line: 195, column: 5)
!5639 = !DILocation(line: 196, column: 19, scope: !5638)
!5640 = !DILocation(line: 196, column: 17, scope: !5638)
!5641 = !DILocation(line: 199, column: 5, scope: !5607)
!5642 = !DILocation(line: 199, column: 15, scope: !5607)
!5643 = !DILocation(line: 200, column: 18, scope: !5607)
!5644 = !DILocation(line: 200, column: 25, scope: !5607)
!5645 = !DILocation(line: 200, column: 5, scope: !5607)
!5646 = !DILocation(line: 200, column: 15, scope: !5607)
!5647 = !DILocation(line: 202, column: 9, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5607, file: !676, line: 202, column: 9)
!5649 = !DILocation(line: 202, column: 12, scope: !5648)
!5650 = !DILocation(line: 202, column: 9, scope: !5607)
!5651 = !DILocation(line: 204, column: 9, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5648, file: !676, line: 203, column: 5)
!5653 = !DILocation(line: 204, column: 19, scope: !5652)
!5654 = !DILocation(line: 205, column: 22, scope: !5652)
!5655 = !DILocation(line: 205, column: 25, scope: !5652)
!5656 = !DILocation(line: 205, column: 31, scope: !5652)
!5657 = !DILocation(line: 205, column: 21, scope: !5652)
!5658 = !DILocation(line: 205, column: 9, scope: !5652)
!5659 = !DILocation(line: 205, column: 19, scope: !5652)
!5660 = !DILocation(line: 206, column: 21, scope: !5652)
!5661 = !DILocation(line: 206, column: 24, scope: !5652)
!5662 = !DILocation(line: 206, column: 9, scope: !5652)
!5663 = !DILocation(line: 206, column: 19, scope: !5652)
!5664 = !DILocation(line: 207, column: 16, scope: !5652)
!5665 = !DILocation(line: 208, column: 5, scope: !5652)
!5666 = !DILocation(line: 211, column: 21, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5648, file: !676, line: 210, column: 5)
!5668 = !DILocation(line: 211, column: 9, scope: !5667)
!5669 = !DILocation(line: 211, column: 19, scope: !5667)
!5670 = !DILocation(line: 212, column: 16, scope: !5667)
!5671 = !DILocation(line: 214, column: 9, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5607, file: !676, line: 214, column: 9)
!5673 = !DILocation(line: 214, column: 18, scope: !5672)
!5674 = !DILocation(line: 214, column: 9, scope: !5607)
!5675 = !DILocation(line: 216, column: 22, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5672, file: !676, line: 215, column: 5)
!5677 = !DILocation(line: 216, column: 9, scope: !5676)
!5678 = !DILocation(line: 216, column: 19, scope: !5676)
!5679 = !DILocation(line: 217, column: 5, scope: !5676)
!5680 = !DILocation(line: 218, column: 14, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5672, file: !676, line: 218, column: 14)
!5682 = !DILocation(line: 218, column: 23, scope: !5681)
!5683 = !DILocation(line: 218, column: 14, scope: !5672)
!5684 = !DILocation(line: 220, column: 9, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5681, file: !676, line: 219, column: 5)
!5686 = !DILocation(line: 220, column: 19, scope: !5685)
!5687 = !DILocation(line: 221, column: 26, scope: !5685)
!5688 = !DILocation(line: 221, column: 9, scope: !5685)
!5689 = !DILocation(line: 221, column: 16, scope: !5685)
!5690 = !DILocation(line: 221, column: 24, scope: !5685)
!5691 = !DILocation(line: 222, column: 5, scope: !5685)
!5692 = !DILocation(line: 223, column: 14, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5681, file: !676, line: 223, column: 14)
!5694 = !DILocation(line: 223, column: 23, scope: !5693)
!5695 = !DILocation(line: 223, column: 14, scope: !5681)
!5696 = !DILocation(line: 225, column: 9, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5693, file: !676, line: 224, column: 5)
!5698 = !DILocation(line: 225, column: 19, scope: !5697)
!5699 = !DILocation(line: 226, column: 27, scope: !5697)
!5700 = !DILocation(line: 226, column: 36, scope: !5697)
!5701 = !DILocation(line: 226, column: 42, scope: !5697)
!5702 = !DILocation(line: 226, column: 26, scope: !5697)
!5703 = !DILocation(line: 226, column: 9, scope: !5697)
!5704 = !DILocation(line: 226, column: 16, scope: !5697)
!5705 = !DILocation(line: 226, column: 24, scope: !5697)
!5706 = !DILocation(line: 227, column: 30, scope: !5697)
!5707 = !DILocation(line: 227, column: 39, scope: !5697)
!5708 = !DILocation(line: 227, column: 9, scope: !5697)
!5709 = !DILocation(line: 227, column: 16, scope: !5697)
!5710 = !DILocation(line: 227, column: 23, scope: !5697)
!5711 = !DILocation(line: 227, column: 28, scope: !5697)
!5712 = !DILocation(line: 228, column: 5, scope: !5697)
!5713 = !DILocation(line: 229, column: 14, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5693, file: !676, line: 229, column: 14)
!5715 = !DILocation(line: 229, column: 23, scope: !5714)
!5716 = !DILocation(line: 229, column: 14, scope: !5693)
!5717 = !DILocation(line: 231, column: 9, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !676, line: 230, column: 5)
!5719 = !DILocation(line: 231, column: 19, scope: !5718)
!5720 = !DILocation(line: 232, column: 27, scope: !5718)
!5721 = !DILocation(line: 232, column: 36, scope: !5718)
!5722 = !DILocation(line: 232, column: 43, scope: !5718)
!5723 = !DILocation(line: 232, column: 26, scope: !5718)
!5724 = !DILocation(line: 232, column: 9, scope: !5718)
!5725 = !DILocation(line: 232, column: 16, scope: !5718)
!5726 = !DILocation(line: 232, column: 24, scope: !5718)
!5727 = !DILocation(line: 233, column: 31, scope: !5718)
!5728 = !DILocation(line: 233, column: 40, scope: !5718)
!5729 = !DILocation(line: 233, column: 46, scope: !5718)
!5730 = !DILocation(line: 233, column: 30, scope: !5718)
!5731 = !DILocation(line: 233, column: 9, scope: !5718)
!5732 = !DILocation(line: 233, column: 16, scope: !5718)
!5733 = !DILocation(line: 233, column: 23, scope: !5718)
!5734 = !DILocation(line: 233, column: 28, scope: !5718)
!5735 = !DILocation(line: 234, column: 30, scope: !5718)
!5736 = !DILocation(line: 234, column: 39, scope: !5718)
!5737 = !DILocation(line: 234, column: 9, scope: !5718)
!5738 = !DILocation(line: 234, column: 16, scope: !5718)
!5739 = !DILocation(line: 234, column: 23, scope: !5718)
!5740 = !DILocation(line: 234, column: 28, scope: !5718)
!5741 = !DILocation(line: 235, column: 5, scope: !5718)
!5742 = !DILocation(line: 237, column: 12, scope: !5607)
!5743 = !DILocation(line: 237, column: 5, scope: !5607)
!5744 = distinct !DISubprogram(name: "prv_encodeInt", scope: !676, file: !676, line: 65, type: !5745, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!438, !254, !186}
!5747 = !DILocalVariable(name: "data", arg: 1, scope: !5744, file: !676, line: 65, type: !254)
!5748 = !DILocation(line: 65, column: 37, scope: !5744)
!5749 = !DILocalVariable(name: "data_buffer", arg: 2, scope: !5744, file: !676, line: 66, type: !186)
!5750 = !DILocation(line: 66, column: 39, scope: !5744)
!5751 = !DILocalVariable(name: "length", scope: !5744, file: !676, line: 68, type: !438)
!5752 = !DILocation(line: 68, column: 12, scope: !5744)
!5753 = !DILocation(line: 70, column: 9, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5744, file: !676, line: 70, column: 9)
!5755 = !DILocation(line: 70, column: 14, scope: !5754)
!5756 = !DILocation(line: 70, column: 26, scope: !5754)
!5757 = !DILocation(line: 70, column: 29, scope: !5754)
!5758 = !DILocation(line: 70, column: 34, scope: !5754)
!5759 = !DILocation(line: 70, column: 9, scope: !5744)
!5760 = !DILocation(line: 72, column: 16, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5754, file: !676, line: 71, column: 5)
!5762 = !DILocation(line: 73, column: 26, scope: !5761)
!5763 = !DILocation(line: 73, column: 9, scope: !5761)
!5764 = !DILocation(line: 73, column: 24, scope: !5761)
!5765 = !DILocation(line: 74, column: 5, scope: !5761)
!5766 = !DILocation(line: 75, column: 14, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5754, file: !676, line: 75, column: 14)
!5768 = !DILocation(line: 75, column: 19, scope: !5767)
!5769 = !DILocation(line: 75, column: 32, scope: !5767)
!5770 = !DILocation(line: 75, column: 35, scope: !5767)
!5771 = !DILocation(line: 75, column: 40, scope: !5767)
!5772 = !DILocation(line: 75, column: 14, scope: !5754)
!5773 = !DILocalVariable(name: "value", scope: !5774, file: !676, line: 77, type: !5775)
!5774 = distinct !DILexicalBlock(scope: !5767, file: !676, line: 76, column: 5)
!5775 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !80, line: 37, baseType: !5776)
!5776 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!5777 = !DILocation(line: 77, column: 17, scope: !5774)
!5778 = !DILocation(line: 79, column: 17, scope: !5774)
!5779 = !DILocation(line: 79, column: 15, scope: !5774)
!5780 = !DILocation(line: 80, column: 16, scope: !5774)
!5781 = !DILocation(line: 81, column: 27, scope: !5774)
!5782 = !DILocation(line: 81, column: 33, scope: !5774)
!5783 = !DILocation(line: 81, column: 39, scope: !5774)
!5784 = !DILocation(line: 81, column: 26, scope: !5774)
!5785 = !DILocation(line: 81, column: 9, scope: !5774)
!5786 = !DILocation(line: 81, column: 24, scope: !5774)
!5787 = !DILocation(line: 82, column: 26, scope: !5774)
!5788 = !DILocation(line: 82, column: 32, scope: !5774)
!5789 = !DILocation(line: 82, column: 9, scope: !5774)
!5790 = !DILocation(line: 82, column: 24, scope: !5774)
!5791 = !DILocation(line: 83, column: 5, scope: !5774)
!5792 = !DILocation(line: 84, column: 14, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5767, file: !676, line: 84, column: 14)
!5794 = !DILocation(line: 84, column: 19, scope: !5793)
!5795 = !DILocation(line: 84, column: 32, scope: !5793)
!5796 = !DILocation(line: 84, column: 35, scope: !5793)
!5797 = !DILocation(line: 84, column: 40, scope: !5793)
!5798 = !DILocation(line: 84, column: 14, scope: !5767)
!5799 = !DILocalVariable(name: "value", scope: !5800, file: !676, line: 86, type: !5801)
!5800 = distinct !DILexicalBlock(scope: !5793, file: !676, line: 85, column: 5)
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !80, line: 38, baseType: !58)
!5802 = !DILocation(line: 86, column: 17, scope: !5800)
!5803 = !DILocation(line: 88, column: 17, scope: !5800)
!5804 = !DILocation(line: 88, column: 15, scope: !5800)
!5805 = !DILocation(line: 89, column: 16, scope: !5800)
!5806 = !DILocation(line: 90, column: 25, scope: !5800)
!5807 = !DILocation(line: 90, column: 38, scope: !5800)
!5808 = !DILocation(line: 90, column: 46, scope: !5800)
!5809 = !DILocation(line: 90, column: 9, scope: !5800)
!5810 = !DILocation(line: 91, column: 5, scope: !5800)
!5811 = !DILocation(line: 92, column: 14, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5793, file: !676, line: 92, column: 14)
!5813 = !DILocation(line: 92, column: 19, scope: !5812)
!5814 = !DILocation(line: 92, column: 32, scope: !5812)
!5815 = !DILocation(line: 92, column: 35, scope: !5812)
!5816 = !DILocation(line: 92, column: 40, scope: !5812)
!5817 = !DILocation(line: 92, column: 14, scope: !5793)
!5818 = !DILocation(line: 94, column: 16, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5812, file: !676, line: 93, column: 5)
!5820 = !DILocation(line: 95, column: 25, scope: !5819)
!5821 = !DILocation(line: 95, column: 38, scope: !5819)
!5822 = !DILocation(line: 95, column: 45, scope: !5819)
!5823 = !DILocation(line: 95, column: 9, scope: !5819)
!5824 = !DILocation(line: 96, column: 5, scope: !5819)
!5825 = !DILocation(line: 98, column: 12, scope: !5744)
!5826 = !DILocation(line: 98, column: 5, scope: !5744)
!5827 = distinct !DISubprogram(name: "prv_encodeFloat", scope: !676, file: !676, line: 43, type: !5828, isLocal: true, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5828 = !DISubroutineType(types: !5829)
!5829 = !{!438, !253, !186}
!5830 = !DILocalVariable(name: "data", arg: 1, scope: !5827, file: !676, line: 43, type: !253)
!5831 = !DILocation(line: 43, column: 38, scope: !5827)
!5832 = !DILocalVariable(name: "data_buffer", arg: 2, scope: !5827, file: !676, line: 44, type: !186)
!5833 = !DILocation(line: 44, column: 41, scope: !5827)
!5834 = !DILocalVariable(name: "length", scope: !5827, file: !676, line: 46, type: !438)
!5835 = !DILocation(line: 46, column: 12, scope: !5827)
!5836 = !DILocation(line: 48, column: 10, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5827, file: !676, line: 48, column: 9)
!5838 = !DILocation(line: 48, column: 15, scope: !5837)
!5839 = !DILocation(line: 48, column: 40, scope: !5837)
!5840 = !DILocation(line: 48, column: 44, scope: !5837)
!5841 = !DILocation(line: 48, column: 49, scope: !5837)
!5842 = !DILocation(line: 48, column: 9, scope: !5827)
!5843 = !DILocation(line: 50, column: 16, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5837, file: !676, line: 49, column: 5)
!5845 = !DILocation(line: 51, column: 25, scope: !5844)
!5846 = !DILocation(line: 51, column: 38, scope: !5844)
!5847 = !DILocation(line: 51, column: 9, scope: !5844)
!5848 = !DILocation(line: 52, column: 5, scope: !5844)
!5849 = !DILocalVariable(name: "value", scope: !5850, file: !676, line: 55, type: !679)
!5850 = distinct !DILexicalBlock(scope: !5837, file: !676, line: 54, column: 5)
!5851 = !DILocation(line: 55, column: 15, scope: !5850)
!5852 = !DILocation(line: 57, column: 16, scope: !5850)
!5853 = !DILocation(line: 58, column: 24, scope: !5850)
!5854 = !DILocation(line: 58, column: 17, scope: !5850)
!5855 = !DILocation(line: 58, column: 15, scope: !5850)
!5856 = !DILocation(line: 59, column: 25, scope: !5850)
!5857 = !DILocation(line: 59, column: 38, scope: !5850)
!5858 = !DILocation(line: 59, column: 9, scope: !5850)
!5859 = !DILocation(line: 62, column: 12, scope: !5827)
!5860 = !DILocation(line: 62, column: 5, scope: !5827)
!5861 = distinct !DISubprogram(name: "prv_getHeaderLength", scope: !676, file: !676, line: 151, type: !5862, isLocal: true, isDefinition: true, scopeLine: 153, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!58, !79, !438}
!5864 = !DILocalVariable(name: "id", arg: 1, scope: !5861, file: !676, line: 151, type: !79)
!5865 = !DILocation(line: 151, column: 41, scope: !5861)
!5866 = !DILocalVariable(name: "dataLen", arg: 2, scope: !5861, file: !676, line: 152, type: !438)
!5867 = !DILocation(line: 152, column: 39, scope: !5861)
!5868 = !DILocalVariable(name: "length", scope: !5861, file: !676, line: 154, type: !58)
!5869 = !DILocation(line: 154, column: 9, scope: !5861)
!5870 = !DILocation(line: 156, column: 12, scope: !5861)
!5871 = !DILocation(line: 158, column: 9, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5861, file: !676, line: 158, column: 9)
!5873 = !DILocation(line: 158, column: 12, scope: !5872)
!5874 = !DILocation(line: 158, column: 9, scope: !5861)
!5875 = !DILocation(line: 160, column: 16, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5872, file: !676, line: 159, column: 5)
!5877 = !DILocation(line: 161, column: 5, scope: !5876)
!5878 = !DILocation(line: 163, column: 9, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5861, file: !676, line: 163, column: 9)
!5880 = !DILocation(line: 163, column: 17, scope: !5879)
!5881 = !DILocation(line: 163, column: 9, scope: !5861)
!5882 = !DILocation(line: 165, column: 16, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5879, file: !676, line: 164, column: 5)
!5884 = !DILocation(line: 166, column: 5, scope: !5883)
!5885 = !DILocation(line: 167, column: 14, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5879, file: !676, line: 167, column: 14)
!5887 = !DILocation(line: 167, column: 22, scope: !5886)
!5888 = !DILocation(line: 167, column: 14, scope: !5879)
!5889 = !DILocation(line: 169, column: 16, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5886, file: !676, line: 168, column: 5)
!5891 = !DILocation(line: 170, column: 5, scope: !5890)
!5892 = !DILocation(line: 171, column: 14, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5886, file: !676, line: 171, column: 14)
!5894 = !DILocation(line: 171, column: 22, scope: !5893)
!5895 = !DILocation(line: 171, column: 14, scope: !5886)
!5896 = !DILocation(line: 173, column: 16, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !676, line: 172, column: 5)
!5898 = !DILocation(line: 174, column: 5, scope: !5897)
!5899 = !DILocation(line: 176, column: 12, scope: !5861)
!5900 = !DILocation(line: 176, column: 5, scope: !5861)
!5901 = distinct !DISubprogram(name: "prv_getHeaderType", scope: !676, file: !676, line: 101, type: !5902, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !675, variables: !488)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!107, !689}
!5904 = !DILocalVariable(name: "type", arg: 1, scope: !5901, file: !676, line: 101, type: !689)
!5905 = !DILocation(line: 101, column: 52, scope: !5901)
!5906 = !DILocation(line: 103, column: 13, scope: !5901)
!5907 = !DILocation(line: 103, column: 5, scope: !5901)
!5908 = !DILocation(line: 106, column: 9, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5901, file: !676, line: 104, column: 5)
!5910 = !DILocation(line: 109, column: 9, scope: !5909)
!5911 = !DILocation(line: 112, column: 9, scope: !5909)
!5912 = !DILocation(line: 121, column: 9, scope: !5909)
!5913 = !DILocation(line: 125, column: 9, scope: !5909)
!5914 = !DILocation(line: 127, column: 1, scope: !5901)
!5915 = distinct !DISubprogram(name: "lwm2m_data_new", scope: !681, file: !681, line: 139, type: !5916, isLocal: false, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!684, !58}
!5918 = !DILocalVariable(name: "size", arg: 1, scope: !5915, file: !681, line: 139, type: !58)
!5919 = !DILocation(line: 139, column: 35, scope: !5915)
!5920 = !DILocalVariable(name: "dataP", scope: !5915, file: !681, line: 141, type: !684)
!5921 = !DILocation(line: 141, column: 20, scope: !5915)
!5922 = !DILocation(line: 144, column: 9, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5915, file: !681, line: 144, column: 9)
!5924 = !DILocation(line: 144, column: 14, scope: !5923)
!5925 = !DILocation(line: 144, column: 9, scope: !5915)
!5926 = !DILocation(line: 144, column: 20, scope: !5923)
!5927 = !DILocation(line: 146, column: 42, scope: !5915)
!5928 = !DILocation(line: 146, column: 47, scope: !5915)
!5929 = !DILocation(line: 146, column: 29, scope: !5915)
!5930 = !DILocation(line: 146, column: 13, scope: !5915)
!5931 = !DILocation(line: 146, column: 11, scope: !5915)
!5932 = !DILocation(line: 148, column: 9, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5915, file: !681, line: 148, column: 9)
!5934 = !DILocation(line: 148, column: 15, scope: !5933)
!5935 = !DILocation(line: 148, column: 9, scope: !5915)
!5936 = !DILocation(line: 150, column: 16, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5933, file: !681, line: 149, column: 5)
!5938 = !DILocation(line: 150, column: 9, scope: !5937)
!5939 = !DILocation(line: 150, column: 26, scope: !5937)
!5940 = !DILocation(line: 150, column: 31, scope: !5937)
!5941 = !DILocation(line: 151, column: 5, scope: !5937)
!5942 = !DILocation(line: 153, column: 12, scope: !5915)
!5943 = !DILocation(line: 153, column: 5, scope: !5915)
!5944 = !DILocation(line: 154, column: 1, scope: !5915)
!5945 = distinct !DISubprogram(name: "lwm2m_data_free", scope: !681, file: !681, line: 156, type: !5946, isLocal: false, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{null, !58, !684}
!5948 = !DILocalVariable(name: "size", arg: 1, scope: !5945, file: !681, line: 156, type: !58)
!5949 = !DILocation(line: 156, column: 26, scope: !5945)
!5950 = !DILocalVariable(name: "dataP", arg: 2, scope: !5945, file: !681, line: 157, type: !684)
!5951 = !DILocation(line: 157, column: 37, scope: !5945)
!5952 = !DILocalVariable(name: "i", scope: !5945, file: !681, line: 159, type: !58)
!5953 = !DILocation(line: 159, column: 9, scope: !5945)
!5954 = !DILocation(line: 162, column: 9, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5945, file: !681, line: 162, column: 9)
!5956 = !DILocation(line: 162, column: 14, scope: !5955)
!5957 = !DILocation(line: 162, column: 19, scope: !5955)
!5958 = !DILocation(line: 162, column: 22, scope: !5955)
!5959 = !DILocation(line: 162, column: 28, scope: !5955)
!5960 = !DILocation(line: 162, column: 9, scope: !5945)
!5961 = !DILocation(line: 162, column: 37, scope: !5955)
!5962 = !DILocation(line: 164, column: 12, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5945, file: !681, line: 164, column: 5)
!5964 = !DILocation(line: 164, column: 10, scope: !5963)
!5965 = !DILocation(line: 164, column: 17, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5963, file: !681, line: 164, column: 5)
!5967 = !DILocation(line: 164, column: 21, scope: !5966)
!5968 = !DILocation(line: 164, column: 19, scope: !5966)
!5969 = !DILocation(line: 164, column: 5, scope: !5963)
!5970 = !DILocation(line: 166, column: 17, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5966, file: !681, line: 165, column: 5)
!5972 = !DILocation(line: 166, column: 23, scope: !5971)
!5973 = !DILocation(line: 166, column: 26, scope: !5971)
!5974 = !DILocation(line: 166, column: 9, scope: !5971)
!5975 = !DILocation(line: 171, column: 29, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5971, file: !681, line: 167, column: 9)
!5977 = !DILocation(line: 171, column: 35, scope: !5976)
!5978 = !DILocation(line: 171, column: 38, scope: !5976)
!5979 = !DILocation(line: 171, column: 44, scope: !5976)
!5980 = !DILocation(line: 171, column: 55, scope: !5976)
!5981 = !DILocation(line: 171, column: 62, scope: !5976)
!5982 = !DILocation(line: 171, column: 68, scope: !5976)
!5983 = !DILocation(line: 171, column: 71, scope: !5976)
!5984 = !DILocation(line: 171, column: 77, scope: !5976)
!5985 = !DILocation(line: 171, column: 88, scope: !5976)
!5986 = !DILocation(line: 171, column: 13, scope: !5976)
!5987 = !DILocation(line: 172, column: 13, scope: !5976)
!5988 = !DILocation(line: 176, column: 17, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5976, file: !681, line: 176, column: 17)
!5990 = !DILocation(line: 176, column: 23, scope: !5989)
!5991 = !DILocation(line: 176, column: 26, scope: !5989)
!5992 = !DILocation(line: 176, column: 32, scope: !5989)
!5993 = !DILocation(line: 176, column: 41, scope: !5989)
!5994 = !DILocation(line: 176, column: 48, scope: !5989)
!5995 = !DILocation(line: 176, column: 17, scope: !5976)
!5996 = !DILocation(line: 178, column: 28, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5989, file: !681, line: 177, column: 13)
!5998 = !DILocation(line: 178, column: 34, scope: !5997)
!5999 = !DILocation(line: 178, column: 37, scope: !5997)
!6000 = !DILocation(line: 178, column: 43, scope: !5997)
!6001 = !DILocation(line: 178, column: 52, scope: !5997)
!6002 = !DILocation(line: 178, column: 17, scope: !5997)
!6003 = !DILocation(line: 179, column: 13, scope: !5997)
!6004 = !DILocation(line: 176, column: 51, scope: !5989)
!6005 = !DILocation(line: 183, column: 13, scope: !5976)
!6006 = !DILocation(line: 185, column: 5, scope: !5971)
!6007 = !DILocation(line: 164, column: 28, scope: !5966)
!6008 = !DILocation(line: 164, column: 5, scope: !5966)
!6009 = distinct !{!6009, !5969, !6010}
!6010 = !DILocation(line: 185, column: 5, scope: !5963)
!6011 = !DILocation(line: 186, column: 16, scope: !5945)
!6012 = !DILocation(line: 186, column: 5, scope: !5945)
!6013 = !DILocation(line: 187, column: 1, scope: !5945)
!6014 = distinct !DISubprogram(name: "lwm2m_data_encode_string", scope: !681, file: !681, line: 189, type: !6015, isLocal: false, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{null, !548, !684}
!6017 = !DILocalVariable(name: "string", arg: 1, scope: !6014, file: !681, line: 189, type: !548)
!6018 = !DILocation(line: 189, column: 44, scope: !6014)
!6019 = !DILocalVariable(name: "dataP", arg: 2, scope: !6014, file: !681, line: 190, type: !684)
!6020 = !DILocation(line: 190, column: 46, scope: !6014)
!6021 = !DILocalVariable(name: "len", scope: !6014, file: !681, line: 192, type: !438)
!6022 = !DILocation(line: 192, column: 12, scope: !6014)
!6023 = !DILocalVariable(name: "res", scope: !6014, file: !681, line: 193, type: !58)
!6024 = !DILocation(line: 193, column: 9, scope: !6014)
!6025 = !DILocation(line: 196, column: 9, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6014, file: !681, line: 196, column: 9)
!6027 = !DILocation(line: 196, column: 16, scope: !6026)
!6028 = !DILocation(line: 196, column: 9, scope: !6014)
!6029 = !DILocation(line: 198, column: 13, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !681, line: 197, column: 5)
!6031 = !DILocation(line: 199, column: 5, scope: !6030)
!6032 = !DILocation(line: 202, column: 18, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !681, line: 202, column: 9)
!6034 = distinct !DILexicalBlock(scope: !6026, file: !681, line: 201, column: 5)
!6035 = !DILocation(line: 202, column: 14, scope: !6033)
!6036 = !DILocation(line: 202, column: 23, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6033, file: !681, line: 202, column: 9)
!6038 = !DILocation(line: 202, column: 30, scope: !6037)
!6039 = !DILocation(line: 202, column: 35, scope: !6037)
!6040 = !DILocation(line: 202, column: 9, scope: !6033)
!6041 = !DILocation(line: 202, column: 44, scope: !6037)
!6042 = !DILocation(line: 202, column: 9, scope: !6037)
!6043 = distinct !{!6043, !6040, !6044}
!6044 = !DILocation(line: 202, column: 47, scope: !6033)
!6045 = !DILocation(line: 205, column: 9, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6014, file: !681, line: 205, column: 9)
!6047 = !DILocation(line: 205, column: 13, scope: !6046)
!6048 = !DILocation(line: 205, column: 9, scope: !6014)
!6049 = !DILocation(line: 207, column: 9, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6046, file: !681, line: 206, column: 5)
!6051 = !DILocation(line: 207, column: 16, scope: !6050)
!6052 = !DILocation(line: 207, column: 22, scope: !6050)
!6053 = !DILocation(line: 207, column: 31, scope: !6050)
!6054 = !DILocation(line: 207, column: 38, scope: !6050)
!6055 = !DILocation(line: 208, column: 9, scope: !6050)
!6056 = !DILocation(line: 208, column: 16, scope: !6050)
!6057 = !DILocation(line: 208, column: 22, scope: !6050)
!6058 = !DILocation(line: 208, column: 31, scope: !6050)
!6059 = !DILocation(line: 208, column: 38, scope: !6050)
!6060 = !DILocation(line: 209, column: 13, scope: !6050)
!6061 = !DILocation(line: 210, column: 5, scope: !6050)
!6062 = !DILocation(line: 213, column: 29, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6046, file: !681, line: 212, column: 5)
!6064 = !DILocation(line: 213, column: 47, scope: !6063)
!6065 = !DILocation(line: 213, column: 55, scope: !6063)
!6066 = !DILocation(line: 213, column: 15, scope: !6063)
!6067 = !DILocation(line: 213, column: 13, scope: !6063)
!6068 = !DILocation(line: 216, column: 9, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6014, file: !681, line: 216, column: 9)
!6070 = !DILocation(line: 216, column: 13, scope: !6069)
!6071 = !DILocation(line: 216, column: 9, scope: !6014)
!6072 = !DILocation(line: 218, column: 9, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !681, line: 217, column: 5)
!6074 = !DILocation(line: 218, column: 16, scope: !6073)
!6075 = !DILocation(line: 218, column: 21, scope: !6073)
!6076 = !DILocation(line: 219, column: 5, scope: !6073)
!6077 = !DILocation(line: 222, column: 9, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6069, file: !681, line: 221, column: 5)
!6079 = !DILocation(line: 222, column: 16, scope: !6078)
!6080 = !DILocation(line: 222, column: 21, scope: !6078)
!6081 = !DILocation(line: 224, column: 1, scope: !6014)
!6082 = distinct !DISubprogram(name: "prv_setBuffer", scope: !681, file: !681, line: 124, type: !6083, isLocal: true, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{!58, !684, !186, !438}
!6085 = !DILocalVariable(name: "dataP", arg: 1, scope: !6082, file: !681, line: 124, type: !684)
!6086 = !DILocation(line: 124, column: 41, scope: !6082)
!6087 = !DILocalVariable(name: "buffer", arg: 2, scope: !6082, file: !681, line: 125, type: !186)
!6088 = !DILocation(line: 125, column: 36, scope: !6082)
!6089 = !DILocalVariable(name: "bufferLen", arg: 3, scope: !6082, file: !681, line: 126, type: !438)
!6090 = !DILocation(line: 126, column: 33, scope: !6082)
!6091 = !DILocation(line: 128, column: 60, scope: !6082)
!6092 = !DILocation(line: 128, column: 47, scope: !6082)
!6093 = !DILocation(line: 128, column: 5, scope: !6082)
!6094 = !DILocation(line: 128, column: 12, scope: !6082)
!6095 = !DILocation(line: 128, column: 18, scope: !6082)
!6096 = !DILocation(line: 128, column: 27, scope: !6082)
!6097 = !DILocation(line: 128, column: 34, scope: !6082)
!6098 = !DILocation(line: 129, column: 9, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6082, file: !681, line: 129, column: 9)
!6100 = !DILocation(line: 129, column: 16, scope: !6099)
!6101 = !DILocation(line: 129, column: 22, scope: !6099)
!6102 = !DILocation(line: 129, column: 31, scope: !6099)
!6103 = !DILocation(line: 129, column: 38, scope: !6099)
!6104 = !DILocation(line: 129, column: 9, scope: !6082)
!6105 = !DILocation(line: 131, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6099, file: !681, line: 130, column: 5)
!6107 = !DILocation(line: 133, column: 36, scope: !6082)
!6108 = !DILocation(line: 133, column: 5, scope: !6082)
!6109 = !DILocation(line: 133, column: 12, scope: !6082)
!6110 = !DILocation(line: 133, column: 18, scope: !6082)
!6111 = !DILocation(line: 133, column: 27, scope: !6082)
!6112 = !DILocation(line: 133, column: 34, scope: !6082)
!6113 = !DILocation(line: 134, column: 12, scope: !6082)
!6114 = !DILocation(line: 134, column: 19, scope: !6082)
!6115 = !DILocation(line: 134, column: 25, scope: !6082)
!6116 = !DILocation(line: 134, column: 34, scope: !6082)
!6117 = !DILocation(line: 134, column: 42, scope: !6082)
!6118 = !DILocation(line: 134, column: 50, scope: !6082)
!6119 = !DILocation(line: 134, column: 5, scope: !6082)
!6120 = !DILocation(line: 136, column: 5, scope: !6082)
!6121 = !DILocation(line: 137, column: 1, scope: !6082)
!6122 = distinct !DISubprogram(name: "lwm2m_data_encode_opaque", scope: !681, file: !681, line: 226, type: !6123, isLocal: false, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{null, !186, !438, !684}
!6125 = !DILocalVariable(name: "buffer", arg: 1, scope: !6122, file: !681, line: 226, type: !186)
!6126 = !DILocation(line: 226, column: 41, scope: !6122)
!6127 = !DILocalVariable(name: "length", arg: 2, scope: !6122, file: !681, line: 227, type: !438)
!6128 = !DILocation(line: 227, column: 38, scope: !6122)
!6129 = !DILocalVariable(name: "dataP", arg: 3, scope: !6122, file: !681, line: 228, type: !684)
!6130 = !DILocation(line: 228, column: 46, scope: !6122)
!6131 = !DILocalVariable(name: "res", scope: !6122, file: !681, line: 230, type: !58)
!6132 = !DILocation(line: 230, column: 9, scope: !6122)
!6133 = !DILocation(line: 233, column: 9, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6122, file: !681, line: 233, column: 9)
!6135 = !DILocation(line: 233, column: 16, scope: !6134)
!6136 = !DILocation(line: 233, column: 9, scope: !6122)
!6137 = !DILocation(line: 235, column: 9, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !681, line: 234, column: 5)
!6139 = !DILocation(line: 235, column: 16, scope: !6138)
!6140 = !DILocation(line: 235, column: 22, scope: !6138)
!6141 = !DILocation(line: 235, column: 31, scope: !6138)
!6142 = !DILocation(line: 235, column: 38, scope: !6138)
!6143 = !DILocation(line: 236, column: 9, scope: !6138)
!6144 = !DILocation(line: 236, column: 16, scope: !6138)
!6145 = !DILocation(line: 236, column: 22, scope: !6138)
!6146 = !DILocation(line: 236, column: 31, scope: !6138)
!6147 = !DILocation(line: 236, column: 38, scope: !6138)
!6148 = !DILocation(line: 237, column: 13, scope: !6138)
!6149 = !DILocation(line: 238, column: 5, scope: !6138)
!6150 = !DILocation(line: 241, column: 29, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6134, file: !681, line: 240, column: 5)
!6152 = !DILocation(line: 241, column: 36, scope: !6151)
!6153 = !DILocation(line: 241, column: 44, scope: !6151)
!6154 = !DILocation(line: 241, column: 15, scope: !6151)
!6155 = !DILocation(line: 241, column: 13, scope: !6151)
!6156 = !DILocation(line: 244, column: 9, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6122, file: !681, line: 244, column: 9)
!6158 = !DILocation(line: 244, column: 13, scope: !6157)
!6159 = !DILocation(line: 244, column: 9, scope: !6122)
!6160 = !DILocation(line: 246, column: 9, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6157, file: !681, line: 245, column: 5)
!6162 = !DILocation(line: 246, column: 16, scope: !6161)
!6163 = !DILocation(line: 246, column: 21, scope: !6161)
!6164 = !DILocation(line: 247, column: 5, scope: !6161)
!6165 = !DILocation(line: 250, column: 9, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6157, file: !681, line: 249, column: 5)
!6167 = !DILocation(line: 250, column: 16, scope: !6166)
!6168 = !DILocation(line: 250, column: 21, scope: !6166)
!6169 = !DILocation(line: 252, column: 1, scope: !6122)
!6170 = distinct !DISubprogram(name: "lwm2m_data_encode_nstring", scope: !681, file: !681, line: 254, type: !6171, isLocal: false, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{null, !548, !438, !684}
!6173 = !DILocalVariable(name: "string", arg: 1, scope: !6170, file: !681, line: 254, type: !548)
!6174 = !DILocation(line: 254, column: 45, scope: !6170)
!6175 = !DILocalVariable(name: "length", arg: 2, scope: !6170, file: !681, line: 255, type: !438)
!6176 = !DILocation(line: 255, column: 39, scope: !6170)
!6177 = !DILocalVariable(name: "dataP", arg: 3, scope: !6170, file: !681, line: 256, type: !684)
!6178 = !DILocation(line: 256, column: 47, scope: !6170)
!6179 = !DILocation(line: 259, column: 41, scope: !6170)
!6180 = !DILocation(line: 259, column: 49, scope: !6170)
!6181 = !DILocation(line: 259, column: 57, scope: !6170)
!6182 = !DILocation(line: 259, column: 5, scope: !6170)
!6183 = !DILocation(line: 261, column: 9, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6170, file: !681, line: 261, column: 9)
!6185 = !DILocation(line: 261, column: 16, scope: !6184)
!6186 = !DILocation(line: 261, column: 21, scope: !6184)
!6187 = !DILocation(line: 261, column: 9, scope: !6170)
!6188 = !DILocation(line: 263, column: 9, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6184, file: !681, line: 262, column: 5)
!6190 = !DILocation(line: 263, column: 16, scope: !6189)
!6191 = !DILocation(line: 263, column: 21, scope: !6189)
!6192 = !DILocation(line: 264, column: 5, scope: !6189)
!6193 = !DILocation(line: 265, column: 1, scope: !6170)
!6194 = distinct !DISubprogram(name: "lwm2m_data_encode_int", scope: !681, file: !681, line: 267, type: !6195, isLocal: false, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{null, !254, !684}
!6197 = !DILocalVariable(name: "value", arg: 1, scope: !6194, file: !681, line: 267, type: !254)
!6198 = !DILocation(line: 267, column: 36, scope: !6194)
!6199 = !DILocalVariable(name: "dataP", arg: 2, scope: !6194, file: !681, line: 268, type: !684)
!6200 = !DILocation(line: 268, column: 43, scope: !6194)
!6201 = !DILocation(line: 271, column: 5, scope: !6194)
!6202 = !DILocation(line: 271, column: 12, scope: !6194)
!6203 = !DILocation(line: 271, column: 17, scope: !6194)
!6204 = !DILocation(line: 272, column: 30, scope: !6194)
!6205 = !DILocation(line: 272, column: 5, scope: !6194)
!6206 = !DILocation(line: 272, column: 12, scope: !6194)
!6207 = !DILocation(line: 272, column: 18, scope: !6194)
!6208 = !DILocation(line: 272, column: 28, scope: !6194)
!6209 = !DILocation(line: 273, column: 1, scope: !6194)
!6210 = distinct !DISubprogram(name: "lwm2m_data_decode_int", scope: !681, file: !681, line: 275, type: !6211, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6211 = !DISubroutineType(types: !6212)
!6212 = !{!58, !6213, !3784}
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!6215 = !DILocalVariable(name: "dataP", arg: 1, scope: !6210, file: !681, line: 275, type: !6213)
!6216 = !DILocation(line: 275, column: 48, scope: !6210)
!6217 = !DILocalVariable(name: "valueP", arg: 2, scope: !6210, file: !681, line: 276, type: !3784)
!6218 = !DILocation(line: 276, column: 37, scope: !6210)
!6219 = !DILocalVariable(name: "result", scope: !6210, file: !681, line: 278, type: !58)
!6220 = !DILocation(line: 278, column: 9, scope: !6210)
!6221 = !DILocation(line: 281, column: 13, scope: !6210)
!6222 = !DILocation(line: 281, column: 20, scope: !6210)
!6223 = !DILocation(line: 281, column: 5, scope: !6210)
!6224 = !DILocation(line: 284, column: 19, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6210, file: !681, line: 282, column: 5)
!6226 = !DILocation(line: 284, column: 26, scope: !6225)
!6227 = !DILocation(line: 284, column: 32, scope: !6225)
!6228 = !DILocation(line: 284, column: 10, scope: !6225)
!6229 = !DILocation(line: 284, column: 17, scope: !6225)
!6230 = !DILocation(line: 285, column: 16, scope: !6225)
!6231 = !DILocation(line: 286, column: 9, scope: !6225)
!6232 = !DILocation(line: 289, column: 34, scope: !6225)
!6233 = !DILocation(line: 289, column: 41, scope: !6225)
!6234 = !DILocation(line: 289, column: 47, scope: !6225)
!6235 = !DILocation(line: 289, column: 56, scope: !6225)
!6236 = !DILocation(line: 289, column: 64, scope: !6225)
!6237 = !DILocation(line: 289, column: 71, scope: !6225)
!6238 = !DILocation(line: 289, column: 77, scope: !6225)
!6239 = !DILocation(line: 289, column: 86, scope: !6225)
!6240 = !DILocation(line: 289, column: 94, scope: !6225)
!6241 = !DILocation(line: 289, column: 18, scope: !6225)
!6242 = !DILocation(line: 289, column: 16, scope: !6225)
!6243 = !DILocation(line: 290, column: 9, scope: !6225)
!6244 = !DILocation(line: 293, column: 17, scope: !6225)
!6245 = !DILocation(line: 293, column: 24, scope: !6225)
!6246 = !DILocation(line: 293, column: 30, scope: !6225)
!6247 = !DILocation(line: 293, column: 39, scope: !6225)
!6248 = !DILocation(line: 293, column: 9, scope: !6225)
!6249 = !DILocation(line: 296, column: 31, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6225, file: !681, line: 294, column: 9)
!6251 = !DILocation(line: 296, column: 38, scope: !6250)
!6252 = !DILocation(line: 296, column: 44, scope: !6250)
!6253 = !DILocation(line: 296, column: 53, scope: !6250)
!6254 = !DILocation(line: 296, column: 23, scope: !6250)
!6255 = !DILocation(line: 296, column: 14, scope: !6250)
!6256 = !DILocation(line: 296, column: 21, scope: !6250)
!6257 = !DILocation(line: 297, column: 20, scope: !6250)
!6258 = !DILocation(line: 298, column: 13, scope: !6250)
!6259 = !DILocalVariable(name: "value", scope: !6260, file: !681, line: 302, type: !5775)
!6260 = distinct !DILexicalBlock(scope: !6250, file: !681, line: 301, column: 9)
!6261 = !DILocation(line: 302, column: 21, scope: !6260)
!6262 = !DILocation(line: 304, column: 29, scope: !6260)
!6263 = !DILocation(line: 304, column: 37, scope: !6260)
!6264 = !DILocation(line: 304, column: 44, scope: !6260)
!6265 = !DILocation(line: 304, column: 50, scope: !6260)
!6266 = !DILocation(line: 304, column: 59, scope: !6260)
!6267 = !DILocation(line: 304, column: 67, scope: !6260)
!6268 = !DILocation(line: 304, column: 74, scope: !6260)
!6269 = !DILocation(line: 304, column: 80, scope: !6260)
!6270 = !DILocation(line: 304, column: 89, scope: !6260)
!6271 = !DILocation(line: 304, column: 13, scope: !6260)
!6272 = !DILocation(line: 306, column: 23, scope: !6260)
!6273 = !DILocation(line: 306, column: 14, scope: !6260)
!6274 = !DILocation(line: 306, column: 21, scope: !6260)
!6275 = !DILocation(line: 307, column: 20, scope: !6260)
!6276 = !DILocation(line: 308, column: 13, scope: !6260)
!6277 = !DILocalVariable(name: "value", scope: !6278, file: !681, line: 313, type: !5801)
!6278 = distinct !DILexicalBlock(scope: !6250, file: !681, line: 312, column: 9)
!6279 = !DILocation(line: 313, column: 21, scope: !6278)
!6280 = !DILocation(line: 315, column: 29, scope: !6278)
!6281 = !DILocation(line: 315, column: 37, scope: !6278)
!6282 = !DILocation(line: 315, column: 44, scope: !6278)
!6283 = !DILocation(line: 315, column: 50, scope: !6278)
!6284 = !DILocation(line: 315, column: 59, scope: !6278)
!6285 = !DILocation(line: 315, column: 67, scope: !6278)
!6286 = !DILocation(line: 315, column: 74, scope: !6278)
!6287 = !DILocation(line: 315, column: 80, scope: !6278)
!6288 = !DILocation(line: 315, column: 89, scope: !6278)
!6289 = !DILocation(line: 315, column: 13, scope: !6278)
!6290 = !DILocation(line: 317, column: 23, scope: !6278)
!6291 = !DILocation(line: 317, column: 14, scope: !6278)
!6292 = !DILocation(line: 317, column: 21, scope: !6278)
!6293 = !DILocation(line: 318, column: 20, scope: !6278)
!6294 = !DILocation(line: 319, column: 13, scope: !6278)
!6295 = !DILocation(line: 323, column: 29, scope: !6250)
!6296 = !DILocation(line: 323, column: 37, scope: !6250)
!6297 = !DILocation(line: 323, column: 44, scope: !6250)
!6298 = !DILocation(line: 323, column: 50, scope: !6250)
!6299 = !DILocation(line: 323, column: 59, scope: !6250)
!6300 = !DILocation(line: 323, column: 67, scope: !6250)
!6301 = !DILocation(line: 323, column: 74, scope: !6250)
!6302 = !DILocation(line: 323, column: 80, scope: !6250)
!6303 = !DILocation(line: 323, column: 89, scope: !6250)
!6304 = !DILocation(line: 323, column: 13, scope: !6250)
!6305 = !DILocation(line: 324, column: 20, scope: !6250)
!6306 = !DILocation(line: 325, column: 13, scope: !6250)
!6307 = !DILocation(line: 328, column: 20, scope: !6250)
!6308 = !DILocation(line: 329, column: 9, scope: !6250)
!6309 = !DILocation(line: 330, column: 9, scope: !6225)
!6310 = !DILocation(line: 333, column: 9, scope: !6225)
!6311 = !DILocation(line: 337, column: 12, scope: !6210)
!6312 = !DILocation(line: 337, column: 5, scope: !6210)
!6313 = !DILocation(line: 338, column: 1, scope: !6210)
!6314 = distinct !DISubprogram(name: "lwm2m_data_encode_float", scope: !681, file: !681, line: 340, type: !6315, isLocal: false, isDefinition: true, scopeLine: 342, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{null, !253, !684}
!6317 = !DILocalVariable(name: "value", arg: 1, scope: !6314, file: !681, line: 340, type: !253)
!6318 = !DILocation(line: 340, column: 37, scope: !6314)
!6319 = !DILocalVariable(name: "dataP", arg: 2, scope: !6314, file: !681, line: 341, type: !684)
!6320 = !DILocation(line: 341, column: 45, scope: !6314)
!6321 = !DILocation(line: 344, column: 5, scope: !6314)
!6322 = !DILocation(line: 344, column: 12, scope: !6314)
!6323 = !DILocation(line: 344, column: 17, scope: !6314)
!6324 = !DILocation(line: 345, column: 28, scope: !6314)
!6325 = !DILocation(line: 345, column: 5, scope: !6314)
!6326 = !DILocation(line: 345, column: 12, scope: !6314)
!6327 = !DILocation(line: 345, column: 18, scope: !6314)
!6328 = !DILocation(line: 345, column: 26, scope: !6314)
!6329 = !DILocation(line: 346, column: 1, scope: !6314)
!6330 = distinct !DISubprogram(name: "lwm2m_data_decode_float", scope: !681, file: !681, line: 348, type: !6331, isLocal: false, isDefinition: true, scopeLine: 350, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!58, !6213, !3866}
!6333 = !DILocalVariable(name: "dataP", arg: 1, scope: !6330, file: !681, line: 348, type: !6213)
!6334 = !DILocation(line: 348, column: 50, scope: !6330)
!6335 = !DILocalVariable(name: "valueP", arg: 2, scope: !6330, file: !681, line: 349, type: !3866)
!6336 = !DILocation(line: 349, column: 38, scope: !6330)
!6337 = !DILocalVariable(name: "result", scope: !6330, file: !681, line: 351, type: !58)
!6338 = !DILocation(line: 351, column: 9, scope: !6330)
!6339 = !DILocation(line: 354, column: 13, scope: !6330)
!6340 = !DILocation(line: 354, column: 20, scope: !6330)
!6341 = !DILocation(line: 354, column: 5, scope: !6330)
!6342 = !DILocation(line: 357, column: 19, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6330, file: !681, line: 355, column: 5)
!6344 = !DILocation(line: 357, column: 26, scope: !6343)
!6345 = !DILocation(line: 357, column: 32, scope: !6343)
!6346 = !DILocation(line: 357, column: 10, scope: !6343)
!6347 = !DILocation(line: 357, column: 17, scope: !6343)
!6348 = !DILocation(line: 358, column: 16, scope: !6343)
!6349 = !DILocation(line: 359, column: 9, scope: !6343)
!6350 = !DILocation(line: 362, column: 27, scope: !6343)
!6351 = !DILocation(line: 362, column: 34, scope: !6343)
!6352 = !DILocation(line: 362, column: 40, scope: !6343)
!6353 = !DILocation(line: 362, column: 19, scope: !6343)
!6354 = !DILocation(line: 362, column: 10, scope: !6343)
!6355 = !DILocation(line: 362, column: 17, scope: !6343)
!6356 = !DILocation(line: 363, column: 16, scope: !6343)
!6357 = !DILocation(line: 364, column: 9, scope: !6343)
!6358 = !DILocation(line: 367, column: 36, scope: !6343)
!6359 = !DILocation(line: 367, column: 43, scope: !6343)
!6360 = !DILocation(line: 367, column: 49, scope: !6343)
!6361 = !DILocation(line: 367, column: 58, scope: !6343)
!6362 = !DILocation(line: 367, column: 66, scope: !6343)
!6363 = !DILocation(line: 367, column: 73, scope: !6343)
!6364 = !DILocation(line: 367, column: 79, scope: !6343)
!6365 = !DILocation(line: 367, column: 88, scope: !6343)
!6366 = !DILocation(line: 367, column: 96, scope: !6343)
!6367 = !DILocation(line: 367, column: 18, scope: !6343)
!6368 = !DILocation(line: 367, column: 16, scope: !6343)
!6369 = !DILocation(line: 368, column: 9, scope: !6343)
!6370 = !DILocation(line: 371, column: 17, scope: !6343)
!6371 = !DILocation(line: 371, column: 24, scope: !6343)
!6372 = !DILocation(line: 371, column: 30, scope: !6343)
!6373 = !DILocation(line: 371, column: 39, scope: !6343)
!6374 = !DILocation(line: 371, column: 9, scope: !6343)
!6375 = !DILocalVariable(name: "temp", scope: !6376, file: !681, line: 375, type: !679)
!6376 = distinct !DILexicalBlock(scope: !6377, file: !681, line: 374, column: 9)
!6377 = distinct !DILexicalBlock(scope: !6343, file: !681, line: 372, column: 9)
!6378 = !DILocation(line: 375, column: 19, scope: !6376)
!6379 = !DILocation(line: 377, column: 29, scope: !6376)
!6380 = !DILocation(line: 377, column: 36, scope: !6376)
!6381 = !DILocation(line: 377, column: 43, scope: !6376)
!6382 = !DILocation(line: 377, column: 49, scope: !6376)
!6383 = !DILocation(line: 377, column: 58, scope: !6376)
!6384 = !DILocation(line: 377, column: 66, scope: !6376)
!6385 = !DILocation(line: 377, column: 73, scope: !6376)
!6386 = !DILocation(line: 377, column: 79, scope: !6376)
!6387 = !DILocation(line: 377, column: 88, scope: !6376)
!6388 = !DILocation(line: 377, column: 13, scope: !6376)
!6389 = !DILocation(line: 379, column: 23, scope: !6376)
!6390 = !DILocation(line: 379, column: 14, scope: !6376)
!6391 = !DILocation(line: 379, column: 21, scope: !6376)
!6392 = !DILocation(line: 380, column: 20, scope: !6376)
!6393 = !DILocation(line: 382, column: 9, scope: !6377)
!6394 = !DILocation(line: 385, column: 29, scope: !6377)
!6395 = !DILocation(line: 385, column: 37, scope: !6377)
!6396 = !DILocation(line: 385, column: 44, scope: !6377)
!6397 = !DILocation(line: 385, column: 50, scope: !6377)
!6398 = !DILocation(line: 385, column: 59, scope: !6377)
!6399 = !DILocation(line: 385, column: 67, scope: !6377)
!6400 = !DILocation(line: 385, column: 74, scope: !6377)
!6401 = !DILocation(line: 385, column: 80, scope: !6377)
!6402 = !DILocation(line: 385, column: 89, scope: !6377)
!6403 = !DILocation(line: 385, column: 13, scope: !6377)
!6404 = !DILocation(line: 386, column: 20, scope: !6377)
!6405 = !DILocation(line: 387, column: 13, scope: !6377)
!6406 = !DILocation(line: 390, column: 20, scope: !6377)
!6407 = !DILocation(line: 391, column: 9, scope: !6377)
!6408 = !DILocation(line: 392, column: 9, scope: !6343)
!6409 = !DILocation(line: 395, column: 16, scope: !6343)
!6410 = !DILocation(line: 396, column: 5, scope: !6343)
!6411 = !DILocation(line: 400, column: 12, scope: !6330)
!6412 = !DILocation(line: 400, column: 5, scope: !6330)
!6413 = distinct !DISubprogram(name: "lwm2m_data_encode_bool", scope: !681, file: !681, line: 403, type: !6414, isLocal: false, isDefinition: true, scopeLine: 405, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{null, !136, !684}
!6416 = !DILocalVariable(name: "value", arg: 1, scope: !6413, file: !681, line: 403, type: !136)
!6417 = !DILocation(line: 403, column: 34, scope: !6413)
!6418 = !DILocalVariable(name: "dataP", arg: 2, scope: !6413, file: !681, line: 404, type: !684)
!6419 = !DILocation(line: 404, column: 44, scope: !6413)
!6420 = !DILocation(line: 407, column: 5, scope: !6413)
!6421 = !DILocation(line: 407, column: 12, scope: !6413)
!6422 = !DILocation(line: 407, column: 17, scope: !6413)
!6423 = !DILocation(line: 408, column: 30, scope: !6413)
!6424 = !DILocation(line: 408, column: 5, scope: !6413)
!6425 = !DILocation(line: 408, column: 12, scope: !6413)
!6426 = !DILocation(line: 408, column: 18, scope: !6413)
!6427 = !DILocation(line: 408, column: 28, scope: !6413)
!6428 = !DILocation(line: 409, column: 1, scope: !6413)
!6429 = distinct !DISubprogram(name: "lwm2m_data_decode_bool", scope: !681, file: !681, line: 411, type: !6430, isLocal: false, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!58, !6213, !6432}
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!6433 = !DILocalVariable(name: "dataP", arg: 1, scope: !6429, file: !681, line: 411, type: !6213)
!6434 = !DILocation(line: 411, column: 49, scope: !6429)
!6435 = !DILocalVariable(name: "valueP", arg: 2, scope: !6429, file: !681, line: 412, type: !6432)
!6436 = !DILocation(line: 412, column: 35, scope: !6429)
!6437 = !DILocalVariable(name: "result", scope: !6429, file: !681, line: 414, type: !58)
!6438 = !DILocation(line: 414, column: 9, scope: !6429)
!6439 = !DILocation(line: 417, column: 13, scope: !6429)
!6440 = !DILocation(line: 417, column: 20, scope: !6429)
!6441 = !DILocation(line: 417, column: 5, scope: !6429)
!6442 = !DILocation(line: 420, column: 19, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6429, file: !681, line: 418, column: 5)
!6444 = !DILocation(line: 420, column: 26, scope: !6443)
!6445 = !DILocation(line: 420, column: 32, scope: !6443)
!6446 = !DILocation(line: 420, column: 10, scope: !6443)
!6447 = !DILocation(line: 420, column: 17, scope: !6443)
!6448 = !DILocation(line: 421, column: 16, scope: !6443)
!6449 = !DILocation(line: 422, column: 9, scope: !6443)
!6450 = !DILocation(line: 425, column: 13, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6443, file: !681, line: 425, column: 13)
!6452 = !DILocation(line: 425, column: 20, scope: !6451)
!6453 = !DILocation(line: 425, column: 26, scope: !6451)
!6454 = !DILocation(line: 425, column: 35, scope: !6451)
!6455 = !DILocation(line: 425, column: 42, scope: !6451)
!6456 = !DILocation(line: 425, column: 13, scope: !6443)
!6457 = !DILocation(line: 425, column: 48, scope: !6451)
!6458 = !DILocation(line: 427, column: 17, scope: !6443)
!6459 = !DILocation(line: 427, column: 24, scope: !6443)
!6460 = !DILocation(line: 427, column: 30, scope: !6443)
!6461 = !DILocation(line: 427, column: 39, scope: !6443)
!6462 = !DILocation(line: 427, column: 9, scope: !6443)
!6463 = !DILocation(line: 430, column: 14, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6443, file: !681, line: 428, column: 9)
!6465 = !DILocation(line: 430, column: 21, scope: !6464)
!6466 = !DILocation(line: 431, column: 20, scope: !6464)
!6467 = !DILocation(line: 432, column: 13, scope: !6464)
!6468 = !DILocation(line: 434, column: 14, scope: !6464)
!6469 = !DILocation(line: 434, column: 21, scope: !6464)
!6470 = !DILocation(line: 435, column: 20, scope: !6464)
!6471 = !DILocation(line: 436, column: 13, scope: !6464)
!6472 = !DILocation(line: 438, column: 20, scope: !6464)
!6473 = !DILocation(line: 439, column: 13, scope: !6464)
!6474 = !DILocation(line: 441, column: 9, scope: !6443)
!6475 = !DILocation(line: 444, column: 13, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6443, file: !681, line: 444, column: 13)
!6477 = !DILocation(line: 444, column: 20, scope: !6476)
!6478 = !DILocation(line: 444, column: 26, scope: !6476)
!6479 = !DILocation(line: 444, column: 35, scope: !6476)
!6480 = !DILocation(line: 444, column: 42, scope: !6476)
!6481 = !DILocation(line: 444, column: 13, scope: !6443)
!6482 = !DILocation(line: 444, column: 48, scope: !6476)
!6483 = !DILocation(line: 446, column: 17, scope: !6443)
!6484 = !DILocation(line: 446, column: 24, scope: !6443)
!6485 = !DILocation(line: 446, column: 30, scope: !6443)
!6486 = !DILocation(line: 446, column: 39, scope: !6443)
!6487 = !DILocation(line: 446, column: 9, scope: !6443)
!6488 = !DILocation(line: 449, column: 14, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6443, file: !681, line: 447, column: 9)
!6490 = !DILocation(line: 449, column: 21, scope: !6489)
!6491 = !DILocation(line: 450, column: 20, scope: !6489)
!6492 = !DILocation(line: 451, column: 13, scope: !6489)
!6493 = !DILocation(line: 453, column: 14, scope: !6489)
!6494 = !DILocation(line: 453, column: 21, scope: !6489)
!6495 = !DILocation(line: 454, column: 20, scope: !6489)
!6496 = !DILocation(line: 455, column: 13, scope: !6489)
!6497 = !DILocation(line: 457, column: 20, scope: !6489)
!6498 = !DILocation(line: 458, column: 13, scope: !6489)
!6499 = !DILocation(line: 460, column: 9, scope: !6443)
!6500 = !DILocation(line: 463, column: 16, scope: !6443)
!6501 = !DILocation(line: 464, column: 9, scope: !6443)
!6502 = !DILocation(line: 469, column: 12, scope: !6429)
!6503 = !DILocation(line: 469, column: 5, scope: !6429)
!6504 = !DILocation(line: 470, column: 1, scope: !6429)
!6505 = distinct !DISubprogram(name: "lwm2m_data_encode_objlink", scope: !681, file: !681, line: 472, type: !6506, isLocal: false, isDefinition: true, scopeLine: 475, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{null, !79, !79, !684}
!6508 = !DILocalVariable(name: "objectId", arg: 1, scope: !6505, file: !681, line: 472, type: !79)
!6509 = !DILocation(line: 472, column: 41, scope: !6505)
!6510 = !DILocalVariable(name: "objectInstanceId", arg: 2, scope: !6505, file: !681, line: 473, type: !79)
!6511 = !DILocation(line: 473, column: 37, scope: !6505)
!6512 = !DILocalVariable(name: "dataP", arg: 3, scope: !6505, file: !681, line: 474, type: !684)
!6513 = !DILocation(line: 474, column: 43, scope: !6505)
!6514 = !DILocation(line: 477, column: 5, scope: !6505)
!6515 = !DILocation(line: 477, column: 12, scope: !6505)
!6516 = !DILocation(line: 477, column: 17, scope: !6505)
!6517 = !DILocation(line: 478, column: 39, scope: !6505)
!6518 = !DILocation(line: 478, column: 5, scope: !6505)
!6519 = !DILocation(line: 478, column: 12, scope: !6505)
!6520 = !DILocation(line: 478, column: 18, scope: !6505)
!6521 = !DILocation(line: 478, column: 28, scope: !6505)
!6522 = !DILocation(line: 478, column: 37, scope: !6505)
!6523 = !DILocation(line: 479, column: 47, scope: !6505)
!6524 = !DILocation(line: 479, column: 5, scope: !6505)
!6525 = !DILocation(line: 479, column: 12, scope: !6505)
!6526 = !DILocation(line: 479, column: 18, scope: !6505)
!6527 = !DILocation(line: 479, column: 28, scope: !6505)
!6528 = !DILocation(line: 479, column: 45, scope: !6505)
!6529 = !DILocation(line: 480, column: 1, scope: !6505)
!6530 = distinct !DISubprogram(name: "lwm2m_data_include", scope: !681, file: !681, line: 482, type: !6531, isLocal: false, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{null, !684, !438, !684}
!6533 = !DILocalVariable(name: "subDataP", arg: 1, scope: !6530, file: !681, line: 482, type: !684)
!6534 = !DILocation(line: 482, column: 40, scope: !6530)
!6535 = !DILocalVariable(name: "count", arg: 2, scope: !6530, file: !681, line: 483, type: !438)
!6536 = !DILocation(line: 483, column: 32, scope: !6530)
!6537 = !DILocalVariable(name: "dataP", arg: 3, scope: !6530, file: !681, line: 484, type: !684)
!6538 = !DILocation(line: 484, column: 40, scope: !6530)
!6539 = !DILocation(line: 487, column: 9, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6530, file: !681, line: 487, column: 9)
!6541 = !DILocation(line: 487, column: 18, scope: !6540)
!6542 = !DILocation(line: 487, column: 26, scope: !6540)
!6543 = !DILocation(line: 487, column: 29, scope: !6540)
!6544 = !DILocation(line: 487, column: 35, scope: !6540)
!6545 = !DILocation(line: 487, column: 9, scope: !6530)
!6546 = !DILocation(line: 487, column: 41, scope: !6540)
!6547 = !DILocation(line: 489, column: 13, scope: !6530)
!6548 = !DILocation(line: 489, column: 25, scope: !6530)
!6549 = !DILocation(line: 489, column: 5, scope: !6530)
!6550 = !DILocation(line: 498, column: 9, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6530, file: !681, line: 490, column: 5)
!6552 = !DILocation(line: 498, column: 16, scope: !6551)
!6553 = !DILocation(line: 498, column: 21, scope: !6551)
!6554 = !DILocation(line: 499, column: 9, scope: !6551)
!6555 = !DILocation(line: 501, column: 9, scope: !6551)
!6556 = !DILocation(line: 501, column: 16, scope: !6551)
!6557 = !DILocation(line: 501, column: 21, scope: !6551)
!6558 = !DILocation(line: 502, column: 9, scope: !6551)
!6559 = !DILocation(line: 504, column: 9, scope: !6551)
!6560 = !DILocation(line: 506, column: 37, scope: !6530)
!6561 = !DILocation(line: 506, column: 5, scope: !6530)
!6562 = !DILocation(line: 506, column: 12, scope: !6530)
!6563 = !DILocation(line: 506, column: 18, scope: !6530)
!6564 = !DILocation(line: 506, column: 29, scope: !6530)
!6565 = !DILocation(line: 506, column: 35, scope: !6530)
!6566 = !DILocation(line: 507, column: 37, scope: !6530)
!6567 = !DILocation(line: 507, column: 5, scope: !6530)
!6568 = !DILocation(line: 507, column: 12, scope: !6530)
!6569 = !DILocation(line: 507, column: 18, scope: !6530)
!6570 = !DILocation(line: 507, column: 29, scope: !6530)
!6571 = !DILocation(line: 507, column: 35, scope: !6530)
!6572 = !DILocation(line: 508, column: 1, scope: !6530)
!6573 = distinct !DISubprogram(name: "lwm2m_data_encode_instances", scope: !681, file: !681, line: 510, type: !6531, isLocal: false, isDefinition: true, scopeLine: 513, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6574 = !DILocalVariable(name: "subDataP", arg: 1, scope: !6573, file: !681, line: 510, type: !684)
!6575 = !DILocation(line: 510, column: 49, scope: !6573)
!6576 = !DILocalVariable(name: "count", arg: 2, scope: !6573, file: !681, line: 511, type: !438)
!6577 = !DILocation(line: 511, column: 41, scope: !6573)
!6578 = !DILocalVariable(name: "dataP", arg: 3, scope: !6573, file: !681, line: 512, type: !684)
!6579 = !DILocation(line: 512, column: 49, scope: !6573)
!6580 = !DILocation(line: 515, column: 24, scope: !6573)
!6581 = !DILocation(line: 515, column: 34, scope: !6573)
!6582 = !DILocation(line: 515, column: 41, scope: !6573)
!6583 = !DILocation(line: 515, column: 5, scope: !6573)
!6584 = !DILocation(line: 516, column: 5, scope: !6573)
!6585 = !DILocation(line: 516, column: 12, scope: !6573)
!6586 = !DILocation(line: 516, column: 17, scope: !6573)
!6587 = !DILocation(line: 517, column: 1, scope: !6573)
!6588 = distinct !DISubprogram(name: "lwm2m_data_parse", scope: !681, file: !681, line: 519, type: !6589, isLocal: false, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{!58, !6591, !186, !438, !185, !6599}
!6591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6592, size: 64)
!6592 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !6593)
!6593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !6594)
!6594 = !{!6595, !6596, !6597, !6598}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6593, file: !6, line: 255, baseType: !107, size: 8)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !6593, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !6593, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !6593, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!6600 = !DILocalVariable(name: "uriP", arg: 1, scope: !6588, file: !681, line: 519, type: !6591)
!6601 = !DILocation(line: 519, column: 36, scope: !6588)
!6602 = !DILocalVariable(name: "buffer", arg: 2, scope: !6588, file: !681, line: 520, type: !186)
!6603 = !DILocation(line: 520, column: 32, scope: !6588)
!6604 = !DILocalVariable(name: "bufferLen", arg: 3, scope: !6588, file: !681, line: 521, type: !438)
!6605 = !DILocation(line: 521, column: 29, scope: !6588)
!6606 = !DILocalVariable(name: "format", arg: 4, scope: !6588, file: !681, line: 522, type: !185)
!6607 = !DILocation(line: 522, column: 41, scope: !6588)
!6608 = !DILocalVariable(name: "dataP", arg: 5, scope: !6588, file: !681, line: 523, type: !6599)
!6609 = !DILocation(line: 523, column: 38, scope: !6588)
!6610 = !DILocalVariable(name: "res", scope: !6588, file: !681, line: 525, type: !58)
!6611 = !DILocation(line: 525, column: 9, scope: !6588)
!6612 = !DILocation(line: 529, column: 13, scope: !6588)
!6613 = !DILocation(line: 529, column: 5, scope: !6588)
!6614 = !DILocation(line: 532, column: 14, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !681, line: 532, column: 13)
!6616 = distinct !DILexicalBlock(scope: !6588, file: !681, line: 530, column: 5)
!6617 = !DILocation(line: 532, column: 13, scope: !6616)
!6618 = !DILocation(line: 532, column: 47, scope: !6615)
!6619 = !DILocation(line: 533, column: 18, scope: !6616)
!6620 = !DILocation(line: 533, column: 10, scope: !6616)
!6621 = !DILocation(line: 533, column: 16, scope: !6616)
!6622 = !DILocation(line: 534, column: 14, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6616, file: !681, line: 534, column: 13)
!6624 = !DILocation(line: 534, column: 13, scope: !6623)
!6625 = !DILocation(line: 534, column: 20, scope: !6623)
!6626 = !DILocation(line: 534, column: 13, scope: !6616)
!6627 = !DILocation(line: 534, column: 29, scope: !6623)
!6628 = !DILocation(line: 535, column: 24, scope: !6616)
!6629 = !DILocation(line: 535, column: 30, scope: !6616)
!6630 = !DILocation(line: 535, column: 11, scope: !6616)
!6631 = !DILocation(line: 535, column: 10, scope: !6616)
!6632 = !DILocation(line: 535, column: 19, scope: !6616)
!6633 = !DILocation(line: 535, column: 22, scope: !6616)
!6634 = !DILocation(line: 536, column: 11, scope: !6616)
!6635 = !DILocation(line: 536, column: 10, scope: !6616)
!6636 = !DILocation(line: 536, column: 19, scope: !6616)
!6637 = !DILocation(line: 536, column: 24, scope: !6616)
!6638 = !DILocation(line: 537, column: 30, scope: !6616)
!6639 = !DILocation(line: 537, column: 29, scope: !6616)
!6640 = !DILocation(line: 537, column: 37, scope: !6616)
!6641 = !DILocation(line: 537, column: 45, scope: !6616)
!6642 = !DILocation(line: 537, column: 15, scope: !6616)
!6643 = !DILocation(line: 537, column: 13, scope: !6616)
!6644 = !DILocation(line: 538, column: 13, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6616, file: !681, line: 538, column: 13)
!6646 = !DILocation(line: 538, column: 17, scope: !6645)
!6647 = !DILocation(line: 538, column: 13, scope: !6616)
!6648 = !DILocation(line: 540, column: 33, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6645, file: !681, line: 539, column: 9)
!6650 = !DILocation(line: 540, column: 32, scope: !6649)
!6651 = !DILocation(line: 540, column: 13, scope: !6649)
!6652 = !DILocation(line: 541, column: 14, scope: !6649)
!6653 = !DILocation(line: 541, column: 20, scope: !6649)
!6654 = !DILocation(line: 542, column: 9, scope: !6649)
!6655 = !DILocation(line: 543, column: 16, scope: !6616)
!6656 = !DILocation(line: 543, column: 9, scope: !6616)
!6657 = !DILocation(line: 546, column: 14, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6616, file: !681, line: 546, column: 13)
!6659 = !DILocation(line: 546, column: 13, scope: !6616)
!6660 = !DILocation(line: 546, column: 47, scope: !6658)
!6661 = !DILocation(line: 547, column: 18, scope: !6616)
!6662 = !DILocation(line: 547, column: 10, scope: !6616)
!6663 = !DILocation(line: 547, column: 16, scope: !6616)
!6664 = !DILocation(line: 548, column: 14, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6616, file: !681, line: 548, column: 13)
!6666 = !DILocation(line: 548, column: 13, scope: !6665)
!6667 = !DILocation(line: 548, column: 20, scope: !6665)
!6668 = !DILocation(line: 548, column: 13, scope: !6616)
!6669 = !DILocation(line: 548, column: 29, scope: !6665)
!6670 = !DILocation(line: 549, column: 24, scope: !6616)
!6671 = !DILocation(line: 549, column: 30, scope: !6616)
!6672 = !DILocation(line: 549, column: 11, scope: !6616)
!6673 = !DILocation(line: 549, column: 10, scope: !6616)
!6674 = !DILocation(line: 549, column: 19, scope: !6616)
!6675 = !DILocation(line: 549, column: 22, scope: !6616)
!6676 = !DILocation(line: 550, column: 11, scope: !6616)
!6677 = !DILocation(line: 550, column: 10, scope: !6616)
!6678 = !DILocation(line: 550, column: 19, scope: !6616)
!6679 = !DILocation(line: 550, column: 24, scope: !6616)
!6680 = !DILocation(line: 551, column: 30, scope: !6616)
!6681 = !DILocation(line: 551, column: 29, scope: !6616)
!6682 = !DILocation(line: 551, column: 37, scope: !6616)
!6683 = !DILocation(line: 551, column: 45, scope: !6616)
!6684 = !DILocation(line: 551, column: 15, scope: !6616)
!6685 = !DILocation(line: 551, column: 13, scope: !6616)
!6686 = !DILocation(line: 552, column: 13, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6616, file: !681, line: 552, column: 13)
!6688 = !DILocation(line: 552, column: 17, scope: !6687)
!6689 = !DILocation(line: 552, column: 13, scope: !6616)
!6690 = !DILocation(line: 554, column: 33, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6687, file: !681, line: 553, column: 9)
!6692 = !DILocation(line: 554, column: 32, scope: !6691)
!6693 = !DILocation(line: 554, column: 13, scope: !6691)
!6694 = !DILocation(line: 555, column: 14, scope: !6691)
!6695 = !DILocation(line: 555, column: 20, scope: !6691)
!6696 = !DILocation(line: 556, column: 5, scope: !6691)
!6697 = !DILocation(line: 557, column: 16, scope: !6616)
!6698 = !DILocation(line: 557, column: 9, scope: !6616)
!6699 = !DILocation(line: 563, column: 26, scope: !6616)
!6700 = !DILocation(line: 563, column: 34, scope: !6616)
!6701 = !DILocation(line: 563, column: 45, scope: !6616)
!6702 = !DILocation(line: 563, column: 16, scope: !6616)
!6703 = !DILocation(line: 563, column: 9, scope: !6616)
!6704 = !DILocation(line: 570, column: 27, scope: !6616)
!6705 = !DILocation(line: 570, column: 33, scope: !6616)
!6706 = !DILocation(line: 570, column: 41, scope: !6616)
!6707 = !DILocation(line: 570, column: 52, scope: !6616)
!6708 = !DILocation(line: 570, column: 16, scope: !6616)
!6709 = !DILocation(line: 570, column: 9, scope: !6616)
!6710 = !DILocation(line: 574, column: 9, scope: !6616)
!6711 = !DILocation(line: 576, column: 1, scope: !6588)
!6712 = distinct !DISubprogram(name: "lwm2m_data_serialize", scope: !681, file: !681, line: 578, type: !6713, isLocal: false, isDefinition: true, scopeLine: 583, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!58, !6591, !58, !684, !6715, !5103}
!6715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!6716 = !DILocalVariable(name: "uriP", arg: 1, scope: !6712, file: !681, line: 578, type: !6591)
!6717 = !DILocation(line: 578, column: 40, scope: !6712)
!6718 = !DILocalVariable(name: "size", arg: 2, scope: !6712, file: !681, line: 579, type: !58)
!6719 = !DILocation(line: 579, column: 30, scope: !6712)
!6720 = !DILocalVariable(name: "dataP", arg: 3, scope: !6712, file: !681, line: 580, type: !684)
!6721 = !DILocation(line: 580, column: 41, scope: !6712)
!6722 = !DILocalVariable(name: "formatP", arg: 4, scope: !6712, file: !681, line: 581, type: !6715)
!6723 = !DILocation(line: 581, column: 47, scope: !6712)
!6724 = !DILocalVariable(name: "bufferP", arg: 5, scope: !6712, file: !681, line: 582, type: !5103)
!6725 = !DILocation(line: 582, column: 37, scope: !6712)
!6726 = !DILocation(line: 588, column: 10, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6712, file: !681, line: 588, column: 9)
!6728 = !DILocation(line: 588, column: 9, scope: !6727)
!6729 = !DILocation(line: 588, column: 18, scope: !6727)
!6730 = !DILocation(line: 589, column: 6, scope: !6727)
!6731 = !DILocation(line: 589, column: 10, scope: !6727)
!6732 = !DILocation(line: 589, column: 9, scope: !6727)
!6733 = !DILocation(line: 589, column: 18, scope: !6727)
!6734 = !DILocation(line: 588, column: 9, scope: !6712)
!6735 = !DILocation(line: 591, column: 13, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !681, line: 591, column: 13)
!6737 = distinct !DILexicalBlock(scope: !6727, file: !681, line: 590, column: 5)
!6738 = !DILocation(line: 591, column: 18, scope: !6736)
!6739 = !DILocation(line: 592, column: 10, scope: !6736)
!6740 = !DILocation(line: 592, column: 14, scope: !6736)
!6741 = !DILocation(line: 592, column: 19, scope: !6736)
!6742 = !DILocation(line: 592, column: 27, scope: !6736)
!6743 = !DILocation(line: 592, column: 31, scope: !6736)
!6744 = !DILocation(line: 593, column: 10, scope: !6736)
!6745 = !DILocation(line: 593, column: 13, scope: !6736)
!6746 = !DILocation(line: 593, column: 20, scope: !6736)
!6747 = !DILocation(line: 593, column: 25, scope: !6736)
!6748 = !DILocation(line: 594, column: 10, scope: !6736)
!6749 = !DILocation(line: 594, column: 13, scope: !6736)
!6750 = !DILocation(line: 594, column: 20, scope: !6736)
!6751 = !DILocation(line: 594, column: 25, scope: !6736)
!6752 = !DILocation(line: 595, column: 10, scope: !6736)
!6753 = !DILocation(line: 595, column: 13, scope: !6736)
!6754 = !DILocation(line: 595, column: 20, scope: !6736)
!6755 = !DILocation(line: 595, column: 25, scope: !6736)
!6756 = !DILocation(line: 591, column: 13, scope: !6737)
!6757 = !DILocation(line: 598, column: 14, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6736, file: !681, line: 596, column: 9)
!6759 = !DILocation(line: 598, column: 22, scope: !6758)
!6760 = !DILocation(line: 602, column: 9, scope: !6758)
!6761 = !DILocation(line: 603, column: 5, scope: !6737)
!6762 = !DILocation(line: 605, column: 10, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6712, file: !681, line: 605, column: 9)
!6764 = !DILocation(line: 605, column: 9, scope: !6763)
!6765 = !DILocation(line: 605, column: 18, scope: !6763)
!6766 = !DILocation(line: 606, column: 6, scope: !6763)
!6767 = !DILocation(line: 606, column: 9, scope: !6763)
!6768 = !DILocation(line: 606, column: 16, scope: !6763)
!6769 = !DILocation(line: 606, column: 21, scope: !6763)
!6770 = !DILocation(line: 605, column: 9, scope: !6712)
!6771 = !DILocation(line: 609, column: 9, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6763, file: !681, line: 607, column: 5)
!6773 = !DILocation(line: 614, column: 14, scope: !6712)
!6774 = !DILocation(line: 614, column: 13, scope: !6712)
!6775 = !DILocation(line: 614, column: 5, scope: !6712)
!6776 = !DILocation(line: 617, column: 34, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6712, file: !681, line: 615, column: 5)
!6778 = !DILocation(line: 617, column: 41, scope: !6777)
!6779 = !DILocation(line: 617, column: 16, scope: !6777)
!6780 = !DILocation(line: 617, column: 9, scope: !6777)
!6781 = !DILocation(line: 620, column: 44, scope: !6777)
!6782 = !DILocation(line: 620, column: 51, scope: !6777)
!6783 = !DILocation(line: 620, column: 57, scope: !6777)
!6784 = !DILocation(line: 620, column: 66, scope: !6777)
!6785 = !DILocation(line: 620, column: 31, scope: !6777)
!6786 = !DILocation(line: 620, column: 10, scope: !6777)
!6787 = !DILocation(line: 620, column: 18, scope: !6777)
!6788 = !DILocation(line: 621, column: 14, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6777, file: !681, line: 621, column: 13)
!6790 = !DILocation(line: 621, column: 13, scope: !6789)
!6791 = !DILocation(line: 621, column: 22, scope: !6789)
!6792 = !DILocation(line: 621, column: 13, scope: !6777)
!6793 = !DILocation(line: 621, column: 31, scope: !6789)
!6794 = !DILocation(line: 622, column: 17, scope: !6777)
!6795 = !DILocation(line: 622, column: 16, scope: !6777)
!6796 = !DILocation(line: 622, column: 26, scope: !6777)
!6797 = !DILocation(line: 622, column: 33, scope: !6777)
!6798 = !DILocation(line: 622, column: 39, scope: !6777)
!6799 = !DILocation(line: 622, column: 48, scope: !6777)
!6800 = !DILocation(line: 622, column: 56, scope: !6777)
!6801 = !DILocation(line: 622, column: 63, scope: !6777)
!6802 = !DILocation(line: 622, column: 69, scope: !6777)
!6803 = !DILocation(line: 622, column: 78, scope: !6777)
!6804 = !DILocation(line: 622, column: 9, scope: !6777)
!6805 = !DILocation(line: 623, column: 21, scope: !6777)
!6806 = !DILocation(line: 623, column: 28, scope: !6777)
!6807 = !DILocation(line: 623, column: 34, scope: !6777)
!6808 = !DILocation(line: 623, column: 43, scope: !6777)
!6809 = !DILocation(line: 623, column: 16, scope: !6777)
!6810 = !DILocation(line: 623, column: 9, scope: !6777)
!6811 = !DILocalVariable(name: "isResourceInstance", scope: !6812, file: !681, line: 628, type: !136)
!6812 = distinct !DILexicalBlock(scope: !6777, file: !681, line: 627, column: 5)
!6813 = !DILocation(line: 628, column: 18, scope: !6812)
!6814 = !DILocation(line: 630, column: 17, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6812, file: !681, line: 630, column: 17)
!6816 = !DILocation(line: 630, column: 22, scope: !6815)
!6817 = !DILocation(line: 630, column: 30, scope: !6815)
!6818 = !DILocation(line: 630, column: 33, scope: !6815)
!6819 = !DILocation(line: 631, column: 14, scope: !6815)
!6820 = !DILocation(line: 631, column: 18, scope: !6815)
!6821 = !DILocation(line: 631, column: 23, scope: !6815)
!6822 = !DILocation(line: 631, column: 28, scope: !6815)
!6823 = !DILocation(line: 631, column: 31, scope: !6815)
!6824 = !DILocation(line: 631, column: 38, scope: !6815)
!6825 = !DILocation(line: 631, column: 44, scope: !6815)
!6826 = !DILocation(line: 631, column: 50, scope: !6815)
!6827 = !DILocation(line: 631, column: 41, scope: !6815)
!6828 = !DILocation(line: 630, column: 17, scope: !6812)
!6829 = !DILocation(line: 633, column: 36, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6815, file: !681, line: 632, column: 13)
!6831 = !DILocation(line: 634, column: 13, scope: !6830)
!6832 = !DILocation(line: 637, column: 36, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6815, file: !681, line: 636, column: 13)
!6834 = !DILocation(line: 639, column: 34, scope: !6812)
!6835 = !DILocation(line: 639, column: 54, scope: !6812)
!6836 = !DILocation(line: 639, column: 60, scope: !6812)
!6837 = !DILocation(line: 639, column: 67, scope: !6812)
!6838 = !DILocation(line: 639, column: 20, scope: !6812)
!6839 = !DILocation(line: 639, column: 13, scope: !6812)
!6840 = !DILocation(line: 649, column: 31, scope: !6777)
!6841 = !DILocation(line: 649, column: 37, scope: !6777)
!6842 = !DILocation(line: 649, column: 43, scope: !6777)
!6843 = !DILocation(line: 649, column: 50, scope: !6777)
!6844 = !DILocation(line: 649, column: 16, scope: !6777)
!6845 = !DILocation(line: 649, column: 9, scope: !6777)
!6846 = !DILocation(line: 653, column: 9, scope: !6777)
!6847 = !DILocation(line: 655, column: 1, scope: !6712)
!6848 = distinct !DISubprogram(name: "prv_textSerialize", scope: !681, file: !681, line: 26, type: !6849, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !680, variables: !488)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!58, !684, !5103}
!6851 = !DILocalVariable(name: "dataP", arg: 1, scope: !6848, file: !681, line: 26, type: !684)
!6852 = !DILocation(line: 26, column: 45, scope: !6848)
!6853 = !DILocalVariable(name: "bufferP", arg: 2, scope: !6848, file: !681, line: 27, type: !5103)
!6854 = !DILocation(line: 27, column: 41, scope: !6848)
!6855 = !DILocalVariable(name: "res", scope: !6848, file: !681, line: 29, type: !438)
!6856 = !DILocation(line: 29, column: 12, scope: !6848)
!6857 = !DILocation(line: 31, column: 13, scope: !6848)
!6858 = !DILocation(line: 31, column: 20, scope: !6848)
!6859 = !DILocation(line: 31, column: 5, scope: !6848)
!6860 = !DILocation(line: 34, column: 44, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6848, file: !681, line: 32, column: 5)
!6862 = !DILocation(line: 34, column: 51, scope: !6861)
!6863 = !DILocation(line: 34, column: 57, scope: !6861)
!6864 = !DILocation(line: 34, column: 66, scope: !6861)
!6865 = !DILocation(line: 34, column: 31, scope: !6861)
!6866 = !DILocation(line: 34, column: 10, scope: !6861)
!6867 = !DILocation(line: 34, column: 18, scope: !6861)
!6868 = !DILocation(line: 35, column: 14, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6861, file: !681, line: 35, column: 13)
!6870 = !DILocation(line: 35, column: 13, scope: !6869)
!6871 = !DILocation(line: 35, column: 22, scope: !6869)
!6872 = !DILocation(line: 35, column: 13, scope: !6861)
!6873 = !DILocation(line: 35, column: 31, scope: !6869)
!6874 = !DILocation(line: 36, column: 17, scope: !6861)
!6875 = !DILocation(line: 36, column: 16, scope: !6861)
!6876 = !DILocation(line: 36, column: 26, scope: !6861)
!6877 = !DILocation(line: 36, column: 33, scope: !6861)
!6878 = !DILocation(line: 36, column: 39, scope: !6861)
!6879 = !DILocation(line: 36, column: 48, scope: !6861)
!6880 = !DILocation(line: 36, column: 56, scope: !6861)
!6881 = !DILocation(line: 36, column: 63, scope: !6861)
!6882 = !DILocation(line: 36, column: 69, scope: !6861)
!6883 = !DILocation(line: 36, column: 78, scope: !6861)
!6884 = !DILocation(line: 36, column: 9, scope: !6861)
!6885 = !DILocation(line: 37, column: 21, scope: !6861)
!6886 = !DILocation(line: 37, column: 28, scope: !6861)
!6887 = !DILocation(line: 37, column: 34, scope: !6861)
!6888 = !DILocation(line: 37, column: 43, scope: !6861)
!6889 = !DILocation(line: 37, column: 16, scope: !6861)
!6890 = !DILocation(line: 37, column: 9, scope: !6861)
!6891 = !DILocalVariable(name: "intString", scope: !6892, file: !681, line: 41, type: !6893)
!6892 = distinct !DILexicalBlock(scope: !6861, file: !681, line: 40, column: 5)
!6893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !6894)
!6894 = !{!6895}
!6895 = !DISubrange(count: 32)
!6896 = !DILocation(line: 41, column: 17, scope: !6892)
!6897 = !DILocation(line: 43, column: 31, scope: !6892)
!6898 = !DILocation(line: 43, column: 38, scope: !6892)
!6899 = !DILocation(line: 43, column: 44, scope: !6892)
!6900 = !DILocation(line: 43, column: 55, scope: !6892)
!6901 = !DILocation(line: 43, column: 15, scope: !6892)
!6902 = !DILocation(line: 43, column: 13, scope: !6892)
!6903 = !DILocation(line: 44, column: 13, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6892, file: !681, line: 44, column: 13)
!6905 = !DILocation(line: 44, column: 17, scope: !6904)
!6906 = !DILocation(line: 44, column: 13, scope: !6892)
!6907 = !DILocation(line: 44, column: 23, scope: !6904)
!6908 = !DILocation(line: 46, column: 44, scope: !6892)
!6909 = !DILocation(line: 46, column: 31, scope: !6892)
!6910 = !DILocation(line: 46, column: 10, scope: !6892)
!6911 = !DILocation(line: 46, column: 18, scope: !6892)
!6912 = !DILocation(line: 47, column: 22, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6892, file: !681, line: 47, column: 13)
!6914 = !DILocation(line: 47, column: 21, scope: !6913)
!6915 = !DILocation(line: 47, column: 18, scope: !6913)
!6916 = !DILocation(line: 47, column: 13, scope: !6892)
!6917 = !DILocation(line: 47, column: 31, scope: !6913)
!6918 = !DILocation(line: 49, column: 17, scope: !6892)
!6919 = !DILocation(line: 49, column: 16, scope: !6892)
!6920 = !DILocation(line: 49, column: 9, scope: !6892)
!6921 = !DILocation(line: 49, column: 37, scope: !6892)
!6922 = !DILocation(line: 51, column: 21, scope: !6892)
!6923 = !DILocation(line: 51, column: 16, scope: !6892)
!6924 = !DILocation(line: 51, column: 9, scope: !6892)
!6925 = !DILocalVariable(name: "floatString", scope: !6926, file: !681, line: 56, type: !6927)
!6926 = distinct !DILexicalBlock(scope: !6861, file: !681, line: 55, column: 5)
!6927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 512, elements: !257)
!6928 = !DILocation(line: 56, column: 17, scope: !6926)
!6929 = !DILocation(line: 58, column: 33, scope: !6926)
!6930 = !DILocation(line: 58, column: 40, scope: !6926)
!6931 = !DILocation(line: 58, column: 46, scope: !6926)
!6932 = !DILocation(line: 58, column: 55, scope: !6926)
!6933 = !DILocation(line: 58, column: 15, scope: !6926)
!6934 = !DILocation(line: 58, column: 13, scope: !6926)
!6935 = !DILocation(line: 59, column: 13, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6926, file: !681, line: 59, column: 13)
!6937 = !DILocation(line: 59, column: 17, scope: !6936)
!6938 = !DILocation(line: 59, column: 13, scope: !6926)
!6939 = !DILocation(line: 59, column: 23, scope: !6936)
!6940 = !DILocation(line: 61, column: 44, scope: !6926)
!6941 = !DILocation(line: 61, column: 31, scope: !6926)
!6942 = !DILocation(line: 61, column: 10, scope: !6926)
!6943 = !DILocation(line: 61, column: 18, scope: !6926)
!6944 = !DILocation(line: 62, column: 22, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6926, file: !681, line: 62, column: 13)
!6946 = !DILocation(line: 62, column: 21, scope: !6945)
!6947 = !DILocation(line: 62, column: 18, scope: !6945)
!6948 = !DILocation(line: 62, column: 13, scope: !6926)
!6949 = !DILocation(line: 62, column: 31, scope: !6945)
!6950 = !DILocation(line: 64, column: 17, scope: !6926)
!6951 = !DILocation(line: 64, column: 16, scope: !6926)
!6952 = !DILocation(line: 64, column: 9, scope: !6926)
!6953 = !DILocation(line: 64, column: 39, scope: !6926)
!6954 = !DILocation(line: 66, column: 21, scope: !6926)
!6955 = !DILocation(line: 66, column: 16, scope: !6926)
!6956 = !DILocation(line: 66, column: 9, scope: !6926)
!6957 = !DILocation(line: 70, column: 31, scope: !6861)
!6958 = !DILocation(line: 70, column: 10, scope: !6861)
!6959 = !DILocation(line: 70, column: 18, scope: !6861)
!6960 = !DILocation(line: 71, column: 22, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6861, file: !681, line: 71, column: 13)
!6962 = !DILocation(line: 71, column: 21, scope: !6961)
!6963 = !DILocation(line: 71, column: 18, scope: !6961)
!6964 = !DILocation(line: 71, column: 13, scope: !6861)
!6965 = !DILocation(line: 71, column: 31, scope: !6961)
!6966 = !DILocation(line: 73, column: 23, scope: !6861)
!6967 = !DILocation(line: 73, column: 30, scope: !6861)
!6968 = !DILocation(line: 73, column: 36, scope: !6861)
!6969 = !DILocation(line: 73, column: 10, scope: !6861)
!6970 = !DILocation(line: 73, column: 21, scope: !6861)
!6971 = !DILocation(line: 75, column: 9, scope: !6861)
!6972 = !DILocalVariable(name: "stringBuffer", scope: !6973, file: !681, line: 79, type: !6974)
!6973 = distinct !DILexicalBlock(scope: !6861, file: !681, line: 78, column: 5)
!6974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 88, elements: !6975)
!6975 = !{!6976}
!6976 = !DISubrange(count: 11)
!6977 = !DILocation(line: 79, column: 14, scope: !6973)
!6978 = !DILocalVariable(name: "length", scope: !6973, file: !681, line: 80, type: !438)
!6979 = !DILocation(line: 80, column: 16, scope: !6973)
!6980 = !DILocation(line: 82, column: 34, scope: !6973)
!6981 = !DILocation(line: 82, column: 41, scope: !6973)
!6982 = !DILocation(line: 82, column: 47, scope: !6973)
!6983 = !DILocation(line: 82, column: 57, scope: !6973)
!6984 = !DILocation(line: 82, column: 77, scope: !6973)
!6985 = !DILocation(line: 82, column: 18, scope: !6973)
!6986 = !DILocation(line: 82, column: 16, scope: !6973)
!6987 = !DILocation(line: 83, column: 13, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6973, file: !681, line: 83, column: 13)
!6989 = !DILocation(line: 83, column: 20, scope: !6988)
!6990 = !DILocation(line: 83, column: 13, scope: !6973)
!6991 = !DILocation(line: 83, column: 26, scope: !6988)
!6992 = !DILocation(line: 85, column: 9, scope: !6973)
!6993 = !DILocation(line: 85, column: 25, scope: !6973)
!6994 = !DILocation(line: 86, column: 15, scope: !6973)
!6995 = !DILocation(line: 86, column: 22, scope: !6973)
!6996 = !DILocation(line: 86, column: 13, scope: !6973)
!6997 = !DILocation(line: 88, column: 34, scope: !6973)
!6998 = !DILocation(line: 88, column: 41, scope: !6973)
!6999 = !DILocation(line: 88, column: 47, scope: !6973)
!7000 = !DILocation(line: 88, column: 57, scope: !6973)
!7001 = !DILocation(line: 88, column: 85, scope: !6973)
!7002 = !DILocation(line: 88, column: 100, scope: !6973)
!7003 = !DILocation(line: 88, column: 98, scope: !6973)
!7004 = !DILocation(line: 88, column: 18, scope: !6973)
!7005 = !DILocation(line: 88, column: 16, scope: !6973)
!7006 = !DILocation(line: 89, column: 13, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6973, file: !681, line: 89, column: 13)
!7008 = !DILocation(line: 89, column: 20, scope: !7007)
!7009 = !DILocation(line: 89, column: 13, scope: !6973)
!7010 = !DILocation(line: 89, column: 26, scope: !7007)
!7011 = !DILocation(line: 91, column: 16, scope: !6973)
!7012 = !DILocation(line: 91, column: 13, scope: !6973)
!7013 = !DILocation(line: 93, column: 44, scope: !6973)
!7014 = !DILocation(line: 93, column: 31, scope: !6973)
!7015 = !DILocation(line: 93, column: 10, scope: !6973)
!7016 = !DILocation(line: 93, column: 18, scope: !6973)
!7017 = !DILocation(line: 94, column: 14, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6973, file: !681, line: 94, column: 13)
!7019 = !DILocation(line: 94, column: 13, scope: !7018)
!7020 = !DILocation(line: 94, column: 22, scope: !7018)
!7021 = !DILocation(line: 94, column: 13, scope: !6973)
!7022 = !DILocation(line: 94, column: 31, scope: !7018)
!7023 = !DILocation(line: 96, column: 17, scope: !6973)
!7024 = !DILocation(line: 96, column: 16, scope: !6973)
!7025 = !DILocation(line: 96, column: 9, scope: !6973)
!7026 = !DILocation(line: 96, column: 40, scope: !6973)
!7027 = !DILocation(line: 98, column: 16, scope: !6973)
!7028 = !DILocation(line: 98, column: 9, scope: !6973)
!7029 = !DILocalVariable(name: "length", scope: !7030, file: !681, line: 103, type: !438)
!7030 = distinct !DILexicalBlock(scope: !6861, file: !681, line: 102, column: 5)
!7031 = !DILocation(line: 103, column: 16, scope: !7030)
!7032 = !DILocation(line: 105, column: 38, scope: !7030)
!7033 = !DILocation(line: 105, column: 45, scope: !7030)
!7034 = !DILocation(line: 105, column: 51, scope: !7030)
!7035 = !DILocation(line: 105, column: 60, scope: !7030)
!7036 = !DILocation(line: 105, column: 18, scope: !7030)
!7037 = !DILocation(line: 105, column: 16, scope: !7030)
!7038 = !DILocation(line: 106, column: 44, scope: !7030)
!7039 = !DILocation(line: 106, column: 31, scope: !7030)
!7040 = !DILocation(line: 106, column: 10, scope: !7030)
!7041 = !DILocation(line: 106, column: 18, scope: !7030)
!7042 = !DILocation(line: 107, column: 14, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7030, file: !681, line: 107, column: 13)
!7044 = !DILocation(line: 107, column: 13, scope: !7043)
!7045 = !DILocation(line: 107, column: 22, scope: !7043)
!7046 = !DILocation(line: 107, column: 13, scope: !7030)
!7047 = !DILocation(line: 107, column: 31, scope: !7043)
!7048 = !DILocation(line: 108, column: 37, scope: !7030)
!7049 = !DILocation(line: 108, column: 44, scope: !7030)
!7050 = !DILocation(line: 108, column: 50, scope: !7030)
!7051 = !DILocation(line: 108, column: 59, scope: !7030)
!7052 = !DILocation(line: 108, column: 67, scope: !7030)
!7053 = !DILocation(line: 108, column: 74, scope: !7030)
!7054 = !DILocation(line: 108, column: 80, scope: !7030)
!7055 = !DILocation(line: 108, column: 89, scope: !7030)
!7056 = !DILocation(line: 108, column: 98, scope: !7030)
!7057 = !DILocation(line: 108, column: 97, scope: !7030)
!7058 = !DILocation(line: 108, column: 107, scope: !7030)
!7059 = !DILocation(line: 108, column: 18, scope: !7030)
!7060 = !DILocation(line: 108, column: 16, scope: !7030)
!7061 = !DILocation(line: 109, column: 13, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7030, file: !681, line: 109, column: 13)
!7063 = !DILocation(line: 109, column: 20, scope: !7062)
!7064 = !DILocation(line: 109, column: 13, scope: !7030)
!7065 = !DILocation(line: 111, column: 25, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7062, file: !681, line: 110, column: 9)
!7067 = !DILocation(line: 111, column: 24, scope: !7066)
!7068 = !DILocation(line: 111, column: 13, scope: !7066)
!7069 = !DILocation(line: 112, column: 14, scope: !7066)
!7070 = !DILocation(line: 112, column: 22, scope: !7066)
!7071 = !DILocation(line: 113, column: 13, scope: !7066)
!7072 = !DILocation(line: 115, column: 21, scope: !7030)
!7073 = !DILocation(line: 115, column: 16, scope: !7030)
!7074 = !DILocation(line: 115, column: 9, scope: !7030)
!7075 = !DILocation(line: 116, column: 5, scope: !7030)
!7076 = !DILocation(line: 120, column: 9, scope: !6861)
!7077 = !DILocation(line: 122, column: 1, scope: !6848)
!7078 = distinct !DISubprogram(name: "lwm2m_list_add", scope: !715, file: !715, line: 21, type: !7079, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, unit: !714, variables: !488)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!7081, !7081, !7081}
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_list_t", file: !6, line: 216, baseType: !7083)
!7083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_list_t", file: !6, line: 212, size: 128, elements: !7084)
!7084 = !{!7085, !7087}
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7083, file: !6, line: 214, baseType: !7086, size: 64)
!7086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7083, size: 64)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7083, file: !6, line: 215, baseType: !79, size: 16, offset: 64)
!7088 = !DILocalVariable(name: "head", arg: 1, scope: !7078, file: !715, line: 21, type: !7081)
!7089 = !DILocation(line: 21, column: 46, scope: !7078)
!7090 = !DILocalVariable(name: "node", arg: 2, scope: !7078, file: !715, line: 22, type: !7081)
!7091 = !DILocation(line: 22, column: 46, scope: !7078)
!7092 = !DILocalVariable(name: "target", scope: !7078, file: !715, line: 24, type: !7081)
!7093 = !DILocation(line: 24, column: 20, scope: !7078)
!7094 = !DILocation(line: 26, column: 17, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7078, file: !715, line: 26, column: 9)
!7096 = !DILocation(line: 26, column: 14, scope: !7095)
!7097 = !DILocation(line: 26, column: 9, scope: !7078)
!7098 = !DILocation(line: 26, column: 30, scope: !7095)
!7099 = !DILocation(line: 26, column: 23, scope: !7095)
!7100 = !DILocation(line: 28, column: 9, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7078, file: !715, line: 28, column: 9)
!7102 = !DILocation(line: 28, column: 15, scope: !7101)
!7103 = !DILocation(line: 28, column: 20, scope: !7101)
!7104 = !DILocation(line: 28, column: 26, scope: !7101)
!7105 = !DILocation(line: 28, column: 18, scope: !7101)
!7106 = !DILocation(line: 28, column: 9, scope: !7078)
!7107 = !DILocation(line: 30, column: 22, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7101, file: !715, line: 29, column: 5)
!7109 = !DILocation(line: 30, column: 9, scope: !7108)
!7110 = !DILocation(line: 30, column: 15, scope: !7108)
!7111 = !DILocation(line: 30, column: 20, scope: !7108)
!7112 = !DILocation(line: 31, column: 16, scope: !7108)
!7113 = !DILocation(line: 31, column: 9, scope: !7108)
!7114 = !DILocation(line: 34, column: 14, scope: !7078)
!7115 = !DILocation(line: 34, column: 12, scope: !7078)
!7116 = !DILocation(line: 35, column: 5, scope: !7078)
!7117 = !DILocation(line: 35, column: 20, scope: !7078)
!7118 = !DILocation(line: 35, column: 28, scope: !7078)
!7119 = !DILocation(line: 35, column: 17, scope: !7078)
!7120 = !DILocation(line: 35, column: 33, scope: !7078)
!7121 = !DILocation(line: 35, column: 36, scope: !7078)
!7122 = !DILocation(line: 35, column: 44, scope: !7078)
!7123 = !DILocation(line: 35, column: 50, scope: !7078)
!7124 = !DILocation(line: 35, column: 55, scope: !7078)
!7125 = !DILocation(line: 35, column: 61, scope: !7078)
!7126 = !DILocation(line: 35, column: 53, scope: !7078)
!7127 = !DILocation(line: 37, column: 18, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7078, file: !715, line: 36, column: 5)
!7129 = !DILocation(line: 37, column: 26, scope: !7128)
!7130 = !DILocation(line: 37, column: 16, scope: !7128)
!7131 = distinct !{!7131, !7116, !7132}
!7132 = !DILocation(line: 38, column: 5, scope: !7078)
!7133 = !DILocation(line: 40, column: 18, scope: !7078)
!7134 = !DILocation(line: 40, column: 26, scope: !7078)
!7135 = !DILocation(line: 40, column: 5, scope: !7078)
!7136 = !DILocation(line: 40, column: 11, scope: !7078)
!7137 = !DILocation(line: 40, column: 16, scope: !7078)
!7138 = !DILocation(line: 41, column: 20, scope: !7078)
!7139 = !DILocation(line: 41, column: 5, scope: !7078)
!7140 = !DILocation(line: 41, column: 13, scope: !7078)
!7141 = !DILocation(line: 41, column: 18, scope: !7078)
!7142 = !DILocation(line: 43, column: 12, scope: !7078)
!7143 = !DILocation(line: 43, column: 5, scope: !7078)
!7144 = !DILocation(line: 44, column: 1, scope: !7078)
!7145 = distinct !DISubprogram(name: "lwm2m_list_find", scope: !715, file: !715, line: 47, type: !7146, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, unit: !714, variables: !488)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!7081, !7081, !79}
!7148 = !DILocalVariable(name: "head", arg: 1, scope: !7145, file: !715, line: 47, type: !7081)
!7149 = !DILocation(line: 47, column: 47, scope: !7145)
!7150 = !DILocalVariable(name: "id", arg: 2, scope: !7145, file: !715, line: 48, type: !79)
!7151 = !DILocation(line: 48, column: 41, scope: !7145)
!7152 = !DILocation(line: 50, column: 5, scope: !7145)
!7153 = !DILocation(line: 50, column: 20, scope: !7145)
!7154 = !DILocation(line: 50, column: 17, scope: !7145)
!7155 = !DILocation(line: 50, column: 25, scope: !7145)
!7156 = !DILocation(line: 50, column: 28, scope: !7145)
!7157 = !DILocation(line: 50, column: 34, scope: !7145)
!7158 = !DILocation(line: 50, column: 39, scope: !7145)
!7159 = !DILocation(line: 50, column: 37, scope: !7145)
!7160 = !DILocation(line: 52, column: 16, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7145, file: !715, line: 51, column: 5)
!7162 = !DILocation(line: 52, column: 22, scope: !7161)
!7163 = !DILocation(line: 52, column: 14, scope: !7161)
!7164 = distinct !{!7164, !7152, !7165}
!7165 = !DILocation(line: 53, column: 5, scope: !7145)
!7166 = !DILocation(line: 55, column: 17, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7145, file: !715, line: 55, column: 9)
!7168 = !DILocation(line: 55, column: 14, scope: !7167)
!7169 = !DILocation(line: 55, column: 22, scope: !7167)
!7170 = !DILocation(line: 55, column: 25, scope: !7167)
!7171 = !DILocation(line: 55, column: 31, scope: !7167)
!7172 = !DILocation(line: 55, column: 37, scope: !7167)
!7173 = !DILocation(line: 55, column: 34, scope: !7167)
!7174 = !DILocation(line: 55, column: 9, scope: !7145)
!7175 = !DILocation(line: 55, column: 48, scope: !7167)
!7176 = !DILocation(line: 55, column: 41, scope: !7167)
!7177 = !DILocation(line: 57, column: 5, scope: !7145)
!7178 = !DILocation(line: 58, column: 1, scope: !7145)
!7179 = distinct !DISubprogram(name: "lwm2m_list_remove", scope: !715, file: !715, line: 61, type: !7180, isLocal: false, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: false, unit: !714, variables: !488)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{!7081, !7081, !79, !7182}
!7182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7081, size: 64)
!7183 = !DILocalVariable(name: "head", arg: 1, scope: !7179, file: !715, line: 61, type: !7081)
!7184 = !DILocation(line: 61, column: 49, scope: !7179)
!7185 = !DILocalVariable(name: "id", arg: 2, scope: !7179, file: !715, line: 62, type: !79)
!7186 = !DILocation(line: 62, column: 43, scope: !7179)
!7187 = !DILocalVariable(name: "nodeP", arg: 3, scope: !7179, file: !715, line: 63, type: !7182)
!7188 = !DILocation(line: 63, column: 50, scope: !7179)
!7189 = !DILocalVariable(name: "target", scope: !7179, file: !715, line: 65, type: !7081)
!7190 = !DILocation(line: 65, column: 20, scope: !7179)
!7191 = !DILocation(line: 67, column: 9, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7179, file: !715, line: 67, column: 9)
!7193 = !DILocation(line: 67, column: 14, scope: !7192)
!7194 = !DILocation(line: 67, column: 9, scope: !7179)
!7195 = !DILocation(line: 69, column: 13, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !715, line: 69, column: 13)
!7197 = distinct !DILexicalBlock(scope: !7192, file: !715, line: 68, column: 5)
!7198 = !DILocation(line: 69, column: 13, scope: !7197)
!7199 = !DILocation(line: 69, column: 21, scope: !7196)
!7200 = !DILocation(line: 69, column: 27, scope: !7196)
!7201 = !DILocation(line: 69, column: 20, scope: !7196)
!7202 = !DILocation(line: 70, column: 9, scope: !7197)
!7203 = !DILocation(line: 73, column: 9, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7179, file: !715, line: 73, column: 9)
!7205 = !DILocation(line: 73, column: 15, scope: !7204)
!7206 = !DILocation(line: 73, column: 21, scope: !7204)
!7207 = !DILocation(line: 73, column: 18, scope: !7204)
!7208 = !DILocation(line: 73, column: 9, scope: !7179)
!7209 = !DILocation(line: 75, column: 13, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !715, line: 75, column: 13)
!7211 = distinct !DILexicalBlock(scope: !7204, file: !715, line: 74, column: 5)
!7212 = !DILocation(line: 75, column: 13, scope: !7211)
!7213 = !DILocation(line: 75, column: 29, scope: !7210)
!7214 = !DILocation(line: 75, column: 21, scope: !7210)
!7215 = !DILocation(line: 75, column: 27, scope: !7210)
!7216 = !DILocation(line: 75, column: 20, scope: !7210)
!7217 = !DILocation(line: 76, column: 16, scope: !7211)
!7218 = !DILocation(line: 76, column: 22, scope: !7211)
!7219 = !DILocation(line: 76, column: 9, scope: !7211)
!7220 = !DILocation(line: 79, column: 14, scope: !7179)
!7221 = !DILocation(line: 79, column: 12, scope: !7179)
!7222 = !DILocation(line: 80, column: 5, scope: !7179)
!7223 = !DILocation(line: 80, column: 20, scope: !7179)
!7224 = !DILocation(line: 80, column: 28, scope: !7179)
!7225 = !DILocation(line: 80, column: 17, scope: !7179)
!7226 = !DILocation(line: 80, column: 33, scope: !7179)
!7227 = !DILocation(line: 80, column: 36, scope: !7179)
!7228 = !DILocation(line: 80, column: 44, scope: !7179)
!7229 = !DILocation(line: 80, column: 50, scope: !7179)
!7230 = !DILocation(line: 80, column: 55, scope: !7179)
!7231 = !DILocation(line: 80, column: 53, scope: !7179)
!7232 = !DILocation(line: 82, column: 18, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7179, file: !715, line: 81, column: 5)
!7234 = !DILocation(line: 82, column: 26, scope: !7233)
!7235 = !DILocation(line: 82, column: 16, scope: !7233)
!7236 = distinct !{!7236, !7222, !7237}
!7237 = !DILocation(line: 83, column: 5, scope: !7179)
!7238 = !DILocation(line: 85, column: 17, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7179, file: !715, line: 85, column: 9)
!7240 = !DILocation(line: 85, column: 25, scope: !7239)
!7241 = !DILocation(line: 85, column: 14, scope: !7239)
!7242 = !DILocation(line: 85, column: 30, scope: !7239)
!7243 = !DILocation(line: 85, column: 33, scope: !7239)
!7244 = !DILocation(line: 85, column: 41, scope: !7239)
!7245 = !DILocation(line: 85, column: 47, scope: !7239)
!7246 = !DILocation(line: 85, column: 53, scope: !7239)
!7247 = !DILocation(line: 85, column: 50, scope: !7239)
!7248 = !DILocation(line: 85, column: 9, scope: !7179)
!7249 = !DILocation(line: 87, column: 13, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !715, line: 87, column: 13)
!7251 = distinct !DILexicalBlock(scope: !7239, file: !715, line: 86, column: 5)
!7252 = !DILocation(line: 87, column: 13, scope: !7251)
!7253 = !DILocation(line: 87, column: 29, scope: !7250)
!7254 = !DILocation(line: 87, column: 37, scope: !7250)
!7255 = !DILocation(line: 87, column: 21, scope: !7250)
!7256 = !DILocation(line: 87, column: 27, scope: !7250)
!7257 = !DILocation(line: 87, column: 20, scope: !7250)
!7258 = !DILocation(line: 88, column: 24, scope: !7251)
!7259 = !DILocation(line: 88, column: 32, scope: !7251)
!7260 = !DILocation(line: 88, column: 38, scope: !7251)
!7261 = !DILocation(line: 88, column: 9, scope: !7251)
!7262 = !DILocation(line: 88, column: 17, scope: !7251)
!7263 = !DILocation(line: 88, column: 22, scope: !7251)
!7264 = !DILocation(line: 89, column: 5, scope: !7251)
!7265 = !DILocation(line: 92, column: 13, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !715, line: 92, column: 13)
!7267 = distinct !DILexicalBlock(scope: !7239, file: !715, line: 91, column: 5)
!7268 = !DILocation(line: 92, column: 13, scope: !7267)
!7269 = !DILocation(line: 92, column: 21, scope: !7266)
!7270 = !DILocation(line: 92, column: 27, scope: !7266)
!7271 = !DILocation(line: 92, column: 20, scope: !7266)
!7272 = !DILocation(line: 95, column: 12, scope: !7179)
!7273 = !DILocation(line: 95, column: 5, scope: !7179)
!7274 = !DILocation(line: 96, column: 1, scope: !7179)
!7275 = distinct !DISubprogram(name: "lwm2m_list_newId", scope: !715, file: !715, line: 98, type: !7276, isLocal: false, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !714, variables: !488)
!7276 = !DISubroutineType(types: !7277)
!7277 = !{!79, !7081}
!7278 = !DILocalVariable(name: "head", arg: 1, scope: !7275, file: !715, line: 98, type: !7081)
!7279 = !DILocation(line: 98, column: 42, scope: !7275)
!7280 = !DILocalVariable(name: "id", scope: !7275, file: !715, line: 100, type: !79)
!7281 = !DILocation(line: 100, column: 14, scope: !7275)
!7282 = !DILocalVariable(name: "target", scope: !7275, file: !715, line: 101, type: !7081)
!7283 = !DILocation(line: 101, column: 20, scope: !7275)
!7284 = !DILocation(line: 103, column: 8, scope: !7275)
!7285 = !DILocation(line: 104, column: 14, scope: !7275)
!7286 = !DILocation(line: 104, column: 12, scope: !7275)
!7287 = !DILocation(line: 106, column: 5, scope: !7275)
!7288 = !DILocation(line: 106, column: 12, scope: !7275)
!7289 = !DILocation(line: 106, column: 19, scope: !7275)
!7290 = !DILocation(line: 106, column: 27, scope: !7275)
!7291 = !DILocation(line: 106, column: 30, scope: !7275)
!7292 = !DILocation(line: 106, column: 36, scope: !7275)
!7293 = !DILocation(line: 106, column: 44, scope: !7275)
!7294 = !DILocation(line: 106, column: 33, scope: !7275)
!7295 = !DILocation(line: 108, column: 14, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7275, file: !715, line: 107, column: 5)
!7297 = !DILocation(line: 108, column: 22, scope: !7296)
!7298 = !DILocation(line: 108, column: 25, scope: !7296)
!7299 = !DILocation(line: 108, column: 12, scope: !7296)
!7300 = !DILocation(line: 109, column: 18, scope: !7296)
!7301 = !DILocation(line: 109, column: 26, scope: !7296)
!7302 = !DILocation(line: 109, column: 16, scope: !7296)
!7303 = distinct !{!7303, !7287, !7304}
!7304 = !DILocation(line: 110, column: 5, scope: !7275)
!7305 = !DILocation(line: 112, column: 12, scope: !7275)
!7306 = !DILocation(line: 112, column: 5, scope: !7275)
!7307 = distinct !DISubprogram(name: "lwm2m_list_free", scope: !715, file: !715, line: 115, type: !7308, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !714, variables: !488)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{null, !7081}
!7310 = !DILocalVariable(name: "head", arg: 1, scope: !7307, file: !715, line: 115, type: !7081)
!7311 = !DILocation(line: 115, column: 37, scope: !7307)
!7312 = !DILocation(line: 117, column: 9, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7307, file: !715, line: 117, column: 9)
!7314 = !DILocation(line: 117, column: 14, scope: !7313)
!7315 = !DILocation(line: 117, column: 9, scope: !7307)
!7316 = !DILocalVariable(name: "nextP", scope: !7317, file: !715, line: 119, type: !7081)
!7317 = distinct !DILexicalBlock(scope: !7313, file: !715, line: 118, column: 5)
!7318 = !DILocation(line: 119, column: 24, scope: !7317)
!7319 = !DILocation(line: 121, column: 17, scope: !7317)
!7320 = !DILocation(line: 121, column: 23, scope: !7317)
!7321 = !DILocation(line: 121, column: 15, scope: !7317)
!7322 = !DILocation(line: 122, column: 20, scope: !7317)
!7323 = !DILocation(line: 122, column: 9, scope: !7317)
!7324 = !DILocation(line: 123, column: 25, scope: !7317)
!7325 = !DILocation(line: 123, column: 9, scope: !7317)
!7326 = !DILocation(line: 124, column: 5, scope: !7317)
!7327 = !DILocation(line: 125, column: 1, scope: !7307)
!7328 = !DILocalVariable(name: "contextP", arg: 1, scope: !261, file: !262, line: 200, type: !265)
!7329 = !DILocation(line: 200, column: 44, scope: !261)
!7330 = !DILocalVariable(name: "buffer", arg: 2, scope: !261, file: !262, line: 201, type: !186)
!7331 = !DILocation(line: 201, column: 36, scope: !261)
!7332 = !DILocalVariable(name: "length", arg: 3, scope: !261, file: !262, line: 202, type: !58)
!7333 = !DILocation(line: 202, column: 30, scope: !261)
!7334 = !DILocalVariable(name: "fromSessionH", arg: 4, scope: !261, file: !262, line: 203, type: !54)
!7335 = !DILocation(line: 203, column: 33, scope: !261)
!7336 = !DILocalVariable(name: "coap_error_code", scope: !261, file: !262, line: 205, type: !107)
!7337 = !DILocation(line: 205, column: 13, scope: !261)
!7338 = !DILocation(line: 210, column: 51, scope: !261)
!7339 = !DILocation(line: 210, column: 69, scope: !261)
!7340 = !DILocation(line: 210, column: 59, scope: !261)
!7341 = !DILocation(line: 210, column: 23, scope: !261)
!7342 = !DILocation(line: 210, column: 21, scope: !261)
!7343 = !DILocation(line: 211, column: 9, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !261, file: !262, line: 211, column: 9)
!7345 = !DILocation(line: 211, column: 25, scope: !7344)
!7346 = !DILocation(line: 211, column: 9, scope: !261)
!7347 = !DILocation(line: 216, column: 22, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !262, line: 216, column: 13)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !262, line: 212, column: 5)
!7350 = !DILocation(line: 216, column: 13, scope: !7348)
!7351 = !DILocation(line: 216, column: 27, scope: !7348)
!7352 = !DILocation(line: 216, column: 39, scope: !7348)
!7353 = !DILocation(line: 216, column: 51, scope: !7348)
!7354 = !DILocation(line: 216, column: 42, scope: !7348)
!7355 = !DILocation(line: 216, column: 56, scope: !7348)
!7356 = !DILocation(line: 216, column: 13, scope: !7349)
!7357 = !DILocalVariable(name: "block_num", scope: !7358, file: !262, line: 218, type: !86)
!7358 = distinct !DILexicalBlock(scope: !7348, file: !262, line: 217, column: 9)
!7359 = !DILocation(line: 218, column: 22, scope: !7358)
!7360 = !DILocalVariable(name: "block_size", scope: !7358, file: !262, line: 219, type: !79)
!7361 = !DILocation(line: 219, column: 22, scope: !7358)
!7362 = !DILocalVariable(name: "block_offset", scope: !7358, file: !262, line: 220, type: !86)
!7363 = !DILocation(line: 220, column: 22, scope: !7358)
!7364 = !DILocalVariable(name: "new_offset", scope: !7358, file: !262, line: 221, type: !254)
!7365 = !DILocation(line: 221, column: 21, scope: !7358)
!7366 = !DILocation(line: 224, column: 26, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7358, file: !262, line: 224, column: 17)
!7368 = !DILocation(line: 224, column: 31, scope: !7367)
!7369 = !DILocation(line: 224, column: 17, scope: !7358)
!7370 = !DILocation(line: 227, column: 87, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7367, file: !262, line: 225, column: 13)
!7372 = !DILocation(line: 227, column: 17, scope: !7371)
!7373 = !DILocation(line: 228, column: 13, scope: !7371)
!7374 = !DILocation(line: 232, column: 78, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7367, file: !262, line: 230, column: 13)
!7376 = !DILocation(line: 232, column: 88, scope: !7375)
!7377 = !DILocation(line: 232, column: 95, scope: !7375)
!7378 = !DILocation(line: 232, column: 17, scope: !7375)
!7379 = !DILocation(line: 236, column: 26, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7358, file: !262, line: 236, column: 17)
!7381 = !DILocation(line: 236, column: 17, scope: !7380)
!7382 = !DILocation(line: 236, column: 17, scope: !7358)
!7383 = !DILocation(line: 238, column: 74, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !262, line: 237, column: 13)
!7385 = !DILocation(line: 238, column: 65, scope: !7384)
!7386 = !DILocation(line: 238, column: 17, scope: !7384)
!7387 = !DILocation(line: 239, column: 13, scope: !7384)
!7388 = !DILocation(line: 242, column: 17, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7358, file: !262, line: 242, column: 17)
!7390 = !DILocation(line: 242, column: 17, scope: !7358)
!7391 = !DILocation(line: 245, column: 30, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7389, file: !262, line: 243, column: 13)
!7393 = !DILocation(line: 245, column: 28, scope: !7392)
!7394 = !DILocation(line: 246, column: 30, scope: !7392)
!7395 = !DILocation(line: 246, column: 28, scope: !7392)
!7396 = !DILocation(line: 247, column: 13, scope: !7392)
!7397 = !DILocation(line: 250, column: 17, scope: !7358)
!7398 = !DILocation(line: 250, column: 17, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7358, file: !262, line: 250, column: 17)
!7400 = !DILocation(line: 294, column: 33, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7399, file: !262, line: 251, column: 13)
!7402 = !DILocation(line: 296, column: 13, scope: !7401)
!7403 = !DILocation(line: 297, column: 17, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7358, file: !262, line: 297, column: 17)
!7405 = !DILocation(line: 297, column: 33, scope: !7404)
!7406 = !DILocation(line: 297, column: 17, scope: !7358)
!7407 = !DILocation(line: 299, column: 50, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !262, line: 298, column: 13)
!7409 = !DILocation(line: 299, column: 60, scope: !7408)
!7410 = !DILocation(line: 299, column: 35, scope: !7408)
!7411 = !DILocation(line: 299, column: 33, scope: !7408)
!7412 = !DILocation(line: 300, column: 13, scope: !7408)
!7413 = !DILocation(line: 301, column: 17, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7358, file: !262, line: 301, column: 17)
!7415 = !DILocation(line: 301, column: 32, scope: !7414)
!7416 = !DILocation(line: 301, column: 17, scope: !7358)
!7417 = !DILocation(line: 303, column: 22, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7414, file: !262, line: 302, column: 13)
!7419 = !DILocation(line: 303, column: 22, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7418, file: !262, line: 303, column: 22)
!7421 = !DILocation(line: 306, column: 25, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !262, line: 306, column: 25)
!7423 = distinct !DILexicalBlock(scope: !7420, file: !262, line: 304, column: 17)
!7424 = !DILocation(line: 306, column: 37, scope: !7422)
!7425 = !DILocation(line: 306, column: 35, scope: !7422)
!7426 = !DILocation(line: 306, column: 25, scope: !7423)
!7427 = !DILocation(line: 309, column: 29, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !262, line: 309, column: 29)
!7429 = distinct !DILexicalBlock(scope: !7422, file: !262, line: 307, column: 21)
!7430 = !DILocation(line: 309, column: 55, scope: !7428)
!7431 = !DILocation(line: 309, column: 45, scope: !7428)
!7432 = !DILocation(line: 309, column: 42, scope: !7428)
!7433 = !DILocation(line: 309, column: 29, scope: !7429)
!7434 = !DILocation(line: 313, column: 44, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7428, file: !262, line: 310, column: 25)
!7436 = !DILocation(line: 314, column: 29, scope: !7435)
!7437 = !DILocation(line: 315, column: 25, scope: !7435)
!7438 = !DILocation(line: 318, column: 62, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7428, file: !262, line: 317, column: 25)
!7440 = !DILocation(line: 318, column: 83, scope: !7439)
!7441 = !DILocation(line: 318, column: 73, scope: !7439)
!7442 = !DILocation(line: 318, column: 97, scope: !7439)
!7443 = !DILocation(line: 318, column: 95, scope: !7439)
!7444 = !DILocation(line: 318, column: 112, scope: !7439)
!7445 = !DILocation(line: 318, column: 110, scope: !7439)
!7446 = !DILocation(line: 318, column: 124, scope: !7439)
!7447 = !DILocation(line: 318, column: 29, scope: !7439)
!7448 = !DILocation(line: 319, column: 66, scope: !7439)
!7449 = !DILocation(line: 319, column: 74, scope: !7439)
!7450 = !DILocation(line: 319, column: 73, scope: !7439)
!7451 = !DILocation(line: 319, column: 88, scope: !7439)
!7452 = !DILocation(line: 319, column: 29, scope: !7439)
!7453 = !DILocation(line: 321, column: 21, scope: !7429)
!7454 = !DILocation(line: 326, column: 58, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7422, file: !262, line: 323, column: 21)
!7456 = !DILocation(line: 326, column: 69, scope: !7455)
!7457 = !DILocation(line: 326, column: 79, scope: !7455)
!7458 = !DILocation(line: 326, column: 84, scope: !7455)
!7459 = !DILocation(line: 326, column: 97, scope: !7455)
!7460 = !DILocation(line: 326, column: 87, scope: !7455)
!7461 = !DILocation(line: 326, column: 111, scope: !7455)
!7462 = !DILocation(line: 326, column: 109, scope: !7455)
!7463 = !DILocation(line: 326, column: 123, scope: !7455)
!7464 = !DILocation(line: 326, column: 25, scope: !7455)
!7465 = !DILocation(line: 327, column: 39, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7455, file: !262, line: 327, column: 29)
!7467 = !DILocation(line: 327, column: 29, scope: !7466)
!7468 = !DILocation(line: 327, column: 53, scope: !7466)
!7469 = !DILocation(line: 327, column: 51, scope: !7466)
!7470 = !DILocation(line: 327, column: 29, scope: !7455)
!7471 = !DILocation(line: 327, column: 102, scope: !7466)
!7472 = !DILocation(line: 327, column: 111, scope: !7466)
!7473 = !DILocation(line: 327, column: 65, scope: !7466)
!7474 = !DILocation(line: 329, column: 17, scope: !7423)
!7475 = !DILocation(line: 330, column: 26, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7420, file: !262, line: 330, column: 26)
!7477 = !DILocation(line: 330, column: 36, scope: !7476)
!7478 = !DILocation(line: 330, column: 26, scope: !7420)
!7479 = !DILocation(line: 334, column: 57, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !262, line: 331, column: 17)
!7481 = !DILocation(line: 334, column: 67, scope: !7480)
!7482 = !DILocation(line: 334, column: 21, scope: !7480)
!7483 = !DILocation(line: 335, column: 58, scope: !7480)
!7484 = !DILocation(line: 335, column: 67, scope: !7480)
!7485 = !DILocation(line: 335, column: 21, scope: !7480)
!7486 = !DILocation(line: 336, column: 17, scope: !7480)
!7487 = !DILocation(line: 338, column: 48, scope: !7418)
!7488 = !DILocation(line: 338, column: 68, scope: !7418)
!7489 = !DILocation(line: 338, column: 35, scope: !7418)
!7490 = !DILocation(line: 338, column: 33, scope: !7418)
!7491 = !DILocation(line: 340, column: 38, scope: !7418)
!7492 = !DILocation(line: 340, column: 17, scope: !7418)
!7493 = !DILocation(line: 341, column: 35, scope: !7418)
!7494 = !DILocation(line: 342, column: 39, scope: !7418)
!7495 = !DILocation(line: 343, column: 13, scope: !7418)
!7496 = !DILocation(line: 344, column: 22, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7414, file: !262, line: 344, column: 22)
!7498 = !DILocation(line: 344, column: 38, scope: !7497)
!7499 = !DILocation(line: 344, column: 22, scope: !7414)
!7500 = !DILocation(line: 346, column: 57, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !262, line: 346, column: 21)
!7502 = distinct !DILexicalBlock(scope: !7497, file: !262, line: 345, column: 13)
!7503 = !DILocation(line: 346, column: 26, scope: !7501)
!7504 = !DILocation(line: 346, column: 23, scope: !7501)
!7505 = !DILocation(line: 346, column: 21, scope: !7502)
!7506 = !DILocation(line: 348, column: 52, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7501, file: !262, line: 347, column: 17)
!7508 = !DILocation(line: 348, column: 72, scope: !7507)
!7509 = !DILocation(line: 348, column: 39, scope: !7507)
!7510 = !DILocation(line: 348, column: 37, scope: !7507)
!7511 = !DILocation(line: 349, column: 17, scope: !7507)
!7512 = !DILocation(line: 350, column: 13, scope: !7502)
!7513 = !DILocation(line: 351, column: 9, scope: !7358)
!7514 = !DILocation(line: 355, column: 30, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7348, file: !262, line: 353, column: 9)
!7516 = !DILocation(line: 355, column: 13, scope: !7515)
!7517 = !DILocalVariable(name: "done", scope: !7518, file: !262, line: 360, type: !136)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !262, line: 359, column: 17)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !262, line: 356, column: 13)
!7520 = !DILocation(line: 360, column: 26, scope: !7518)
!7521 = !DILocation(line: 360, column: 60, scope: !7518)
!7522 = !DILocation(line: 360, column: 70, scope: !7518)
!7523 = !DILocation(line: 360, column: 33, scope: !7518)
!7524 = !DILocation(line: 363, column: 26, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7518, file: !262, line: 363, column: 25)
!7526 = !DILocation(line: 363, column: 31, scope: !7525)
!7527 = !DILocation(line: 363, column: 74, scope: !7525)
!7528 = !DILocation(line: 363, column: 34, scope: !7525)
!7529 = !DILocation(line: 364, column: 36, scope: !7525)
!7530 = !DILocation(line: 364, column: 27, scope: !7525)
!7531 = !DILocation(line: 364, column: 41, scope: !7525)
!7532 = !DILocation(line: 364, column: 62, scope: !7525)
!7533 = !DILocation(line: 364, column: 75, scope: !7525)
!7534 = !DILocation(line: 364, column: 66, scope: !7525)
!7535 = !DILocation(line: 364, column: 80, scope: !7525)
!7536 = !DILocation(line: 363, column: 25, scope: !7518)
!7537 = !DILocation(line: 366, column: 53, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7525, file: !262, line: 365, column: 21)
!7539 = !DILocation(line: 366, column: 63, scope: !7538)
!7540 = !DILocation(line: 366, column: 32, scope: !7538)
!7541 = !DILocation(line: 366, column: 30, scope: !7538)
!7542 = !DILocation(line: 367, column: 21, scope: !7538)
!7543 = !DILocation(line: 369, column: 26, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7518, file: !262, line: 369, column: 25)
!7545 = !DILocation(line: 369, column: 31, scope: !7544)
!7546 = !DILocation(line: 369, column: 43, scope: !7544)
!7547 = !DILocation(line: 369, column: 48, scope: !7544)
!7548 = !DILocation(line: 369, column: 25, scope: !7518)
!7549 = !DILocation(line: 371, column: 80, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7544, file: !262, line: 370, column: 21)
!7551 = !DILocation(line: 371, column: 25, scope: !7550)
!7552 = !DILocation(line: 372, column: 56, scope: !7550)
!7553 = !DILocation(line: 372, column: 76, scope: !7550)
!7554 = !DILocation(line: 372, column: 43, scope: !7550)
!7555 = !DILocation(line: 372, column: 41, scope: !7550)
!7556 = !DILocation(line: 373, column: 21, scope: !7550)
!7557 = !DILocation(line: 375, column: 17, scope: !7519)
!7558 = !DILocation(line: 379, column: 30, scope: !7519)
!7559 = !DILocation(line: 379, column: 40, scope: !7519)
!7560 = !DILocation(line: 379, column: 17, scope: !7519)
!7561 = !DILocation(line: 380, column: 44, scope: !7519)
!7562 = !DILocation(line: 380, column: 54, scope: !7519)
!7563 = !DILocation(line: 380, column: 17, scope: !7519)
!7564 = !DILocation(line: 381, column: 17, scope: !7519)
!7565 = !DILocation(line: 384, column: 44, scope: !7519)
!7566 = !DILocation(line: 384, column: 54, scope: !7519)
!7567 = !DILocation(line: 384, column: 17, scope: !7519)
!7568 = !DILocation(line: 385, column: 17, scope: !7519)
!7569 = !DILocation(line: 388, column: 17, scope: !7519)
!7570 = !DILocation(line: 391, column: 9, scope: !7349)
!7571 = !DILocation(line: 392, column: 5, scope: !7349)
!7572 = !DILocation(line: 398, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !261, file: !262, line: 398, column: 9)
!7574 = !DILocation(line: 398, column: 25, scope: !7573)
!7575 = !DILocation(line: 398, column: 37, scope: !7573)
!7576 = !DILocation(line: 398, column: 40, scope: !7573)
!7577 = !DILocation(line: 398, column: 56, scope: !7573)
!7578 = !DILocation(line: 398, column: 9, scope: !261)
!7579 = !DILocation(line: 403, column: 13, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !262, line: 403, column: 13)
!7581 = distinct !DILexicalBlock(scope: !7573, file: !262, line: 399, column: 5)
!7582 = !DILocation(line: 403, column: 29, scope: !7580)
!7583 = !DILocation(line: 403, column: 13, scope: !7581)
!7584 = !DILocation(line: 405, column: 29, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !262, line: 404, column: 9)
!7586 = !DILocation(line: 406, column: 9, scope: !7585)
!7587 = !DILocation(line: 408, column: 51, scope: !7581)
!7588 = !DILocation(line: 408, column: 77, scope: !7581)
!7589 = !DILocation(line: 408, column: 9, scope: !7581)
!7590 = !DILocation(line: 409, column: 35, scope: !7581)
!7591 = !DILocation(line: 409, column: 62, scope: !7581)
!7592 = !DILocation(line: 409, column: 55, scope: !7581)
!7593 = !DILocation(line: 409, column: 9, scope: !7581)
!7594 = !DILocation(line: 410, column: 22, scope: !7581)
!7595 = !DILocation(line: 410, column: 41, scope: !7581)
!7596 = !DILocation(line: 410, column: 9, scope: !7581)
!7597 = !DILocation(line: 411, column: 5, scope: !7581)
!7598 = !DILocation(line: 412, column: 1, scope: !261)
!7599 = distinct !DISubprogram(name: "handle_request", scope: !262, file: !262, line: 106, type: !7600, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !351, variables: !488)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!107, !265, !54, !7602, !7602}
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!7603 = !DILocalVariable(name: "contextP", arg: 1, scope: !7599, file: !262, line: 106, type: !265)
!7604 = !DILocation(line: 106, column: 49, scope: !7599)
!7605 = !DILocalVariable(name: "fromSessionH", arg: 2, scope: !7599, file: !262, line: 107, type: !54)
!7606 = !DILocation(line: 107, column: 38, scope: !7599)
!7607 = !DILocalVariable(name: "message", arg: 3, scope: !7599, file: !262, line: 108, type: !7602)
!7608 = !DILocation(line: 108, column: 47, scope: !7599)
!7609 = !DILocalVariable(name: "response", arg: 4, scope: !7599, file: !262, line: 109, type: !7602)
!7610 = !DILocation(line: 109, column: 47, scope: !7599)
!7611 = !DILocalVariable(name: "uriP", scope: !7599, file: !262, line: 111, type: !324)
!7612 = !DILocation(line: 111, column: 19, scope: !7599)
!7613 = !DILocalVariable(name: "result", scope: !7599, file: !262, line: 112, type: !107)
!7614 = !DILocation(line: 112, column: 13, scope: !7599)
!7615 = !DILocation(line: 119, column: 29, scope: !7599)
!7616 = !DILocation(line: 119, column: 38, scope: !7599)
!7617 = !DILocation(line: 119, column: 12, scope: !7599)
!7618 = !DILocation(line: 119, column: 10, scope: !7599)
!7619 = !DILocation(line: 122, column: 9, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7599, file: !262, line: 122, column: 9)
!7621 = !DILocation(line: 122, column: 14, scope: !7620)
!7622 = !DILocation(line: 122, column: 9, scope: !7599)
!7623 = !DILocation(line: 122, column: 23, scope: !7620)
!7624 = !DILocation(line: 124, column: 12, scope: !7599)
!7625 = !DILocation(line: 124, column: 18, scope: !7599)
!7626 = !DILocation(line: 124, column: 23, scope: !7599)
!7627 = !DILocation(line: 124, column: 5, scope: !7599)
!7628 = !DILocation(line: 172, column: 45, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7599, file: !262, line: 125, column: 5)
!7630 = !DILocation(line: 172, column: 55, scope: !7629)
!7631 = !DILocation(line: 172, column: 61, scope: !7629)
!7632 = !DILocation(line: 172, column: 75, scope: !7629)
!7633 = !DILocation(line: 172, column: 84, scope: !7629)
!7634 = !DILocation(line: 172, column: 18, scope: !7629)
!7635 = !DILocation(line: 172, column: 16, scope: !7629)
!7636 = !DILocation(line: 173, column: 9, scope: !7629)
!7637 = !DILocation(line: 181, column: 16, scope: !7629)
!7638 = !DILocation(line: 182, column: 9, scope: !7629)
!7639 = !DILocation(line: 185, column: 26, scope: !7599)
!7640 = !DILocation(line: 185, column: 36, scope: !7599)
!7641 = !DILocation(line: 185, column: 5, scope: !7599)
!7642 = !DILocation(line: 187, column: 23, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7599, file: !262, line: 187, column: 9)
!7644 = !DILocation(line: 187, column: 21, scope: !7643)
!7645 = !DILocation(line: 187, column: 30, scope: !7643)
!7646 = !DILocation(line: 187, column: 33, scope: !7643)
!7647 = !DILocation(line: 187, column: 40, scope: !7643)
!7648 = !DILocation(line: 187, column: 9, scope: !7599)
!7649 = !DILocation(line: 189, column: 16, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7643, file: !262, line: 188, column: 5)
!7651 = !DILocation(line: 190, column: 5, scope: !7650)
!7652 = !DILocation(line: 192, column: 16, scope: !7599)
!7653 = !DILocation(line: 192, column: 5, scope: !7599)
!7654 = !DILocation(line: 193, column: 12, scope: !7599)
!7655 = !DILocation(line: 193, column: 5, scope: !7599)
!7656 = !DILocation(line: 194, column: 1, scope: !7599)
!7657 = distinct !DISubprogram(name: "message_send", scope: !262, file: !262, line: 415, type: !7658, isLocal: false, isDefinition: true, scopeLine: 418, flags: DIFlagPrototyped, isOptimized: false, unit: !351, variables: !488)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{!107, !265, !7602, !54}
!7660 = !DILocalVariable(name: "contextP", arg: 1, scope: !7657, file: !262, line: 415, type: !265)
!7661 = !DILocation(line: 415, column: 40, scope: !7657)
!7662 = !DILocalVariable(name: "message", arg: 2, scope: !7657, file: !262, line: 416, type: !7602)
!7663 = !DILocation(line: 416, column: 38, scope: !7657)
!7664 = !DILocalVariable(name: "sessionH", arg: 3, scope: !7657, file: !262, line: 417, type: !54)
!7665 = !DILocation(line: 417, column: 29, scope: !7657)
!7666 = !DILocalVariable(name: "result", scope: !7657, file: !262, line: 419, type: !107)
!7667 = !DILocation(line: 419, column: 13, scope: !7657)
!7668 = !DILocalVariable(name: "pktBuffer", scope: !7657, file: !262, line: 420, type: !186)
!7669 = !DILocation(line: 420, column: 15, scope: !7657)
!7670 = !DILocalVariable(name: "pktBufferLen", scope: !7657, file: !262, line: 421, type: !438)
!7671 = !DILocation(line: 421, column: 12, scope: !7657)
!7672 = !DILocalVariable(name: "allocLen", scope: !7657, file: !262, line: 422, type: !438)
!7673 = !DILocation(line: 422, column: 12, scope: !7657)
!7674 = !DILocation(line: 425, column: 40, scope: !7657)
!7675 = !DILocation(line: 425, column: 16, scope: !7657)
!7676 = !DILocation(line: 425, column: 14, scope: !7657)
!7677 = !DILocation(line: 427, column: 9, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7657, file: !262, line: 427, column: 9)
!7679 = !DILocation(line: 427, column: 18, scope: !7678)
!7680 = !DILocation(line: 427, column: 9, scope: !7657)
!7681 = !DILocation(line: 427, column: 24, scope: !7678)
!7682 = !DILocation(line: 429, column: 41, scope: !7657)
!7683 = !DILocation(line: 429, column: 28, scope: !7657)
!7684 = !DILocation(line: 429, column: 15, scope: !7657)
!7685 = !DILocation(line: 430, column: 9, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7657, file: !262, line: 430, column: 9)
!7687 = !DILocation(line: 430, column: 19, scope: !7686)
!7688 = !DILocation(line: 430, column: 9, scope: !7657)
!7689 = !DILocation(line: 432, column: 47, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7686, file: !262, line: 431, column: 5)
!7691 = !DILocation(line: 432, column: 56, scope: !7690)
!7692 = !DILocation(line: 432, column: 24, scope: !7690)
!7693 = !DILocation(line: 432, column: 22, scope: !7690)
!7694 = !DILocation(line: 434, column: 18, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7690, file: !262, line: 434, column: 13)
!7696 = !DILocation(line: 434, column: 15, scope: !7695)
!7697 = !DILocation(line: 434, column: 13, scope: !7690)
!7698 = !DILocation(line: 436, column: 40, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7695, file: !262, line: 435, column: 9)
!7700 = !DILocation(line: 436, column: 50, scope: !7699)
!7701 = !DILocation(line: 436, column: 61, scope: !7699)
!7702 = !DILocation(line: 436, column: 75, scope: !7699)
!7703 = !DILocation(line: 436, column: 85, scope: !7699)
!7704 = !DILocation(line: 436, column: 22, scope: !7699)
!7705 = !DILocation(line: 436, column: 20, scope: !7699)
!7706 = !DILocation(line: 437, column: 9, scope: !7699)
!7707 = !DILocation(line: 438, column: 20, scope: !7690)
!7708 = !DILocation(line: 438, column: 9, scope: !7690)
!7709 = !DILocation(line: 439, column: 5, scope: !7690)
!7710 = !DILocation(line: 441, column: 12, scope: !7657)
!7711 = !DILocation(line: 441, column: 5, scope: !7657)
!7712 = !DILocation(line: 442, column: 1, scope: !7657)
!7713 = distinct !DISubprogram(name: "handle_reset", scope: !262, file: !262, line: 96, type: !7714, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !351, variables: !488)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{null, !265, !54, !7602}
!7716 = !DILocalVariable(name: "contextP", arg: 1, scope: !7713, file: !262, line: 96, type: !265)
!7717 = !DILocation(line: 96, column: 44, scope: !7713)
!7718 = !DILocalVariable(name: "fromSessionH", arg: 2, scope: !7713, file: !262, line: 97, type: !54)
!7719 = !DILocation(line: 97, column: 33, scope: !7713)
!7720 = !DILocalVariable(name: "message", arg: 3, scope: !7713, file: !262, line: 98, type: !7602)
!7721 = !DILocation(line: 98, column: 42, scope: !7713)
!7722 = !DILocation(line: 104, column: 1, scope: !7713)
!7723 = distinct !DISubprogram(name: "transaction_new", scope: !718, file: !718, line: 144, type: !7724, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!721, !54, !7726, !117, !7727, !79, !107, !186}
!7726 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_method_t", file: !220, line: 122, baseType: !386)
!7727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7728, size: 64)
!7728 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !7729)
!7729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !7730)
!7730 = !{!7731, !7732, !7733, !7734}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7729, file: !6, line: 255, baseType: !107, size: 8)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !7729, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !7729, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !7729, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!7735 = !DILocalVariable(name: "sessionH", arg: 1, scope: !7723, file: !718, line: 144, type: !54)
!7736 = !DILocation(line: 144, column: 46, scope: !7723)
!7737 = !DILocalVariable(name: "method", arg: 2, scope: !7723, file: !718, line: 145, type: !7726)
!7738 = !DILocation(line: 145, column: 53, scope: !7723)
!7739 = !DILocalVariable(name: "altPath", arg: 3, scope: !7723, file: !718, line: 146, type: !117)
!7740 = !DILocation(line: 146, column: 46, scope: !7723)
!7741 = !DILocalVariable(name: "uriP", arg: 4, scope: !7723, file: !718, line: 147, type: !7727)
!7742 = !DILocation(line: 147, column: 53, scope: !7723)
!7743 = !DILocalVariable(name: "mID", arg: 5, scope: !7723, file: !718, line: 148, type: !79)
!7744 = !DILocation(line: 148, column: 48, scope: !7723)
!7745 = !DILocalVariable(name: "token_len", arg: 6, scope: !7723, file: !718, line: 149, type: !107)
!7746 = !DILocation(line: 149, column: 47, scope: !7723)
!7747 = !DILocalVariable(name: "token", arg: 7, scope: !7723, file: !718, line: 150, type: !186)
!7748 = !DILocation(line: 150, column: 48, scope: !7723)
!7749 = !DILocalVariable(name: "transacP", scope: !7723, file: !718, line: 152, type: !721)
!7750 = !DILocation(line: 152, column: 27, scope: !7723)
!7751 = !DILocalVariable(name: "result", scope: !7723, file: !718, line: 153, type: !58)
!7752 = !DILocation(line: 153, column: 9, scope: !7723)
!7753 = !DILocation(line: 160, column: 17, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7723, file: !718, line: 160, column: 9)
!7755 = !DILocation(line: 160, column: 14, scope: !7754)
!7756 = !DILocation(line: 160, column: 9, scope: !7723)
!7757 = !DILocation(line: 160, column: 27, scope: !7754)
!7758 = !DILocation(line: 162, column: 39, scope: !7723)
!7759 = !DILocation(line: 162, column: 16, scope: !7723)
!7760 = !DILocation(line: 162, column: 14, scope: !7723)
!7761 = !DILocation(line: 164, column: 17, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7723, file: !718, line: 164, column: 9)
!7763 = !DILocation(line: 164, column: 14, scope: !7762)
!7764 = !DILocation(line: 164, column: 9, scope: !7723)
!7765 = !DILocation(line: 164, column: 27, scope: !7762)
!7766 = !DILocation(line: 165, column: 12, scope: !7723)
!7767 = !DILocation(line: 165, column: 5, scope: !7723)
!7768 = !DILocation(line: 167, column: 25, scope: !7723)
!7769 = !DILocation(line: 167, column: 5, scope: !7723)
!7770 = !DILocation(line: 167, column: 15, scope: !7723)
!7771 = !DILocation(line: 167, column: 23, scope: !7723)
!7772 = !DILocation(line: 168, column: 17, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7723, file: !718, line: 168, column: 9)
!7774 = !DILocation(line: 168, column: 27, scope: !7773)
!7775 = !DILocation(line: 168, column: 14, scope: !7773)
!7776 = !DILocation(line: 168, column: 9, scope: !7723)
!7777 = !DILocation(line: 168, column: 36, scope: !7773)
!7778 = !DILocation(line: 170, column: 23, scope: !7723)
!7779 = !DILocation(line: 170, column: 33, scope: !7723)
!7780 = !DILocation(line: 170, column: 57, scope: !7723)
!7781 = !DILocation(line: 170, column: 65, scope: !7723)
!7782 = !DILocation(line: 170, column: 5, scope: !7723)
!7783 = !DILocation(line: 172, column: 23, scope: !7723)
!7784 = !DILocation(line: 172, column: 5, scope: !7723)
!7785 = !DILocation(line: 172, column: 15, scope: !7723)
!7786 = !DILocation(line: 172, column: 21, scope: !7723)
!7787 = !DILocation(line: 174, column: 21, scope: !7723)
!7788 = !DILocation(line: 174, column: 5, scope: !7723)
!7789 = !DILocation(line: 174, column: 15, scope: !7723)
!7790 = !DILocation(line: 174, column: 19, scope: !7723)
!7791 = !DILocation(line: 176, column: 9, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7723, file: !718, line: 176, column: 9)
!7793 = !DILocation(line: 176, column: 17, scope: !7792)
!7794 = !DILocation(line: 176, column: 9, scope: !7723)
!7795 = !DILocation(line: 179, column: 42, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7792, file: !718, line: 177, column: 5)
!7797 = !DILocation(line: 179, column: 52, scope: !7796)
!7798 = !DILocation(line: 179, column: 61, scope: !7796)
!7799 = !DILocation(line: 179, column: 69, scope: !7796)
!7800 = !DILocation(line: 179, column: 9, scope: !7796)
!7801 = !DILocation(line: 180, column: 5, scope: !7796)
!7802 = !DILocation(line: 181, column: 17, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7723, file: !718, line: 181, column: 9)
!7804 = !DILocation(line: 181, column: 14, scope: !7803)
!7805 = !DILocation(line: 181, column: 9, scope: !7723)
!7806 = !DILocalVariable(name: "stringID", scope: !7807, file: !718, line: 183, type: !7808)
!7807 = distinct !DILexicalBlock(scope: !7803, file: !718, line: 182, column: 5)
!7808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 48, elements: !7809)
!7809 = !{!7810}
!7810 = !DISubrange(count: 6)
!7811 = !DILocation(line: 183, column: 14, scope: !7807)
!7812 = !DILocation(line: 185, column: 34, scope: !7807)
!7813 = !DILocation(line: 185, column: 40, scope: !7807)
!7814 = !DILocation(line: 185, column: 60, scope: !7807)
!7815 = !DILocation(line: 185, column: 18, scope: !7807)
!7816 = !DILocation(line: 185, column: 16, scope: !7807)
!7817 = !DILocation(line: 186, column: 13, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7807, file: !718, line: 186, column: 13)
!7819 = !DILocation(line: 186, column: 20, scope: !7818)
!7820 = !DILocation(line: 186, column: 13, scope: !7807)
!7821 = !DILocation(line: 186, column: 26, scope: !7818)
!7822 = !DILocation(line: 187, column: 18, scope: !7807)
!7823 = !DILocation(line: 187, column: 9, scope: !7807)
!7824 = !DILocation(line: 187, column: 26, scope: !7807)
!7825 = !DILocation(line: 188, column: 42, scope: !7807)
!7826 = !DILocation(line: 188, column: 52, scope: !7807)
!7827 = !DILocation(line: 188, column: 61, scope: !7807)
!7828 = !DILocation(line: 188, column: 9, scope: !7807)
!7829 = !DILocation(line: 190, column: 13, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7807, file: !718, line: 190, column: 13)
!7831 = !DILocation(line: 190, column: 13, scope: !7807)
!7832 = !DILocation(line: 192, column: 38, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7830, file: !718, line: 191, column: 9)
!7834 = !DILocation(line: 192, column: 44, scope: !7833)
!7835 = !DILocation(line: 192, column: 66, scope: !7833)
!7836 = !DILocation(line: 192, column: 22, scope: !7833)
!7837 = !DILocation(line: 192, column: 20, scope: !7833)
!7838 = !DILocation(line: 193, column: 17, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7833, file: !718, line: 193, column: 17)
!7840 = !DILocation(line: 193, column: 24, scope: !7839)
!7841 = !DILocation(line: 193, column: 17, scope: !7833)
!7842 = !DILocation(line: 193, column: 30, scope: !7839)
!7843 = !DILocation(line: 194, column: 22, scope: !7833)
!7844 = !DILocation(line: 194, column: 13, scope: !7833)
!7845 = !DILocation(line: 194, column: 30, scope: !7833)
!7846 = !DILocation(line: 195, column: 46, scope: !7833)
!7847 = !DILocation(line: 195, column: 56, scope: !7833)
!7848 = !DILocation(line: 195, column: 65, scope: !7833)
!7849 = !DILocation(line: 195, column: 13, scope: !7833)
!7850 = !DILocation(line: 196, column: 9, scope: !7833)
!7851 = !DILocation(line: 199, column: 17, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !718, line: 199, column: 17)
!7853 = distinct !DILexicalBlock(scope: !7830, file: !718, line: 198, column: 9)
!7854 = !DILocation(line: 199, column: 17, scope: !7853)
!7855 = !DILocation(line: 201, column: 50, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !718, line: 200, column: 13)
!7857 = !DILocation(line: 201, column: 60, scope: !7856)
!7858 = !DILocation(line: 201, column: 17, scope: !7856)
!7859 = !DILocation(line: 202, column: 13, scope: !7856)
!7860 = !DILocation(line: 204, column: 13, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7807, file: !718, line: 204, column: 13)
!7862 = !DILocation(line: 204, column: 13, scope: !7807)
!7863 = !DILocation(line: 206, column: 38, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7861, file: !718, line: 205, column: 9)
!7865 = !DILocation(line: 206, column: 44, scope: !7864)
!7866 = !DILocation(line: 206, column: 66, scope: !7864)
!7867 = !DILocation(line: 206, column: 22, scope: !7864)
!7868 = !DILocation(line: 206, column: 20, scope: !7864)
!7869 = !DILocation(line: 207, column: 17, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7864, file: !718, line: 207, column: 17)
!7871 = !DILocation(line: 207, column: 24, scope: !7870)
!7872 = !DILocation(line: 207, column: 17, scope: !7864)
!7873 = !DILocation(line: 207, column: 30, scope: !7870)
!7874 = !DILocation(line: 208, column: 22, scope: !7864)
!7875 = !DILocation(line: 208, column: 13, scope: !7864)
!7876 = !DILocation(line: 208, column: 30, scope: !7864)
!7877 = !DILocation(line: 209, column: 46, scope: !7864)
!7878 = !DILocation(line: 209, column: 56, scope: !7864)
!7879 = !DILocation(line: 209, column: 65, scope: !7864)
!7880 = !DILocation(line: 209, column: 13, scope: !7864)
!7881 = !DILocation(line: 210, column: 9, scope: !7864)
!7882 = !DILocation(line: 211, column: 5, scope: !7807)
!7883 = !DILocation(line: 212, column: 13, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7723, file: !718, line: 212, column: 9)
!7885 = !DILocation(line: 212, column: 11, scope: !7884)
!7886 = !DILocation(line: 212, column: 9, scope: !7723)
!7887 = !DILocation(line: 214, column: 21, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !718, line: 214, column: 13)
!7889 = distinct !DILexicalBlock(scope: !7884, file: !718, line: 213, column: 5)
!7890 = !DILocation(line: 214, column: 18, scope: !7888)
!7891 = !DILocation(line: 214, column: 13, scope: !7889)
!7892 = !DILocation(line: 216, column: 35, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7888, file: !718, line: 215, column: 9)
!7894 = !DILocation(line: 216, column: 45, scope: !7893)
!7895 = !DILocation(line: 216, column: 54, scope: !7893)
!7896 = !DILocation(line: 216, column: 61, scope: !7893)
!7897 = !DILocation(line: 216, column: 13, scope: !7893)
!7898 = !DILocation(line: 217, column: 9, scope: !7893)
!7899 = !DILocalVariable(name: "temp_token", scope: !7900, file: !718, line: 220, type: !446)
!7900 = distinct !DILexicalBlock(scope: !7888, file: !718, line: 218, column: 14)
!7901 = !DILocation(line: 220, column: 21, scope: !7900)
!7902 = !DILocalVariable(name: "tv_sec", scope: !7900, file: !718, line: 221, type: !139)
!7903 = !DILocation(line: 221, column: 20, scope: !7900)
!7904 = !DILocation(line: 221, column: 29, scope: !7900)
!7905 = !DILocation(line: 224, column: 29, scope: !7900)
!7906 = !DILocation(line: 224, column: 13, scope: !7900)
!7907 = !DILocation(line: 224, column: 27, scope: !7900)
!7908 = !DILocation(line: 225, column: 29, scope: !7900)
!7909 = !DILocation(line: 225, column: 33, scope: !7900)
!7910 = !DILocation(line: 225, column: 13, scope: !7900)
!7911 = !DILocation(line: 225, column: 27, scope: !7900)
!7912 = !DILocation(line: 226, column: 29, scope: !7900)
!7913 = !DILocation(line: 226, column: 13, scope: !7900)
!7914 = !DILocation(line: 226, column: 27, scope: !7900)
!7915 = !DILocation(line: 227, column: 29, scope: !7900)
!7916 = !DILocation(line: 227, column: 36, scope: !7900)
!7917 = !DILocation(line: 227, column: 13, scope: !7900)
!7918 = !DILocation(line: 227, column: 27, scope: !7900)
!7919 = !DILocation(line: 228, column: 29, scope: !7900)
!7920 = !DILocation(line: 228, column: 36, scope: !7900)
!7921 = !DILocation(line: 228, column: 13, scope: !7900)
!7922 = !DILocation(line: 228, column: 27, scope: !7900)
!7923 = !DILocation(line: 229, column: 29, scope: !7900)
!7924 = !DILocation(line: 229, column: 36, scope: !7900)
!7925 = !DILocation(line: 229, column: 13, scope: !7900)
!7926 = !DILocation(line: 229, column: 27, scope: !7900)
!7927 = !DILocation(line: 231, column: 35, scope: !7900)
!7928 = !DILocation(line: 231, column: 45, scope: !7900)
!7929 = !DILocation(line: 231, column: 54, scope: !7900)
!7930 = !DILocation(line: 231, column: 66, scope: !7900)
!7931 = !DILocation(line: 231, column: 13, scope: !7900)
!7932 = !DILocation(line: 233, column: 5, scope: !7889)
!7933 = !DILocation(line: 236, column: 12, scope: !7723)
!7934 = !DILocation(line: 236, column: 5, scope: !7723)
!7935 = !DILocation(line: 240, column: 16, scope: !7723)
!7936 = !DILocation(line: 240, column: 5, scope: !7723)
!7937 = !DILocation(line: 241, column: 5, scope: !7723)
!7938 = !DILocation(line: 242, column: 1, scope: !7723)
!7939 = distinct !DISubprogram(name: "transaction_free", scope: !718, file: !718, line: 244, type: !7940, isLocal: false, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !721}
!7942 = !DILocalVariable(name: "transacP", arg: 1, scope: !7939, file: !718, line: 244, type: !721)
!7943 = !DILocation(line: 244, column: 45, scope: !7939)
!7944 = !DILocation(line: 247, column: 9, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7939, file: !718, line: 247, column: 9)
!7946 = !DILocation(line: 247, column: 19, scope: !7945)
!7947 = !DILocation(line: 247, column: 9, scope: !7939)
!7948 = !DILocation(line: 249, column: 25, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !718, line: 248, column: 5)
!7950 = !DILocation(line: 249, column: 35, scope: !7949)
!7951 = !DILocation(line: 249, column: 8, scope: !7949)
!7952 = !DILocation(line: 250, column: 19, scope: !7949)
!7953 = !DILocation(line: 250, column: 29, scope: !7949)
!7954 = !DILocation(line: 250, column: 8, scope: !7949)
!7955 = !DILocation(line: 251, column: 5, scope: !7949)
!7956 = !DILocation(line: 253, column: 9, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7939, file: !718, line: 253, column: 9)
!7958 = !DILocation(line: 253, column: 19, scope: !7957)
!7959 = !DILocation(line: 253, column: 9, scope: !7939)
!7960 = !DILocation(line: 253, column: 38, scope: !7957)
!7961 = !DILocation(line: 253, column: 48, scope: !7957)
!7962 = !DILocation(line: 253, column: 27, scope: !7957)
!7963 = !DILocation(line: 254, column: 16, scope: !7939)
!7964 = !DILocation(line: 254, column: 5, scope: !7939)
!7965 = !DILocation(line: 255, column: 1, scope: !7939)
!7966 = distinct !DISubprogram(name: "transaction_remove", scope: !718, file: !718, line: 257, type: !7967, isLocal: false, isDefinition: true, scopeLine: 259, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!7967 = !DISubroutineType(types: !7968)
!7968 = !{null, !7969, !721}
!7969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7970, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !7971)
!7971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !7972)
!7972 = !{!7973, !8015, !8016, !8017, !8018, !8019}
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !7971, file: !6, line: 659, baseType: !7974, size: 64)
!7974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7975, size: 64)
!7975 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_t", file: !6, line: 557, baseType: !7976)
!7976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_", file: !6, line: 543, size: 704, elements: !7977)
!7977 = !{!7978, !7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989, !7998}
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7976, file: !6, line: 545, baseType: !7979, size: 64)
!7979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7976, size: 64)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "internalID", scope: !7976, file: !6, line: 546, baseType: !79, size: 16, offset: 64)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7976, file: !6, line: 547, baseType: !117, size: 64, offset: 128)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !7976, file: !6, line: 548, baseType: !132, size: 32, offset: 192)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "msisdn", scope: !7976, file: !6, line: 549, baseType: !117, size: 64, offset: 256)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "altPath", scope: !7976, file: !6, line: 550, baseType: !117, size: 64, offset: 320)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "supportJSON", scope: !7976, file: !6, line: 551, baseType: !136, size: 8, offset: 384)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !7976, file: !6, line: 552, baseType: !86, size: 32, offset: 416)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "endOfLife", scope: !7976, file: !6, line: 553, baseType: !139, size: 64, offset: 448)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "sessionH", scope: !7976, file: !6, line: 554, baseType: !54, size: 64, offset: 512)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "objectList", scope: !7976, file: !6, line: 555, baseType: !7990, size: 64, offset: 576)
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_client_object_t", file: !6, line: 541, baseType: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_client_object_", file: !6, line: 536, size: 192, elements: !7993)
!7993 = !{!7994, !7996, !7997}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7992, file: !6, line: 538, baseType: !7995, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7992, file: !6, line: 539, baseType: !79, size: 16, offset: 64)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "instanceList", scope: !7992, file: !6, line: 540, baseType: !741, size: 64, offset: 128)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "observationList", scope: !7976, file: !6, line: 556, baseType: !7999, size: 64, offset: 640)
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8000, size: 64)
!8000 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_observation_t", file: !6, line: 502, baseType: !8001)
!8001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_observation_", file: !6, line: 493, size: 448, elements: !8002)
!8002 = !{!8003, !8005, !8006, !8007, !8008, !8009, !8014}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8001, file: !6, line: 495, baseType: !8004, size: 64)
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8001, size: 64)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8001, file: !6, line: 496, baseType: !79, size: 16, offset: 64)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "clientP", scope: !8001, file: !6, line: 497, baseType: !7979, size: 64, offset: 128)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !8001, file: !6, line: 498, baseType: !7728, size: 64, offset: 192)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8001, file: !6, line: 499, baseType: !178, size: 32, offset: 256)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !8001, file: !6, line: 500, baseType: !8010, size: 64, offset: 320)
!8010 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_result_callback_t", file: !6, line: 482, baseType: !8011)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8012, size: 64)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{null, !79, !7727, !58, !185, !186, !58, !54}
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !8001, file: !6, line: 501, baseType: !54, size: 64, offset: 384)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !7971, file: !6, line: 660, baseType: !8010, size: 64, offset: 64)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !7971, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !7971, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !7971, file: !6, line: 668, baseType: !721, size: 64, offset: 256)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !7971, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!8020 = !DILocalVariable(name: "contextP", arg: 1, scope: !7966, file: !718, line: 257, type: !7969)
!8021 = !DILocation(line: 257, column: 43, scope: !7966)
!8022 = !DILocalVariable(name: "transacP", arg: 2, scope: !7966, file: !718, line: 258, type: !721)
!8023 = !DILocation(line: 258, column: 47, scope: !7966)
!8024 = !DILocation(line: 261, column: 57, scope: !7966)
!8025 = !DILocation(line: 261, column: 33, scope: !7966)
!8026 = !DILocation(line: 261, column: 5, scope: !7966)
!8027 = !DILocation(line: 261, column: 15, scope: !7966)
!8028 = !DILocation(line: 261, column: 31, scope: !7966)
!8029 = !DILocation(line: 262, column: 22, scope: !7966)
!8030 = !DILocation(line: 262, column: 5, scope: !7966)
!8031 = !DILocation(line: 263, column: 1, scope: !7966)
!8032 = distinct !DISubprogram(name: "transaction_handleResponse", scope: !718, file: !718, line: 265, type: !8033, isLocal: false, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!8033 = !DISubroutineType(types: !8034)
!8034 = !{!136, !7969, !54, !8035, !8035}
!8035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8036, size: 64)
!8036 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_packet_t", file: !220, line: 264, baseType: !8037)
!8037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 219, size: 1664, elements: !8038)
!8038 = !{!8039, !8040, !8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8085, !8086}
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8037, file: !220, line: 220, baseType: !186, size: 64)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8037, file: !220, line: 222, baseType: !107, size: 8, offset: 64)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8037, file: !220, line: 223, baseType: !427, size: 32, offset: 96)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !8037, file: !220, line: 224, baseType: !107, size: 8, offset: 128)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !8037, file: !220, line: 225, baseType: !79, size: 16, offset: 144)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !8037, file: !220, line: 227, baseType: !431, size: 40, offset: 160)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !8037, file: !220, line: 229, baseType: !435, size: 32, offset: 224)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !8037, file: !220, line: 230, baseType: !86, size: 32, offset: 256)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri_len", scope: !8037, file: !220, line: 231, baseType: !438, size: 64, offset: 320)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri", scope: !8037, file: !220, line: 232, baseType: !442, size: 64, offset: 384)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "etag_len", scope: !8037, file: !220, line: 233, baseType: !107, size: 8, offset: 448)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !8037, file: !220, line: 234, baseType: !446, size: 64, offset: 456)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host_len", scope: !8037, file: !220, line: 235, baseType: !438, size: 64, offset: 576)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host", scope: !8037, file: !220, line: 236, baseType: !442, size: 64, offset: 640)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "location_path", scope: !8037, file: !220, line: 237, baseType: !8054, size: 64, offset: 704)
!8054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8055, size: 64)
!8055 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !8056)
!8056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !8057)
!8057 = !{!8058, !8060, !8061, !8062}
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8056, file: !220, line: 212, baseType: !8059, size: 64)
!8059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8056, size: 64)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !8056, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8056, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8056, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "uri_port", scope: !8037, file: !220, line: 238, baseType: !79, size: 16, offset: 768)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "location_query_len", scope: !8037, file: !220, line: 239, baseType: !438, size: 64, offset: 832)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "location_query", scope: !8037, file: !220, line: 240, baseType: !186, size: 64, offset: 896)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "uri_path", scope: !8037, file: !220, line: 241, baseType: !8054, size: 64, offset: 960)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "observe", scope: !8037, file: !220, line: 242, baseType: !86, size: 32, offset: 1024)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "token_len", scope: !8037, file: !220, line: 243, baseType: !107, size: 8, offset: 1056)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !8037, file: !220, line: 244, baseType: !446, size: 64, offset: 1064)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "accept_num", scope: !8037, file: !220, line: 245, baseType: !107, size: 8, offset: 1128)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !8037, file: !220, line: 246, baseType: !468, size: 32, offset: 1136)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "if_match_len", scope: !8037, file: !220, line: 247, baseType: !107, size: 8, offset: 1168)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "if_match", scope: !8037, file: !220, line: 248, baseType: !446, size: 64, offset: 1176)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "block2_num", scope: !8037, file: !220, line: 249, baseType: !86, size: 32, offset: 1248)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "block2_more", scope: !8037, file: !220, line: 250, baseType: !107, size: 8, offset: 1280)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "block2_size", scope: !8037, file: !220, line: 251, baseType: !79, size: 16, offset: 1296)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "block2_offset", scope: !8037, file: !220, line: 252, baseType: !86, size: 32, offset: 1312)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "block1_num", scope: !8037, file: !220, line: 253, baseType: !86, size: 32, offset: 1344)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "block1_more", scope: !8037, file: !220, line: 254, baseType: !107, size: 8, offset: 1376)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "block1_size", scope: !8037, file: !220, line: 255, baseType: !79, size: 16, offset: 1392)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "block1_offset", scope: !8037, file: !220, line: 256, baseType: !86, size: 32, offset: 1408)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8037, file: !220, line: 257, baseType: !86, size: 32, offset: 1440)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "uri_query", scope: !8037, file: !220, line: 258, baseType: !8054, size: 64, offset: 1472)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "if_none_match", scope: !8037, file: !220, line: 259, baseType: !107, size: 8, offset: 1536)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !8037, file: !220, line: 261, baseType: !79, size: 16, offset: 1552)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !8037, file: !220, line: 262, baseType: !186, size: 64, offset: 1600)
!8087 = !DILocalVariable(name: "contextP", arg: 1, scope: !8032, file: !718, line: 265, type: !7969)
!8088 = !DILocation(line: 265, column: 51, scope: !8032)
!8089 = !DILocalVariable(name: "fromSessionH", arg: 2, scope: !8032, file: !718, line: 266, type: !54)
!8090 = !DILocation(line: 266, column: 41, scope: !8032)
!8091 = !DILocalVariable(name: "message", arg: 3, scope: !8032, file: !718, line: 267, type: !8035)
!8092 = !DILocation(line: 267, column: 50, scope: !8032)
!8093 = !DILocalVariable(name: "response", arg: 4, scope: !8032, file: !718, line: 268, type: !8035)
!8094 = !DILocation(line: 268, column: 50, scope: !8032)
!8095 = !DILocalVariable(name: "found", scope: !8032, file: !718, line: 270, type: !136)
!8096 = !DILocation(line: 270, column: 10, scope: !8032)
!8097 = !DILocalVariable(name: "reset", scope: !8032, file: !718, line: 271, type: !136)
!8098 = !DILocation(line: 271, column: 10, scope: !8032)
!8099 = !DILocalVariable(name: "transacP", scope: !8032, file: !718, line: 272, type: !721)
!8100 = !DILocation(line: 272, column: 27, scope: !8032)
!8101 = !DILocation(line: 275, column: 16, scope: !8032)
!8102 = !DILocation(line: 275, column: 26, scope: !8032)
!8103 = !DILocation(line: 275, column: 14, scope: !8032)
!8104 = !DILocation(line: 277, column: 5, scope: !8032)
!8105 = !DILocation(line: 277, column: 20, scope: !8032)
!8106 = !DILocation(line: 277, column: 17, scope: !8032)
!8107 = !DILocation(line: 279, column: 36, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !718, line: 279, column: 13)
!8109 = distinct !DILexicalBlock(scope: !8032, file: !718, line: 278, column: 5)
!8110 = !DILocation(line: 279, column: 50, scope: !8108)
!8111 = !DILocation(line: 279, column: 60, scope: !8108)
!8112 = !DILocation(line: 279, column: 67, scope: !8108)
!8113 = !DILocation(line: 279, column: 77, scope: !8108)
!8114 = !DILocation(line: 279, column: 13, scope: !8108)
!8115 = !DILocation(line: 279, column: 87, scope: !8108)
!8116 = !DILocation(line: 279, column: 13, scope: !8109)
!8117 = !DILocation(line: 281, column: 18, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !718, line: 281, column: 17)
!8119 = distinct !DILexicalBlock(scope: !8108, file: !718, line: 280, column: 9)
!8120 = !DILocation(line: 281, column: 28, scope: !8118)
!8121 = !DILocation(line: 281, column: 17, scope: !8119)
!8122 = !DILocation(line: 283, column: 39, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !718, line: 283, column: 21)
!8124 = distinct !DILexicalBlock(scope: !8118, file: !718, line: 282, column: 13)
!8125 = !DILocation(line: 283, column: 48, scope: !8123)
!8126 = !DILocation(line: 283, column: 36, scope: !8123)
!8127 = !DILocation(line: 283, column: 54, scope: !8123)
!8128 = !DILocation(line: 283, column: 75, scope: !8123)
!8129 = !DILocation(line: 283, column: 84, scope: !8123)
!8130 = !DILocation(line: 283, column: 72, scope: !8123)
!8131 = !DILocation(line: 283, column: 21, scope: !8124)
!8132 = !DILocation(line: 285, column: 25, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !718, line: 285, column: 25)
!8134 = distinct !DILexicalBlock(scope: !8123, file: !718, line: 284, column: 17)
!8135 = !DILocation(line: 285, column: 35, scope: !8133)
!8136 = !DILocation(line: 285, column: 42, scope: !8133)
!8137 = !DILocation(line: 285, column: 51, scope: !8133)
!8138 = !DILocation(line: 285, column: 39, scope: !8133)
!8139 = !DILocation(line: 285, column: 25, scope: !8134)
!8140 = !DILocation(line: 287, column: 28, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8133, file: !718, line: 286, column: 18)
!8142 = !DILocation(line: 288, column: 22, scope: !8141)
!8143 = !DILocation(line: 288, column: 32, scope: !8141)
!8144 = !DILocation(line: 288, column: 45, scope: !8141)
!8145 = !DILocation(line: 289, column: 47, scope: !8141)
!8146 = !DILocation(line: 289, column: 56, scope: !8141)
!8147 = !DILocation(line: 289, column: 44, scope: !8141)
!8148 = !DILocation(line: 289, column: 28, scope: !8141)
!8149 = !DILocation(line: 290, column: 18, scope: !8141)
!8150 = !DILocation(line: 291, column: 17, scope: !8134)
!8151 = !DILocation(line: 292, column: 13, scope: !8124)
!8152 = !DILocation(line: 294, column: 17, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8119, file: !718, line: 294, column: 17)
!8154 = !DILocation(line: 294, column: 23, scope: !8153)
!8155 = !DILocation(line: 294, column: 44, scope: !8153)
!8156 = !DILocation(line: 294, column: 54, scope: !8153)
!8157 = !DILocation(line: 294, column: 26, scope: !8153)
!8158 = !DILocation(line: 294, column: 17, scope: !8119)
!8159 = !DILocation(line: 299, column: 22, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !718, line: 299, column: 21)
!8161 = distinct !DILexicalBlock(scope: !8153, file: !718, line: 295, column: 13)
!8162 = !DILocation(line: 299, column: 21, scope: !8161)
!8163 = !DILocation(line: 301, column: 42, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !718, line: 301, column: 25)
!8165 = distinct !DILexicalBlock(scope: !8160, file: !718, line: 300, column: 17)
!8166 = !DILocation(line: 301, column: 51, scope: !8164)
!8167 = !DILocation(line: 301, column: 39, scope: !8164)
!8168 = !DILocation(line: 301, column: 56, scope: !8164)
!8169 = !DILocation(line: 301, column: 67, scope: !8164)
!8170 = !DILocation(line: 301, column: 64, scope: !8164)
!8171 = !DILocation(line: 301, column: 25, scope: !8165)
!8172 = !DILocation(line: 303, column: 43, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8164, file: !718, line: 302, column: 21)
!8174 = !DILocation(line: 303, column: 71, scope: !8173)
!8175 = !DILocation(line: 303, column: 80, scope: !8173)
!8176 = !DILocation(line: 303, column: 25, scope: !8173)
!8177 = !DILocation(line: 304, column: 38, scope: !8173)
!8178 = !DILocation(line: 304, column: 48, scope: !8173)
!8179 = !DILocation(line: 304, column: 58, scope: !8173)
!8180 = !DILocation(line: 304, column: 25, scope: !8173)
!8181 = !DILocation(line: 305, column: 21, scope: !8173)
!8182 = !DILocation(line: 307, column: 48, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8165, file: !718, line: 307, column: 22)
!8184 = !DILocation(line: 307, column: 57, scope: !8183)
!8185 = !DILocation(line: 307, column: 45, scope: !8183)
!8186 = !DILocation(line: 307, column: 63, scope: !8183)
!8187 = !DILocation(line: 307, column: 89, scope: !8183)
!8188 = !DILocation(line: 307, column: 99, scope: !8183)
!8189 = !DILocation(line: 307, column: 87, scope: !8183)
!8190 = !DILocation(line: 307, column: 22, scope: !8165)
!8191 = !DILocation(line: 309, column: 22, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8183, file: !718, line: 308, column: 18)
!8193 = !DILocation(line: 309, column: 32, scope: !8192)
!8194 = !DILocation(line: 309, column: 45, scope: !8192)
!8195 = !DILocation(line: 310, column: 22, scope: !8192)
!8196 = !DILocation(line: 310, column: 32, scope: !8192)
!8197 = !DILocation(line: 310, column: 45, scope: !8192)
!8198 = !DILocation(line: 311, column: 22, scope: !8192)
!8199 = !DILocation(line: 313, column: 5, scope: !8165)
!8200 = !DILocation(line: 314, column: 21, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8161, file: !718, line: 314, column: 21)
!8202 = !DILocation(line: 314, column: 31, scope: !8201)
!8203 = !DILocation(line: 314, column: 40, scope: !8201)
!8204 = !DILocation(line: 314, column: 21, scope: !8161)
!8205 = !DILocation(line: 316, column: 21, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8201, file: !718, line: 315, column: 17)
!8207 = !DILocation(line: 316, column: 31, scope: !8206)
!8208 = !DILocation(line: 316, column: 40, scope: !8206)
!8209 = !DILocation(line: 316, column: 50, scope: !8206)
!8210 = !DILocation(line: 317, column: 17, scope: !8206)
!8211 = !DILocation(line: 318, column: 36, scope: !8161)
!8212 = !DILocation(line: 318, column: 46, scope: !8161)
!8213 = !DILocation(line: 318, column: 17, scope: !8161)
!8214 = !DILocation(line: 319, column: 17, scope: !8161)
!8215 = !DILocation(line: 322, column: 17, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8119, file: !718, line: 322, column: 17)
!8217 = !DILocation(line: 322, column: 17, scope: !8119)
!8218 = !DILocalVariable(name: "tv_sec", scope: !8219, file: !718, line: 324, type: !139)
!8219 = distinct !DILexicalBlock(scope: !8216, file: !718, line: 323, column: 13)
!8220 = !DILocation(line: 324, column: 24, scope: !8219)
!8221 = !DILocation(line: 324, column: 33, scope: !8219)
!8222 = !DILocation(line: 325, column: 26, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8219, file: !718, line: 325, column: 21)
!8224 = !DILocation(line: 325, column: 23, scope: !8223)
!8225 = !DILocation(line: 325, column: 21, scope: !8219)
!8226 = !DILocation(line: 327, column: 46, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8223, file: !718, line: 326, column: 17)
!8228 = !DILocation(line: 327, column: 21, scope: !8227)
!8229 = !DILocation(line: 327, column: 31, scope: !8227)
!8230 = !DILocation(line: 327, column: 44, scope: !8227)
!8231 = !DILocation(line: 328, column: 17, scope: !8227)
!8232 = !DILocation(line: 329, column: 21, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8219, file: !718, line: 329, column: 21)
!8234 = !DILocation(line: 329, column: 31, scope: !8233)
!8235 = !DILocation(line: 329, column: 21, scope: !8219)
!8236 = !DILocation(line: 331, column: 47, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !718, line: 330, column: 17)
!8238 = !DILocation(line: 331, column: 57, scope: !8237)
!8239 = !DILocation(line: 331, column: 21, scope: !8237)
!8240 = !DILocation(line: 331, column: 31, scope: !8237)
!8241 = !DILocation(line: 331, column: 44, scope: !8237)
!8242 = !DILocation(line: 332, column: 17, scope: !8237)
!8243 = !DILocation(line: 335, column: 71, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8233, file: !718, line: 334, column: 17)
!8245 = !DILocation(line: 335, column: 81, scope: !8244)
!8246 = !DILocation(line: 335, column: 69, scope: !8244)
!8247 = !DILocation(line: 335, column: 47, scope: !8244)
!8248 = !DILocation(line: 335, column: 21, scope: !8244)
!8249 = !DILocation(line: 335, column: 31, scope: !8244)
!8250 = !DILocation(line: 335, column: 44, scope: !8244)
!8251 = !DILocation(line: 337, column: 17, scope: !8219)
!8252 = !DILocation(line: 339, column: 9, scope: !8119)
!8253 = !DILocation(line: 341, column: 20, scope: !8109)
!8254 = !DILocation(line: 341, column: 30, scope: !8109)
!8255 = !DILocation(line: 341, column: 18, scope: !8109)
!8256 = distinct !{!8256, !8104, !8257}
!8257 = !DILocation(line: 342, column: 5, scope: !8032)
!8258 = !DILocation(line: 343, column: 5, scope: !8032)
!8259 = !DILocation(line: 344, column: 1, scope: !8032)
!8260 = distinct !DISubprogram(name: "prv_checkFinished", scope: !718, file: !718, line: 117, type: !8261, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!58, !721, !8035}
!8263 = !DILocalVariable(name: "transacP", arg: 1, scope: !8260, file: !718, line: 117, type: !721)
!8264 = !DILocation(line: 117, column: 52, scope: !8260)
!8265 = !DILocalVariable(name: "receivedMessage", arg: 2, scope: !8260, file: !718, line: 118, type: !8035)
!8266 = !DILocation(line: 118, column: 46, scope: !8260)
!8267 = !DILocalVariable(name: "len", scope: !8260, file: !718, line: 120, type: !58)
!8268 = !DILocation(line: 120, column: 9, scope: !8260)
!8269 = !DILocalVariable(name: "token", scope: !8260, file: !718, line: 121, type: !442)
!8270 = !DILocation(line: 121, column: 20, scope: !8260)
!8271 = !DILocalVariable(name: "transactionMessage", scope: !8260, file: !718, line: 122, type: !8035)
!8272 = !DILocation(line: 122, column: 21, scope: !8260)
!8273 = !DILocation(line: 122, column: 42, scope: !8260)
!8274 = !DILocation(line: 122, column: 52, scope: !8260)
!8275 = !DILocation(line: 124, column: 23, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8260, file: !718, line: 124, column: 9)
!8277 = !DILocation(line: 124, column: 43, scope: !8276)
!8278 = !DILocation(line: 124, column: 21, scope: !8276)
!8279 = !DILocation(line: 124, column: 9, scope: !8260)
!8280 = !DILocation(line: 127, column: 16, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8276, file: !718, line: 125, column: 5)
!8282 = !DILocation(line: 127, column: 26, scope: !8281)
!8283 = !DILocation(line: 127, column: 9, scope: !8281)
!8284 = !DILocation(line: 129, column: 9, scope: !8260)
!8285 = !DILocation(line: 129, column: 10, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8260, file: !718, line: 129, column: 9)
!8287 = !DILocation(line: 132, column: 16, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8286, file: !718, line: 130, column: 5)
!8289 = !DILocation(line: 132, column: 26, scope: !8288)
!8290 = !DILocation(line: 132, column: 9, scope: !8288)
!8291 = !DILocation(line: 135, column: 33, scope: !8260)
!8292 = !DILocation(line: 135, column: 11, scope: !8260)
!8293 = !DILocation(line: 135, column: 9, scope: !8260)
!8294 = !DILocation(line: 136, column: 9, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8260, file: !718, line: 136, column: 9)
!8296 = !DILocation(line: 136, column: 29, scope: !8295)
!8297 = !DILocation(line: 136, column: 42, scope: !8295)
!8298 = !DILocation(line: 136, column: 39, scope: !8295)
!8299 = !DILocation(line: 136, column: 9, scope: !8260)
!8300 = !DILocation(line: 138, column: 20, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !718, line: 138, column: 13)
!8302 = distinct !DILexicalBlock(scope: !8295, file: !718, line: 137, column: 5)
!8303 = !DILocation(line: 138, column: 40, scope: !8301)
!8304 = !DILocation(line: 138, column: 47, scope: !8301)
!8305 = !DILocation(line: 138, column: 54, scope: !8301)
!8306 = !DILocation(line: 138, column: 13, scope: !8301)
!8307 = !DILocation(line: 138, column: 58, scope: !8301)
!8308 = !DILocation(line: 138, column: 13, scope: !8302)
!8309 = !DILocation(line: 138, column: 63, scope: !8301)
!8310 = !DILocation(line: 139, column: 5, scope: !8302)
!8311 = !DILocation(line: 141, column: 5, scope: !8260)
!8312 = !DILocation(line: 142, column: 1, scope: !8260)
!8313 = distinct !DISubprogram(name: "transaction_send", scope: !718, file: !718, line: 346, type: !8314, isLocal: false, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{!58, !7969, !721}
!8316 = !DILocalVariable(name: "contextP", arg: 1, scope: !8313, file: !718, line: 346, type: !7969)
!8317 = !DILocation(line: 346, column: 40, scope: !8313)
!8318 = !DILocalVariable(name: "transacP", arg: 2, scope: !8313, file: !718, line: 347, type: !721)
!8319 = !DILocation(line: 347, column: 44, scope: !8313)
!8320 = !DILocalVariable(name: "maxRetriesReached", scope: !8313, file: !718, line: 349, type: !136)
!8321 = !DILocation(line: 349, column: 10, scope: !8313)
!8322 = !DILocation(line: 352, column: 9, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8313, file: !718, line: 352, column: 9)
!8324 = !DILocation(line: 352, column: 19, scope: !8323)
!8325 = !DILocation(line: 352, column: 26, scope: !8323)
!8326 = !DILocation(line: 352, column: 9, scope: !8313)
!8327 = !DILocation(line: 354, column: 56, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8323, file: !718, line: 353, column: 5)
!8329 = !DILocation(line: 354, column: 66, scope: !8328)
!8330 = !DILocation(line: 354, column: 32, scope: !8328)
!8331 = !DILocation(line: 354, column: 9, scope: !8328)
!8332 = !DILocation(line: 354, column: 19, scope: !8328)
!8333 = !DILocation(line: 354, column: 30, scope: !8328)
!8334 = !DILocation(line: 355, column: 13, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8328, file: !718, line: 355, column: 13)
!8336 = !DILocation(line: 355, column: 23, scope: !8335)
!8337 = !DILocation(line: 355, column: 34, scope: !8335)
!8338 = !DILocation(line: 355, column: 13, scope: !8328)
!8339 = !DILocation(line: 357, column: 31, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8335, file: !718, line: 356, column: 9)
!8341 = !DILocation(line: 357, column: 41, scope: !8340)
!8342 = !DILocation(line: 357, column: 12, scope: !8340)
!8343 = !DILocation(line: 358, column: 12, scope: !8340)
!8344 = !DILocation(line: 361, column: 51, scope: !8328)
!8345 = !DILocation(line: 361, column: 61, scope: !8328)
!8346 = !DILocation(line: 361, column: 38, scope: !8328)
!8347 = !DILocation(line: 361, column: 9, scope: !8328)
!8348 = !DILocation(line: 361, column: 19, scope: !8328)
!8349 = !DILocation(line: 361, column: 26, scope: !8328)
!8350 = !DILocation(line: 362, column: 13, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8328, file: !718, line: 362, column: 13)
!8352 = !DILocation(line: 362, column: 23, scope: !8351)
!8353 = !DILocation(line: 362, column: 30, scope: !8351)
!8354 = !DILocation(line: 362, column: 13, scope: !8328)
!8355 = !DILocation(line: 364, column: 31, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8351, file: !718, line: 363, column: 9)
!8357 = !DILocation(line: 364, column: 41, scope: !8356)
!8358 = !DILocation(line: 364, column: 12, scope: !8356)
!8359 = !DILocation(line: 365, column: 12, scope: !8356)
!8360 = !DILocation(line: 368, column: 55, scope: !8328)
!8361 = !DILocation(line: 368, column: 65, scope: !8328)
!8362 = !DILocation(line: 368, column: 74, scope: !8328)
!8363 = !DILocation(line: 368, column: 84, scope: !8328)
!8364 = !DILocation(line: 368, column: 32, scope: !8328)
!8365 = !DILocation(line: 368, column: 9, scope: !8328)
!8366 = !DILocation(line: 368, column: 19, scope: !8328)
!8367 = !DILocation(line: 368, column: 30, scope: !8328)
!8368 = !DILocation(line: 369, column: 13, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8328, file: !718, line: 369, column: 13)
!8370 = !DILocation(line: 369, column: 23, scope: !8369)
!8371 = !DILocation(line: 369, column: 34, scope: !8369)
!8372 = !DILocation(line: 369, column: 13, scope: !8328)
!8373 = !DILocation(line: 371, column: 24, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8369, file: !718, line: 370, column: 9)
!8375 = !DILocation(line: 371, column: 34, scope: !8374)
!8376 = !DILocation(line: 371, column: 13, scope: !8374)
!8377 = !DILocation(line: 372, column: 13, scope: !8374)
!8378 = !DILocation(line: 372, column: 23, scope: !8374)
!8379 = !DILocation(line: 372, column: 30, scope: !8374)
!8380 = !DILocation(line: 373, column: 32, scope: !8374)
!8381 = !DILocation(line: 373, column: 42, scope: !8374)
!8382 = !DILocation(line: 373, column: 13, scope: !8374)
!8383 = !DILocation(line: 374, column: 13, scope: !8374)
!8384 = !DILocation(line: 376, column: 5, scope: !8328)
!8385 = !DILocation(line: 378, column: 10, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8313, file: !718, line: 378, column: 9)
!8387 = !DILocation(line: 378, column: 20, scope: !8386)
!8388 = !DILocation(line: 378, column: 9, scope: !8313)
!8389 = !DILocalVariable(name: "timeout", scope: !8390, file: !718, line: 380, type: !440)
!8390 = distinct !DILexicalBlock(scope: !8386, file: !718, line: 379, column: 5)
!8391 = !DILocation(line: 380, column: 23, scope: !8390)
!8392 = !DILocation(line: 382, column: 18, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8390, file: !718, line: 382, column: 13)
!8394 = !DILocation(line: 382, column: 28, scope: !8393)
!8395 = !DILocation(line: 382, column: 15, scope: !8393)
!8396 = !DILocation(line: 382, column: 13, scope: !8390)
!8397 = !DILocalVariable(name: "tv_sec", scope: !8398, file: !718, line: 384, type: !139)
!8398 = distinct !DILexicalBlock(scope: !8393, file: !718, line: 383, column: 9)
!8399 = !DILocation(line: 384, column: 20, scope: !8398)
!8400 = !DILocation(line: 384, column: 29, scope: !8398)
!8401 = !DILocation(line: 385, column: 22, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !718, line: 385, column: 17)
!8403 = !DILocation(line: 385, column: 19, scope: !8402)
!8404 = !DILocation(line: 385, column: 17, scope: !8398)
!8405 = !DILocation(line: 387, column: 42, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8402, file: !718, line: 386, column: 13)
!8407 = !DILocation(line: 387, column: 49, scope: !8406)
!8408 = !DILocation(line: 387, column: 17, scope: !8406)
!8409 = !DILocation(line: 387, column: 27, scope: !8406)
!8410 = !DILocation(line: 387, column: 40, scope: !8406)
!8411 = !DILocation(line: 388, column: 17, scope: !8406)
!8412 = !DILocation(line: 388, column: 27, scope: !8406)
!8413 = !DILocation(line: 388, column: 43, scope: !8406)
!8414 = !DILocation(line: 389, column: 25, scope: !8406)
!8415 = !DILocation(line: 390, column: 13, scope: !8406)
!8416 = !DILocation(line: 393, column: 35, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8402, file: !718, line: 392, column: 13)
!8418 = !DILocation(line: 395, column: 9, scope: !8398)
!8419 = !DILocation(line: 398, column: 49, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8393, file: !718, line: 397, column: 9)
!8421 = !DILocation(line: 398, column: 59, scope: !8420)
!8422 = !DILocation(line: 398, column: 75, scope: !8420)
!8423 = !DILocation(line: 398, column: 45, scope: !8420)
!8424 = !DILocation(line: 398, column: 23, scope: !8420)
!8425 = !DILocation(line: 398, column: 21, scope: !8420)
!8426 = !DILocation(line: 401, column: 40, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8390, file: !718, line: 401, column: 13)
!8428 = !DILocation(line: 401, column: 50, scope: !8427)
!8429 = !DILocation(line: 401, column: 37, scope: !8427)
!8430 = !DILocation(line: 401, column: 13, scope: !8390)
!8431 = !DILocation(line: 403, column: 37, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !718, line: 402, column: 9)
!8433 = !DILocation(line: 403, column: 47, scope: !8432)
!8434 = !DILocation(line: 403, column: 54, scope: !8432)
!8435 = !DILocation(line: 403, column: 64, scope: !8432)
!8436 = !DILocation(line: 403, column: 72, scope: !8432)
!8437 = !DILocation(line: 403, column: 82, scope: !8432)
!8438 = !DILocation(line: 403, column: 94, scope: !8432)
!8439 = !DILocation(line: 403, column: 104, scope: !8432)
!8440 = !DILocation(line: 403, column: 19, scope: !8432)
!8441 = !DILocation(line: 405, column: 39, scope: !8432)
!8442 = !DILocation(line: 405, column: 13, scope: !8432)
!8443 = !DILocation(line: 405, column: 23, scope: !8432)
!8444 = !DILocation(line: 405, column: 36, scope: !8432)
!8445 = !DILocation(line: 406, column: 13, scope: !8432)
!8446 = !DILocation(line: 406, column: 23, scope: !8432)
!8447 = !DILocation(line: 406, column: 39, scope: !8432)
!8448 = !DILocation(line: 407, column: 9, scope: !8432)
!8449 = !DILocation(line: 410, column: 31, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8427, file: !718, line: 409, column: 9)
!8451 = !DILocation(line: 412, column: 5, scope: !8390)
!8452 = !DILocation(line: 414, column: 9, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8313, file: !718, line: 414, column: 9)
!8454 = !DILocation(line: 414, column: 19, scope: !8453)
!8455 = !DILocation(line: 414, column: 32, scope: !8453)
!8456 = !DILocation(line: 414, column: 35, scope: !8453)
!8457 = !DILocation(line: 414, column: 9, scope: !8313)
!8458 = !DILocation(line: 416, column: 13, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !718, line: 416, column: 13)
!8460 = distinct !DILexicalBlock(scope: !8453, file: !718, line: 415, column: 5)
!8461 = !DILocation(line: 416, column: 23, scope: !8459)
!8462 = !DILocation(line: 416, column: 13, scope: !8460)
!8463 = !DILocation(line: 418, column: 13, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8459, file: !718, line: 417, column: 9)
!8465 = !DILocation(line: 418, column: 23, scope: !8464)
!8466 = !DILocation(line: 418, column: 32, scope: !8464)
!8467 = !DILocation(line: 419, column: 9, scope: !8464)
!8468 = !DILocation(line: 420, column: 28, scope: !8460)
!8469 = !DILocation(line: 420, column: 38, scope: !8460)
!8470 = !DILocation(line: 420, column: 9, scope: !8460)
!8471 = !DILocation(line: 421, column: 9, scope: !8460)
!8472 = !DILocation(line: 424, column: 5, scope: !8313)
!8473 = !DILocation(line: 425, column: 1, scope: !8313)
!8474 = distinct !DISubprogram(name: "transaction_step", scope: !718, file: !718, line: 427, type: !8475, isLocal: false, isDefinition: true, scopeLine: 430, flags: DIFlagPrototyped, isOptimized: false, unit: !717, variables: !488)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{null, !7969, !139, !3089}
!8477 = !DILocalVariable(name: "contextP", arg: 1, scope: !8474, file: !718, line: 427, type: !7969)
!8478 = !DILocation(line: 427, column: 41, scope: !8474)
!8479 = !DILocalVariable(name: "currentTime", arg: 2, scope: !8474, file: !718, line: 428, type: !139)
!8480 = !DILocation(line: 428, column: 30, scope: !8474)
!8481 = !DILocalVariable(name: "timeoutP", arg: 3, scope: !8474, file: !718, line: 429, type: !3089)
!8482 = !DILocation(line: 429, column: 32, scope: !8474)
!8483 = !DILocalVariable(name: "transacP", scope: !8474, file: !718, line: 431, type: !721)
!8484 = !DILocation(line: 431, column: 27, scope: !8474)
!8485 = !DILocation(line: 434, column: 16, scope: !8474)
!8486 = !DILocation(line: 434, column: 26, scope: !8474)
!8487 = !DILocation(line: 434, column: 14, scope: !8474)
!8488 = !DILocation(line: 435, column: 5, scope: !8474)
!8489 = !DILocation(line: 435, column: 12, scope: !8474)
!8490 = !DILocation(line: 435, column: 21, scope: !8474)
!8491 = !DILocalVariable(name: "nextP", scope: !8492, file: !718, line: 438, type: !721)
!8492 = distinct !DILexicalBlock(scope: !8474, file: !718, line: 436, column: 5)
!8493 = !DILocation(line: 438, column: 31, scope: !8492)
!8494 = !DILocation(line: 438, column: 39, scope: !8492)
!8495 = !DILocation(line: 438, column: 49, scope: !8492)
!8496 = !DILocalVariable(name: "removed", scope: !8492, file: !718, line: 439, type: !58)
!8497 = !DILocation(line: 439, column: 13, scope: !8492)
!8498 = !DILocation(line: 441, column: 13, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8492, file: !718, line: 441, column: 13)
!8500 = !DILocation(line: 441, column: 23, scope: !8499)
!8501 = !DILocation(line: 441, column: 39, scope: !8499)
!8502 = !DILocation(line: 441, column: 36, scope: !8499)
!8503 = !DILocation(line: 441, column: 13, scope: !8492)
!8504 = !DILocation(line: 443, column: 40, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8499, file: !718, line: 442, column: 9)
!8506 = !DILocation(line: 443, column: 50, scope: !8505)
!8507 = !DILocation(line: 443, column: 23, scope: !8505)
!8508 = !DILocation(line: 443, column: 21, scope: !8505)
!8509 = !DILocation(line: 444, column: 9, scope: !8505)
!8510 = !DILocation(line: 446, column: 18, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8492, file: !718, line: 446, column: 13)
!8512 = !DILocation(line: 446, column: 15, scope: !8511)
!8513 = !DILocation(line: 446, column: 13, scope: !8492)
!8514 = !DILocalVariable(name: "interval", scope: !8515, file: !718, line: 448, type: !139)
!8515 = distinct !DILexicalBlock(scope: !8511, file: !718, line: 447, column: 9)
!8516 = !DILocation(line: 448, column: 20, scope: !8515)
!8517 = !DILocation(line: 450, column: 17, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8515, file: !718, line: 450, column: 17)
!8519 = !DILocation(line: 450, column: 27, scope: !8518)
!8520 = !DILocation(line: 450, column: 42, scope: !8518)
!8521 = !DILocation(line: 450, column: 40, scope: !8518)
!8522 = !DILocation(line: 450, column: 17, scope: !8515)
!8523 = !DILocation(line: 452, column: 28, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8518, file: !718, line: 451, column: 13)
!8525 = !DILocation(line: 452, column: 38, scope: !8524)
!8526 = !DILocation(line: 452, column: 53, scope: !8524)
!8527 = !DILocation(line: 452, column: 51, scope: !8524)
!8528 = !DILocation(line: 452, column: 26, scope: !8524)
!8529 = !DILocation(line: 453, column: 13, scope: !8524)
!8530 = !DILocation(line: 456, column: 26, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8518, file: !718, line: 455, column: 13)
!8532 = !DILocation(line: 459, column: 18, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8515, file: !718, line: 459, column: 17)
!8534 = !DILocation(line: 459, column: 17, scope: !8533)
!8535 = !DILocation(line: 459, column: 29, scope: !8533)
!8536 = !DILocation(line: 459, column: 27, scope: !8533)
!8537 = !DILocation(line: 459, column: 17, scope: !8515)
!8538 = !DILocation(line: 461, column: 29, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8533, file: !718, line: 460, column: 13)
!8540 = !DILocation(line: 461, column: 18, scope: !8539)
!8541 = !DILocation(line: 461, column: 27, scope: !8539)
!8542 = !DILocation(line: 462, column: 13, scope: !8539)
!8543 = !DILocation(line: 463, column: 9, scope: !8515)
!8544 = !DILocation(line: 466, column: 14, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8511, file: !718, line: 465, column: 9)
!8546 = !DILocation(line: 466, column: 23, scope: !8545)
!8547 = !DILocation(line: 469, column: 20, scope: !8492)
!8548 = !DILocation(line: 469, column: 18, scope: !8492)
!8549 = distinct !{!8549, !8488, !8550}
!8550 = !DILocation(line: 470, column: 5, scope: !8474)
!8551 = !DILocation(line: 471, column: 1, scope: !8474)
!8552 = distinct !DISubprogram(name: "registration_freeClient", scope: !750, file: !750, line: 987, type: !8553, isLocal: false, isDefinition: true, scopeLine: 988, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{null, !753}
!8555 = !DILocalVariable(name: "clientP", arg: 1, scope: !8552, file: !750, line: 987, type: !753)
!8556 = !DILocation(line: 987, column: 47, scope: !8552)
!8557 = !DILocation(line: 990, column: 9, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8552, file: !750, line: 990, column: 9)
!8559 = !DILocation(line: 990, column: 18, scope: !8558)
!8560 = !DILocation(line: 990, column: 23, scope: !8558)
!8561 = !DILocation(line: 990, column: 9, scope: !8552)
!8562 = !DILocation(line: 990, column: 43, scope: !8558)
!8563 = !DILocation(line: 990, column: 52, scope: !8558)
!8564 = !DILocation(line: 990, column: 32, scope: !8558)
!8565 = !DILocation(line: 991, column: 9, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8552, file: !750, line: 991, column: 9)
!8567 = !DILocation(line: 991, column: 18, scope: !8566)
!8568 = !DILocation(line: 991, column: 25, scope: !8566)
!8569 = !DILocation(line: 991, column: 9, scope: !8552)
!8570 = !DILocation(line: 991, column: 45, scope: !8566)
!8571 = !DILocation(line: 991, column: 54, scope: !8566)
!8572 = !DILocation(line: 991, column: 34, scope: !8566)
!8573 = !DILocation(line: 992, column: 9, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8552, file: !750, line: 992, column: 9)
!8575 = !DILocation(line: 992, column: 18, scope: !8574)
!8576 = !DILocation(line: 992, column: 26, scope: !8574)
!8577 = !DILocation(line: 992, column: 9, scope: !8552)
!8578 = !DILocation(line: 992, column: 46, scope: !8574)
!8579 = !DILocation(line: 992, column: 55, scope: !8574)
!8580 = !DILocation(line: 992, column: 35, scope: !8574)
!8581 = !DILocation(line: 993, column: 30, scope: !8552)
!8582 = !DILocation(line: 993, column: 39, scope: !8552)
!8583 = !DILocation(line: 993, column: 5, scope: !8552)
!8584 = !DILocation(line: 994, column: 5, scope: !8552)
!8585 = !DILocation(line: 994, column: 11, scope: !8552)
!8586 = !DILocation(line: 994, column: 20, scope: !8552)
!8587 = !DILocation(line: 994, column: 36, scope: !8552)
!8588 = !DILocalVariable(name: "targetP", scope: !8589, file: !750, line: 996, type: !785)
!8589 = distinct !DILexicalBlock(scope: !8552, file: !750, line: 995, column: 5)
!8590 = !DILocation(line: 996, column: 31, scope: !8589)
!8591 = !DILocation(line: 998, column: 19, scope: !8589)
!8592 = !DILocation(line: 998, column: 28, scope: !8589)
!8593 = !DILocation(line: 998, column: 17, scope: !8589)
!8594 = !DILocation(line: 999, column: 36, scope: !8589)
!8595 = !DILocation(line: 999, column: 45, scope: !8589)
!8596 = !DILocation(line: 999, column: 62, scope: !8589)
!8597 = !DILocation(line: 999, column: 9, scope: !8589)
!8598 = !DILocation(line: 999, column: 18, scope: !8589)
!8599 = !DILocation(line: 999, column: 34, scope: !8589)
!8600 = !DILocation(line: 1000, column: 20, scope: !8589)
!8601 = !DILocation(line: 1000, column: 9, scope: !8589)
!8602 = distinct !{!8602, !8584, !8603}
!8603 = !DILocation(line: 1001, column: 5, scope: !8552)
!8604 = !DILocation(line: 1002, column: 16, scope: !8552)
!8605 = !DILocation(line: 1002, column: 5, scope: !8552)
!8606 = !DILocation(line: 1003, column: 1, scope: !8552)
!8607 = distinct !DISubprogram(name: "prv_freeClientObjectList", scope: !750, file: !750, line: 582, type: !8608, isLocal: true, isDefinition: true, scopeLine: 583, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{null, !769}
!8610 = !DILocalVariable(name: "objects", arg: 1, scope: !8607, file: !750, line: 582, type: !769)
!8611 = !DILocation(line: 582, column: 62, scope: !8607)
!8612 = !DILocation(line: 584, column: 5, scope: !8607)
!8613 = !DILocation(line: 584, column: 12, scope: !8607)
!8614 = !DILocation(line: 584, column: 20, scope: !8607)
!8615 = !DILocalVariable(name: "objP", scope: !8616, file: !750, line: 586, type: !769)
!8616 = distinct !DILexicalBlock(scope: !8607, file: !750, line: 585, column: 5)
!8617 = !DILocation(line: 586, column: 33, scope: !8616)
!8618 = !DILocation(line: 588, column: 9, scope: !8616)
!8619 = !DILocation(line: 588, column: 16, scope: !8616)
!8620 = !DILocation(line: 588, column: 25, scope: !8616)
!8621 = !DILocation(line: 588, column: 38, scope: !8616)
!8622 = !DILocalVariable(name: "target", scope: !8623, file: !750, line: 590, type: !777)
!8623 = distinct !DILexicalBlock(scope: !8616, file: !750, line: 589, column: 9)
!8624 = !DILocation(line: 590, column: 28, scope: !8623)
!8625 = !DILocation(line: 592, column: 22, scope: !8623)
!8626 = !DILocation(line: 592, column: 31, scope: !8623)
!8627 = !DILocation(line: 592, column: 20, scope: !8623)
!8628 = !DILocation(line: 593, column: 37, scope: !8623)
!8629 = !DILocation(line: 593, column: 46, scope: !8623)
!8630 = !DILocation(line: 593, column: 60, scope: !8623)
!8631 = !DILocation(line: 593, column: 13, scope: !8623)
!8632 = !DILocation(line: 593, column: 22, scope: !8623)
!8633 = !DILocation(line: 593, column: 35, scope: !8623)
!8634 = !DILocation(line: 594, column: 24, scope: !8623)
!8635 = !DILocation(line: 594, column: 13, scope: !8623)
!8636 = distinct !{!8636, !8618, !8637}
!8637 = !DILocation(line: 595, column: 9, scope: !8616)
!8638 = !DILocation(line: 597, column: 16, scope: !8616)
!8639 = !DILocation(line: 597, column: 14, scope: !8616)
!8640 = !DILocation(line: 598, column: 19, scope: !8616)
!8641 = !DILocation(line: 598, column: 28, scope: !8616)
!8642 = !DILocation(line: 598, column: 17, scope: !8616)
!8643 = !DILocation(line: 599, column: 20, scope: !8616)
!8644 = !DILocation(line: 599, column: 9, scope: !8616)
!8645 = distinct !{!8645, !8612, !8646}
!8646 = !DILocation(line: 600, column: 5, scope: !8607)
!8647 = !DILocation(line: 601, column: 1, scope: !8607)
!8648 = distinct !DISubprogram(name: "registration_handleRequest", scope: !750, file: !750, line: 1023, type: !8649, isLocal: false, isDefinition: true, scopeLine: 1028, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!8649 = !DISubroutineType(types: !8650)
!8650 = !{!107, !8651, !807, !54, !8681, !8681}
!8651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8652, size: 64)
!8652 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !8653)
!8653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !8654)
!8654 = !{!8655, !8656, !8657, !8658, !8659, !8680}
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !8653, file: !6, line: 659, baseType: !753, size: 64)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !8653, file: !6, line: 660, baseType: !803, size: 64, offset: 64)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !8653, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !8653, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !8653, file: !6, line: 668, baseType: !8660, size: 64, offset: 256)
!8660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8661, size: 64)
!8661 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_t", file: !6, line: 566, baseType: !8662)
!8662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_transaction_", file: !6, line: 570, size: 768, elements: !8663)
!8663 = !{!8664, !8665, !8666, !8667, !8668, !8669, !8670, !8671, !8672, !8673, !8674, !8679}
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8662, file: !6, line: 572, baseType: !8660, size: 64)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "mID", scope: !8662, file: !6, line: 573, baseType: !79, size: 16, offset: 64)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "peerH", scope: !8662, file: !6, line: 574, baseType: !54, size: 64, offset: 128)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "ack_received", scope: !8662, file: !6, line: 575, baseType: !107, size: 8, offset: 192)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "response_timeout", scope: !8662, file: !6, line: 576, baseType: !139, size: 64, offset: 256)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_counter", scope: !8662, file: !6, line: 577, baseType: !107, size: 8, offset: 320)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "retrans_time", scope: !8662, file: !6, line: 578, baseType: !139, size: 64, offset: 384)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !8662, file: !6, line: 579, baseType: !54, size: 64, offset: 448)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_len", scope: !8662, file: !6, line: 580, baseType: !79, size: 16, offset: 512)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8662, file: !6, line: 581, baseType: !186, size: 64, offset: 576)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !8662, file: !6, line: 582, baseType: !8675, size: 64, offset: 640)
!8675 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_transaction_callback_t", file: !6, line: 568, baseType: !8676)
!8676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8677, size: 64)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{null, !8660, !54}
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !8662, file: !6, line: 583, baseType: !54, size: 64, offset: 704)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !8653, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 64)
!8682 = !DIDerivedType(tag: DW_TAG_typedef, name: "coap_packet_t", file: !220, line: 264, baseType: !8683)
!8683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 219, size: 1664, elements: !8684)
!8684 = !{!8685, !8686, !8687, !8688, !8689, !8690, !8691, !8692, !8693, !8694, !8695, !8696, !8697, !8698, !8699, !8709, !8710, !8711, !8712, !8713, !8714, !8715, !8716, !8717, !8718, !8719, !8720, !8721, !8722, !8723, !8724, !8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732}
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8683, file: !220, line: 220, baseType: !186, size: 64)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8683, file: !220, line: 222, baseType: !107, size: 8, offset: 64)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8683, file: !220, line: 223, baseType: !427, size: 32, offset: 96)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !8683, file: !220, line: 224, baseType: !107, size: 8, offset: 128)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !8683, file: !220, line: 225, baseType: !79, size: 16, offset: 144)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !8683, file: !220, line: 227, baseType: !431, size: 40, offset: 160)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !8683, file: !220, line: 229, baseType: !435, size: 32, offset: 224)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !8683, file: !220, line: 230, baseType: !86, size: 32, offset: 256)
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri_len", scope: !8683, file: !220, line: 231, baseType: !438, size: 64, offset: 320)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_uri", scope: !8683, file: !220, line: 232, baseType: !442, size: 64, offset: 384)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "etag_len", scope: !8683, file: !220, line: 233, baseType: !107, size: 8, offset: 448)
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !8683, file: !220, line: 234, baseType: !446, size: 64, offset: 456)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host_len", scope: !8683, file: !220, line: 235, baseType: !438, size: 64, offset: 576)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "uri_host", scope: !8683, file: !220, line: 236, baseType: !442, size: 64, offset: 640)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "location_path", scope: !8683, file: !220, line: 237, baseType: !8700, size: 64, offset: 704)
!8700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8701, size: 64)
!8701 = !DIDerivedType(tag: DW_TAG_typedef, name: "multi_option_t", file: !220, line: 216, baseType: !8702)
!8702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_multi_option_t", file: !220, line: 211, size: 192, elements: !8703)
!8703 = !{!8704, !8706, !8707, !8708}
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8702, file: !220, line: 212, baseType: !8705, size: 64)
!8705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8702, size: 64)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "is_static", scope: !8702, file: !220, line: 213, baseType: !107, size: 8, offset: 64)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8702, file: !220, line: 214, baseType: !107, size: 8, offset: 72)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8702, file: !220, line: 215, baseType: !186, size: 64, offset: 128)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "uri_port", scope: !8683, file: !220, line: 238, baseType: !79, size: 16, offset: 768)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "location_query_len", scope: !8683, file: !220, line: 239, baseType: !438, size: 64, offset: 832)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "location_query", scope: !8683, file: !220, line: 240, baseType: !186, size: 64, offset: 896)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "uri_path", scope: !8683, file: !220, line: 241, baseType: !8700, size: 64, offset: 960)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "observe", scope: !8683, file: !220, line: 242, baseType: !86, size: 32, offset: 1024)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "token_len", scope: !8683, file: !220, line: 243, baseType: !107, size: 8, offset: 1056)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !8683, file: !220, line: 244, baseType: !446, size: 64, offset: 1064)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "accept_num", scope: !8683, file: !220, line: 245, baseType: !107, size: 8, offset: 1128)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !8683, file: !220, line: 246, baseType: !468, size: 32, offset: 1136)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "if_match_len", scope: !8683, file: !220, line: 247, baseType: !107, size: 8, offset: 1168)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "if_match", scope: !8683, file: !220, line: 248, baseType: !446, size: 64, offset: 1176)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "block2_num", scope: !8683, file: !220, line: 249, baseType: !86, size: 32, offset: 1248)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "block2_more", scope: !8683, file: !220, line: 250, baseType: !107, size: 8, offset: 1280)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "block2_size", scope: !8683, file: !220, line: 251, baseType: !79, size: 16, offset: 1296)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "block2_offset", scope: !8683, file: !220, line: 252, baseType: !86, size: 32, offset: 1312)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "block1_num", scope: !8683, file: !220, line: 253, baseType: !86, size: 32, offset: 1344)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "block1_more", scope: !8683, file: !220, line: 254, baseType: !107, size: 8, offset: 1376)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "block1_size", scope: !8683, file: !220, line: 255, baseType: !79, size: 16, offset: 1392)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "block1_offset", scope: !8683, file: !220, line: 256, baseType: !86, size: 32, offset: 1408)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8683, file: !220, line: 257, baseType: !86, size: 32, offset: 1440)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "uri_query", scope: !8683, file: !220, line: 258, baseType: !8700, size: 64, offset: 1472)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "if_none_match", scope: !8683, file: !220, line: 259, baseType: !107, size: 8, offset: 1536)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !8683, file: !220, line: 261, baseType: !79, size: 16, offset: 1552)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !8683, file: !220, line: 262, baseType: !186, size: 64, offset: 1600)
!8733 = !DILocalVariable(name: "contextP", arg: 1, scope: !8648, file: !750, line: 1023, type: !8651)
!8734 = !DILocation(line: 1023, column: 54, scope: !8648)
!8735 = !DILocalVariable(name: "uriP", arg: 2, scope: !8648, file: !750, line: 1024, type: !807)
!8736 = !DILocation(line: 1024, column: 50, scope: !8648)
!8737 = !DILocalVariable(name: "fromSessionH", arg: 3, scope: !8648, file: !750, line: 1025, type: !54)
!8738 = !DILocation(line: 1025, column: 43, scope: !8648)
!8739 = !DILocalVariable(name: "message", arg: 4, scope: !8648, file: !750, line: 1026, type: !8681)
!8740 = !DILocation(line: 1026, column: 52, scope: !8648)
!8741 = !DILocalVariable(name: "response", arg: 5, scope: !8648, file: !750, line: 1027, type: !8681)
!8742 = !DILocation(line: 1027, column: 52, scope: !8648)
!8743 = !DILocalVariable(name: "result", scope: !8648, file: !750, line: 1029, type: !107)
!8744 = !DILocation(line: 1029, column: 13, scope: !8648)
!8745 = !DILocalVariable(name: "tv_sec", scope: !8648, file: !750, line: 1030, type: !139)
!8746 = !DILocation(line: 1030, column: 12, scope: !8648)
!8747 = !DILocation(line: 1033, column: 14, scope: !8648)
!8748 = !DILocation(line: 1033, column: 12, scope: !8648)
!8749 = !DILocation(line: 1034, column: 9, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8648, file: !750, line: 1034, column: 9)
!8751 = !DILocation(line: 1034, column: 16, scope: !8750)
!8752 = !DILocation(line: 1034, column: 9, scope: !8648)
!8753 = !DILocation(line: 1034, column: 21, scope: !8750)
!8754 = !DILocation(line: 1036, column: 12, scope: !8648)
!8755 = !DILocation(line: 1036, column: 21, scope: !8648)
!8756 = !DILocation(line: 1036, column: 5, scope: !8648)
!8757 = !DILocalVariable(name: "name", scope: !8758, file: !750, line: 1040, type: !117)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !750, line: 1039, column: 5)
!8759 = distinct !DILexicalBlock(scope: !8648, file: !750, line: 1037, column: 5)
!8760 = !DILocation(line: 1040, column: 16, scope: !8758)
!8761 = !DILocalVariable(name: "lifetime", scope: !8758, file: !750, line: 1041, type: !86)
!8762 = !DILocation(line: 1041, column: 18, scope: !8758)
!8763 = !DILocalVariable(name: "msisdn", scope: !8758, file: !750, line: 1042, type: !117)
!8764 = !DILocation(line: 1042, column: 16, scope: !8758)
!8765 = !DILocalVariable(name: "altPath", scope: !8758, file: !750, line: 1043, type: !117)
!8766 = !DILocation(line: 1043, column: 16, scope: !8758)
!8767 = !DILocalVariable(name: "version", scope: !8758, file: !750, line: 1044, type: !117)
!8768 = !DILocation(line: 1044, column: 16, scope: !8758)
!8769 = !DILocalVariable(name: "binding", scope: !8758, file: !750, line: 1045, type: !132)
!8770 = !DILocation(line: 1045, column: 25, scope: !8758)
!8771 = !DILocalVariable(name: "objects", scope: !8758, file: !750, line: 1046, type: !769)
!8772 = !DILocation(line: 1046, column: 33, scope: !8758)
!8773 = !DILocalVariable(name: "supportJSON", scope: !8758, file: !750, line: 1047, type: !136)
!8774 = !DILocation(line: 1047, column: 14, scope: !8758)
!8775 = !DILocalVariable(name: "clientP", scope: !8758, file: !750, line: 1048, type: !753)
!8776 = !DILocation(line: 1048, column: 26, scope: !8758)
!8777 = !DILocalVariable(name: "location", scope: !8758, file: !750, line: 1049, type: !8778)
!8778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 80, elements: !8779)
!8779 = !{!8780}
!8780 = !DISubrange(count: 10)
!8781 = !DILocation(line: 1049, column: 14, scope: !8758)
!8782 = !DILocation(line: 1051, column: 36, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8758, file: !750, line: 1051, column: 13)
!8784 = !DILocation(line: 1051, column: 45, scope: !8783)
!8785 = !DILocation(line: 1051, column: 18, scope: !8783)
!8786 = !DILocation(line: 1051, column: 15, scope: !8783)
!8787 = !DILocation(line: 1051, column: 13, scope: !8758)
!8788 = !DILocation(line: 1053, column: 13, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8783, file: !750, line: 1052, column: 9)
!8790 = !DILocation(line: 1055, column: 13, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8758, file: !750, line: 1055, column: 13)
!8792 = !DILocation(line: 1055, column: 22, scope: !8791)
!8793 = !DILocation(line: 1055, column: 35, scope: !8791)
!8794 = !DILocation(line: 1056, column: 10, scope: !8791)
!8795 = !DILocation(line: 1056, column: 13, scope: !8791)
!8796 = !DILocation(line: 1056, column: 22, scope: !8791)
!8797 = !DILocation(line: 1056, column: 35, scope: !8791)
!8798 = !DILocation(line: 1055, column: 13, scope: !8758)
!8799 = !DILocation(line: 1058, column: 13, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8791, file: !750, line: 1057, column: 9)
!8801 = !DILocation(line: 1061, column: 45, scope: !8758)
!8802 = !DILocation(line: 1061, column: 54, scope: !8758)
!8803 = !DILocation(line: 1061, column: 63, scope: !8758)
!8804 = !DILocation(line: 1061, column: 72, scope: !8758)
!8805 = !DILocation(line: 1061, column: 19, scope: !8758)
!8806 = !DILocation(line: 1061, column: 17, scope: !8758)
!8807 = !DILocation(line: 1063, column: 17, scope: !8758)
!8808 = !DILocation(line: 1063, column: 23, scope: !8758)
!8809 = !DILocation(line: 1063, column: 28, scope: !8758)
!8810 = !DILocation(line: 1063, column: 9, scope: !8758)
!8811 = !DILocation(line: 1068, column: 17, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1068, column: 17)
!8813 = distinct !DILexicalBlock(scope: !8758, file: !750, line: 1064, column: 9)
!8814 = !DILocation(line: 1068, column: 25, scope: !8812)
!8815 = !DILocation(line: 1068, column: 17, scope: !8813)
!8816 = !DILocation(line: 1070, column: 21, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !750, line: 1070, column: 21)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !750, line: 1069, column: 13)
!8819 = !DILocation(line: 1070, column: 26, scope: !8817)
!8820 = !DILocation(line: 1070, column: 21, scope: !8818)
!8821 = !DILocation(line: 1070, column: 46, scope: !8817)
!8822 = !DILocation(line: 1070, column: 35, scope: !8817)
!8823 = !DILocation(line: 1071, column: 21, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8818, file: !750, line: 1071, column: 21)
!8825 = !DILocation(line: 1071, column: 28, scope: !8824)
!8826 = !DILocation(line: 1071, column: 21, scope: !8818)
!8827 = !DILocation(line: 1071, column: 48, scope: !8824)
!8828 = !DILocation(line: 1071, column: 37, scope: !8824)
!8829 = !DILocation(line: 1072, column: 17, scope: !8818)
!8830 = !DILocation(line: 1075, column: 17, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1075, column: 17)
!8832 = !DILocation(line: 1075, column: 22, scope: !8831)
!8833 = !DILocation(line: 1075, column: 17, scope: !8813)
!8834 = !DILocation(line: 1077, column: 28, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8831, file: !750, line: 1076, column: 13)
!8836 = !DILocation(line: 1077, column: 17, scope: !8835)
!8837 = !DILocation(line: 1078, column: 21, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8835, file: !750, line: 1078, column: 21)
!8839 = !DILocation(line: 1078, column: 28, scope: !8838)
!8840 = !DILocation(line: 1078, column: 21, scope: !8835)
!8841 = !DILocation(line: 1078, column: 48, scope: !8838)
!8842 = !DILocation(line: 1078, column: 37, scope: !8838)
!8843 = !DILocation(line: 1079, column: 17, scope: !8835)
!8844 = !DILocation(line: 1082, column: 17, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1082, column: 17)
!8846 = !DILocation(line: 1082, column: 25, scope: !8845)
!8847 = !DILocation(line: 1082, column: 17, scope: !8813)
!8848 = !DILocation(line: 1084, column: 28, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8845, file: !750, line: 1083, column: 13)
!8850 = !DILocation(line: 1084, column: 17, scope: !8849)
!8851 = !DILocation(line: 1085, column: 28, scope: !8849)
!8852 = !DILocation(line: 1085, column: 17, scope: !8849)
!8853 = !DILocation(line: 1086, column: 21, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8849, file: !750, line: 1086, column: 21)
!8855 = !DILocation(line: 1086, column: 28, scope: !8854)
!8856 = !DILocation(line: 1086, column: 21, scope: !8849)
!8857 = !DILocation(line: 1086, column: 48, scope: !8854)
!8858 = !DILocation(line: 1086, column: 37, scope: !8854)
!8859 = !DILocation(line: 1087, column: 17, scope: !8849)
!8860 = !DILocation(line: 1090, column: 24, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1090, column: 17)
!8862 = !DILocation(line: 1090, column: 17, scope: !8861)
!8863 = !DILocation(line: 1090, column: 33, scope: !8861)
!8864 = !DILocation(line: 1091, column: 17, scope: !8861)
!8865 = !DILocation(line: 1091, column: 34, scope: !8861)
!8866 = !DILocation(line: 1091, column: 20, scope: !8861)
!8867 = !DILocation(line: 1090, column: 17, scope: !8813)
!8868 = !DILocation(line: 1093, column: 28, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8861, file: !750, line: 1092, column: 13)
!8870 = !DILocation(line: 1093, column: 17, scope: !8869)
!8871 = !DILocation(line: 1094, column: 28, scope: !8869)
!8872 = !DILocation(line: 1094, column: 17, scope: !8869)
!8873 = !DILocation(line: 1095, column: 21, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8869, file: !750, line: 1095, column: 21)
!8875 = !DILocation(line: 1095, column: 28, scope: !8874)
!8876 = !DILocation(line: 1095, column: 21, scope: !8869)
!8877 = !DILocation(line: 1095, column: 48, scope: !8874)
!8878 = !DILocation(line: 1095, column: 37, scope: !8874)
!8879 = !DILocation(line: 1096, column: 17, scope: !8869)
!8880 = !DILocation(line: 1099, column: 17, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1099, column: 17)
!8882 = !DILocation(line: 1099, column: 26, scope: !8881)
!8883 = !DILocation(line: 1099, column: 17, scope: !8813)
!8884 = !DILocation(line: 1101, column: 26, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !750, line: 1100, column: 13)
!8886 = !DILocation(line: 1102, column: 13, scope: !8885)
!8887 = !DILocation(line: 1104, column: 43, scope: !8813)
!8888 = !DILocation(line: 1104, column: 53, scope: !8813)
!8889 = !DILocation(line: 1104, column: 23, scope: !8813)
!8890 = !DILocation(line: 1104, column: 21, scope: !8813)
!8891 = !DILocation(line: 1105, column: 17, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1105, column: 17)
!8893 = !DILocation(line: 1105, column: 25, scope: !8892)
!8894 = !DILocation(line: 1105, column: 17, scope: !8813)
!8895 = !DILocation(line: 1108, column: 28, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8892, file: !750, line: 1106, column: 13)
!8897 = !DILocation(line: 1108, column: 37, scope: !8896)
!8898 = !DILocation(line: 1108, column: 17, scope: !8896)
!8899 = !DILocation(line: 1109, column: 21, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8896, file: !750, line: 1109, column: 21)
!8901 = !DILocation(line: 1109, column: 30, scope: !8900)
!8902 = !DILocation(line: 1109, column: 37, scope: !8900)
!8903 = !DILocation(line: 1109, column: 21, scope: !8896)
!8904 = !DILocation(line: 1109, column: 57, scope: !8900)
!8905 = !DILocation(line: 1109, column: 66, scope: !8900)
!8906 = !DILocation(line: 1109, column: 46, scope: !8900)
!8907 = !DILocation(line: 1110, column: 21, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8896, file: !750, line: 1110, column: 21)
!8909 = !DILocation(line: 1110, column: 30, scope: !8908)
!8910 = !DILocation(line: 1110, column: 38, scope: !8908)
!8911 = !DILocation(line: 1110, column: 21, scope: !8896)
!8912 = !DILocation(line: 1110, column: 58, scope: !8908)
!8913 = !DILocation(line: 1110, column: 67, scope: !8908)
!8914 = !DILocation(line: 1110, column: 47, scope: !8908)
!8915 = !DILocation(line: 1111, column: 42, scope: !8896)
!8916 = !DILocation(line: 1111, column: 51, scope: !8896)
!8917 = !DILocation(line: 1111, column: 17, scope: !8896)
!8918 = !DILocation(line: 1112, column: 17, scope: !8896)
!8919 = !DILocation(line: 1112, column: 26, scope: !8896)
!8920 = !DILocation(line: 1112, column: 37, scope: !8896)
!8921 = !DILocation(line: 1113, column: 13, scope: !8896)
!8922 = !DILocation(line: 1116, column: 45, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8892, file: !750, line: 1115, column: 13)
!8924 = !DILocation(line: 1116, column: 27, scope: !8923)
!8925 = !DILocation(line: 1116, column: 25, scope: !8923)
!8926 = !DILocation(line: 1117, column: 21, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8923, file: !750, line: 1117, column: 21)
!8928 = !DILocation(line: 1117, column: 29, scope: !8927)
!8929 = !DILocation(line: 1117, column: 21, scope: !8923)
!8930 = !DILocation(line: 1119, column: 32, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8927, file: !750, line: 1118, column: 17)
!8932 = !DILocation(line: 1119, column: 21, scope: !8931)
!8933 = !DILocation(line: 1120, column: 32, scope: !8931)
!8934 = !DILocation(line: 1120, column: 21, scope: !8931)
!8935 = !DILocation(line: 1121, column: 25, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8931, file: !750, line: 1121, column: 25)
!8937 = !DILocation(line: 1121, column: 32, scope: !8936)
!8938 = !DILocation(line: 1121, column: 25, scope: !8931)
!8939 = !DILocation(line: 1121, column: 52, scope: !8936)
!8940 = !DILocation(line: 1121, column: 41, scope: !8936)
!8941 = !DILocation(line: 1122, column: 46, scope: !8931)
!8942 = !DILocation(line: 1122, column: 21, scope: !8931)
!8943 = !DILocation(line: 1123, column: 21, scope: !8931)
!8944 = !DILocation(line: 1125, column: 24, scope: !8923)
!8945 = !DILocation(line: 1125, column: 17, scope: !8923)
!8946 = !DILocation(line: 1126, column: 72, scope: !8923)
!8947 = !DILocation(line: 1126, column: 82, scope: !8923)
!8948 = !DILocation(line: 1126, column: 56, scope: !8923)
!8949 = !DILocation(line: 1126, column: 39, scope: !8923)
!8950 = !DILocation(line: 1126, column: 17, scope: !8923)
!8951 = !DILocation(line: 1126, column: 26, scope: !8923)
!8952 = !DILocation(line: 1126, column: 37, scope: !8923)
!8953 = !DILocation(line: 1127, column: 58, scope: !8923)
!8954 = !DILocation(line: 1127, column: 40, scope: !8923)
!8955 = !DILocation(line: 1127, column: 17, scope: !8923)
!8956 = !DILocation(line: 1127, column: 27, scope: !8923)
!8957 = !DILocation(line: 1127, column: 38, scope: !8923)
!8958 = !DILocation(line: 1129, column: 29, scope: !8813)
!8959 = !DILocation(line: 1129, column: 13, scope: !8813)
!8960 = !DILocation(line: 1129, column: 22, scope: !8813)
!8961 = !DILocation(line: 1129, column: 27, scope: !8813)
!8962 = !DILocation(line: 1130, column: 32, scope: !8813)
!8963 = !DILocation(line: 1130, column: 13, scope: !8813)
!8964 = !DILocation(line: 1130, column: 22, scope: !8813)
!8965 = !DILocation(line: 1130, column: 30, scope: !8813)
!8966 = !DILocation(line: 1131, column: 31, scope: !8813)
!8967 = !DILocation(line: 1131, column: 13, scope: !8813)
!8968 = !DILocation(line: 1131, column: 22, scope: !8813)
!8969 = !DILocation(line: 1131, column: 29, scope: !8813)
!8970 = !DILocation(line: 1132, column: 32, scope: !8813)
!8971 = !DILocation(line: 1132, column: 13, scope: !8813)
!8972 = !DILocation(line: 1132, column: 22, scope: !8813)
!8973 = !DILocation(line: 1132, column: 30, scope: !8813)
!8974 = !DILocation(line: 1133, column: 36, scope: !8813)
!8975 = !DILocation(line: 1133, column: 13, scope: !8813)
!8976 = !DILocation(line: 1133, column: 22, scope: !8813)
!8977 = !DILocation(line: 1133, column: 34, scope: !8813)
!8978 = !DILocation(line: 1134, column: 33, scope: !8813)
!8979 = !DILocation(line: 1134, column: 13, scope: !8813)
!8980 = !DILocation(line: 1134, column: 22, scope: !8813)
!8981 = !DILocation(line: 1134, column: 31, scope: !8813)
!8982 = !DILocation(line: 1135, column: 34, scope: !8813)
!8983 = !DILocation(line: 1135, column: 43, scope: !8813)
!8984 = !DILocation(line: 1135, column: 41, scope: !8813)
!8985 = !DILocation(line: 1135, column: 13, scope: !8813)
!8986 = !DILocation(line: 1135, column: 22, scope: !8813)
!8987 = !DILocation(line: 1135, column: 32, scope: !8813)
!8988 = !DILocation(line: 1136, column: 35, scope: !8813)
!8989 = !DILocation(line: 1136, column: 13, scope: !8813)
!8990 = !DILocation(line: 1136, column: 22, scope: !8813)
!8991 = !DILocation(line: 1136, column: 33, scope: !8813)
!8992 = !DILocation(line: 1137, column: 33, scope: !8813)
!8993 = !DILocation(line: 1137, column: 13, scope: !8813)
!8994 = !DILocation(line: 1137, column: 22, scope: !8813)
!8995 = !DILocation(line: 1137, column: 31, scope: !8813)
!8996 = !DILocation(line: 1139, column: 39, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1139, column: 17)
!8998 = !DILocation(line: 1139, column: 48, scope: !8997)
!8999 = !DILocation(line: 1139, column: 60, scope: !8997)
!9000 = !DILocation(line: 1139, column: 17, scope: !8997)
!9001 = !DILocation(line: 1139, column: 70, scope: !8997)
!9002 = !DILocation(line: 1139, column: 17, scope: !8813)
!9003 = !DILocation(line: 1141, column: 41, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8997, file: !750, line: 1140, column: 13)
!9005 = !DILocation(line: 1141, column: 17, scope: !9004)
!9006 = !DILocation(line: 1142, column: 17, scope: !9004)
!9007 = !DILocation(line: 1144, column: 47, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1144, column: 17)
!9009 = !DILocation(line: 1144, column: 57, scope: !9008)
!9010 = !DILocation(line: 1144, column: 17, scope: !9008)
!9011 = !DILocation(line: 1144, column: 67, scope: !9008)
!9012 = !DILocation(line: 1144, column: 17, scope: !8813)
!9013 = !DILocation(line: 1146, column: 41, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9008, file: !750, line: 1145, column: 13)
!9015 = !DILocation(line: 1146, column: 17, scope: !9014)
!9016 = !DILocation(line: 1147, column: 17, scope: !9014)
!9017 = !DILocation(line: 1150, column: 17, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1150, column: 17)
!9019 = !DILocation(line: 1150, column: 27, scope: !9018)
!9020 = !DILocation(line: 1150, column: 43, scope: !9018)
!9021 = !DILocation(line: 1150, column: 17, scope: !8813)
!9022 = !DILocation(line: 1152, column: 17, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9018, file: !750, line: 1151, column: 13)
!9024 = !DILocation(line: 1152, column: 27, scope: !9023)
!9025 = !DILocation(line: 1152, column: 43, scope: !9023)
!9026 = !DILocation(line: 1152, column: 52, scope: !9023)
!9027 = !DILocation(line: 1152, column: 117, scope: !9023)
!9028 = !DILocation(line: 1152, column: 127, scope: !9023)
!9029 = !DILocation(line: 1153, column: 13, scope: !9023)
!9030 = !DILocation(line: 1154, column: 20, scope: !8813)
!9031 = !DILocation(line: 1155, column: 13, scope: !8813)
!9032 = !DILocation(line: 1158, column: 73, scope: !8813)
!9033 = !DILocation(line: 1158, column: 83, scope: !8813)
!9034 = !DILocation(line: 1158, column: 57, scope: !8813)
!9035 = !DILocation(line: 1158, column: 95, scope: !8813)
!9036 = !DILocation(line: 1158, column: 101, scope: !8813)
!9037 = !DILocation(line: 1158, column: 41, scope: !8813)
!9038 = !DILocation(line: 1158, column: 23, scope: !8813)
!9039 = !DILocation(line: 1158, column: 21, scope: !8813)
!9040 = !DILocation(line: 1159, column: 17, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1159, column: 17)
!9042 = !DILocation(line: 1159, column: 25, scope: !9041)
!9043 = !DILocation(line: 1159, column: 17, scope: !8813)
!9044 = !DILocation(line: 1159, column: 34, scope: !9041)
!9045 = !DILocation(line: 1162, column: 17, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1162, column: 17)
!9047 = !DILocation(line: 1162, column: 22, scope: !9046)
!9048 = !DILocation(line: 1162, column: 17, scope: !8813)
!9049 = !DILocation(line: 1164, column: 28, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9046, file: !750, line: 1163, column: 13)
!9051 = !DILocation(line: 1164, column: 17, scope: !9050)
!9052 = !DILocation(line: 1165, column: 21, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9050, file: !750, line: 1165, column: 21)
!9054 = !DILocation(line: 1165, column: 28, scope: !9053)
!9055 = !DILocation(line: 1165, column: 21, scope: !9050)
!9056 = !DILocation(line: 1165, column: 48, scope: !9053)
!9057 = !DILocation(line: 1165, column: 37, scope: !9053)
!9058 = !DILocation(line: 1166, column: 17, scope: !9050)
!9059 = !DILocation(line: 1169, column: 17, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1169, column: 17)
!9061 = !DILocation(line: 1169, column: 25, scope: !9060)
!9062 = !DILocation(line: 1169, column: 17, scope: !8813)
!9063 = !DILocation(line: 1171, column: 36, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9060, file: !750, line: 1170, column: 13)
!9065 = !DILocation(line: 1171, column: 17, scope: !9064)
!9066 = !DILocation(line: 1171, column: 26, scope: !9064)
!9067 = !DILocation(line: 1171, column: 34, scope: !9064)
!9068 = !DILocation(line: 1172, column: 13, scope: !9064)
!9069 = !DILocation(line: 1173, column: 17, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1173, column: 17)
!9071 = !DILocation(line: 1173, column: 24, scope: !9070)
!9072 = !DILocation(line: 1173, column: 17, scope: !8813)
!9073 = !DILocation(line: 1175, column: 21, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !750, line: 1175, column: 21)
!9075 = distinct !DILexicalBlock(scope: !9070, file: !750, line: 1174, column: 13)
!9076 = !DILocation(line: 1175, column: 30, scope: !9074)
!9077 = !DILocation(line: 1175, column: 37, scope: !9074)
!9078 = !DILocation(line: 1175, column: 21, scope: !9075)
!9079 = !DILocation(line: 1175, column: 57, scope: !9074)
!9080 = !DILocation(line: 1175, column: 66, scope: !9074)
!9081 = !DILocation(line: 1175, column: 46, scope: !9074)
!9082 = !DILocation(line: 1176, column: 35, scope: !9075)
!9083 = !DILocation(line: 1176, column: 17, scope: !9075)
!9084 = !DILocation(line: 1176, column: 26, scope: !9075)
!9085 = !DILocation(line: 1176, column: 33, scope: !9075)
!9086 = !DILocation(line: 1177, column: 13, scope: !9075)
!9087 = !DILocation(line: 1178, column: 17, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1178, column: 17)
!9089 = !DILocation(line: 1178, column: 26, scope: !9088)
!9090 = !DILocation(line: 1178, column: 17, scope: !8813)
!9091 = !DILocation(line: 1180, column: 37, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9088, file: !750, line: 1179, column: 13)
!9093 = !DILocation(line: 1180, column: 17, scope: !9092)
!9094 = !DILocation(line: 1180, column: 26, scope: !9092)
!9095 = !DILocation(line: 1180, column: 35, scope: !9092)
!9096 = !DILocation(line: 1181, column: 13, scope: !9092)
!9097 = !DILocation(line: 1183, column: 33, scope: !8813)
!9098 = !DILocation(line: 1183, column: 13, scope: !8813)
!9099 = !DILocation(line: 1183, column: 22, scope: !8813)
!9100 = !DILocation(line: 1183, column: 31, scope: !8813)
!9101 = !DILocation(line: 1185, column: 17, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1185, column: 17)
!9103 = !DILocation(line: 1185, column: 25, scope: !9102)
!9104 = !DILocation(line: 1185, column: 17, scope: !8813)
!9105 = !DILocalVariable(name: "observationP", scope: !9106, file: !750, line: 1187, type: !785)
!9106 = distinct !DILexicalBlock(scope: !9102, file: !750, line: 1186, column: 13)
!9107 = !DILocation(line: 1187, column: 39, scope: !9106)
!9108 = !DILocation(line: 1190, column: 32, scope: !9106)
!9109 = !DILocation(line: 1190, column: 41, scope: !9106)
!9110 = !DILocation(line: 1190, column: 30, scope: !9106)
!9111 = !DILocation(line: 1191, column: 17, scope: !9106)
!9112 = !DILocation(line: 1191, column: 24, scope: !9106)
!9113 = !DILocation(line: 1191, column: 37, scope: !9106)
!9114 = !DILocalVariable(name: "objP", scope: !9115, file: !750, line: 1193, type: !769)
!9115 = distinct !DILexicalBlock(scope: !9106, file: !750, line: 1192, column: 17)
!9116 = !DILocation(line: 1193, column: 45, scope: !9115)
!9117 = !DILocalVariable(name: "nextP", scope: !9115, file: !750, line: 1194, type: !785)
!9118 = !DILocation(line: 1194, column: 43, scope: !9115)
!9119 = !DILocation(line: 1196, column: 29, scope: !9115)
!9120 = !DILocation(line: 1196, column: 43, scope: !9115)
!9121 = !DILocation(line: 1196, column: 27, scope: !9115)
!9122 = !DILocation(line: 1198, column: 85, scope: !9115)
!9123 = !DILocation(line: 1198, column: 69, scope: !9115)
!9124 = !DILocation(line: 1198, column: 94, scope: !9115)
!9125 = !DILocation(line: 1198, column: 108, scope: !9115)
!9126 = !DILocation(line: 1198, column: 112, scope: !9115)
!9127 = !DILocation(line: 1198, column: 53, scope: !9115)
!9128 = !DILocation(line: 1198, column: 28, scope: !9115)
!9129 = !DILocation(line: 1198, column: 26, scope: !9115)
!9130 = !DILocation(line: 1199, column: 25, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9115, file: !750, line: 1199, column: 25)
!9132 = !DILocation(line: 1199, column: 30, scope: !9131)
!9133 = !DILocation(line: 1199, column: 25, scope: !9115)
!9134 = !DILocation(line: 1201, column: 25, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9131, file: !750, line: 1200, column: 21)
!9136 = !DILocation(line: 1201, column: 39, scope: !9135)
!9137 = !DILocation(line: 1201, column: 48, scope: !9135)
!9138 = !DILocation(line: 1201, column: 57, scope: !9135)
!9139 = !DILocation(line: 1202, column: 49, scope: !9135)
!9140 = !DILocation(line: 1202, column: 63, scope: !9135)
!9141 = !DILocation(line: 1205, column: 48, scope: !9135)
!9142 = !DILocation(line: 1205, column: 62, scope: !9135)
!9143 = !DILocation(line: 1206, column: 40, scope: !9135)
!9144 = !DILocation(line: 1206, column: 25, scope: !9135)
!9145 = !DILocation(line: 1207, column: 21, scope: !9135)
!9146 = !DILocation(line: 1210, column: 30, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !750, line: 1210, column: 29)
!9148 = distinct !DILexicalBlock(scope: !9131, file: !750, line: 1209, column: 21)
!9149 = !DILocation(line: 1210, column: 44, scope: !9147)
!9150 = !DILocation(line: 1210, column: 48, scope: !9147)
!9151 = !DILocation(line: 1210, column: 53, scope: !9147)
!9152 = !DILocation(line: 1210, column: 83, scope: !9147)
!9153 = !DILocation(line: 1210, column: 29, scope: !9148)
!9154 = !DILocation(line: 1212, column: 65, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !750, line: 1212, column: 33)
!9156 = distinct !DILexicalBlock(scope: !9147, file: !750, line: 1211, column: 25)
!9157 = !DILocation(line: 1212, column: 71, scope: !9155)
!9158 = !DILocation(line: 1212, column: 85, scope: !9155)
!9159 = !DILocation(line: 1212, column: 99, scope: !9155)
!9160 = !DILocation(line: 1212, column: 103, scope: !9155)
!9161 = !DILocation(line: 1212, column: 33, scope: !9155)
!9162 = !DILocation(line: 1212, column: 115, scope: !9155)
!9163 = !DILocation(line: 1212, column: 33, scope: !9156)
!9164 = !DILocation(line: 1214, column: 33, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9155, file: !750, line: 1213, column: 29)
!9166 = !DILocation(line: 1214, column: 47, scope: !9165)
!9167 = !DILocation(line: 1214, column: 56, scope: !9165)
!9168 = !DILocation(line: 1214, column: 65, scope: !9165)
!9169 = !DILocation(line: 1215, column: 57, scope: !9165)
!9170 = !DILocation(line: 1215, column: 71, scope: !9165)
!9171 = !DILocation(line: 1218, column: 56, scope: !9165)
!9172 = !DILocation(line: 1218, column: 70, scope: !9165)
!9173 = !DILocation(line: 1219, column: 48, scope: !9165)
!9174 = !DILocation(line: 1219, column: 33, scope: !9165)
!9175 = !DILocation(line: 1220, column: 29, scope: !9165)
!9176 = !DILocation(line: 1221, column: 25, scope: !9156)
!9177 = !DILocation(line: 1224, column: 36, scope: !9115)
!9178 = !DILocation(line: 1224, column: 34, scope: !9115)
!9179 = distinct !{!9179, !9111, !9180}
!9180 = !DILocation(line: 1225, column: 17, scope: !9106)
!9181 = !DILocation(line: 1227, column: 42, scope: !9106)
!9182 = !DILocation(line: 1227, column: 51, scope: !9106)
!9183 = !DILocation(line: 1227, column: 17, scope: !9106)
!9184 = !DILocation(line: 1228, column: 39, scope: !9106)
!9185 = !DILocation(line: 1228, column: 17, scope: !9106)
!9186 = !DILocation(line: 1228, column: 26, scope: !9106)
!9187 = !DILocation(line: 1228, column: 37, scope: !9106)
!9188 = !DILocation(line: 1229, column: 13, scope: !9106)
!9189 = !DILocation(line: 1231, column: 34, scope: !8813)
!9190 = !DILocation(line: 1231, column: 43, scope: !8813)
!9191 = !DILocation(line: 1231, column: 52, scope: !8813)
!9192 = !DILocation(line: 1231, column: 41, scope: !8813)
!9193 = !DILocation(line: 1231, column: 13, scope: !8813)
!9194 = !DILocation(line: 1231, column: 22, scope: !8813)
!9195 = !DILocation(line: 1231, column: 32, scope: !8813)
!9196 = !DILocation(line: 1233, column: 17, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !8813, file: !750, line: 1233, column: 17)
!9198 = !DILocation(line: 1233, column: 27, scope: !9197)
!9199 = !DILocation(line: 1233, column: 43, scope: !9197)
!9200 = !DILocation(line: 1233, column: 17, scope: !8813)
!9201 = !DILocation(line: 1235, column: 17, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9197, file: !750, line: 1234, column: 13)
!9203 = !DILocation(line: 1235, column: 27, scope: !9202)
!9204 = !DILocation(line: 1235, column: 43, scope: !9202)
!9205 = !DILocation(line: 1235, column: 52, scope: !9202)
!9206 = !DILocation(line: 1235, column: 117, scope: !9202)
!9207 = !DILocation(line: 1235, column: 127, scope: !9202)
!9208 = !DILocation(line: 1236, column: 13, scope: !9202)
!9209 = !DILocation(line: 1237, column: 20, scope: !8813)
!9210 = !DILocation(line: 1238, column: 13, scope: !8813)
!9211 = !DILocation(line: 1241, column: 17, scope: !8813)
!9212 = !DILocation(line: 1244, column: 5, scope: !8759)
!9213 = !DILocalVariable(name: "clientP", scope: !9214, file: !750, line: 1248, type: !753)
!9214 = distinct !DILexicalBlock(scope: !8759, file: !750, line: 1247, column: 5)
!9215 = !DILocation(line: 1248, column: 26, scope: !9214)
!9216 = !DILocation(line: 1250, column: 14, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9214, file: !750, line: 1250, column: 13)
!9218 = !DILocation(line: 1250, column: 20, scope: !9217)
!9219 = !DILocation(line: 1250, column: 25, scope: !9217)
!9220 = !DILocation(line: 1250, column: 46, scope: !9217)
!9221 = !DILocation(line: 1250, column: 13, scope: !9214)
!9222 = !DILocation(line: 1250, column: 75, scope: !9217)
!9223 = !DILocation(line: 1252, column: 50, scope: !9214)
!9224 = !DILocation(line: 1252, column: 32, scope: !9214)
!9225 = !DILocation(line: 1252, column: 9, scope: !9214)
!9226 = !DILocation(line: 1252, column: 19, scope: !9214)
!9227 = !DILocation(line: 1252, column: 30, scope: !9214)
!9228 = !DILocation(line: 1253, column: 13, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9214, file: !750, line: 1253, column: 13)
!9230 = !DILocation(line: 1253, column: 21, scope: !9229)
!9231 = !DILocation(line: 1253, column: 13, scope: !9214)
!9232 = !DILocation(line: 1253, column: 30, scope: !9229)
!9233 = !DILocation(line: 1254, column: 13, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9214, file: !750, line: 1254, column: 13)
!9235 = !DILocation(line: 1254, column: 23, scope: !9234)
!9236 = !DILocation(line: 1254, column: 39, scope: !9234)
!9237 = !DILocation(line: 1254, column: 13, scope: !9214)
!9238 = !DILocation(line: 1256, column: 13, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9234, file: !750, line: 1255, column: 9)
!9240 = !DILocation(line: 1256, column: 23, scope: !9239)
!9241 = !DILocation(line: 1256, column: 39, scope: !9239)
!9242 = !DILocation(line: 1256, column: 48, scope: !9239)
!9243 = !DILocation(line: 1256, column: 113, scope: !9239)
!9244 = !DILocation(line: 1256, column: 123, scope: !9239)
!9245 = !DILocation(line: 1257, column: 9, scope: !9239)
!9246 = !DILocation(line: 1258, column: 33, scope: !9214)
!9247 = !DILocation(line: 1258, column: 9, scope: !9214)
!9248 = !DILocation(line: 1259, column: 16, scope: !9214)
!9249 = !DILocation(line: 1261, column: 5, scope: !8759)
!9250 = !DILocation(line: 1264, column: 9, scope: !8759)
!9251 = !DILocation(line: 1267, column: 12, scope: !8648)
!9252 = !DILocation(line: 1267, column: 5, scope: !8648)
!9253 = !DILocation(line: 1268, column: 1, scope: !8648)
!9254 = distinct !DISubprogram(name: "prv_getParameters", scope: !750, file: !750, line: 603, type: !9255, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{!58, !8700, !1213, !9257, !1213, !9258, !1213}
!9257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!9259 = !DILocalVariable(name: "query", arg: 1, scope: !9254, file: !750, line: 603, type: !8700)
!9260 = !DILocation(line: 603, column: 47, scope: !9254)
!9261 = !DILocalVariable(name: "nameP", arg: 2, scope: !9254, file: !750, line: 604, type: !1213)
!9262 = !DILocation(line: 604, column: 38, scope: !9254)
!9263 = !DILocalVariable(name: "lifetimeP", arg: 3, scope: !9254, file: !750, line: 605, type: !9257)
!9264 = !DILocation(line: 605, column: 41, scope: !9254)
!9265 = !DILocalVariable(name: "msisdnP", arg: 4, scope: !9254, file: !750, line: 606, type: !1213)
!9266 = !DILocation(line: 606, column: 38, scope: !9254)
!9267 = !DILocalVariable(name: "bindingP", arg: 5, scope: !9254, file: !750, line: 607, type: !9258)
!9268 = !DILocation(line: 607, column: 48, scope: !9254)
!9269 = !DILocalVariable(name: "versionP", arg: 6, scope: !9254, file: !750, line: 608, type: !1213)
!9270 = !DILocation(line: 608, column: 38, scope: !9254)
!9271 = !DILocation(line: 610, column: 6, scope: !9254)
!9272 = !DILocation(line: 610, column: 12, scope: !9254)
!9273 = !DILocation(line: 611, column: 6, scope: !9254)
!9274 = !DILocation(line: 611, column: 16, scope: !9254)
!9275 = !DILocation(line: 612, column: 6, scope: !9254)
!9276 = !DILocation(line: 612, column: 14, scope: !9254)
!9277 = !DILocation(line: 613, column: 6, scope: !9254)
!9278 = !DILocation(line: 613, column: 15, scope: !9254)
!9279 = !DILocation(line: 614, column: 6, scope: !9254)
!9280 = !DILocation(line: 614, column: 15, scope: !9254)
!9281 = !DILocation(line: 616, column: 5, scope: !9254)
!9282 = !DILocation(line: 616, column: 12, scope: !9254)
!9283 = !DILocation(line: 616, column: 18, scope: !9254)
!9284 = !DILocation(line: 618, column: 35, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !750, line: 618, column: 13)
!9286 = distinct !DILexicalBlock(scope: !9254, file: !750, line: 617, column: 5)
!9287 = !DILocation(line: 618, column: 42, scope: !9285)
!9288 = !DILocation(line: 618, column: 13, scope: !9285)
!9289 = !DILocation(line: 618, column: 76, scope: !9285)
!9290 = !DILocation(line: 618, column: 13, scope: !9286)
!9291 = !DILocation(line: 620, column: 18, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !750, line: 620, column: 17)
!9293 = distinct !DILexicalBlock(scope: !9285, file: !750, line: 619, column: 9)
!9294 = !DILocation(line: 620, column: 17, scope: !9292)
!9295 = !DILocation(line: 620, column: 24, scope: !9292)
!9296 = !DILocation(line: 620, column: 17, scope: !9293)
!9297 = !DILocation(line: 620, column: 33, scope: !9292)
!9298 = !DILocation(line: 621, column: 17, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9293, file: !750, line: 621, column: 17)
!9300 = !DILocation(line: 621, column: 24, scope: !9299)
!9301 = !DILocation(line: 621, column: 28, scope: !9299)
!9302 = !DILocation(line: 621, column: 17, scope: !9293)
!9303 = !DILocation(line: 621, column: 47, scope: !9299)
!9304 = !DILocation(line: 623, column: 43, scope: !9293)
!9305 = !DILocation(line: 623, column: 50, scope: !9293)
!9306 = !DILocation(line: 623, column: 54, scope: !9293)
!9307 = !DILocation(line: 623, column: 71, scope: !9293)
!9308 = !DILocation(line: 623, column: 30, scope: !9293)
!9309 = !DILocation(line: 623, column: 14, scope: !9293)
!9310 = !DILocation(line: 623, column: 20, scope: !9293)
!9311 = !DILocation(line: 624, column: 18, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9293, file: !750, line: 624, column: 17)
!9313 = !DILocation(line: 624, column: 17, scope: !9312)
!9314 = !DILocation(line: 624, column: 24, scope: !9312)
!9315 = !DILocation(line: 624, column: 17, scope: !9293)
!9316 = !DILocation(line: 626, column: 25, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !750, line: 625, column: 13)
!9318 = !DILocation(line: 626, column: 24, scope: !9317)
!9319 = !DILocation(line: 626, column: 32, scope: !9317)
!9320 = !DILocation(line: 626, column: 39, scope: !9317)
!9321 = !DILocation(line: 626, column: 44, scope: !9317)
!9322 = !DILocation(line: 626, column: 62, scope: !9317)
!9323 = !DILocation(line: 626, column: 69, scope: !9317)
!9324 = !DILocation(line: 626, column: 73, scope: !9317)
!9325 = !DILocation(line: 626, column: 17, scope: !9317)
!9326 = !DILocation(line: 627, column: 19, scope: !9317)
!9327 = !DILocation(line: 627, column: 18, scope: !9317)
!9328 = !DILocation(line: 627, column: 26, scope: !9317)
!9329 = !DILocation(line: 627, column: 33, scope: !9317)
!9330 = !DILocation(line: 627, column: 37, scope: !9317)
!9331 = !DILocation(line: 627, column: 17, scope: !9317)
!9332 = !DILocation(line: 627, column: 55, scope: !9317)
!9333 = !DILocation(line: 628, column: 13, scope: !9317)
!9334 = !DILocation(line: 629, column: 9, scope: !9293)
!9335 = !DILocation(line: 630, column: 40, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9285, file: !750, line: 630, column: 18)
!9337 = !DILocation(line: 630, column: 47, scope: !9336)
!9338 = !DILocation(line: 630, column: 18, scope: !9336)
!9339 = !DILocation(line: 630, column: 79, scope: !9336)
!9340 = !DILocation(line: 630, column: 18, scope: !9285)
!9341 = !DILocation(line: 632, column: 18, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9343, file: !750, line: 632, column: 17)
!9343 = distinct !DILexicalBlock(scope: !9336, file: !750, line: 631, column: 9)
!9344 = !DILocation(line: 632, column: 17, scope: !9342)
!9345 = !DILocation(line: 632, column: 26, scope: !9342)
!9346 = !DILocation(line: 632, column: 17, scope: !9343)
!9347 = !DILocation(line: 632, column: 35, scope: !9342)
!9348 = !DILocation(line: 633, column: 17, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9343, file: !750, line: 633, column: 17)
!9350 = !DILocation(line: 633, column: 24, scope: !9349)
!9351 = !DILocation(line: 633, column: 28, scope: !9349)
!9352 = !DILocation(line: 633, column: 17, scope: !9343)
!9353 = !DILocation(line: 633, column: 46, scope: !9349)
!9354 = !DILocation(line: 635, column: 45, scope: !9343)
!9355 = !DILocation(line: 635, column: 52, scope: !9343)
!9356 = !DILocation(line: 635, column: 56, scope: !9343)
!9357 = !DILocation(line: 635, column: 72, scope: !9343)
!9358 = !DILocation(line: 635, column: 32, scope: !9343)
!9359 = !DILocation(line: 635, column: 14, scope: !9343)
!9360 = !DILocation(line: 635, column: 22, scope: !9343)
!9361 = !DILocation(line: 636, column: 18, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9343, file: !750, line: 636, column: 17)
!9363 = !DILocation(line: 636, column: 17, scope: !9362)
!9364 = !DILocation(line: 636, column: 26, scope: !9362)
!9365 = !DILocation(line: 636, column: 17, scope: !9343)
!9366 = !DILocation(line: 638, column: 25, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9362, file: !750, line: 637, column: 13)
!9368 = !DILocation(line: 638, column: 24, scope: !9367)
!9369 = !DILocation(line: 638, column: 34, scope: !9367)
!9370 = !DILocation(line: 638, column: 41, scope: !9367)
!9371 = !DILocation(line: 638, column: 46, scope: !9367)
!9372 = !DILocation(line: 638, column: 63, scope: !9367)
!9373 = !DILocation(line: 638, column: 70, scope: !9367)
!9374 = !DILocation(line: 638, column: 74, scope: !9367)
!9375 = !DILocation(line: 638, column: 17, scope: !9367)
!9376 = !DILocation(line: 639, column: 19, scope: !9367)
!9377 = !DILocation(line: 639, column: 18, scope: !9367)
!9378 = !DILocation(line: 639, column: 28, scope: !9367)
!9379 = !DILocation(line: 639, column: 35, scope: !9367)
!9380 = !DILocation(line: 639, column: 39, scope: !9367)
!9381 = !DILocation(line: 639, column: 17, scope: !9367)
!9382 = !DILocation(line: 639, column: 56, scope: !9367)
!9383 = !DILocation(line: 640, column: 13, scope: !9367)
!9384 = !DILocation(line: 641, column: 9, scope: !9343)
!9385 = !DILocation(line: 642, column: 40, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9336, file: !750, line: 642, column: 18)
!9387 = !DILocation(line: 642, column: 47, scope: !9386)
!9388 = !DILocation(line: 642, column: 18, scope: !9386)
!9389 = !DILocation(line: 642, column: 89, scope: !9386)
!9390 = !DILocation(line: 642, column: 18, scope: !9336)
!9391 = !DILocalVariable(name: "i", scope: !9392, file: !750, line: 644, type: !58)
!9392 = distinct !DILexicalBlock(scope: !9386, file: !750, line: 643, column: 9)
!9393 = !DILocation(line: 644, column: 17, scope: !9392)
!9394 = !DILocation(line: 646, column: 18, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9392, file: !750, line: 646, column: 17)
!9396 = !DILocation(line: 646, column: 17, scope: !9395)
!9397 = !DILocation(line: 646, column: 28, scope: !9395)
!9398 = !DILocation(line: 646, column: 17, scope: !9392)
!9399 = !DILocation(line: 646, column: 34, scope: !9395)
!9400 = !DILocation(line: 647, column: 17, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9392, file: !750, line: 647, column: 17)
!9402 = !DILocation(line: 647, column: 24, scope: !9401)
!9403 = !DILocation(line: 647, column: 28, scope: !9401)
!9404 = !DILocation(line: 647, column: 17, scope: !9392)
!9405 = !DILocation(line: 647, column: 51, scope: !9401)
!9406 = !DILocation(line: 649, column: 20, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9392, file: !750, line: 649, column: 13)
!9408 = !DILocation(line: 649, column: 18, scope: !9407)
!9409 = !DILocation(line: 649, column: 43, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9407, file: !750, line: 649, column: 13)
!9411 = !DILocation(line: 649, column: 47, scope: !9410)
!9412 = !DILocation(line: 649, column: 54, scope: !9410)
!9413 = !DILocation(line: 649, column: 45, scope: !9410)
!9414 = !DILocation(line: 649, column: 13, scope: !9407)
!9415 = !DILocation(line: 651, column: 21, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9417, file: !750, line: 651, column: 21)
!9417 = distinct !DILexicalBlock(scope: !9410, file: !750, line: 650, column: 13)
!9418 = !DILocation(line: 651, column: 28, scope: !9416)
!9419 = !DILocation(line: 651, column: 33, scope: !9416)
!9420 = !DILocation(line: 651, column: 36, scope: !9416)
!9421 = !DILocation(line: 651, column: 42, scope: !9416)
!9422 = !DILocation(line: 651, column: 45, scope: !9416)
!9423 = !DILocation(line: 651, column: 52, scope: !9416)
!9424 = !DILocation(line: 651, column: 57, scope: !9416)
!9425 = !DILocation(line: 651, column: 60, scope: !9416)
!9426 = !DILocation(line: 651, column: 21, scope: !9417)
!9427 = !DILocation(line: 651, column: 67, scope: !9416)
!9428 = !DILocation(line: 652, column: 32, scope: !9417)
!9429 = !DILocation(line: 652, column: 31, scope: !9417)
!9430 = !DILocation(line: 652, column: 42, scope: !9417)
!9431 = !DILocation(line: 652, column: 51, scope: !9417)
!9432 = !DILocation(line: 652, column: 58, scope: !9417)
!9433 = !DILocation(line: 652, column: 63, scope: !9417)
!9434 = !DILocation(line: 652, column: 66, scope: !9417)
!9435 = !DILocation(line: 652, column: 48, scope: !9417)
!9436 = !DILocation(line: 652, column: 18, scope: !9417)
!9437 = !DILocation(line: 652, column: 28, scope: !9417)
!9438 = !DILocation(line: 653, column: 13, scope: !9417)
!9439 = !DILocation(line: 649, column: 61, scope: !9410)
!9440 = !DILocation(line: 649, column: 13, scope: !9410)
!9441 = distinct !{!9441, !9414, !9442}
!9442 = !DILocation(line: 653, column: 13, scope: !9407)
!9443 = !DILocation(line: 654, column: 9, scope: !9392)
!9444 = !DILocation(line: 655, column: 40, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9386, file: !750, line: 655, column: 18)
!9446 = !DILocation(line: 655, column: 47, scope: !9445)
!9447 = !DILocation(line: 655, column: 18, scope: !9445)
!9448 = !DILocation(line: 655, column: 87, scope: !9445)
!9449 = !DILocation(line: 655, column: 18, scope: !9386)
!9450 = !DILocation(line: 657, column: 18, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !750, line: 657, column: 17)
!9452 = distinct !DILexicalBlock(scope: !9445, file: !750, line: 656, column: 9)
!9453 = !DILocation(line: 657, column: 17, scope: !9451)
!9454 = !DILocation(line: 657, column: 27, scope: !9451)
!9455 = !DILocation(line: 657, column: 17, scope: !9452)
!9456 = !DILocation(line: 657, column: 36, scope: !9451)
!9457 = !DILocation(line: 658, column: 17, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9452, file: !750, line: 658, column: 17)
!9459 = !DILocation(line: 658, column: 24, scope: !9458)
!9460 = !DILocation(line: 658, column: 28, scope: !9458)
!9461 = !DILocation(line: 658, column: 17, scope: !9452)
!9462 = !DILocation(line: 658, column: 50, scope: !9458)
!9463 = !DILocation(line: 660, column: 46, scope: !9452)
!9464 = !DILocation(line: 660, column: 53, scope: !9452)
!9465 = !DILocation(line: 660, column: 57, scope: !9452)
!9466 = !DILocation(line: 660, column: 77, scope: !9452)
!9467 = !DILocation(line: 660, column: 33, scope: !9452)
!9468 = !DILocation(line: 660, column: 14, scope: !9452)
!9469 = !DILocation(line: 660, column: 23, scope: !9452)
!9470 = !DILocation(line: 661, column: 18, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9452, file: !750, line: 661, column: 17)
!9472 = !DILocation(line: 661, column: 17, scope: !9471)
!9473 = !DILocation(line: 661, column: 27, scope: !9471)
!9474 = !DILocation(line: 661, column: 17, scope: !9452)
!9475 = !DILocation(line: 663, column: 25, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9471, file: !750, line: 662, column: 13)
!9477 = !DILocation(line: 663, column: 24, scope: !9476)
!9478 = !DILocation(line: 663, column: 35, scope: !9476)
!9479 = !DILocation(line: 663, column: 42, scope: !9476)
!9480 = !DILocation(line: 663, column: 47, scope: !9476)
!9481 = !DILocation(line: 663, column: 68, scope: !9476)
!9482 = !DILocation(line: 663, column: 75, scope: !9476)
!9483 = !DILocation(line: 663, column: 79, scope: !9476)
!9484 = !DILocation(line: 663, column: 17, scope: !9476)
!9485 = !DILocation(line: 664, column: 19, scope: !9476)
!9486 = !DILocation(line: 664, column: 18, scope: !9476)
!9487 = !DILocation(line: 664, column: 29, scope: !9476)
!9488 = !DILocation(line: 664, column: 36, scope: !9476)
!9489 = !DILocation(line: 664, column: 40, scope: !9476)
!9490 = !DILocation(line: 664, column: 17, scope: !9476)
!9491 = !DILocation(line: 664, column: 61, scope: !9476)
!9492 = !DILocation(line: 665, column: 13, scope: !9476)
!9493 = !DILocation(line: 666, column: 9, scope: !9452)
!9494 = !DILocation(line: 667, column: 40, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9445, file: !750, line: 667, column: 18)
!9496 = !DILocation(line: 667, column: 47, scope: !9495)
!9497 = !DILocation(line: 667, column: 18, scope: !9495)
!9498 = !DILocation(line: 667, column: 87, scope: !9495)
!9499 = !DILocation(line: 667, column: 18, scope: !9445)
!9500 = !DILocation(line: 669, column: 18, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !750, line: 669, column: 17)
!9502 = distinct !DILexicalBlock(scope: !9495, file: !750, line: 668, column: 9)
!9503 = !DILocation(line: 669, column: 17, scope: !9501)
!9504 = !DILocation(line: 669, column: 27, scope: !9501)
!9505 = !DILocation(line: 669, column: 17, scope: !9502)
!9506 = !DILocation(line: 669, column: 47, scope: !9501)
!9507 = !DILocation(line: 670, column: 17, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9502, file: !750, line: 670, column: 17)
!9509 = !DILocation(line: 670, column: 24, scope: !9508)
!9510 = !DILocation(line: 670, column: 28, scope: !9508)
!9511 = !DILocation(line: 670, column: 17, scope: !9502)
!9512 = !DILocation(line: 670, column: 50, scope: !9508)
!9513 = !DILocation(line: 672, column: 47, scope: !9502)
!9514 = !DILocation(line: 672, column: 54, scope: !9502)
!9515 = !DILocation(line: 672, column: 59, scope: !9502)
!9516 = !DILocation(line: 672, column: 80, scope: !9502)
!9517 = !DILocation(line: 672, column: 87, scope: !9502)
!9518 = !DILocation(line: 672, column: 91, scope: !9502)
!9519 = !DILocation(line: 672, column: 25, scope: !9502)
!9520 = !DILocation(line: 672, column: 14, scope: !9502)
!9521 = !DILocation(line: 672, column: 23, scope: !9502)
!9522 = !DILocation(line: 673, column: 9, scope: !9502)
!9523 = !DILocation(line: 674, column: 17, scope: !9286)
!9524 = !DILocation(line: 674, column: 24, scope: !9286)
!9525 = !DILocation(line: 674, column: 15, scope: !9286)
!9526 = distinct !{!9526, !9281, !9527}
!9527 = !DILocation(line: 675, column: 5, scope: !9254)
!9528 = !DILocation(line: 677, column: 5, scope: !9254)
!9529 = !DILocation(line: 680, column: 10, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9254, file: !750, line: 680, column: 9)
!9531 = !DILocation(line: 680, column: 9, scope: !9530)
!9532 = !DILocation(line: 680, column: 16, scope: !9530)
!9533 = !DILocation(line: 680, column: 9, scope: !9254)
!9534 = !DILocation(line: 680, column: 37, scope: !9530)
!9535 = !DILocation(line: 680, column: 36, scope: !9530)
!9536 = !DILocation(line: 680, column: 25, scope: !9530)
!9537 = !DILocation(line: 681, column: 10, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9254, file: !750, line: 681, column: 9)
!9539 = !DILocation(line: 681, column: 9, scope: !9538)
!9540 = !DILocation(line: 681, column: 18, scope: !9538)
!9541 = !DILocation(line: 681, column: 9, scope: !9254)
!9542 = !DILocation(line: 681, column: 39, scope: !9538)
!9543 = !DILocation(line: 681, column: 38, scope: !9538)
!9544 = !DILocation(line: 681, column: 27, scope: !9538)
!9545 = !DILocation(line: 682, column: 10, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9254, file: !750, line: 682, column: 9)
!9547 = !DILocation(line: 682, column: 9, scope: !9546)
!9548 = !DILocation(line: 682, column: 19, scope: !9546)
!9549 = !DILocation(line: 682, column: 9, scope: !9254)
!9550 = !DILocation(line: 682, column: 40, scope: !9546)
!9551 = !DILocation(line: 682, column: 39, scope: !9546)
!9552 = !DILocation(line: 682, column: 28, scope: !9546)
!9553 = !DILocation(line: 684, column: 5, scope: !9254)
!9554 = !DILocation(line: 685, column: 1, scope: !9254)
!9555 = distinct !DISubprogram(name: "prv_decodeRegisterPayload", scope: !750, file: !750, line: 890, type: !9556, isLocal: true, isDefinition: true, scopeLine: 894, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{!769, !186, !79, !6432, !1213}
!9558 = !DILocalVariable(name: "payload", arg: 1, scope: !9555, file: !750, line: 890, type: !186)
!9559 = !DILocation(line: 890, column: 68, scope: !9555)
!9560 = !DILocalVariable(name: "payloadLength", arg: 2, scope: !9555, file: !750, line: 891, type: !79)
!9561 = !DILocation(line: 891, column: 67, scope: !9555)
!9562 = !DILocalVariable(name: "supportJSON", arg: 3, scope: !9555, file: !750, line: 892, type: !6432)
!9563 = !DILocation(line: 892, column: 65, scope: !9555)
!9564 = !DILocalVariable(name: "altPath", arg: 4, scope: !9555, file: !750, line: 893, type: !1213)
!9565 = !DILocation(line: 893, column: 66, scope: !9555)
!9566 = !DILocalVariable(name: "index", scope: !9555, file: !750, line: 895, type: !79)
!9567 = !DILocation(line: 895, column: 14, scope: !9555)
!9568 = !DILocalVariable(name: "objList", scope: !9555, file: !750, line: 896, type: !769)
!9569 = !DILocation(line: 896, column: 29, scope: !9555)
!9570 = !DILocalVariable(name: "linkAttrFound", scope: !9555, file: !750, line: 897, type: !136)
!9571 = !DILocation(line: 897, column: 10, scope: !9555)
!9572 = !DILocation(line: 899, column: 6, scope: !9555)
!9573 = !DILocation(line: 899, column: 14, scope: !9555)
!9574 = !DILocation(line: 900, column: 6, scope: !9555)
!9575 = !DILocation(line: 900, column: 18, scope: !9555)
!9576 = !DILocation(line: 901, column: 13, scope: !9555)
!9577 = !DILocation(line: 902, column: 19, scope: !9555)
!9578 = !DILocation(line: 903, column: 11, scope: !9555)
!9579 = !DILocation(line: 905, column: 5, scope: !9555)
!9580 = !DILocation(line: 905, column: 12, scope: !9555)
!9581 = !DILocation(line: 905, column: 21, scope: !9555)
!9582 = !DILocation(line: 905, column: 18, scope: !9555)
!9583 = !DILocalVariable(name: "start", scope: !9584, file: !750, line: 907, type: !79)
!9584 = distinct !DILexicalBlock(scope: !9555, file: !750, line: 906, column: 5)
!9585 = !DILocation(line: 907, column: 18, scope: !9584)
!9586 = !DILocalVariable(name: "length", scope: !9584, file: !750, line: 908, type: !79)
!9587 = !DILocation(line: 908, column: 18, scope: !9584)
!9588 = !DILocalVariable(name: "result", scope: !9584, file: !750, line: 909, type: !58)
!9589 = !DILocation(line: 909, column: 13, scope: !9584)
!9590 = !DILocalVariable(name: "id", scope: !9584, file: !750, line: 910, type: !79)
!9591 = !DILocation(line: 910, column: 18, scope: !9584)
!9592 = !DILocalVariable(name: "instance", scope: !9584, file: !750, line: 911, type: !79)
!9593 = !DILocation(line: 911, column: 18, scope: !9584)
!9594 = !DILocation(line: 913, column: 9, scope: !9584)
!9595 = !DILocation(line: 913, column: 16, scope: !9584)
!9596 = !DILocation(line: 913, column: 24, scope: !9584)
!9597 = !DILocation(line: 913, column: 22, scope: !9584)
!9598 = !DILocation(line: 913, column: 38, scope: !9584)
!9599 = !DILocation(line: 913, column: 41, scope: !9584)
!9600 = !DILocation(line: 913, column: 49, scope: !9584)
!9601 = !DILocation(line: 913, column: 56, scope: !9584)
!9602 = !DILocation(line: 913, column: 69, scope: !9584)
!9603 = distinct !{!9603, !9594, !9602}
!9604 = !DILocation(line: 914, column: 13, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9584, file: !750, line: 914, column: 13)
!9606 = !DILocation(line: 914, column: 22, scope: !9605)
!9607 = !DILocation(line: 914, column: 19, scope: !9605)
!9608 = !DILocation(line: 914, column: 13, scope: !9584)
!9609 = !DILocation(line: 914, column: 37, scope: !9605)
!9610 = !DILocation(line: 916, column: 17, scope: !9584)
!9611 = !DILocation(line: 916, column: 15, scope: !9584)
!9612 = !DILocation(line: 917, column: 9, scope: !9584)
!9613 = !DILocation(line: 917, column: 16, scope: !9584)
!9614 = !DILocation(line: 917, column: 24, scope: !9584)
!9615 = !DILocation(line: 917, column: 22, scope: !9584)
!9616 = !DILocation(line: 917, column: 38, scope: !9584)
!9617 = !DILocation(line: 917, column: 41, scope: !9584)
!9618 = !DILocation(line: 917, column: 49, scope: !9584)
!9619 = !DILocation(line: 917, column: 56, scope: !9584)
!9620 = !DILocation(line: 917, column: 79, scope: !9584)
!9621 = distinct !{!9621, !9612, !9620}
!9622 = !DILocation(line: 918, column: 18, scope: !9584)
!9623 = !DILocation(line: 918, column: 26, scope: !9584)
!9624 = !DILocation(line: 918, column: 24, scope: !9584)
!9625 = !DILocation(line: 918, column: 16, scope: !9584)
!9626 = !DILocation(line: 920, column: 28, scope: !9584)
!9627 = !DILocation(line: 920, column: 38, scope: !9584)
!9628 = !DILocation(line: 920, column: 36, scope: !9584)
!9629 = !DILocation(line: 920, column: 45, scope: !9584)
!9630 = !DILocation(line: 920, column: 18, scope: !9584)
!9631 = !DILocation(line: 920, column: 16, scope: !9584)
!9632 = !DILocation(line: 921, column: 13, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9584, file: !750, line: 921, column: 13)
!9634 = !DILocation(line: 921, column: 20, scope: !9633)
!9635 = !DILocation(line: 921, column: 13, scope: !9584)
!9636 = !DILocalVariable(name: "objectP", scope: !9637, file: !750, line: 923, type: !769)
!9637 = distinct !DILexicalBlock(scope: !9633, file: !750, line: 922, column: 9)
!9638 = !DILocation(line: 923, column: 37, scope: !9637)
!9639 = !DILocation(line: 925, column: 80, scope: !9637)
!9640 = !DILocation(line: 925, column: 64, scope: !9637)
!9641 = !DILocation(line: 925, column: 89, scope: !9637)
!9642 = !DILocation(line: 925, column: 48, scope: !9637)
!9643 = !DILocation(line: 925, column: 23, scope: !9637)
!9644 = !DILocation(line: 925, column: 21, scope: !9637)
!9645 = !DILocation(line: 926, column: 17, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9637, file: !750, line: 926, column: 17)
!9647 = !DILocation(line: 926, column: 25, scope: !9646)
!9648 = !DILocation(line: 926, column: 17, scope: !9637)
!9649 = !DILocation(line: 928, column: 52, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9646, file: !750, line: 927, column: 13)
!9651 = !DILocation(line: 928, column: 27, scope: !9650)
!9652 = !DILocation(line: 928, column: 25, scope: !9650)
!9653 = !DILocation(line: 929, column: 24, scope: !9650)
!9654 = !DILocation(line: 929, column: 17, scope: !9650)
!9655 = !DILocation(line: 930, column: 21, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9650, file: !750, line: 930, column: 21)
!9657 = !DILocation(line: 930, column: 29, scope: !9656)
!9658 = !DILocation(line: 930, column: 21, scope: !9650)
!9659 = !DILocation(line: 930, column: 38, scope: !9656)
!9660 = !DILocation(line: 931, column: 31, scope: !9650)
!9661 = !DILocation(line: 931, column: 17, scope: !9650)
!9662 = !DILocation(line: 931, column: 26, scope: !9650)
!9663 = !DILocation(line: 931, column: 29, scope: !9650)
!9664 = !DILocation(line: 932, column: 52, scope: !9650)
!9665 = !DILocation(line: 932, column: 27, scope: !9650)
!9666 = !DILocation(line: 932, column: 25, scope: !9650)
!9667 = !DILocation(line: 933, column: 13, scope: !9650)
!9668 = !DILocation(line: 934, column: 17, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9637, file: !750, line: 934, column: 17)
!9670 = !DILocation(line: 934, column: 24, scope: !9669)
!9671 = !DILocation(line: 934, column: 17, scope: !9637)
!9672 = !DILocalVariable(name: "instanceP", scope: !9673, file: !750, line: 936, type: !777)
!9673 = distinct !DILexicalBlock(scope: !9669, file: !750, line: 935, column: 13)
!9674 = !DILocation(line: 936, column: 32, scope: !9673)
!9675 = !DILocation(line: 938, column: 45, scope: !9673)
!9676 = !DILocation(line: 938, column: 54, scope: !9673)
!9677 = !DILocation(line: 938, column: 68, scope: !9673)
!9678 = !DILocation(line: 938, column: 29, scope: !9673)
!9679 = !DILocation(line: 938, column: 27, scope: !9673)
!9680 = !DILocation(line: 939, column: 21, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9673, file: !750, line: 939, column: 21)
!9682 = !DILocation(line: 939, column: 31, scope: !9681)
!9683 = !DILocation(line: 939, column: 21, scope: !9673)
!9684 = !DILocation(line: 941, column: 49, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9681, file: !750, line: 940, column: 17)
!9686 = !DILocation(line: 941, column: 33, scope: !9685)
!9687 = !DILocation(line: 941, column: 31, scope: !9685)
!9688 = !DILocation(line: 942, column: 28, scope: !9685)
!9689 = !DILocation(line: 942, column: 21, scope: !9685)
!9690 = !DILocation(line: 943, column: 37, scope: !9685)
!9691 = !DILocation(line: 943, column: 21, scope: !9685)
!9692 = !DILocation(line: 943, column: 32, scope: !9685)
!9693 = !DILocation(line: 943, column: 35, scope: !9685)
!9694 = !DILocation(line: 944, column: 45, scope: !9685)
!9695 = !DILocation(line: 944, column: 21, scope: !9685)
!9696 = !DILocation(line: 944, column: 30, scope: !9685)
!9697 = !DILocation(line: 944, column: 43, scope: !9685)
!9698 = !DILocation(line: 945, column: 17, scope: !9685)
!9699 = !DILocation(line: 946, column: 13, scope: !9673)
!9700 = !DILocation(line: 947, column: 9, scope: !9637)
!9701 = !DILocation(line: 948, column: 18, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9633, file: !750, line: 948, column: 18)
!9703 = !DILocation(line: 948, column: 32, scope: !9702)
!9704 = !DILocation(line: 948, column: 18, scope: !9633)
!9705 = !DILocation(line: 950, column: 46, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9702, file: !750, line: 949, column: 9)
!9707 = !DILocation(line: 950, column: 56, scope: !9706)
!9708 = !DILocation(line: 950, column: 54, scope: !9706)
!9709 = !DILocation(line: 950, column: 63, scope: !9706)
!9710 = !DILocation(line: 950, column: 71, scope: !9706)
!9711 = !DILocation(line: 950, column: 84, scope: !9706)
!9712 = !DILocation(line: 950, column: 22, scope: !9706)
!9713 = !DILocation(line: 950, column: 20, scope: !9706)
!9714 = !DILocation(line: 951, column: 17, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9706, file: !750, line: 951, column: 17)
!9716 = !DILocation(line: 951, column: 24, scope: !9715)
!9717 = !DILocation(line: 951, column: 17, scope: !9706)
!9718 = !DILocation(line: 951, column: 30, scope: !9715)
!9719 = !DILocation(line: 953, column: 27, scope: !9706)
!9720 = !DILocation(line: 954, column: 9, scope: !9706)
!9721 = !DILocation(line: 955, column: 14, scope: !9702)
!9722 = !DILocation(line: 957, column: 14, scope: !9584)
!9723 = distinct !{!9723, !9579, !9724}
!9724 = !DILocation(line: 958, column: 5, scope: !9555)
!9725 = !DILocation(line: 960, column: 12, scope: !9555)
!9726 = !DILocation(line: 960, column: 5, scope: !9555)
!9727 = !DILocation(line: 963, column: 10, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9555, file: !750, line: 963, column: 9)
!9729 = !DILocation(line: 963, column: 9, scope: !9728)
!9730 = !DILocation(line: 963, column: 18, scope: !9728)
!9731 = !DILocation(line: 963, column: 9, scope: !9555)
!9732 = !DILocation(line: 965, column: 21, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9728, file: !750, line: 964, column: 5)
!9734 = !DILocation(line: 965, column: 20, scope: !9733)
!9735 = !DILocation(line: 965, column: 9, scope: !9733)
!9736 = !DILocation(line: 966, column: 10, scope: !9733)
!9737 = !DILocation(line: 966, column: 18, scope: !9733)
!9738 = !DILocation(line: 967, column: 5, scope: !9733)
!9739 = !DILocation(line: 968, column: 30, scope: !9555)
!9740 = !DILocation(line: 968, column: 5, scope: !9555)
!9741 = !DILocation(line: 970, column: 5, scope: !9555)
!9742 = !DILocation(line: 971, column: 1, scope: !9555)
!9743 = distinct !DISubprogram(name: "prv_getClientByName", scope: !750, file: !750, line: 973, type: !9744, isLocal: true, isDefinition: true, scopeLine: 975, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!753, !8651, !117}
!9746 = !DILocalVariable(name: "contextP", arg: 1, scope: !9743, file: !750, line: 973, type: !8651)
!9747 = !DILocation(line: 973, column: 63, scope: !9743)
!9748 = !DILocalVariable(name: "name", arg: 2, scope: !9743, file: !750, line: 974, type: !117)
!9749 = !DILocation(line: 974, column: 52, scope: !9743)
!9750 = !DILocalVariable(name: "targetP", scope: !9743, file: !750, line: 976, type: !753)
!9751 = !DILocation(line: 976, column: 22, scope: !9743)
!9752 = !DILocation(line: 978, column: 15, scope: !9743)
!9753 = !DILocation(line: 978, column: 25, scope: !9743)
!9754 = !DILocation(line: 978, column: 13, scope: !9743)
!9755 = !DILocation(line: 979, column: 5, scope: !9743)
!9756 = !DILocation(line: 979, column: 12, scope: !9743)
!9757 = !DILocation(line: 979, column: 20, scope: !9743)
!9758 = !DILocation(line: 979, column: 28, scope: !9743)
!9759 = !DILocation(line: 979, column: 38, scope: !9743)
!9760 = !DILocation(line: 979, column: 44, scope: !9743)
!9761 = !DILocation(line: 979, column: 53, scope: !9743)
!9762 = !DILocation(line: 979, column: 31, scope: !9743)
!9763 = !DILocation(line: 979, column: 59, scope: !9743)
!9764 = !DILocation(line: 981, column: 19, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9743, file: !750, line: 980, column: 5)
!9766 = !DILocation(line: 981, column: 28, scope: !9765)
!9767 = !DILocation(line: 981, column: 17, scope: !9765)
!9768 = distinct !{!9768, !9755, !9769}
!9769 = !DILocation(line: 982, column: 5, scope: !9743)
!9770 = !DILocation(line: 984, column: 12, scope: !9743)
!9771 = !DILocation(line: 984, column: 5, scope: !9743)
!9772 = distinct !DISubprogram(name: "prv_getLocationString", scope: !750, file: !750, line: 1005, type: !9773, isLocal: true, isDefinition: true, scopeLine: 1007, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!9773 = !DISubroutineType(types: !9774)
!9774 = !{!58, !79, !117}
!9775 = !DILocalVariable(name: "id", arg: 1, scope: !9772, file: !750, line: 1005, type: !79)
!9776 = !DILocation(line: 1005, column: 43, scope: !9772)
!9777 = !DILocalVariable(name: "location", arg: 2, scope: !9772, file: !750, line: 1006, type: !117)
!9778 = !DILocation(line: 1006, column: 39, scope: !9772)
!9779 = !DILocalVariable(name: "index", scope: !9772, file: !750, line: 1008, type: !58)
!9780 = !DILocation(line: 1008, column: 9, scope: !9772)
!9781 = !DILocalVariable(name: "result", scope: !9772, file: !750, line: 1009, type: !58)
!9782 = !DILocation(line: 1009, column: 9, scope: !9772)
!9783 = !DILocation(line: 1011, column: 12, scope: !9772)
!9784 = !DILocation(line: 1011, column: 5, scope: !9772)
!9785 = !DILocation(line: 1013, column: 31, scope: !9772)
!9786 = !DILocation(line: 1013, column: 14, scope: !9772)
!9787 = !DILocation(line: 1013, column: 12, scope: !9772)
!9788 = !DILocation(line: 1014, column: 9, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9772, file: !750, line: 1014, column: 9)
!9790 = !DILocation(line: 1014, column: 16, scope: !9789)
!9791 = !DILocation(line: 1014, column: 9, scope: !9772)
!9792 = !DILocation(line: 1014, column: 21, scope: !9789)
!9793 = !DILocation(line: 1015, column: 13, scope: !9772)
!9794 = !DILocation(line: 1015, column: 11, scope: !9772)
!9795 = !DILocation(line: 1017, column: 30, scope: !9772)
!9796 = !DILocation(line: 1017, column: 44, scope: !9772)
!9797 = !DILocation(line: 1017, column: 55, scope: !9772)
!9798 = !DILocation(line: 1017, column: 53, scope: !9772)
!9799 = !DILocation(line: 1017, column: 84, scope: !9772)
!9800 = !DILocation(line: 1017, column: 82, scope: !9772)
!9801 = !DILocation(line: 1017, column: 62, scope: !9772)
!9802 = !DILocation(line: 1017, column: 14, scope: !9772)
!9803 = !DILocation(line: 1017, column: 12, scope: !9772)
!9804 = !DILocation(line: 1018, column: 9, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9772, file: !750, line: 1018, column: 9)
!9806 = !DILocation(line: 1018, column: 16, scope: !9805)
!9807 = !DILocation(line: 1018, column: 9, scope: !9772)
!9808 = !DILocation(line: 1018, column: 22, scope: !9805)
!9809 = !DILocation(line: 1020, column: 12, scope: !9772)
!9810 = !DILocation(line: 1020, column: 20, scope: !9772)
!9811 = !DILocation(line: 1020, column: 18, scope: !9772)
!9812 = !DILocation(line: 1020, column: 5, scope: !9772)
!9813 = !DILocation(line: 1021, column: 1, scope: !9772)
!9814 = distinct !DISubprogram(name: "prv_getId", scope: !750, file: !750, line: 830, type: !9815, isLocal: true, isDefinition: true, scopeLine: 834, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{!58, !186, !79, !2846, !2846}
!9817 = !DILocalVariable(name: "data", arg: 1, scope: !9814, file: !750, line: 830, type: !186)
!9818 = !DILocation(line: 830, column: 32, scope: !9814)
!9819 = !DILocalVariable(name: "length", arg: 2, scope: !9814, file: !750, line: 831, type: !79)
!9820 = !DILocation(line: 831, column: 31, scope: !9814)
!9821 = !DILocalVariable(name: "objId", arg: 3, scope: !9814, file: !750, line: 832, type: !2846)
!9822 = !DILocation(line: 832, column: 33, scope: !9814)
!9823 = !DILocalVariable(name: "instanceId", arg: 4, scope: !9814, file: !750, line: 833, type: !2846)
!9824 = !DILocation(line: 833, column: 33, scope: !9814)
!9825 = !DILocalVariable(name: "value", scope: !9814, file: !750, line: 835, type: !58)
!9826 = !DILocation(line: 835, column: 9, scope: !9814)
!9827 = !DILocalVariable(name: "limit", scope: !9814, file: !750, line: 836, type: !79)
!9828 = !DILocation(line: 836, column: 14, scope: !9814)
!9829 = !DILocation(line: 840, column: 5, scope: !9814)
!9830 = !DILocation(line: 840, column: 12, scope: !9814)
!9831 = !DILocation(line: 840, column: 19, scope: !9814)
!9832 = !DILocation(line: 840, column: 23, scope: !9814)
!9833 = !DILocation(line: 840, column: 26, scope: !9814)
!9834 = !DILocation(line: 840, column: 31, scope: !9814)
!9835 = !DILocation(line: 840, column: 37, scope: !9814)
!9836 = !DILocation(line: 840, column: 41, scope: !9814)
!9837 = !DILocation(line: 840, column: 55, scope: !9814)
!9838 = distinct !{!9838, !9829, !9837}
!9839 = !DILocation(line: 843, column: 9, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9814, file: !750, line: 843, column: 9)
!9841 = !DILocation(line: 843, column: 16, scope: !9840)
!9842 = !DILocation(line: 843, column: 21, scope: !9840)
!9843 = !DILocation(line: 843, column: 24, scope: !9840)
!9844 = !DILocation(line: 843, column: 32, scope: !9840)
!9845 = !DILocation(line: 843, column: 49, scope: !9840)
!9846 = !DILocation(line: 843, column: 52, scope: !9840)
!9847 = !DILocation(line: 843, column: 57, scope: !9840)
!9848 = !DILocation(line: 843, column: 63, scope: !9840)
!9849 = !DILocation(line: 843, column: 67, scope: !9840)
!9850 = !DILocation(line: 843, column: 9, scope: !9814)
!9851 = !DILocation(line: 845, column: 14, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9840, file: !750, line: 844, column: 5)
!9853 = !DILocation(line: 846, column: 16, scope: !9852)
!9854 = !DILocation(line: 847, column: 5, scope: !9852)
!9855 = !DILocation(line: 850, column: 9, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9840, file: !750, line: 849, column: 5)
!9857 = !DILocation(line: 854, column: 9, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9814, file: !750, line: 854, column: 9)
!9859 = !DILocation(line: 854, column: 16, scope: !9858)
!9860 = !DILocation(line: 854, column: 21, scope: !9858)
!9861 = !DILocation(line: 854, column: 24, scope: !9858)
!9862 = !DILocation(line: 854, column: 32, scope: !9858)
!9863 = !DILocation(line: 854, column: 9, scope: !9814)
!9864 = !DILocation(line: 856, column: 14, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9858, file: !750, line: 855, column: 5)
!9866 = !DILocation(line: 857, column: 16, scope: !9865)
!9867 = !DILocation(line: 858, column: 5, scope: !9865)
!9868 = !DILocation(line: 860, column: 11, scope: !9814)
!9869 = !DILocation(line: 861, column: 5, scope: !9814)
!9870 = !DILocation(line: 861, column: 12, scope: !9814)
!9871 = !DILocation(line: 861, column: 20, scope: !9814)
!9872 = !DILocation(line: 861, column: 18, scope: !9814)
!9873 = !DILocation(line: 861, column: 27, scope: !9814)
!9874 = !DILocation(line: 861, column: 30, scope: !9814)
!9875 = !DILocation(line: 861, column: 35, scope: !9814)
!9876 = !DILocation(line: 861, column: 42, scope: !9814)
!9877 = !DILocation(line: 861, column: 55, scope: !9814)
!9878 = distinct !{!9878, !9869, !9877}
!9879 = !DILocation(line: 862, column: 27, scope: !9814)
!9880 = !DILocation(line: 862, column: 33, scope: !9814)
!9881 = !DILocation(line: 862, column: 13, scope: !9814)
!9882 = !DILocation(line: 862, column: 11, scope: !9814)
!9883 = !DILocation(line: 863, column: 9, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9814, file: !750, line: 863, column: 9)
!9885 = !DILocation(line: 863, column: 15, scope: !9884)
!9886 = !DILocation(line: 863, column: 19, scope: !9884)
!9887 = !DILocation(line: 863, column: 22, scope: !9884)
!9888 = !DILocation(line: 863, column: 28, scope: !9884)
!9889 = !DILocation(line: 863, column: 9, scope: !9814)
!9890 = !DILocation(line: 863, column: 45, scope: !9884)
!9891 = !DILocation(line: 864, column: 14, scope: !9814)
!9892 = !DILocation(line: 864, column: 6, scope: !9814)
!9893 = !DILocation(line: 864, column: 12, scope: !9814)
!9894 = !DILocation(line: 866, column: 9, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9814, file: !750, line: 866, column: 9)
!9896 = !DILocation(line: 866, column: 17, scope: !9895)
!9897 = !DILocation(line: 866, column: 15, scope: !9895)
!9898 = !DILocation(line: 866, column: 9, scope: !9814)
!9899 = !DILocation(line: 868, column: 15, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9895, file: !750, line: 867, column: 5)
!9901 = !DILocation(line: 869, column: 17, scope: !9900)
!9902 = !DILocation(line: 869, column: 14, scope: !9900)
!9903 = !DILocation(line: 870, column: 19, scope: !9900)
!9904 = !DILocation(line: 870, column: 16, scope: !9900)
!9905 = !DILocation(line: 872, column: 13, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9900, file: !750, line: 872, column: 13)
!9907 = !DILocation(line: 872, column: 20, scope: !9906)
!9908 = !DILocation(line: 872, column: 13, scope: !9900)
!9909 = !DILocation(line: 874, column: 35, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9906, file: !750, line: 873, column: 9)
!9911 = !DILocation(line: 874, column: 41, scope: !9910)
!9912 = !DILocation(line: 874, column: 21, scope: !9910)
!9913 = !DILocation(line: 874, column: 19, scope: !9910)
!9914 = !DILocation(line: 875, column: 17, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9910, file: !750, line: 875, column: 17)
!9916 = !DILocation(line: 875, column: 23, scope: !9915)
!9917 = !DILocation(line: 875, column: 28, scope: !9915)
!9918 = !DILocation(line: 875, column: 31, scope: !9915)
!9919 = !DILocation(line: 875, column: 37, scope: !9915)
!9920 = !DILocation(line: 875, column: 17, scope: !9910)
!9921 = !DILocation(line: 877, column: 31, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9915, file: !750, line: 876, column: 13)
!9923 = !DILocation(line: 877, column: 18, scope: !9922)
!9924 = !DILocation(line: 877, column: 29, scope: !9922)
!9925 = !DILocation(line: 878, column: 17, scope: !9922)
!9926 = !DILocation(line: 882, column: 17, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9915, file: !750, line: 881, column: 13)
!9928 = !DILocation(line: 885, column: 5, scope: !9900)
!9929 = !DILocation(line: 887, column: 5, scope: !9814)
!9930 = !DILocation(line: 888, column: 1, scope: !9814)
!9931 = distinct !DISubprogram(name: "prv_parseLinkAttributes", scope: !750, file: !750, line: 732, type: !9932, isLocal: true, isDefinition: true, scopeLine: 736, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!9932 = !DISubroutineType(types: !9933)
!9933 = !{!58, !186, !79, !6432, !1213}
!9934 = !DILocalVariable(name: "data", arg: 1, scope: !9931, file: !750, line: 732, type: !186)
!9935 = !DILocation(line: 732, column: 46, scope: !9931)
!9936 = !DILocalVariable(name: "length", arg: 2, scope: !9931, file: !750, line: 733, type: !79)
!9937 = !DILocation(line: 733, column: 45, scope: !9931)
!9938 = !DILocalVariable(name: "supportJSON", arg: 3, scope: !9931, file: !750, line: 734, type: !6432)
!9939 = !DILocation(line: 734, column: 43, scope: !9931)
!9940 = !DILocalVariable(name: "altPath", arg: 4, scope: !9931, file: !750, line: 735, type: !1213)
!9941 = !DILocation(line: 735, column: 44, scope: !9931)
!9942 = !DILocalVariable(name: "index", scope: !9931, file: !750, line: 737, type: !79)
!9943 = !DILocation(line: 737, column: 14, scope: !9931)
!9944 = !DILocalVariable(name: "pathStart", scope: !9931, file: !750, line: 738, type: !79)
!9945 = !DILocation(line: 738, column: 14, scope: !9931)
!9946 = !DILocalVariable(name: "pathLength", scope: !9931, file: !750, line: 739, type: !79)
!9947 = !DILocation(line: 739, column: 14, scope: !9931)
!9948 = !DILocalVariable(name: "isValid", scope: !9931, file: !750, line: 740, type: !136)
!9949 = !DILocation(line: 740, column: 10, scope: !9931)
!9950 = !DILocation(line: 742, column: 13, scope: !9931)
!9951 = !DILocation(line: 746, column: 5, scope: !9931)
!9952 = !DILocation(line: 746, column: 12, scope: !9931)
!9953 = !DILocation(line: 746, column: 19, scope: !9931)
!9954 = !DILocation(line: 746, column: 23, scope: !9931)
!9955 = !DILocation(line: 746, column: 26, scope: !9931)
!9956 = !DILocation(line: 746, column: 31, scope: !9931)
!9957 = !DILocation(line: 746, column: 37, scope: !9931)
!9958 = !DILocation(line: 746, column: 41, scope: !9931)
!9959 = !DILocation(line: 746, column: 55, scope: !9931)
!9960 = distinct !{!9960, !9951, !9959}
!9961 = !DILocation(line: 749, column: 9, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 749, column: 9)
!9963 = !DILocation(line: 749, column: 16, scope: !9962)
!9964 = !DILocation(line: 749, column: 21, scope: !9962)
!9965 = !DILocation(line: 749, column: 24, scope: !9962)
!9966 = !DILocation(line: 749, column: 32, scope: !9962)
!9967 = !DILocation(line: 749, column: 9, scope: !9931)
!9968 = !DILocation(line: 751, column: 14, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9962, file: !750, line: 750, column: 5)
!9970 = !DILocation(line: 752, column: 16, scope: !9969)
!9971 = !DILocation(line: 753, column: 5, scope: !9969)
!9972 = !DILocation(line: 756, column: 9, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9962, file: !750, line: 755, column: 5)
!9974 = !DILocation(line: 759, column: 15, scope: !9931)
!9975 = !DILocation(line: 760, column: 13, scope: !9931)
!9976 = !DILocation(line: 760, column: 20, scope: !9931)
!9977 = !DILocation(line: 760, column: 11, scope: !9931)
!9978 = !DILocation(line: 761, column: 5, scope: !9931)
!9979 = !DILocation(line: 761, column: 12, scope: !9931)
!9980 = !DILocation(line: 761, column: 18, scope: !9931)
!9981 = !DILocation(line: 761, column: 22, scope: !9931)
!9982 = !DILocation(line: 761, column: 25, scope: !9931)
!9983 = !DILocation(line: 761, column: 30, scope: !9931)
!9984 = !DILocation(line: 761, column: 37, scope: !9931)
!9985 = !DILocation(line: 761, column: 58, scope: !9931)
!9986 = distinct !{!9986, !9978, !9985}
!9987 = !DILocation(line: 763, column: 9, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 763, column: 9)
!9989 = !DILocation(line: 763, column: 15, scope: !9988)
!9990 = !DILocation(line: 763, column: 20, scope: !9988)
!9991 = !DILocation(line: 763, column: 23, scope: !9988)
!9992 = !DILocation(line: 763, column: 32, scope: !9988)
!9993 = !DILocation(line: 763, column: 39, scope: !9988)
!9994 = !DILocation(line: 763, column: 29, scope: !9988)
!9995 = !DILocation(line: 763, column: 9, scope: !9931)
!9996 = !DILocation(line: 763, column: 44, scope: !9988)
!9997 = !DILocation(line: 766, column: 9, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 766, column: 9)
!9999 = !DILocation(line: 766, column: 14, scope: !9998)
!10000 = !DILocation(line: 766, column: 25, scope: !9998)
!10001 = !DILocation(line: 766, column: 9, scope: !9931)
!10002 = !DILocation(line: 768, column: 19, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9998, file: !750, line: 767, column: 5)
!10004 = !DILocation(line: 769, column: 5, scope: !10003)
!10005 = !DILocation(line: 770, column: 18, scope: !9931)
!10006 = !DILocation(line: 770, column: 26, scope: !9931)
!10007 = !DILocation(line: 770, column: 24, scope: !9931)
!10008 = !DILocation(line: 770, column: 16, scope: !9931)
!10009 = !DILocation(line: 772, column: 10, scope: !9931)
!10010 = !DILocation(line: 773, column: 9, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 773, column: 9)
!10012 = !DILocation(line: 773, column: 18, scope: !10011)
!10013 = !DILocation(line: 773, column: 15, scope: !10011)
!10014 = !DILocation(line: 773, column: 25, scope: !10011)
!10015 = !DILocation(line: 773, column: 28, scope: !10011)
!10016 = !DILocation(line: 773, column: 33, scope: !10011)
!10017 = !DILocation(line: 773, column: 40, scope: !10011)
!10018 = !DILocation(line: 773, column: 9, scope: !9931)
!10019 = !DILocation(line: 773, column: 63, scope: !10011)
!10020 = !DILocation(line: 774, column: 10, scope: !9931)
!10021 = !DILocation(line: 776, column: 5, scope: !9931)
!10022 = !DILocation(line: 776, column: 12, scope: !9931)
!10023 = !DILocation(line: 776, column: 20, scope: !9931)
!10024 = !DILocation(line: 776, column: 18, scope: !9931)
!10025 = !DILocalVariable(name: "result", scope: !10026, file: !750, line: 778, type: !79)
!10026 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 777, column: 5)
!10027 = !DILocation(line: 778, column: 18, scope: !10026)
!10028 = !DILocalVariable(name: "keyStart", scope: !10026, file: !750, line: 779, type: !79)
!10029 = !DILocation(line: 779, column: 18, scope: !10026)
!10030 = !DILocalVariable(name: "keyLength", scope: !10026, file: !750, line: 780, type: !79)
!10031 = !DILocation(line: 780, column: 18, scope: !10026)
!10032 = !DILocalVariable(name: "valueStart", scope: !10026, file: !750, line: 781, type: !79)
!10033 = !DILocation(line: 781, column: 18, scope: !10026)
!10034 = !DILocalVariable(name: "valueLength", scope: !10026, file: !750, line: 782, type: !79)
!10035 = !DILocation(line: 782, column: 18, scope: !10026)
!10036 = !DILocation(line: 784, column: 41, scope: !10026)
!10037 = !DILocation(line: 784, column: 48, scope: !10026)
!10038 = !DILocation(line: 784, column: 46, scope: !10026)
!10039 = !DILocation(line: 784, column: 55, scope: !10026)
!10040 = !DILocation(line: 784, column: 64, scope: !10026)
!10041 = !DILocation(line: 784, column: 62, scope: !10026)
!10042 = !DILocation(line: 784, column: 18, scope: !10026)
!10043 = !DILocation(line: 784, column: 16, scope: !10026)
!10044 = !DILocation(line: 785, column: 13, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10026, file: !750, line: 785, column: 13)
!10046 = !DILocation(line: 785, column: 20, scope: !10045)
!10047 = !DILocation(line: 785, column: 13, scope: !10026)
!10048 = !DILocation(line: 785, column: 26, scope: !10045)
!10049 = !DILocation(line: 787, column: 13, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10026, file: !750, line: 787, column: 13)
!10051 = !DILocation(line: 787, column: 23, scope: !10050)
!10052 = !DILocation(line: 788, column: 10, scope: !10050)
!10053 = !DILocation(line: 788, column: 58, scope: !10050)
!10054 = !DILocation(line: 788, column: 65, scope: !10050)
!10055 = !DILocation(line: 788, column: 63, scope: !10050)
!10056 = !DILocation(line: 788, column: 73, scope: !10050)
!10057 = !DILocation(line: 788, column: 71, scope: !10050)
!10058 = !DILocation(line: 788, column: 83, scope: !10050)
!10059 = !DILocation(line: 788, column: 18, scope: !10050)
!10060 = !DILocation(line: 788, column: 15, scope: !10050)
!10061 = !DILocation(line: 787, column: 13, scope: !10026)
!10062 = !DILocation(line: 790, column: 17, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10064, file: !750, line: 790, column: 17)
!10064 = distinct !DILexicalBlock(scope: !10050, file: !750, line: 789, column: 9)
!10065 = !DILocation(line: 790, column: 25, scope: !10063)
!10066 = !DILocation(line: 790, column: 17, scope: !10064)
!10067 = !DILocation(line: 790, column: 34, scope: !10063)
!10068 = !DILocation(line: 791, column: 17, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10064, file: !750, line: 791, column: 17)
!10070 = !DILocation(line: 791, column: 29, scope: !10069)
!10071 = !DILocation(line: 792, column: 14, scope: !10069)
!10072 = !DILocation(line: 792, column: 64, scope: !10069)
!10073 = !DILocation(line: 792, column: 71, scope: !10069)
!10074 = !DILocation(line: 792, column: 69, scope: !10069)
!10075 = !DILocation(line: 792, column: 79, scope: !10069)
!10076 = !DILocation(line: 792, column: 77, scope: !10069)
!10077 = !DILocation(line: 792, column: 91, scope: !10069)
!10078 = !DILocation(line: 792, column: 22, scope: !10069)
!10079 = !DILocation(line: 792, column: 19, scope: !10069)
!10080 = !DILocation(line: 791, column: 17, scope: !10064)
!10081 = !DILocation(line: 794, column: 17, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10069, file: !750, line: 793, column: 13)
!10083 = !DILocation(line: 796, column: 21, scope: !10064)
!10084 = !DILocation(line: 797, column: 9, scope: !10064)
!10085 = !DILocation(line: 798, column: 18, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10050, file: !750, line: 798, column: 18)
!10087 = !DILocation(line: 798, column: 28, scope: !10086)
!10088 = !DILocation(line: 799, column: 15, scope: !10086)
!10089 = !DILocation(line: 799, column: 66, scope: !10086)
!10090 = !DILocation(line: 799, column: 73, scope: !10086)
!10091 = !DILocation(line: 799, column: 71, scope: !10086)
!10092 = !DILocation(line: 799, column: 81, scope: !10086)
!10093 = !DILocation(line: 799, column: 79, scope: !10086)
!10094 = !DILocation(line: 799, column: 91, scope: !10086)
!10095 = !DILocation(line: 799, column: 23, scope: !10086)
!10096 = !DILocation(line: 799, column: 20, scope: !10086)
!10097 = !DILocation(line: 798, column: 18, scope: !10050)
!10098 = !DILocation(line: 801, column: 18, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10100, file: !750, line: 801, column: 17)
!10100 = distinct !DILexicalBlock(scope: !10086, file: !750, line: 800, column: 9)
!10101 = !DILocation(line: 801, column: 17, scope: !10099)
!10102 = !DILocation(line: 801, column: 30, scope: !10099)
!10103 = !DILocation(line: 801, column: 17, scope: !10100)
!10104 = !DILocation(line: 801, column: 39, scope: !10099)
!10105 = !DILocation(line: 802, column: 17, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10100, file: !750, line: 802, column: 17)
!10107 = !DILocation(line: 802, column: 29, scope: !10106)
!10108 = !DILocation(line: 803, column: 14, scope: !10106)
!10109 = !DILocation(line: 803, column: 66, scope: !10106)
!10110 = !DILocation(line: 803, column: 73, scope: !10106)
!10111 = !DILocation(line: 803, column: 71, scope: !10106)
!10112 = !DILocation(line: 803, column: 81, scope: !10106)
!10113 = !DILocation(line: 803, column: 79, scope: !10106)
!10114 = !DILocation(line: 803, column: 93, scope: !10106)
!10115 = !DILocation(line: 803, column: 22, scope: !10106)
!10116 = !DILocation(line: 803, column: 19, scope: !10106)
!10117 = !DILocation(line: 802, column: 17, scope: !10100)
!10118 = !DILocation(line: 805, column: 18, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10106, file: !750, line: 804, column: 13)
!10120 = !DILocation(line: 805, column: 30, scope: !10119)
!10121 = !DILocation(line: 806, column: 13, scope: !10119)
!10122 = !DILocation(line: 809, column: 17, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10106, file: !750, line: 808, column: 13)
!10124 = !DILocation(line: 811, column: 9, scope: !10100)
!10125 = !DILocation(line: 814, column: 18, scope: !10026)
!10126 = !DILocation(line: 814, column: 15, scope: !10026)
!10127 = distinct !{!10127, !10021, !10128}
!10128 = !DILocation(line: 815, column: 5, scope: !9931)
!10129 = !DILocation(line: 817, column: 9, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 817, column: 9)
!10131 = !DILocation(line: 817, column: 17, scope: !10130)
!10132 = !DILocation(line: 817, column: 9, scope: !9931)
!10133 = !DILocation(line: 817, column: 27, scope: !10130)
!10134 = !DILocation(line: 819, column: 9, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !9931, file: !750, line: 819, column: 9)
!10136 = !DILocation(line: 819, column: 20, scope: !10135)
!10137 = !DILocation(line: 819, column: 9, scope: !9931)
!10138 = !DILocation(line: 821, column: 41, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10135, file: !750, line: 820, column: 5)
!10140 = !DILocation(line: 821, column: 52, scope: !10139)
!10141 = !DILocation(line: 821, column: 28, scope: !10139)
!10142 = !DILocation(line: 821, column: 10, scope: !10139)
!10143 = !DILocation(line: 821, column: 18, scope: !10139)
!10144 = !DILocation(line: 822, column: 14, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10139, file: !750, line: 822, column: 13)
!10146 = !DILocation(line: 822, column: 13, scope: !10145)
!10147 = !DILocation(line: 822, column: 22, scope: !10145)
!10148 = !DILocation(line: 822, column: 13, scope: !10139)
!10149 = !DILocation(line: 822, column: 31, scope: !10145)
!10150 = !DILocation(line: 823, column: 17, scope: !10139)
!10151 = !DILocation(line: 823, column: 16, scope: !10139)
!10152 = !DILocation(line: 823, column: 26, scope: !10139)
!10153 = !DILocation(line: 823, column: 33, scope: !10139)
!10154 = !DILocation(line: 823, column: 31, scope: !10139)
!10155 = !DILocation(line: 823, column: 44, scope: !10139)
!10156 = !DILocation(line: 823, column: 9, scope: !10139)
!10157 = !DILocation(line: 824, column: 11, scope: !10139)
!10158 = !DILocation(line: 824, column: 10, scope: !10139)
!10159 = !DILocation(line: 824, column: 20, scope: !10139)
!10160 = !DILocation(line: 824, column: 9, scope: !10139)
!10161 = !DILocation(line: 824, column: 32, scope: !10139)
!10162 = !DILocation(line: 825, column: 5, scope: !10139)
!10163 = !DILocation(line: 827, column: 5, scope: !9931)
!10164 = !DILocation(line: 828, column: 1, scope: !9931)
!10165 = distinct !DISubprogram(name: "prv_splitLinkAttribute", scope: !750, file: !750, line: 687, type: !10166, isLocal: true, isDefinition: true, scopeLine: 693, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!79, !186, !79, !2846, !2846, !2846, !2846}
!10168 = !DILocalVariable(name: "data", arg: 1, scope: !10165, file: !750, line: 687, type: !186)
!10169 = !DILocation(line: 687, column: 50, scope: !10165)
!10170 = !DILocalVariable(name: "length", arg: 2, scope: !10165, file: !750, line: 688, type: !79)
!10171 = !DILocation(line: 688, column: 49, scope: !10165)
!10172 = !DILocalVariable(name: "keyStart", arg: 3, scope: !10165, file: !750, line: 689, type: !2846)
!10173 = !DILocation(line: 689, column: 51, scope: !10165)
!10174 = !DILocalVariable(name: "keyLength", arg: 4, scope: !10165, file: !750, line: 690, type: !2846)
!10175 = !DILocation(line: 690, column: 51, scope: !10165)
!10176 = !DILocalVariable(name: "valueStart", arg: 5, scope: !10165, file: !750, line: 691, type: !2846)
!10177 = !DILocation(line: 691, column: 51, scope: !10165)
!10178 = !DILocalVariable(name: "valueLength", arg: 6, scope: !10165, file: !750, line: 692, type: !2846)
!10179 = !DILocation(line: 692, column: 51, scope: !10165)
!10180 = !DILocalVariable(name: "index", scope: !10165, file: !750, line: 694, type: !79)
!10181 = !DILocation(line: 694, column: 14, scope: !10165)
!10182 = !DILocalVariable(name: "end", scope: !10165, file: !750, line: 695, type: !79)
!10183 = !DILocation(line: 695, column: 14, scope: !10165)
!10184 = !DILocation(line: 697, column: 11, scope: !10165)
!10185 = !DILocation(line: 698, column: 5, scope: !10165)
!10186 = !DILocation(line: 698, column: 12, scope: !10165)
!10187 = !DILocation(line: 698, column: 20, scope: !10165)
!10188 = !DILocation(line: 698, column: 18, scope: !10165)
!10189 = !DILocation(line: 698, column: 27, scope: !10165)
!10190 = !DILocation(line: 698, column: 30, scope: !10165)
!10191 = !DILocation(line: 698, column: 35, scope: !10165)
!10192 = !DILocation(line: 698, column: 42, scope: !10165)
!10193 = !DILocation(line: 698, column: 55, scope: !10165)
!10194 = distinct !{!10194, !10185, !10193}
!10195 = !DILocation(line: 699, column: 9, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10165, file: !750, line: 699, column: 9)
!10197 = !DILocation(line: 699, column: 18, scope: !10196)
!10198 = !DILocation(line: 699, column: 15, scope: !10196)
!10199 = !DILocation(line: 699, column: 9, scope: !10165)
!10200 = !DILocation(line: 699, column: 26, scope: !10196)
!10201 = !DILocation(line: 701, column: 9, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10165, file: !750, line: 701, column: 9)
!10203 = !DILocation(line: 701, column: 14, scope: !10202)
!10204 = !DILocation(line: 701, column: 21, scope: !10202)
!10205 = !DILocation(line: 701, column: 9, scope: !10165)
!10206 = !DILocation(line: 703, column: 14, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10202, file: !750, line: 702, column: 5)
!10208 = !DILocation(line: 704, column: 5, scope: !10207)
!10209 = !DILocation(line: 705, column: 9, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10165, file: !750, line: 705, column: 9)
!10211 = !DILocation(line: 705, column: 18, scope: !10210)
!10212 = !DILocation(line: 705, column: 15, scope: !10210)
!10213 = !DILocation(line: 705, column: 9, scope: !10165)
!10214 = !DILocation(line: 705, column: 26, scope: !10210)
!10215 = !DILocation(line: 707, column: 17, scope: !10165)
!10216 = !DILocation(line: 707, column: 6, scope: !10165)
!10217 = !DILocation(line: 707, column: 15, scope: !10165)
!10218 = !DILocation(line: 709, column: 5, scope: !10165)
!10219 = !DILocation(line: 709, column: 12, scope: !10165)
!10220 = !DILocation(line: 709, column: 20, scope: !10165)
!10221 = !DILocation(line: 709, column: 18, scope: !10165)
!10222 = !DILocation(line: 709, column: 27, scope: !10165)
!10223 = !DILocation(line: 709, column: 30, scope: !10165)
!10224 = !DILocation(line: 709, column: 35, scope: !10165)
!10225 = !DILocation(line: 709, column: 42, scope: !10165)
!10226 = !DILocation(line: 709, column: 67, scope: !10165)
!10227 = distinct !{!10227, !10218, !10226}
!10228 = !DILocation(line: 710, column: 9, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10165, file: !750, line: 710, column: 9)
!10230 = !DILocation(line: 710, column: 19, scope: !10229)
!10231 = !DILocation(line: 710, column: 18, scope: !10229)
!10232 = !DILocation(line: 710, column: 15, scope: !10229)
!10233 = !DILocation(line: 710, column: 28, scope: !10229)
!10234 = !DILocation(line: 710, column: 31, scope: !10229)
!10235 = !DILocation(line: 710, column: 40, scope: !10229)
!10236 = !DILocation(line: 710, column: 37, scope: !10229)
!10237 = !DILocation(line: 710, column: 9, scope: !10165)
!10238 = !DILocation(line: 710, column: 48, scope: !10229)
!10239 = !DILocation(line: 712, column: 18, scope: !10165)
!10240 = !DILocation(line: 712, column: 27, scope: !10165)
!10241 = !DILocation(line: 712, column: 26, scope: !10165)
!10242 = !DILocation(line: 712, column: 24, scope: !10165)
!10243 = !DILocation(line: 712, column: 6, scope: !10165)
!10244 = !DILocation(line: 712, column: 16, scope: !10165)
!10245 = !DILocation(line: 714, column: 10, scope: !10165)
!10246 = !DILocation(line: 715, column: 5, scope: !10165)
!10247 = !DILocation(line: 715, column: 12, scope: !10165)
!10248 = !DILocation(line: 715, column: 20, scope: !10165)
!10249 = !DILocation(line: 715, column: 18, scope: !10165)
!10250 = !DILocation(line: 715, column: 27, scope: !10165)
!10251 = !DILocation(line: 715, column: 30, scope: !10165)
!10252 = !DILocation(line: 715, column: 35, scope: !10165)
!10253 = !DILocation(line: 715, column: 42, scope: !10165)
!10254 = !DILocation(line: 715, column: 55, scope: !10165)
!10255 = distinct !{!10255, !10246, !10254}
!10256 = !DILocation(line: 716, column: 9, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10165, file: !750, line: 716, column: 9)
!10258 = !DILocation(line: 716, column: 18, scope: !10257)
!10259 = !DILocation(line: 716, column: 15, scope: !10257)
!10260 = !DILocation(line: 716, column: 9, scope: !10165)
!10261 = !DILocation(line: 716, column: 26, scope: !10257)
!10262 = !DILocation(line: 718, column: 19, scope: !10165)
!10263 = !DILocation(line: 718, column: 6, scope: !10165)
!10264 = !DILocation(line: 718, column: 17, scope: !10165)
!10265 = !DILocation(line: 720, column: 5, scope: !10165)
!10266 = !DILocation(line: 720, column: 12, scope: !10165)
!10267 = !DILocation(line: 720, column: 20, scope: !10165)
!10268 = !DILocation(line: 720, column: 18, scope: !10165)
!10269 = !DILocation(line: 720, column: 27, scope: !10165)
!10270 = !DILocation(line: 720, column: 30, scope: !10165)
!10271 = !DILocation(line: 720, column: 35, scope: !10165)
!10272 = !DILocation(line: 720, column: 42, scope: !10165)
!10273 = !DILocation(line: 720, column: 70, scope: !10165)
!10274 = distinct !{!10274, !10265, !10273}
!10275 = !DILocation(line: 721, column: 11, scope: !10165)
!10276 = !DILocation(line: 721, column: 9, scope: !10165)
!10277 = !DILocation(line: 723, column: 10, scope: !10165)
!10278 = !DILocation(line: 724, column: 5, scope: !10165)
!10279 = !DILocation(line: 724, column: 12, scope: !10165)
!10280 = !DILocation(line: 724, column: 21, scope: !10165)
!10281 = !DILocation(line: 724, column: 20, scope: !10165)
!10282 = !DILocation(line: 724, column: 18, scope: !10165)
!10283 = !DILocation(line: 724, column: 32, scope: !10165)
!10284 = !DILocation(line: 724, column: 35, scope: !10165)
!10285 = !DILocation(line: 724, column: 40, scope: !10165)
!10286 = !DILocation(line: 724, column: 47, scope: !10165)
!10287 = !DILocation(line: 724, column: 60, scope: !10165)
!10288 = distinct !{!10288, !10278, !10287}
!10289 = !DILocation(line: 725, column: 9, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10165, file: !750, line: 725, column: 9)
!10291 = !DILocation(line: 725, column: 19, scope: !10290)
!10292 = !DILocation(line: 725, column: 18, scope: !10290)
!10293 = !DILocation(line: 725, column: 15, scope: !10290)
!10294 = !DILocation(line: 725, column: 9, scope: !10165)
!10295 = !DILocation(line: 725, column: 31, scope: !10290)
!10296 = !DILocation(line: 727, column: 20, scope: !10165)
!10297 = !DILocation(line: 727, column: 29, scope: !10165)
!10298 = !DILocation(line: 727, column: 28, scope: !10165)
!10299 = !DILocation(line: 727, column: 26, scope: !10165)
!10300 = !DILocation(line: 727, column: 40, scope: !10165)
!10301 = !DILocation(line: 727, column: 6, scope: !10165)
!10302 = !DILocation(line: 727, column: 18, scope: !10165)
!10303 = !DILocation(line: 729, column: 12, scope: !10165)
!10304 = !DILocation(line: 729, column: 5, scope: !10165)
!10305 = !DILocation(line: 730, column: 1, scope: !10165)
!10306 = distinct !DISubprogram(name: "lwm2m_set_monitoring_callback", scope: !750, file: !750, line: 1270, type: !10307, isLocal: false, isDefinition: true, scopeLine: 1273, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{null, !8651, !803, !54}
!10309 = !DILocalVariable(name: "contextP", arg: 1, scope: !10306, file: !750, line: 1270, type: !8651)
!10310 = !DILocation(line: 1270, column: 54, scope: !10306)
!10311 = !DILocalVariable(name: "callback", arg: 2, scope: !10306, file: !750, line: 1271, type: !803)
!10312 = !DILocation(line: 1271, column: 60, scope: !10306)
!10313 = !DILocalVariable(name: "userData", arg: 3, scope: !10306, file: !750, line: 1272, type: !54)
!10314 = !DILocation(line: 1272, column: 43, scope: !10306)
!10315 = !DILocation(line: 1275, column: 33, scope: !10306)
!10316 = !DILocation(line: 1275, column: 5, scope: !10306)
!10317 = !DILocation(line: 1275, column: 15, scope: !10306)
!10318 = !DILocation(line: 1275, column: 31, scope: !10306)
!10319 = !DILocation(line: 1276, column: 33, scope: !10306)
!10320 = !DILocation(line: 1276, column: 5, scope: !10306)
!10321 = !DILocation(line: 1276, column: 15, scope: !10306)
!10322 = !DILocation(line: 1276, column: 31, scope: !10306)
!10323 = !DILocation(line: 1277, column: 1, scope: !10306)
!10324 = distinct !DISubprogram(name: "registration_step", scope: !750, file: !750, line: 1282, type: !10325, isLocal: false, isDefinition: true, scopeLine: 1285, flags: DIFlagPrototyped, isOptimized: false, unit: !749, variables: !488)
!10325 = !DISubroutineType(types: !10326)
!10326 = !{null, !8651, !139, !3089}
!10327 = !DILocalVariable(name: "contextP", arg: 1, scope: !10324, file: !750, line: 1282, type: !8651)
!10328 = !DILocation(line: 1282, column: 42, scope: !10324)
!10329 = !DILocalVariable(name: "currentTime", arg: 2, scope: !10324, file: !750, line: 1283, type: !139)
!10330 = !DILocation(line: 1283, column: 31, scope: !10324)
!10331 = !DILocalVariable(name: "timeoutP", arg: 3, scope: !10324, file: !750, line: 1284, type: !3089)
!10332 = !DILocation(line: 1284, column: 33, scope: !10324)
!10333 = !DILocalVariable(name: "clientP", scope: !10324, file: !750, line: 1348, type: !753)
!10334 = !DILocation(line: 1348, column: 22, scope: !10324)
!10335 = !DILocation(line: 1352, column: 15, scope: !10324)
!10336 = !DILocation(line: 1352, column: 25, scope: !10324)
!10337 = !DILocation(line: 1352, column: 13, scope: !10324)
!10338 = !DILocation(line: 1353, column: 5, scope: !10324)
!10339 = !DILocation(line: 1353, column: 12, scope: !10324)
!10340 = !DILocation(line: 1353, column: 20, scope: !10324)
!10341 = !DILocalVariable(name: "nextP", scope: !10342, file: !750, line: 1355, type: !753)
!10342 = distinct !DILexicalBlock(scope: !10324, file: !750, line: 1354, column: 5)
!10343 = !DILocation(line: 1355, column: 26, scope: !10342)
!10344 = !DILocation(line: 1355, column: 34, scope: !10342)
!10345 = !DILocation(line: 1355, column: 43, scope: !10342)
!10346 = !DILocation(line: 1357, column: 13, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !750, line: 1357, column: 13)
!10348 = !DILocation(line: 1357, column: 22, scope: !10347)
!10349 = !DILocation(line: 1357, column: 35, scope: !10347)
!10350 = !DILocation(line: 1357, column: 32, scope: !10347)
!10351 = !DILocation(line: 1357, column: 13, scope: !10342)
!10352 = !DILocation(line: 1359, column: 54, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10347, file: !750, line: 1358, column: 9)
!10354 = !DILocation(line: 1359, column: 36, scope: !10353)
!10355 = !DILocation(line: 1359, column: 13, scope: !10353)
!10356 = !DILocation(line: 1359, column: 23, scope: !10353)
!10357 = !DILocation(line: 1359, column: 34, scope: !10353)
!10358 = !DILocation(line: 1360, column: 17, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10353, file: !750, line: 1360, column: 17)
!10360 = !DILocation(line: 1360, column: 27, scope: !10359)
!10361 = !DILocation(line: 1360, column: 43, scope: !10359)
!10362 = !DILocation(line: 1360, column: 17, scope: !10353)
!10363 = !DILocation(line: 1362, column: 17, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10359, file: !750, line: 1361, column: 13)
!10365 = !DILocation(line: 1362, column: 27, scope: !10364)
!10366 = !DILocation(line: 1362, column: 43, scope: !10364)
!10367 = !DILocation(line: 1362, column: 52, scope: !10364)
!10368 = !DILocation(line: 1362, column: 117, scope: !10364)
!10369 = !DILocation(line: 1362, column: 127, scope: !10364)
!10370 = !DILocation(line: 1363, column: 13, scope: !10364)
!10371 = !DILocation(line: 1364, column: 37, scope: !10353)
!10372 = !DILocation(line: 1364, column: 13, scope: !10353)
!10373 = !DILocation(line: 1365, column: 9, scope: !10353)
!10374 = !DILocalVariable(name: "interval", scope: !10375, file: !750, line: 1368, type: !139)
!10375 = distinct !DILexicalBlock(scope: !10347, file: !750, line: 1367, column: 9)
!10376 = !DILocation(line: 1368, column: 20, scope: !10375)
!10377 = !DILocation(line: 1370, column: 24, scope: !10375)
!10378 = !DILocation(line: 1370, column: 33, scope: !10375)
!10379 = !DILocation(line: 1370, column: 45, scope: !10375)
!10380 = !DILocation(line: 1370, column: 43, scope: !10375)
!10381 = !DILocation(line: 1370, column: 22, scope: !10375)
!10382 = !DILocation(line: 1372, column: 18, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10375, file: !750, line: 1372, column: 17)
!10384 = !DILocation(line: 1372, column: 17, scope: !10383)
!10385 = !DILocation(line: 1372, column: 29, scope: !10383)
!10386 = !DILocation(line: 1372, column: 27, scope: !10383)
!10387 = !DILocation(line: 1372, column: 17, scope: !10375)
!10388 = !DILocation(line: 1374, column: 29, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10383, file: !750, line: 1373, column: 13)
!10390 = !DILocation(line: 1374, column: 18, scope: !10389)
!10391 = !DILocation(line: 1374, column: 27, scope: !10389)
!10392 = !DILocation(line: 1375, column: 13, scope: !10389)
!10393 = !DILocation(line: 1377, column: 19, scope: !10342)
!10394 = !DILocation(line: 1377, column: 17, scope: !10342)
!10395 = distinct !{!10395, !10338, !10396}
!10396 = !DILocation(line: 1378, column: 5, scope: !10324)
!10397 = !DILocation(line: 1381, column: 1, scope: !10324)
!10398 = distinct !DISubprogram(name: "lwm2m_dm_read", scope: !813, file: !813, line: 473, type: !10399, isLocal: false, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10399 = !DISubroutineType(types: !10400)
!10400 = !{!58, !10401, !79, !870, !866, !54}
!10401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10402, size: 64)
!10402 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !10403)
!10403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !10404)
!10404 = !{!10405, !10406, !10407, !10408, !10409, !10410}
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !10403, file: !6, line: 659, baseType: !816, size: 64)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !10403, file: !6, line: 660, baseType: !866, size: 64, offset: 64)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !10403, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !10403, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !10403, file: !6, line: 668, baseType: !932, size: 64, offset: 256)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !10403, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!10411 = !DILocalVariable(name: "contextP", arg: 1, scope: !10398, file: !813, line: 473, type: !10401)
!10412 = !DILocation(line: 473, column: 37, scope: !10398)
!10413 = !DILocalVariable(name: "clientID", arg: 2, scope: !10398, file: !813, line: 474, type: !79)
!10414 = !DILocation(line: 474, column: 28, scope: !10398)
!10415 = !DILocalVariable(name: "uriP", arg: 3, scope: !10398, file: !813, line: 475, type: !870)
!10416 = !DILocation(line: 475, column: 33, scope: !10398)
!10417 = !DILocalVariable(name: "callback", arg: 4, scope: !10398, file: !813, line: 476, type: !866)
!10418 = !DILocation(line: 476, column: 43, scope: !10398)
!10419 = !DILocalVariable(name: "userData", arg: 5, scope: !10398, file: !813, line: 477, type: !54)
!10420 = !DILocation(line: 477, column: 26, scope: !10398)
!10421 = !DILocalVariable(name: "clientP", scope: !10398, file: !813, line: 479, type: !816)
!10422 = !DILocation(line: 479, column: 22, scope: !10398)
!10423 = !DILocalVariable(name: "format", scope: !10398, file: !813, line: 480, type: !185)
!10424 = !DILocation(line: 480, column: 24, scope: !10398)
!10425 = !DILocation(line: 485, column: 65, scope: !10398)
!10426 = !DILocation(line: 485, column: 75, scope: !10398)
!10427 = !DILocation(line: 485, column: 49, scope: !10398)
!10428 = !DILocation(line: 485, column: 87, scope: !10398)
!10429 = !DILocation(line: 485, column: 33, scope: !10398)
!10430 = !DILocation(line: 485, column: 15, scope: !10398)
!10431 = !DILocation(line: 485, column: 13, scope: !10398)
!10432 = !DILocation(line: 486, column: 9, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10398, file: !813, line: 486, column: 9)
!10434 = !DILocation(line: 486, column: 17, scope: !10433)
!10435 = !DILocation(line: 486, column: 9, scope: !10398)
!10436 = !DILocation(line: 486, column: 26, scope: !10433)
!10437 = !DILocation(line: 488, column: 9, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10398, file: !813, line: 488, column: 9)
!10439 = !DILocation(line: 488, column: 18, scope: !10438)
!10440 = !DILocation(line: 488, column: 30, scope: !10438)
!10441 = !DILocation(line: 488, column: 9, scope: !10398)
!10442 = !DILocation(line: 490, column: 16, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10438, file: !813, line: 489, column: 5)
!10444 = !DILocation(line: 491, column: 5, scope: !10443)
!10445 = !DILocation(line: 494, column: 16, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10438, file: !813, line: 493, column: 5)
!10447 = !DILocation(line: 497, column: 30, scope: !10398)
!10448 = !DILocation(line: 497, column: 40, scope: !10398)
!10449 = !DILocation(line: 497, column: 50, scope: !10398)
!10450 = !DILocation(line: 499, column: 30, scope: !10398)
!10451 = !DILocation(line: 501, column: 30, scope: !10398)
!10452 = !DILocation(line: 501, column: 40, scope: !10398)
!10453 = !DILocation(line: 497, column: 12, scope: !10398)
!10454 = !DILocation(line: 497, column: 5, scope: !10398)
!10455 = !DILocation(line: 502, column: 1, scope: !10398)
!10456 = distinct !DISubprogram(name: "prv_makeOperation", scope: !813, file: !813, line: 420, type: !10457, isLocal: true, isDefinition: true, scopeLine: 429, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{!58, !10401, !79, !870, !7726, !185, !186, !58, !866, !54}
!10459 = !DILocalVariable(name: "contextP", arg: 1, scope: !10456, file: !813, line: 420, type: !10401)
!10460 = !DILocation(line: 420, column: 48, scope: !10456)
!10461 = !DILocalVariable(name: "clientID", arg: 2, scope: !10456, file: !813, line: 421, type: !79)
!10462 = !DILocation(line: 421, column: 39, scope: !10456)
!10463 = !DILocalVariable(name: "uriP", arg: 3, scope: !10456, file: !813, line: 422, type: !870)
!10464 = !DILocation(line: 422, column: 44, scope: !10456)
!10465 = !DILocalVariable(name: "method", arg: 4, scope: !10456, file: !813, line: 423, type: !7726)
!10466 = !DILocation(line: 423, column: 44, scope: !10456)
!10467 = !DILocalVariable(name: "format", arg: 5, scope: !10456, file: !813, line: 424, type: !185)
!10468 = !DILocation(line: 424, column: 49, scope: !10456)
!10469 = !DILocalVariable(name: "buffer", arg: 6, scope: !10456, file: !813, line: 425, type: !186)
!10470 = !DILocation(line: 425, column: 40, scope: !10456)
!10471 = !DILocalVariable(name: "length", arg: 7, scope: !10456, file: !813, line: 426, type: !58)
!10472 = !DILocation(line: 426, column: 34, scope: !10456)
!10473 = !DILocalVariable(name: "callback", arg: 8, scope: !10456, file: !813, line: 427, type: !866)
!10474 = !DILocation(line: 427, column: 54, scope: !10456)
!10475 = !DILocalVariable(name: "userData", arg: 9, scope: !10456, file: !813, line: 428, type: !54)
!10476 = !DILocation(line: 428, column: 37, scope: !10456)
!10477 = !DILocalVariable(name: "clientP", scope: !10456, file: !813, line: 430, type: !816)
!10478 = !DILocation(line: 430, column: 22, scope: !10456)
!10479 = !DILocalVariable(name: "transaction", scope: !10456, file: !813, line: 431, type: !932)
!10480 = !DILocation(line: 431, column: 27, scope: !10456)
!10481 = !DILocalVariable(name: "dataP", scope: !10456, file: !813, line: 432, type: !872)
!10482 = !DILocation(line: 432, column: 17, scope: !10456)
!10483 = !DILocation(line: 434, column: 65, scope: !10456)
!10484 = !DILocation(line: 434, column: 75, scope: !10456)
!10485 = !DILocation(line: 434, column: 49, scope: !10456)
!10486 = !DILocation(line: 434, column: 87, scope: !10456)
!10487 = !DILocation(line: 434, column: 33, scope: !10456)
!10488 = !DILocation(line: 434, column: 15, scope: !10456)
!10489 = !DILocation(line: 434, column: 13, scope: !10456)
!10490 = !DILocation(line: 435, column: 9, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10456, file: !813, line: 435, column: 9)
!10492 = !DILocation(line: 435, column: 17, scope: !10491)
!10493 = !DILocation(line: 435, column: 9, scope: !10456)
!10494 = !DILocation(line: 435, column: 26, scope: !10491)
!10495 = !DILocation(line: 437, column: 35, scope: !10456)
!10496 = !DILocation(line: 437, column: 44, scope: !10456)
!10497 = !DILocation(line: 437, column: 54, scope: !10456)
!10498 = !DILocation(line: 437, column: 62, scope: !10456)
!10499 = !DILocation(line: 437, column: 71, scope: !10456)
!10500 = !DILocation(line: 437, column: 80, scope: !10456)
!10501 = !DILocation(line: 437, column: 86, scope: !10456)
!10502 = !DILocation(line: 437, column: 96, scope: !10456)
!10503 = !DILocation(line: 437, column: 103, scope: !10456)
!10504 = !DILocation(line: 437, column: 19, scope: !10456)
!10505 = !DILocation(line: 437, column: 17, scope: !10456)
!10506 = !DILocation(line: 438, column: 9, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10456, file: !813, line: 438, column: 9)
!10508 = !DILocation(line: 438, column: 21, scope: !10507)
!10509 = !DILocation(line: 438, column: 9, scope: !10456)
!10510 = !DILocation(line: 438, column: 30, scope: !10507)
!10511 = !DILocation(line: 440, column: 9, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10456, file: !813, line: 440, column: 9)
!10513 = !DILocation(line: 440, column: 16, scope: !10512)
!10514 = !DILocation(line: 440, column: 9, scope: !10456)
!10515 = !DILocation(line: 442, column: 32, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10512, file: !813, line: 441, column: 5)
!10517 = !DILocation(line: 442, column: 45, scope: !10516)
!10518 = !DILocation(line: 442, column: 54, scope: !10516)
!10519 = !DILocation(line: 442, column: 9, scope: !10516)
!10520 = !DILocation(line: 443, column: 5, scope: !10516)
!10521 = !DILocation(line: 444, column: 14, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10512, file: !813, line: 444, column: 14)
!10523 = !DILocation(line: 444, column: 21, scope: !10522)
!10524 = !DILocation(line: 444, column: 14, scope: !10512)
!10525 = !DILocation(line: 446, column: 38, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10522, file: !813, line: 445, column: 5)
!10527 = !DILocation(line: 446, column: 51, scope: !10526)
!10528 = !DILocation(line: 446, column: 60, scope: !10526)
!10529 = !DILocation(line: 446, column: 9, scope: !10526)
!10530 = !DILocation(line: 448, column: 26, scope: !10526)
!10531 = !DILocation(line: 448, column: 39, scope: !10526)
!10532 = !DILocation(line: 448, column: 48, scope: !10526)
!10533 = !DILocation(line: 448, column: 56, scope: !10526)
!10534 = !DILocation(line: 448, column: 9, scope: !10526)
!10535 = !DILocation(line: 449, column: 5, scope: !10526)
!10536 = !DILocation(line: 451, column: 9, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10456, file: !813, line: 451, column: 9)
!10538 = !DILocation(line: 451, column: 18, scope: !10537)
!10539 = !DILocation(line: 451, column: 9, scope: !10456)
!10540 = !DILocation(line: 453, column: 30, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10537, file: !813, line: 452, column: 5)
!10542 = !DILocation(line: 453, column: 17, scope: !10541)
!10543 = !DILocation(line: 453, column: 15, scope: !10541)
!10544 = !DILocation(line: 454, column: 13, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !813, line: 454, column: 13)
!10546 = !DILocation(line: 454, column: 19, scope: !10545)
!10547 = !DILocation(line: 454, column: 13, scope: !10541)
!10548 = !DILocation(line: 456, column: 30, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10545, file: !813, line: 455, column: 9)
!10550 = !DILocation(line: 456, column: 13, scope: !10549)
!10551 = !DILocation(line: 457, column: 13, scope: !10549)
!10552 = !DILocation(line: 459, column: 17, scope: !10541)
!10553 = !DILocation(line: 459, column: 24, scope: !10541)
!10554 = !DILocation(line: 459, column: 9, scope: !10541)
!10555 = !DILocation(line: 459, column: 29, scope: !10541)
!10556 = !DILocation(line: 460, column: 27, scope: !10541)
!10557 = !DILocation(line: 460, column: 36, scope: !10541)
!10558 = !DILocation(line: 460, column: 9, scope: !10541)
!10559 = !DILocation(line: 460, column: 16, scope: !10541)
!10560 = !DILocation(line: 460, column: 25, scope: !10541)
!10561 = !DILocation(line: 461, column: 27, scope: !10541)
!10562 = !DILocation(line: 461, column: 9, scope: !10541)
!10563 = !DILocation(line: 461, column: 16, scope: !10541)
!10564 = !DILocation(line: 461, column: 25, scope: !10541)
!10565 = !DILocation(line: 462, column: 27, scope: !10541)
!10566 = !DILocation(line: 462, column: 9, scope: !10541)
!10567 = !DILocation(line: 462, column: 16, scope: !10541)
!10568 = !DILocation(line: 462, column: 25, scope: !10541)
!10569 = !DILocation(line: 464, column: 9, scope: !10541)
!10570 = !DILocation(line: 464, column: 22, scope: !10541)
!10571 = !DILocation(line: 464, column: 31, scope: !10541)
!10572 = !DILocation(line: 465, column: 41, scope: !10541)
!10573 = !DILocation(line: 465, column: 33, scope: !10541)
!10574 = !DILocation(line: 465, column: 9, scope: !10541)
!10575 = !DILocation(line: 465, column: 22, scope: !10541)
!10576 = !DILocation(line: 465, column: 31, scope: !10541)
!10577 = !DILocation(line: 466, column: 5, scope: !10541)
!10578 = !DILocation(line: 468, column: 56, scope: !10456)
!10579 = !DILocation(line: 468, column: 33, scope: !10456)
!10580 = !DILocation(line: 468, column: 5, scope: !10456)
!10581 = !DILocation(line: 468, column: 15, scope: !10456)
!10582 = !DILocation(line: 468, column: 31, scope: !10456)
!10583 = !DILocation(line: 470, column: 29, scope: !10456)
!10584 = !DILocation(line: 470, column: 39, scope: !10456)
!10585 = !DILocation(line: 470, column: 12, scope: !10456)
!10586 = !DILocation(line: 470, column: 5, scope: !10456)
!10587 = !DILocation(line: 471, column: 1, scope: !10456)
!10588 = distinct !DISubprogram(name: "prv_resultCallback", scope: !813, file: !813, line: 363, type: !949, isLocal: true, isDefinition: true, scopeLine: 365, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10589 = !DILocalVariable(name: "transacP", arg: 1, scope: !10588, file: !813, line: 363, type: !932)
!10590 = !DILocation(line: 363, column: 54, scope: !10588)
!10591 = !DILocalVariable(name: "message", arg: 2, scope: !10588, file: !813, line: 364, type: !54)
!10592 = !DILocation(line: 364, column: 39, scope: !10588)
!10593 = !DILocalVariable(name: "dataP", scope: !10588, file: !813, line: 366, type: !872)
!10594 = !DILocation(line: 366, column: 17, scope: !10588)
!10595 = !DILocation(line: 366, column: 38, scope: !10588)
!10596 = !DILocation(line: 366, column: 48, scope: !10588)
!10597 = !DILocation(line: 366, column: 25, scope: !10588)
!10598 = !DILocation(line: 368, column: 9, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10588, file: !813, line: 368, column: 9)
!10600 = !DILocation(line: 368, column: 17, scope: !10599)
!10601 = !DILocation(line: 368, column: 9, scope: !10588)
!10602 = !DILocation(line: 370, column: 9, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10599, file: !813, line: 369, column: 5)
!10604 = !DILocation(line: 370, column: 16, scope: !10603)
!10605 = !DILocation(line: 370, column: 25, scope: !10603)
!10606 = !DILocation(line: 370, column: 32, scope: !10603)
!10607 = !DILocation(line: 371, column: 26, scope: !10603)
!10608 = !DILocation(line: 371, column: 33, scope: !10603)
!10609 = !DILocation(line: 374, column: 25, scope: !10603)
!10610 = !DILocation(line: 374, column: 32, scope: !10603)
!10611 = !DILocation(line: 375, column: 5, scope: !10603)
!10612 = !DILocalVariable(name: "packet", scope: !10613, file: !813, line: 378, type: !880)
!10613 = distinct !DILexicalBlock(scope: !10599, file: !813, line: 377, column: 5)
!10614 = !DILocation(line: 378, column: 25, scope: !10613)
!10615 = !DILocation(line: 378, column: 51, scope: !10613)
!10616 = !DILocation(line: 378, column: 34, scope: !10613)
!10617 = !DILocation(line: 381, column: 13, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10613, file: !813, line: 381, column: 13)
!10619 = !DILocation(line: 381, column: 21, scope: !10618)
!10620 = !DILocation(line: 381, column: 26, scope: !10618)
!10621 = !DILocation(line: 382, column: 10, scope: !10618)
!10622 = !DILocation(line: 382, column: 13, scope: !10618)
!10623 = !DILocation(line: 382, column: 21, scope: !10618)
!10624 = !DILocation(line: 382, column: 35, scope: !10618)
!10625 = !DILocation(line: 381, column: 13, scope: !10613)
!10626 = !DILocalVariable(name: "locationString", scope: !10627, file: !813, line: 384, type: !117)
!10627 = distinct !DILexicalBlock(scope: !10618, file: !813, line: 383, column: 9)
!10628 = !DILocation(line: 384, column: 20, scope: !10627)
!10629 = !DILocalVariable(name: "result", scope: !10627, file: !813, line: 385, type: !58)
!10630 = !DILocation(line: 385, column: 17, scope: !10627)
!10631 = !DILocalVariable(name: "locationUri", scope: !10627, file: !813, line: 386, type: !857)
!10632 = !DILocation(line: 386, column: 25, scope: !10627)
!10633 = !DILocation(line: 388, column: 62, scope: !10627)
!10634 = !DILocation(line: 388, column: 70, scope: !10627)
!10635 = !DILocation(line: 388, column: 30, scope: !10627)
!10636 = !DILocation(line: 388, column: 28, scope: !10627)
!10637 = !DILocation(line: 389, column: 17, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10627, file: !813, line: 389, column: 17)
!10639 = !DILocation(line: 389, column: 32, scope: !10638)
!10640 = !DILocation(line: 389, column: 17, scope: !10627)
!10641 = !DILocation(line: 392, column: 17, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10638, file: !813, line: 390, column: 13)
!10643 = !DILocation(line: 395, column: 40, scope: !10627)
!10644 = !DILocation(line: 395, column: 63, scope: !10627)
!10645 = !DILocation(line: 395, column: 56, scope: !10627)
!10646 = !DILocation(line: 395, column: 22, scope: !10627)
!10647 = !DILocation(line: 395, column: 20, scope: !10627)
!10648 = !DILocation(line: 396, column: 17, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10627, file: !813, line: 396, column: 17)
!10650 = !DILocation(line: 396, column: 24, scope: !10649)
!10651 = !DILocation(line: 396, column: 17, scope: !10627)
!10652 = !DILocation(line: 399, column: 28, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10649, file: !813, line: 397, column: 13)
!10654 = !DILocation(line: 399, column: 17, scope: !10653)
!10655 = !DILocation(line: 400, column: 17, scope: !10653)
!10656 = !DILocation(line: 403, column: 76, scope: !10627)
!10657 = !DILocation(line: 403, column: 26, scope: !10627)
!10658 = !DILocation(line: 403, column: 36, scope: !10627)
!10659 = !DILocation(line: 403, column: 14, scope: !10627)
!10660 = !DILocation(line: 403, column: 47, scope: !10627)
!10661 = !DILocation(line: 403, column: 51, scope: !10627)
!10662 = !DILocation(line: 403, column: 62, scope: !10627)
!10663 = !DILocation(line: 404, column: 70, scope: !10627)
!10664 = !DILocation(line: 404, column: 26, scope: !10627)
!10665 = !DILocation(line: 404, column: 36, scope: !10627)
!10666 = !DILocation(line: 404, column: 14, scope: !10627)
!10667 = !DILocation(line: 404, column: 47, scope: !10627)
!10668 = !DILocation(line: 404, column: 51, scope: !10627)
!10669 = !DILocation(line: 404, column: 56, scope: !10627)
!10670 = !DILocation(line: 406, column: 24, scope: !10627)
!10671 = !DILocation(line: 406, column: 13, scope: !10627)
!10672 = !DILocation(line: 407, column: 9, scope: !10627)
!10673 = !DILocation(line: 409, column: 9, scope: !10613)
!10674 = !DILocation(line: 409, column: 16, scope: !10613)
!10675 = !DILocation(line: 409, column: 25, scope: !10613)
!10676 = !DILocation(line: 409, column: 32, scope: !10613)
!10677 = !DILocation(line: 410, column: 26, scope: !10613)
!10678 = !DILocation(line: 410, column: 33, scope: !10613)
!10679 = !DILocation(line: 411, column: 25, scope: !10613)
!10680 = !DILocation(line: 411, column: 33, scope: !10613)
!10681 = !DILocation(line: 412, column: 48, scope: !10613)
!10682 = !DILocation(line: 412, column: 56, scope: !10613)
!10683 = !DILocation(line: 412, column: 25, scope: !10613)
!10684 = !DILocation(line: 413, column: 25, scope: !10613)
!10685 = !DILocation(line: 413, column: 33, scope: !10613)
!10686 = !DILocation(line: 414, column: 25, scope: !10613)
!10687 = !DILocation(line: 414, column: 33, scope: !10613)
!10688 = !DILocation(line: 415, column: 25, scope: !10613)
!10689 = !DILocation(line: 415, column: 32, scope: !10613)
!10690 = !DILocation(line: 417, column: 16, scope: !10588)
!10691 = !DILocation(line: 417, column: 5, scope: !10588)
!10692 = !DILocation(line: 418, column: 1, scope: !10588)
!10693 = distinct !DISubprogram(name: "lwm2m_dm_write", scope: !813, file: !813, line: 504, type: !10694, isLocal: false, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10694 = !DISubroutineType(types: !10695)
!10695 = !{!58, !10401, !79, !870, !185, !186, !58, !866, !54}
!10696 = !DILocalVariable(name: "contextP", arg: 1, scope: !10693, file: !813, line: 504, type: !10401)
!10697 = !DILocation(line: 504, column: 38, scope: !10693)
!10698 = !DILocalVariable(name: "clientID", arg: 2, scope: !10693, file: !813, line: 505, type: !79)
!10699 = !DILocation(line: 505, column: 29, scope: !10693)
!10700 = !DILocalVariable(name: "uriP", arg: 3, scope: !10693, file: !813, line: 506, type: !870)
!10701 = !DILocation(line: 506, column: 34, scope: !10693)
!10702 = !DILocalVariable(name: "format", arg: 4, scope: !10693, file: !813, line: 507, type: !185)
!10703 = !DILocation(line: 507, column: 39, scope: !10693)
!10704 = !DILocalVariable(name: "buffer", arg: 5, scope: !10693, file: !813, line: 508, type: !186)
!10705 = !DILocation(line: 508, column: 30, scope: !10693)
!10706 = !DILocalVariable(name: "length", arg: 6, scope: !10693, file: !813, line: 509, type: !58)
!10707 = !DILocation(line: 509, column: 24, scope: !10693)
!10708 = !DILocalVariable(name: "callback", arg: 7, scope: !10693, file: !813, line: 510, type: !866)
!10709 = !DILocation(line: 510, column: 44, scope: !10693)
!10710 = !DILocalVariable(name: "userData", arg: 8, scope: !10693, file: !813, line: 511, type: !54)
!10711 = !DILocation(line: 511, column: 27, scope: !10693)
!10712 = !DILocation(line: 515, column: 10, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10693, file: !813, line: 515, column: 9)
!10714 = !DILocation(line: 516, column: 6, scope: !10713)
!10715 = !DILocation(line: 516, column: 9, scope: !10713)
!10716 = !DILocation(line: 516, column: 16, scope: !10713)
!10717 = !DILocation(line: 515, column: 9, scope: !10693)
!10718 = !DILocation(line: 518, column: 9, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10713, file: !813, line: 517, column: 5)
!10720 = !DILocation(line: 521, column: 9, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10693, file: !813, line: 521, column: 9)
!10722 = !DILocation(line: 521, column: 9, scope: !10693)
!10723 = !DILocation(line: 523, column: 34, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !813, line: 522, column: 5)
!10725 = !DILocation(line: 523, column: 44, scope: !10724)
!10726 = !DILocation(line: 523, column: 54, scope: !10724)
!10727 = !DILocation(line: 525, column: 35, scope: !10724)
!10728 = !DILocation(line: 525, column: 43, scope: !10724)
!10729 = !DILocation(line: 525, column: 51, scope: !10724)
!10730 = !DILocation(line: 526, column: 35, scope: !10724)
!10731 = !DILocation(line: 526, column: 45, scope: !10724)
!10732 = !DILocation(line: 523, column: 16, scope: !10724)
!10733 = !DILocation(line: 523, column: 9, scope: !10724)
!10734 = !DILocation(line: 530, column: 34, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10721, file: !813, line: 529, column: 5)
!10736 = !DILocation(line: 530, column: 44, scope: !10735)
!10737 = !DILocation(line: 530, column: 54, scope: !10735)
!10738 = !DILocation(line: 532, column: 35, scope: !10735)
!10739 = !DILocation(line: 532, column: 43, scope: !10735)
!10740 = !DILocation(line: 532, column: 51, scope: !10735)
!10741 = !DILocation(line: 533, column: 35, scope: !10735)
!10742 = !DILocation(line: 533, column: 45, scope: !10735)
!10743 = !DILocation(line: 530, column: 16, scope: !10735)
!10744 = !DILocation(line: 530, column: 9, scope: !10735)
!10745 = !DILocation(line: 535, column: 1, scope: !10693)
!10746 = distinct !DISubprogram(name: "lwm2m_dm_execute", scope: !813, file: !813, line: 537, type: !10694, isLocal: false, isDefinition: true, scopeLine: 545, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10747 = !DILocalVariable(name: "contextP", arg: 1, scope: !10746, file: !813, line: 537, type: !10401)
!10748 = !DILocation(line: 537, column: 40, scope: !10746)
!10749 = !DILocalVariable(name: "clientID", arg: 2, scope: !10746, file: !813, line: 538, type: !79)
!10750 = !DILocation(line: 538, column: 31, scope: !10746)
!10751 = !DILocalVariable(name: "uriP", arg: 3, scope: !10746, file: !813, line: 539, type: !870)
!10752 = !DILocation(line: 539, column: 36, scope: !10746)
!10753 = !DILocalVariable(name: "format", arg: 4, scope: !10746, file: !813, line: 540, type: !185)
!10754 = !DILocation(line: 540, column: 41, scope: !10746)
!10755 = !DILocalVariable(name: "buffer", arg: 5, scope: !10746, file: !813, line: 541, type: !186)
!10756 = !DILocation(line: 541, column: 32, scope: !10746)
!10757 = !DILocalVariable(name: "length", arg: 6, scope: !10746, file: !813, line: 542, type: !58)
!10758 = !DILocation(line: 542, column: 26, scope: !10746)
!10759 = !DILocalVariable(name: "callback", arg: 7, scope: !10746, file: !813, line: 543, type: !866)
!10760 = !DILocation(line: 543, column: 46, scope: !10746)
!10761 = !DILocalVariable(name: "userData", arg: 8, scope: !10746, file: !813, line: 544, type: !54)
!10762 = !DILocation(line: 544, column: 29, scope: !10746)
!10763 = !DILocation(line: 548, column: 10, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10746, file: !813, line: 548, column: 9)
!10765 = !DILocation(line: 548, column: 9, scope: !10746)
!10766 = !DILocation(line: 550, column: 9, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10764, file: !813, line: 549, column: 5)
!10768 = !DILocation(line: 553, column: 30, scope: !10746)
!10769 = !DILocation(line: 553, column: 40, scope: !10746)
!10770 = !DILocation(line: 553, column: 50, scope: !10746)
!10771 = !DILocation(line: 555, column: 31, scope: !10746)
!10772 = !DILocation(line: 555, column: 39, scope: !10746)
!10773 = !DILocation(line: 555, column: 47, scope: !10746)
!10774 = !DILocation(line: 556, column: 31, scope: !10746)
!10775 = !DILocation(line: 556, column: 41, scope: !10746)
!10776 = !DILocation(line: 553, column: 12, scope: !10746)
!10777 = !DILocation(line: 553, column: 5, scope: !10746)
!10778 = !DILocation(line: 557, column: 1, scope: !10746)
!10779 = distinct !DISubprogram(name: "lwm2m_dm_create", scope: !813, file: !813, line: 559, type: !10694, isLocal: false, isDefinition: true, scopeLine: 567, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10780 = !DILocalVariable(name: "contextP", arg: 1, scope: !10779, file: !813, line: 559, type: !10401)
!10781 = !DILocation(line: 559, column: 39, scope: !10779)
!10782 = !DILocalVariable(name: "clientID", arg: 2, scope: !10779, file: !813, line: 560, type: !79)
!10783 = !DILocation(line: 560, column: 30, scope: !10779)
!10784 = !DILocalVariable(name: "uriP", arg: 3, scope: !10779, file: !813, line: 561, type: !870)
!10785 = !DILocation(line: 561, column: 35, scope: !10779)
!10786 = !DILocalVariable(name: "format", arg: 4, scope: !10779, file: !813, line: 562, type: !185)
!10787 = !DILocation(line: 562, column: 40, scope: !10779)
!10788 = !DILocalVariable(name: "buffer", arg: 5, scope: !10779, file: !813, line: 563, type: !186)
!10789 = !DILocation(line: 563, column: 31, scope: !10779)
!10790 = !DILocalVariable(name: "length", arg: 6, scope: !10779, file: !813, line: 564, type: !58)
!10791 = !DILocation(line: 564, column: 25, scope: !10779)
!10792 = !DILocalVariable(name: "callback", arg: 7, scope: !10779, file: !813, line: 565, type: !866)
!10793 = !DILocation(line: 565, column: 45, scope: !10779)
!10794 = !DILocalVariable(name: "userData", arg: 8, scope: !10779, file: !813, line: 566, type: !54)
!10795 = !DILocation(line: 566, column: 28, scope: !10779)
!10796 = !DILocation(line: 571, column: 9, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10779, file: !813, line: 571, column: 9)
!10798 = !DILocation(line: 572, column: 6, scope: !10797)
!10799 = !DILocation(line: 572, column: 9, scope: !10797)
!10800 = !DILocation(line: 572, column: 16, scope: !10797)
!10801 = !DILocation(line: 571, column: 9, scope: !10779)
!10802 = !DILocation(line: 574, column: 9, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10797, file: !813, line: 573, column: 5)
!10804 = !DILocation(line: 577, column: 30, scope: !10779)
!10805 = !DILocation(line: 577, column: 40, scope: !10779)
!10806 = !DILocation(line: 577, column: 50, scope: !10779)
!10807 = !DILocation(line: 579, column: 31, scope: !10779)
!10808 = !DILocation(line: 579, column: 39, scope: !10779)
!10809 = !DILocation(line: 579, column: 47, scope: !10779)
!10810 = !DILocation(line: 580, column: 31, scope: !10779)
!10811 = !DILocation(line: 580, column: 41, scope: !10779)
!10812 = !DILocation(line: 577, column: 12, scope: !10779)
!10813 = !DILocation(line: 577, column: 5, scope: !10779)
!10814 = !DILocation(line: 581, column: 1, scope: !10779)
!10815 = distinct !DISubprogram(name: "lwm2m_dm_delete", scope: !813, file: !813, line: 583, type: !10399, isLocal: false, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10816 = !DILocalVariable(name: "contextP", arg: 1, scope: !10815, file: !813, line: 583, type: !10401)
!10817 = !DILocation(line: 583, column: 39, scope: !10815)
!10818 = !DILocalVariable(name: "clientID", arg: 2, scope: !10815, file: !813, line: 584, type: !79)
!10819 = !DILocation(line: 584, column: 30, scope: !10815)
!10820 = !DILocalVariable(name: "uriP", arg: 3, scope: !10815, file: !813, line: 585, type: !870)
!10821 = !DILocation(line: 585, column: 35, scope: !10815)
!10822 = !DILocalVariable(name: "callback", arg: 4, scope: !10815, file: !813, line: 586, type: !866)
!10823 = !DILocation(line: 586, column: 45, scope: !10815)
!10824 = !DILocalVariable(name: "userData", arg: 5, scope: !10815, file: !813, line: 587, type: !54)
!10825 = !DILocation(line: 587, column: 28, scope: !10815)
!10826 = !DILocation(line: 591, column: 10, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10815, file: !813, line: 591, column: 9)
!10828 = !DILocation(line: 592, column: 6, scope: !10827)
!10829 = !DILocation(line: 592, column: 9, scope: !10827)
!10830 = !DILocation(line: 591, column: 9, scope: !10815)
!10831 = !DILocation(line: 594, column: 9, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10827, file: !813, line: 593, column: 5)
!10833 = !DILocation(line: 597, column: 30, scope: !10815)
!10834 = !DILocation(line: 597, column: 40, scope: !10815)
!10835 = !DILocation(line: 597, column: 50, scope: !10815)
!10836 = !DILocation(line: 600, column: 31, scope: !10815)
!10837 = !DILocation(line: 600, column: 41, scope: !10815)
!10838 = !DILocation(line: 597, column: 12, scope: !10815)
!10839 = !DILocation(line: 597, column: 5, scope: !10815)
!10840 = !DILocation(line: 601, column: 1, scope: !10815)
!10841 = distinct !DISubprogram(name: "lwm2m_dm_write_attributes", scope: !813, file: !813, line: 603, type: !10842, isLocal: false, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!10842 = !DISubroutineType(types: !10843)
!10843 = !{!58, !10401, !79, !870, !10844, !866, !54}
!10844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10845, size: 64)
!10845 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_attributes_t", file: !6, line: 526, baseType: !10846)
!10846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 517, size: 320, elements: !10847)
!10847 = !{!10848, !10849, !10850, !10851, !10852, !10853, !10854}
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "toSet", scope: !10846, file: !6, line: 519, baseType: !107, size: 8)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "toClear", scope: !10846, file: !6, line: 520, baseType: !107, size: 8, offset: 8)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "minPeriod", scope: !10846, file: !6, line: 521, baseType: !86, size: 32, offset: 32)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "maxPeriod", scope: !10846, file: !6, line: 522, baseType: !86, size: 32, offset: 64)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "greaterThan", scope: !10846, file: !6, line: 523, baseType: !253, size: 64, offset: 128)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "lessThan", scope: !10846, file: !6, line: 524, baseType: !253, size: 64, offset: 192)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !10846, file: !6, line: 525, baseType: !253, size: 64, offset: 256)
!10855 = !DILocalVariable(name: "contextP", arg: 1, scope: !10841, file: !813, line: 603, type: !10401)
!10856 = !DILocation(line: 603, column: 49, scope: !10841)
!10857 = !DILocalVariable(name: "clientID", arg: 2, scope: !10841, file: !813, line: 604, type: !79)
!10858 = !DILocation(line: 604, column: 40, scope: !10841)
!10859 = !DILocalVariable(name: "uriP", arg: 3, scope: !10841, file: !813, line: 605, type: !870)
!10860 = !DILocation(line: 605, column: 45, scope: !10841)
!10861 = !DILocalVariable(name: "attrP", arg: 4, scope: !10841, file: !813, line: 606, type: !10844)
!10862 = !DILocation(line: 606, column: 52, scope: !10841)
!10863 = !DILocalVariable(name: "callback", arg: 5, scope: !10841, file: !813, line: 607, type: !866)
!10864 = !DILocation(line: 607, column: 55, scope: !10841)
!10865 = !DILocalVariable(name: "userData", arg: 6, scope: !10841, file: !813, line: 608, type: !54)
!10866 = !DILocation(line: 608, column: 38, scope: !10841)
!10867 = !DILocalVariable(name: "clientP", scope: !10841, file: !813, line: 611, type: !816)
!10868 = !DILocation(line: 611, column: 22, scope: !10841)
!10869 = !DILocalVariable(name: "transaction", scope: !10841, file: !813, line: 612, type: !932)
!10870 = !DILocation(line: 612, column: 27, scope: !10841)
!10871 = !DILocalVariable(name: "coap_pkt", scope: !10841, file: !813, line: 613, type: !880)
!10872 = !DILocation(line: 613, column: 21, scope: !10841)
!10873 = !DILocalVariable(name: "buffer", scope: !10841, file: !813, line: 614, type: !6893)
!10874 = !DILocation(line: 614, column: 13, scope: !10841)
!10875 = !DILocalVariable(name: "length", scope: !10841, file: !813, line: 615, type: !438)
!10876 = !DILocation(line: 615, column: 12, scope: !10841)
!10877 = !DILocation(line: 619, column: 9, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 619, column: 9)
!10879 = !DILocation(line: 619, column: 15, scope: !10878)
!10880 = !DILocation(line: 619, column: 9, scope: !10841)
!10881 = !DILocation(line: 619, column: 24, scope: !10878)
!10882 = !DILocation(line: 621, column: 15, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 621, column: 9)
!10884 = !DILocation(line: 621, column: 22, scope: !10883)
!10885 = !DILocation(line: 621, column: 30, scope: !10883)
!10886 = !DILocation(line: 621, column: 37, scope: !10883)
!10887 = !DILocation(line: 621, column: 28, scope: !10883)
!10888 = !DILocation(line: 621, column: 11, scope: !10883)
!10889 = !DILocation(line: 621, column: 9, scope: !10841)
!10890 = !DILocation(line: 621, column: 47, scope: !10883)
!10891 = !DILocation(line: 622, column: 15, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 622, column: 9)
!10893 = !DILocation(line: 622, column: 22, scope: !10892)
!10894 = !DILocation(line: 622, column: 28, scope: !10892)
!10895 = !DILocation(line: 622, column: 11, scope: !10892)
!10896 = !DILocation(line: 622, column: 49, scope: !10892)
!10897 = !DILocation(line: 622, column: 53, scope: !10892)
!10898 = !DILocation(line: 622, column: 9, scope: !10841)
!10899 = !DILocation(line: 622, column: 86, scope: !10892)
!10900 = !DILocation(line: 623, column: 31, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 623, column: 9)
!10902 = !DILocation(line: 623, column: 38, scope: !10901)
!10903 = !DILocation(line: 623, column: 44, scope: !10901)
!10904 = !DILocation(line: 623, column: 27, scope: !10901)
!10905 = !DILocation(line: 624, column: 6, scope: !10901)
!10906 = !DILocation(line: 624, column: 10, scope: !10901)
!10907 = !DILocation(line: 624, column: 17, scope: !10901)
!10908 = !DILocation(line: 624, column: 32, scope: !10901)
!10909 = !DILocation(line: 624, column: 39, scope: !10901)
!10910 = !DILocation(line: 624, column: 30, scope: !10901)
!10911 = !DILocation(line: 624, column: 26, scope: !10901)
!10912 = !DILocation(line: 624, column: 47, scope: !10901)
!10913 = !DILocation(line: 624, column: 54, scope: !10901)
!10914 = !DILocation(line: 624, column: 44, scope: !10901)
!10915 = !DILocation(line: 623, column: 9, scope: !10841)
!10916 = !DILocation(line: 624, column: 68, scope: !10901)
!10917 = !DILocation(line: 626, column: 65, scope: !10841)
!10918 = !DILocation(line: 626, column: 75, scope: !10841)
!10919 = !DILocation(line: 626, column: 49, scope: !10841)
!10920 = !DILocation(line: 626, column: 87, scope: !10841)
!10921 = !DILocation(line: 626, column: 33, scope: !10841)
!10922 = !DILocation(line: 626, column: 15, scope: !10841)
!10923 = !DILocation(line: 626, column: 13, scope: !10841)
!10924 = !DILocation(line: 627, column: 9, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 627, column: 9)
!10926 = !DILocation(line: 627, column: 17, scope: !10925)
!10927 = !DILocation(line: 627, column: 9, scope: !10841)
!10928 = !DILocation(line: 627, column: 26, scope: !10925)
!10929 = !DILocation(line: 629, column: 35, scope: !10841)
!10930 = !DILocation(line: 629, column: 44, scope: !10841)
!10931 = !DILocation(line: 629, column: 64, scope: !10841)
!10932 = !DILocation(line: 629, column: 73, scope: !10841)
!10933 = !DILocation(line: 629, column: 82, scope: !10841)
!10934 = !DILocation(line: 629, column: 88, scope: !10841)
!10935 = !DILocation(line: 629, column: 98, scope: !10841)
!10936 = !DILocation(line: 629, column: 105, scope: !10841)
!10937 = !DILocation(line: 629, column: 19, scope: !10841)
!10938 = !DILocation(line: 629, column: 17, scope: !10841)
!10939 = !DILocation(line: 630, column: 9, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 630, column: 9)
!10941 = !DILocation(line: 630, column: 21, scope: !10940)
!10942 = !DILocation(line: 630, column: 9, scope: !10841)
!10943 = !DILocation(line: 630, column: 30, scope: !10940)
!10944 = !DILocation(line: 632, column: 9, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 632, column: 9)
!10946 = !DILocation(line: 632, column: 18, scope: !10945)
!10947 = !DILocation(line: 632, column: 9, scope: !10841)
!10948 = !DILocalVariable(name: "dataP", scope: !10949, file: !813, line: 634, type: !872)
!10949 = distinct !DILexicalBlock(scope: !10945, file: !813, line: 633, column: 5)
!10950 = !DILocation(line: 634, column: 21, scope: !10949)
!10951 = !DILocation(line: 636, column: 30, scope: !10949)
!10952 = !DILocation(line: 636, column: 17, scope: !10949)
!10953 = !DILocation(line: 636, column: 15, scope: !10949)
!10954 = !DILocation(line: 637, column: 13, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10949, file: !813, line: 637, column: 13)
!10956 = !DILocation(line: 637, column: 19, scope: !10955)
!10957 = !DILocation(line: 637, column: 13, scope: !10949)
!10958 = !DILocation(line: 639, column: 30, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10955, file: !813, line: 638, column: 9)
!10960 = !DILocation(line: 639, column: 13, scope: !10959)
!10961 = !DILocation(line: 640, column: 13, scope: !10959)
!10962 = !DILocation(line: 642, column: 17, scope: !10949)
!10963 = !DILocation(line: 642, column: 24, scope: !10949)
!10964 = !DILocation(line: 642, column: 9, scope: !10949)
!10965 = !DILocation(line: 642, column: 29, scope: !10949)
!10966 = !DILocation(line: 643, column: 27, scope: !10949)
!10967 = !DILocation(line: 643, column: 36, scope: !10949)
!10968 = !DILocation(line: 643, column: 9, scope: !10949)
!10969 = !DILocation(line: 643, column: 16, scope: !10949)
!10970 = !DILocation(line: 643, column: 25, scope: !10949)
!10971 = !DILocation(line: 644, column: 27, scope: !10949)
!10972 = !DILocation(line: 644, column: 9, scope: !10949)
!10973 = !DILocation(line: 644, column: 16, scope: !10949)
!10974 = !DILocation(line: 644, column: 25, scope: !10949)
!10975 = !DILocation(line: 645, column: 27, scope: !10949)
!10976 = !DILocation(line: 645, column: 9, scope: !10949)
!10977 = !DILocation(line: 645, column: 16, scope: !10949)
!10978 = !DILocation(line: 645, column: 25, scope: !10949)
!10979 = !DILocation(line: 647, column: 9, scope: !10949)
!10980 = !DILocation(line: 647, column: 22, scope: !10949)
!10981 = !DILocation(line: 647, column: 31, scope: !10949)
!10982 = !DILocation(line: 648, column: 41, scope: !10949)
!10983 = !DILocation(line: 648, column: 33, scope: !10949)
!10984 = !DILocation(line: 648, column: 9, scope: !10949)
!10985 = !DILocation(line: 648, column: 22, scope: !10949)
!10986 = !DILocation(line: 648, column: 31, scope: !10949)
!10987 = !DILocation(line: 649, column: 5, scope: !10949)
!10988 = !DILocation(line: 651, column: 33, scope: !10841)
!10989 = !DILocation(line: 651, column: 46, scope: !10841)
!10990 = !DILocation(line: 651, column: 16, scope: !10841)
!10991 = !DILocation(line: 651, column: 14, scope: !10841)
!10992 = !DILocation(line: 652, column: 23, scope: !10841)
!10993 = !DILocation(line: 652, column: 33, scope: !10841)
!10994 = !DILocation(line: 652, column: 5, scope: !10841)
!10995 = !DILocation(line: 653, column: 9, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 653, column: 9)
!10997 = !DILocation(line: 653, column: 16, scope: !10996)
!10998 = !DILocation(line: 653, column: 22, scope: !10996)
!10999 = !DILocation(line: 653, column: 9, scope: !10841)
!11000 = !DILocation(line: 655, column: 9, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10996, file: !813, line: 654, column: 5)
!11002 = !DILocation(line: 656, column: 34, scope: !11001)
!11003 = !DILocation(line: 656, column: 41, scope: !11001)
!11004 = !DILocation(line: 656, column: 52, scope: !11001)
!11005 = !DILocation(line: 656, column: 59, scope: !11001)
!11006 = !DILocation(line: 656, column: 18, scope: !11001)
!11007 = !DILocation(line: 656, column: 16, scope: !11001)
!11008 = !DILocation(line: 657, column: 13, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11001, file: !813, line: 657, column: 13)
!11010 = !DILocation(line: 657, column: 20, scope: !11009)
!11011 = !DILocation(line: 657, column: 13, scope: !11001)
!11012 = !DILocation(line: 659, column: 30, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11009, file: !813, line: 658, column: 9)
!11014 = !DILocation(line: 659, column: 13, scope: !11013)
!11015 = !DILocation(line: 660, column: 13, scope: !11013)
!11016 = !DILocation(line: 662, column: 33, scope: !11001)
!11017 = !DILocation(line: 662, column: 43, scope: !11001)
!11018 = !DILocation(line: 662, column: 55, scope: !11001)
!11019 = !DILocation(line: 662, column: 85, scope: !11001)
!11020 = !DILocation(line: 662, column: 83, scope: !11001)
!11021 = !DILocation(line: 662, column: 9, scope: !11001)
!11022 = !DILocation(line: 663, column: 9, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !813, line: 663, column: 9)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !813, line: 663, column: 9)
!11025 = distinct !DILexicalBlock(scope: !11001, file: !813, line: 663, column: 9)
!11026 = !DILocation(line: 664, column: 5, scope: !11001)
!11027 = !DILocation(line: 665, column: 9, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 665, column: 9)
!11029 = !DILocation(line: 665, column: 16, scope: !11028)
!11030 = !DILocation(line: 665, column: 22, scope: !11028)
!11031 = !DILocation(line: 665, column: 9, scope: !10841)
!11032 = !DILocation(line: 667, column: 9, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11028, file: !813, line: 666, column: 5)
!11034 = !DILocation(line: 668, column: 34, scope: !11033)
!11035 = !DILocation(line: 668, column: 41, scope: !11033)
!11036 = !DILocation(line: 668, column: 52, scope: !11033)
!11037 = !DILocation(line: 668, column: 59, scope: !11033)
!11038 = !DILocation(line: 668, column: 18, scope: !11033)
!11039 = !DILocation(line: 668, column: 16, scope: !11033)
!11040 = !DILocation(line: 669, column: 13, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11033, file: !813, line: 669, column: 13)
!11042 = !DILocation(line: 669, column: 20, scope: !11041)
!11043 = !DILocation(line: 669, column: 13, scope: !11033)
!11044 = !DILocation(line: 671, column: 30, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !813, line: 670, column: 9)
!11046 = !DILocation(line: 671, column: 13, scope: !11045)
!11047 = !DILocation(line: 672, column: 13, scope: !11045)
!11048 = !DILocation(line: 674, column: 33, scope: !11033)
!11049 = !DILocation(line: 674, column: 43, scope: !11033)
!11050 = !DILocation(line: 674, column: 55, scope: !11033)
!11051 = !DILocation(line: 674, column: 85, scope: !11033)
!11052 = !DILocation(line: 674, column: 83, scope: !11033)
!11053 = !DILocation(line: 674, column: 9, scope: !11033)
!11054 = !DILocation(line: 675, column: 9, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !813, line: 675, column: 9)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !813, line: 675, column: 9)
!11057 = distinct !DILexicalBlock(scope: !11033, file: !813, line: 675, column: 9)
!11058 = !DILocation(line: 676, column: 5, scope: !11033)
!11059 = !DILocation(line: 677, column: 9, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 677, column: 9)
!11061 = !DILocation(line: 677, column: 16, scope: !11060)
!11062 = !DILocation(line: 677, column: 22, scope: !11060)
!11063 = !DILocation(line: 677, column: 9, scope: !10841)
!11064 = !DILocation(line: 679, column: 9, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11060, file: !813, line: 678, column: 5)
!11066 = !DILocation(line: 680, column: 36, scope: !11065)
!11067 = !DILocation(line: 680, column: 43, scope: !11065)
!11068 = !DILocation(line: 680, column: 56, scope: !11065)
!11069 = !DILocation(line: 680, column: 63, scope: !11065)
!11070 = !DILocation(line: 680, column: 18, scope: !11065)
!11071 = !DILocation(line: 680, column: 16, scope: !11065)
!11072 = !DILocation(line: 681, column: 13, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11065, file: !813, line: 681, column: 13)
!11074 = !DILocation(line: 681, column: 20, scope: !11073)
!11075 = !DILocation(line: 681, column: 13, scope: !11065)
!11076 = !DILocation(line: 683, column: 30, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !813, line: 682, column: 9)
!11078 = !DILocation(line: 683, column: 13, scope: !11077)
!11079 = !DILocation(line: 684, column: 13, scope: !11077)
!11080 = !DILocation(line: 686, column: 33, scope: !11065)
!11081 = !DILocation(line: 686, column: 43, scope: !11065)
!11082 = !DILocation(line: 686, column: 55, scope: !11065)
!11083 = !DILocation(line: 686, column: 87, scope: !11065)
!11084 = !DILocation(line: 686, column: 85, scope: !11065)
!11085 = !DILocation(line: 686, column: 9, scope: !11065)
!11086 = !DILocation(line: 687, column: 9, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11088, file: !813, line: 687, column: 9)
!11088 = distinct !DILexicalBlock(scope: !11089, file: !813, line: 687, column: 9)
!11089 = distinct !DILexicalBlock(scope: !11065, file: !813, line: 687, column: 9)
!11090 = !DILocation(line: 688, column: 5, scope: !11065)
!11091 = !DILocation(line: 689, column: 9, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 689, column: 9)
!11093 = !DILocation(line: 689, column: 16, scope: !11092)
!11094 = !DILocation(line: 689, column: 22, scope: !11092)
!11095 = !DILocation(line: 689, column: 9, scope: !10841)
!11096 = !DILocation(line: 691, column: 9, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11092, file: !813, line: 690, column: 5)
!11098 = !DILocation(line: 692, column: 36, scope: !11097)
!11099 = !DILocation(line: 692, column: 43, scope: !11097)
!11100 = !DILocation(line: 692, column: 53, scope: !11097)
!11101 = !DILocation(line: 692, column: 60, scope: !11097)
!11102 = !DILocation(line: 692, column: 18, scope: !11097)
!11103 = !DILocation(line: 692, column: 16, scope: !11097)
!11104 = !DILocation(line: 693, column: 13, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11097, file: !813, line: 693, column: 13)
!11106 = !DILocation(line: 693, column: 20, scope: !11105)
!11107 = !DILocation(line: 693, column: 13, scope: !11097)
!11108 = !DILocation(line: 695, column: 30, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11105, file: !813, line: 694, column: 9)
!11110 = !DILocation(line: 695, column: 13, scope: !11109)
!11111 = !DILocation(line: 696, column: 13, scope: !11109)
!11112 = !DILocation(line: 698, column: 33, scope: !11097)
!11113 = !DILocation(line: 698, column: 43, scope: !11097)
!11114 = !DILocation(line: 698, column: 55, scope: !11097)
!11115 = !DILocation(line: 698, column: 84, scope: !11097)
!11116 = !DILocation(line: 698, column: 82, scope: !11097)
!11117 = !DILocation(line: 698, column: 9, scope: !11097)
!11118 = !DILocation(line: 699, column: 9, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !813, line: 699, column: 9)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !813, line: 699, column: 9)
!11121 = distinct !DILexicalBlock(scope: !11097, file: !813, line: 699, column: 9)
!11122 = !DILocation(line: 700, column: 5, scope: !11097)
!11123 = !DILocation(line: 701, column: 9, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 701, column: 9)
!11125 = !DILocation(line: 701, column: 16, scope: !11124)
!11126 = !DILocation(line: 701, column: 22, scope: !11124)
!11127 = !DILocation(line: 701, column: 9, scope: !10841)
!11128 = !DILocation(line: 703, column: 9, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11124, file: !813, line: 702, column: 5)
!11130 = !DILocation(line: 704, column: 36, scope: !11129)
!11131 = !DILocation(line: 704, column: 43, scope: !11129)
!11132 = !DILocation(line: 704, column: 49, scope: !11129)
!11133 = !DILocation(line: 704, column: 56, scope: !11129)
!11134 = !DILocation(line: 704, column: 18, scope: !11129)
!11135 = !DILocation(line: 704, column: 16, scope: !11129)
!11136 = !DILocation(line: 705, column: 13, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11129, file: !813, line: 705, column: 13)
!11138 = !DILocation(line: 705, column: 20, scope: !11137)
!11139 = !DILocation(line: 705, column: 13, scope: !11129)
!11140 = !DILocation(line: 707, column: 30, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11137, file: !813, line: 706, column: 9)
!11142 = !DILocation(line: 707, column: 13, scope: !11141)
!11143 = !DILocation(line: 708, column: 13, scope: !11141)
!11144 = !DILocation(line: 710, column: 33, scope: !11129)
!11145 = !DILocation(line: 710, column: 43, scope: !11129)
!11146 = !DILocation(line: 710, column: 55, scope: !11129)
!11147 = !DILocation(line: 710, column: 79, scope: !11129)
!11148 = !DILocation(line: 710, column: 77, scope: !11129)
!11149 = !DILocation(line: 710, column: 9, scope: !11129)
!11150 = !DILocation(line: 711, column: 9, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !813, line: 711, column: 9)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !813, line: 711, column: 9)
!11153 = distinct !DILexicalBlock(scope: !11129, file: !813, line: 711, column: 9)
!11154 = !DILocation(line: 712, column: 5, scope: !11129)
!11155 = !DILocation(line: 713, column: 9, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 713, column: 9)
!11157 = !DILocation(line: 713, column: 16, scope: !11156)
!11158 = !DILocation(line: 713, column: 24, scope: !11156)
!11159 = !DILocation(line: 713, column: 9, scope: !10841)
!11160 = !DILocation(line: 715, column: 33, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11156, file: !813, line: 714, column: 5)
!11162 = !DILocation(line: 715, column: 43, scope: !11161)
!11163 = !DILocation(line: 715, column: 9, scope: !11161)
!11164 = !DILocation(line: 716, column: 9, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !813, line: 716, column: 9)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !813, line: 716, column: 9)
!11167 = distinct !DILexicalBlock(scope: !11161, file: !813, line: 716, column: 9)
!11168 = !DILocation(line: 717, column: 5, scope: !11161)
!11169 = !DILocation(line: 718, column: 9, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 718, column: 9)
!11171 = !DILocation(line: 718, column: 16, scope: !11170)
!11172 = !DILocation(line: 718, column: 24, scope: !11170)
!11173 = !DILocation(line: 718, column: 9, scope: !10841)
!11174 = !DILocation(line: 720, column: 33, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11170, file: !813, line: 719, column: 5)
!11176 = !DILocation(line: 720, column: 43, scope: !11175)
!11177 = !DILocation(line: 720, column: 9, scope: !11175)
!11178 = !DILocation(line: 721, column: 9, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !813, line: 721, column: 9)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !813, line: 721, column: 9)
!11181 = distinct !DILexicalBlock(scope: !11175, file: !813, line: 721, column: 9)
!11182 = !DILocation(line: 722, column: 5, scope: !11175)
!11183 = !DILocation(line: 723, column: 9, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 723, column: 9)
!11185 = !DILocation(line: 723, column: 16, scope: !11184)
!11186 = !DILocation(line: 723, column: 24, scope: !11184)
!11187 = !DILocation(line: 723, column: 9, scope: !10841)
!11188 = !DILocation(line: 725, column: 33, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11184, file: !813, line: 724, column: 5)
!11190 = !DILocation(line: 725, column: 43, scope: !11189)
!11191 = !DILocation(line: 725, column: 9, scope: !11189)
!11192 = !DILocation(line: 726, column: 9, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !813, line: 726, column: 9)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !813, line: 726, column: 9)
!11195 = distinct !DILexicalBlock(scope: !11189, file: !813, line: 726, column: 9)
!11196 = !DILocation(line: 727, column: 5, scope: !11189)
!11197 = !DILocation(line: 728, column: 9, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 728, column: 9)
!11199 = !DILocation(line: 728, column: 16, scope: !11198)
!11200 = !DILocation(line: 728, column: 24, scope: !11198)
!11201 = !DILocation(line: 728, column: 9, scope: !10841)
!11202 = !DILocation(line: 730, column: 33, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11198, file: !813, line: 729, column: 5)
!11204 = !DILocation(line: 730, column: 43, scope: !11203)
!11205 = !DILocation(line: 730, column: 9, scope: !11203)
!11206 = !DILocation(line: 731, column: 9, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !813, line: 731, column: 9)
!11208 = distinct !DILexicalBlock(scope: !11209, file: !813, line: 731, column: 9)
!11209 = distinct !DILexicalBlock(scope: !11203, file: !813, line: 731, column: 9)
!11210 = !DILocation(line: 732, column: 5, scope: !11203)
!11211 = !DILocation(line: 733, column: 9, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !10841, file: !813, line: 733, column: 9)
!11213 = !DILocation(line: 733, column: 16, scope: !11212)
!11214 = !DILocation(line: 733, column: 24, scope: !11212)
!11215 = !DILocation(line: 733, column: 9, scope: !10841)
!11216 = !DILocation(line: 735, column: 33, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11212, file: !813, line: 734, column: 5)
!11218 = !DILocation(line: 735, column: 43, scope: !11217)
!11219 = !DILocation(line: 735, column: 9, scope: !11217)
!11220 = !DILocation(line: 736, column: 9, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !813, line: 736, column: 9)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !813, line: 736, column: 9)
!11223 = distinct !DILexicalBlock(scope: !11217, file: !813, line: 736, column: 9)
!11224 = !DILocation(line: 737, column: 5, scope: !11217)
!11225 = !DILocation(line: 739, column: 56, scope: !10841)
!11226 = !DILocation(line: 739, column: 33, scope: !10841)
!11227 = !DILocation(line: 739, column: 5, scope: !10841)
!11228 = !DILocation(line: 739, column: 15, scope: !10841)
!11229 = !DILocation(line: 739, column: 31, scope: !10841)
!11230 = !DILocation(line: 741, column: 29, scope: !10841)
!11231 = !DILocation(line: 741, column: 39, scope: !10841)
!11232 = !DILocation(line: 741, column: 12, scope: !10841)
!11233 = !DILocation(line: 741, column: 5, scope: !10841)
!11234 = !DILocation(line: 742, column: 1, scope: !10841)
!11235 = distinct !DISubprogram(name: "lwm2m_dm_discover", scope: !813, file: !813, line: 744, type: !10399, isLocal: false, isDefinition: true, scopeLine: 749, flags: DIFlagPrototyped, isOptimized: false, unit: !812, variables: !488)
!11236 = !DILocalVariable(name: "contextP", arg: 1, scope: !11235, file: !813, line: 744, type: !10401)
!11237 = !DILocation(line: 744, column: 41, scope: !11235)
!11238 = !DILocalVariable(name: "clientID", arg: 2, scope: !11235, file: !813, line: 745, type: !79)
!11239 = !DILocation(line: 745, column: 32, scope: !11235)
!11240 = !DILocalVariable(name: "uriP", arg: 3, scope: !11235, file: !813, line: 746, type: !870)
!11241 = !DILocation(line: 746, column: 37, scope: !11235)
!11242 = !DILocalVariable(name: "callback", arg: 4, scope: !11235, file: !813, line: 747, type: !866)
!11243 = !DILocation(line: 747, column: 47, scope: !11235)
!11244 = !DILocalVariable(name: "userData", arg: 5, scope: !11235, file: !813, line: 748, type: !54)
!11245 = !DILocation(line: 748, column: 30, scope: !11235)
!11246 = !DILocalVariable(name: "clientP", scope: !11235, file: !813, line: 750, type: !816)
!11247 = !DILocation(line: 750, column: 22, scope: !11235)
!11248 = !DILocalVariable(name: "transaction", scope: !11235, file: !813, line: 751, type: !932)
!11249 = !DILocation(line: 751, column: 27, scope: !11235)
!11250 = !DILocalVariable(name: "dataP", scope: !11235, file: !813, line: 752, type: !872)
!11251 = !DILocation(line: 752, column: 17, scope: !11235)
!11252 = !DILocation(line: 756, column: 65, scope: !11235)
!11253 = !DILocation(line: 756, column: 75, scope: !11235)
!11254 = !DILocation(line: 756, column: 49, scope: !11235)
!11255 = !DILocation(line: 756, column: 87, scope: !11235)
!11256 = !DILocation(line: 756, column: 33, scope: !11235)
!11257 = !DILocation(line: 756, column: 15, scope: !11235)
!11258 = !DILocation(line: 756, column: 13, scope: !11235)
!11259 = !DILocation(line: 757, column: 9, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11235, file: !813, line: 757, column: 9)
!11261 = !DILocation(line: 757, column: 17, scope: !11260)
!11262 = !DILocation(line: 757, column: 9, scope: !11235)
!11263 = !DILocation(line: 757, column: 26, scope: !11260)
!11264 = !DILocation(line: 759, column: 35, scope: !11235)
!11265 = !DILocation(line: 759, column: 44, scope: !11235)
!11266 = !DILocation(line: 759, column: 64, scope: !11235)
!11267 = !DILocation(line: 759, column: 73, scope: !11235)
!11268 = !DILocation(line: 759, column: 82, scope: !11235)
!11269 = !DILocation(line: 759, column: 88, scope: !11235)
!11270 = !DILocation(line: 759, column: 98, scope: !11235)
!11271 = !DILocation(line: 759, column: 105, scope: !11235)
!11272 = !DILocation(line: 759, column: 19, scope: !11235)
!11273 = !DILocation(line: 759, column: 17, scope: !11235)
!11274 = !DILocation(line: 760, column: 9, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11235, file: !813, line: 760, column: 9)
!11276 = !DILocation(line: 760, column: 21, scope: !11275)
!11277 = !DILocation(line: 760, column: 9, scope: !11235)
!11278 = !DILocation(line: 760, column: 30, scope: !11275)
!11279 = !DILocation(line: 762, column: 28, scope: !11235)
!11280 = !DILocation(line: 762, column: 41, scope: !11235)
!11281 = !DILocation(line: 762, column: 5, scope: !11235)
!11282 = !DILocation(line: 764, column: 9, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11235, file: !813, line: 764, column: 9)
!11284 = !DILocation(line: 764, column: 18, scope: !11283)
!11285 = !DILocation(line: 764, column: 9, scope: !11235)
!11286 = !DILocation(line: 766, column: 30, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11283, file: !813, line: 765, column: 5)
!11288 = !DILocation(line: 766, column: 17, scope: !11287)
!11289 = !DILocation(line: 766, column: 15, scope: !11287)
!11290 = !DILocation(line: 767, column: 13, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11287, file: !813, line: 767, column: 13)
!11292 = !DILocation(line: 767, column: 19, scope: !11291)
!11293 = !DILocation(line: 767, column: 13, scope: !11287)
!11294 = !DILocation(line: 769, column: 30, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11291, file: !813, line: 768, column: 9)
!11296 = !DILocation(line: 769, column: 13, scope: !11295)
!11297 = !DILocation(line: 770, column: 13, scope: !11295)
!11298 = !DILocation(line: 772, column: 17, scope: !11287)
!11299 = !DILocation(line: 772, column: 24, scope: !11287)
!11300 = !DILocation(line: 772, column: 9, scope: !11287)
!11301 = !DILocation(line: 772, column: 29, scope: !11287)
!11302 = !DILocation(line: 773, column: 27, scope: !11287)
!11303 = !DILocation(line: 773, column: 36, scope: !11287)
!11304 = !DILocation(line: 773, column: 9, scope: !11287)
!11305 = !DILocation(line: 773, column: 16, scope: !11287)
!11306 = !DILocation(line: 773, column: 25, scope: !11287)
!11307 = !DILocation(line: 774, column: 27, scope: !11287)
!11308 = !DILocation(line: 774, column: 9, scope: !11287)
!11309 = !DILocation(line: 774, column: 16, scope: !11287)
!11310 = !DILocation(line: 774, column: 25, scope: !11287)
!11311 = !DILocation(line: 775, column: 27, scope: !11287)
!11312 = !DILocation(line: 775, column: 9, scope: !11287)
!11313 = !DILocation(line: 775, column: 16, scope: !11287)
!11314 = !DILocation(line: 775, column: 25, scope: !11287)
!11315 = !DILocation(line: 777, column: 9, scope: !11287)
!11316 = !DILocation(line: 777, column: 22, scope: !11287)
!11317 = !DILocation(line: 777, column: 31, scope: !11287)
!11318 = !DILocation(line: 778, column: 41, scope: !11287)
!11319 = !DILocation(line: 778, column: 33, scope: !11287)
!11320 = !DILocation(line: 778, column: 9, scope: !11287)
!11321 = !DILocation(line: 778, column: 22, scope: !11287)
!11322 = !DILocation(line: 778, column: 31, scope: !11287)
!11323 = !DILocation(line: 779, column: 5, scope: !11287)
!11324 = !DILocation(line: 781, column: 56, scope: !11235)
!11325 = !DILocation(line: 781, column: 33, scope: !11235)
!11326 = !DILocation(line: 781, column: 5, scope: !11235)
!11327 = !DILocation(line: 781, column: 15, scope: !11235)
!11328 = !DILocation(line: 781, column: 31, scope: !11235)
!11329 = !DILocation(line: 783, column: 29, scope: !11235)
!11330 = !DILocation(line: 783, column: 39, scope: !11235)
!11331 = !DILocation(line: 783, column: 12, scope: !11235)
!11332 = !DILocation(line: 783, column: 5, scope: !11235)
!11333 = !DILocation(line: 784, column: 1, scope: !11235)
!11334 = distinct !DISubprogram(name: "observe_remove", scope: !953, file: !953, line: 783, type: !11335, isLocal: false, isDefinition: true, scopeLine: 784, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11335 = !DISubroutineType(types: !11336)
!11336 = !{null, !955}
!11337 = !DILocalVariable(name: "observationP", arg: 1, scope: !11334, file: !953, line: 783, type: !955)
!11338 = !DILocation(line: 783, column: 43, scope: !11334)
!11339 = !DILocation(line: 786, column: 70, scope: !11334)
!11340 = !DILocation(line: 786, column: 46, scope: !11334)
!11341 = !DILocation(line: 786, column: 5, scope: !11334)
!11342 = !DILocation(line: 786, column: 19, scope: !11334)
!11343 = !DILocation(line: 786, column: 28, scope: !11334)
!11344 = !DILocation(line: 786, column: 44, scope: !11334)
!11345 = !DILocation(line: 787, column: 16, scope: !11334)
!11346 = !DILocation(line: 787, column: 5, scope: !11334)
!11347 = !DILocation(line: 788, column: 1, scope: !11334)
!11348 = distinct !DISubprogram(name: "lwm2m_observe", scope: !953, file: !953, line: 885, type: !11349, isLocal: false, isDefinition: true, scopeLine: 890, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{!58, !11351, !79, !1007, !1003, !54}
!11351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11352, size: 64)
!11352 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_context_t", file: !6, line: 670, baseType: !11353)
!11353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 646, size: 384, elements: !11354)
!11354 = !{!11355, !11356, !11357, !11358, !11359, !11360}
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "clientList", scope: !11353, file: !6, line: 659, baseType: !1010, size: 64)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "monitorCallback", scope: !11353, file: !6, line: 660, baseType: !1003, size: 64, offset: 64)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "monitorUserData", scope: !11353, file: !6, line: 661, baseType: !54, size: 64, offset: 128)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "nextMID", scope: !11353, file: !6, line: 667, baseType: !79, size: 16, offset: 192)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "transactionList", scope: !11353, file: !6, line: 668, baseType: !1012, size: 64, offset: 256)
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !11353, file: !6, line: 669, baseType: !54, size: 64, offset: 320)
!11361 = !DILocalVariable(name: "contextP", arg: 1, scope: !11348, file: !953, line: 885, type: !11351)
!11362 = !DILocation(line: 885, column: 37, scope: !11348)
!11363 = !DILocalVariable(name: "clientID", arg: 2, scope: !11348, file: !953, line: 886, type: !79)
!11364 = !DILocation(line: 886, column: 28, scope: !11348)
!11365 = !DILocalVariable(name: "uriP", arg: 3, scope: !11348, file: !953, line: 887, type: !1007)
!11366 = !DILocation(line: 887, column: 33, scope: !11348)
!11367 = !DILocalVariable(name: "callback", arg: 4, scope: !11348, file: !953, line: 888, type: !1003)
!11368 = !DILocation(line: 888, column: 43, scope: !11348)
!11369 = !DILocalVariable(name: "userData", arg: 5, scope: !11348, file: !953, line: 889, type: !54)
!11370 = !DILocation(line: 889, column: 26, scope: !11348)
!11371 = !DILocalVariable(name: "clientP", scope: !11348, file: !953, line: 891, type: !1010)
!11372 = !DILocation(line: 891, column: 22, scope: !11348)
!11373 = !DILocalVariable(name: "transactionP", scope: !11348, file: !953, line: 892, type: !1012)
!11374 = !DILocation(line: 892, column: 27, scope: !11348)
!11375 = !DILocalVariable(name: "observationP", scope: !11348, file: !953, line: 893, type: !955)
!11376 = !DILocation(line: 893, column: 27, scope: !11348)
!11377 = !DILocalVariable(name: "token", scope: !11348, file: !953, line: 894, type: !5234)
!11378 = !DILocation(line: 894, column: 13, scope: !11348)
!11379 = !DILocation(line: 899, column: 10, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11348, file: !953, line: 899, column: 9)
!11381 = !DILocation(line: 899, column: 42, scope: !11380)
!11382 = !DILocation(line: 899, column: 45, scope: !11380)
!11383 = !DILocation(line: 899, column: 9, scope: !11348)
!11384 = !DILocation(line: 899, column: 78, scope: !11380)
!11385 = !DILocation(line: 901, column: 65, scope: !11348)
!11386 = !DILocation(line: 901, column: 75, scope: !11348)
!11387 = !DILocation(line: 901, column: 49, scope: !11348)
!11388 = !DILocation(line: 901, column: 87, scope: !11348)
!11389 = !DILocation(line: 901, column: 33, scope: !11348)
!11390 = !DILocation(line: 901, column: 15, scope: !11348)
!11391 = !DILocation(line: 901, column: 13, scope: !11348)
!11392 = !DILocation(line: 902, column: 9, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11348, file: !953, line: 902, column: 9)
!11394 = !DILocation(line: 902, column: 17, scope: !11393)
!11395 = !DILocation(line: 902, column: 9, scope: !11348)
!11396 = !DILocation(line: 902, column: 26, scope: !11393)
!11397 = !DILocation(line: 904, column: 25, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11348, file: !953, line: 904, column: 5)
!11399 = !DILocation(line: 904, column: 34, scope: !11398)
!11400 = !DILocation(line: 904, column: 23, scope: !11398)
!11401 = !DILocation(line: 904, column: 10, scope: !11398)
!11402 = !DILocation(line: 904, column: 51, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11398, file: !953, line: 904, column: 5)
!11404 = !DILocation(line: 904, column: 64, scope: !11403)
!11405 = !DILocation(line: 904, column: 5, scope: !11398)
!11406 = !DILocation(line: 906, column: 13, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !953, line: 906, column: 13)
!11408 = distinct !DILexicalBlock(scope: !11403, file: !953, line: 905, column: 5)
!11409 = !DILocation(line: 906, column: 19, scope: !11407)
!11410 = !DILocation(line: 906, column: 31, scope: !11407)
!11411 = !DILocation(line: 906, column: 45, scope: !11407)
!11412 = !DILocation(line: 906, column: 49, scope: !11407)
!11413 = !DILocation(line: 906, column: 28, scope: !11407)
!11414 = !DILocation(line: 907, column: 13, scope: !11407)
!11415 = !DILocation(line: 907, column: 17, scope: !11407)
!11416 = !DILocation(line: 907, column: 49, scope: !11407)
!11417 = !DILocation(line: 908, column: 17, scope: !11407)
!11418 = !DILocation(line: 908, column: 20, scope: !11407)
!11419 = !DILocation(line: 908, column: 34, scope: !11407)
!11420 = !DILocation(line: 908, column: 38, scope: !11407)
!11421 = !DILocation(line: 908, column: 52, scope: !11407)
!11422 = !DILocation(line: 908, column: 58, scope: !11407)
!11423 = !DILocation(line: 908, column: 49, scope: !11407)
!11424 = !DILocation(line: 909, column: 13, scope: !11407)
!11425 = !DILocation(line: 909, column: 17, scope: !11407)
!11426 = !DILocation(line: 909, column: 49, scope: !11407)
!11427 = !DILocation(line: 910, column: 17, scope: !11407)
!11428 = !DILocation(line: 910, column: 20, scope: !11407)
!11429 = !DILocation(line: 910, column: 34, scope: !11407)
!11430 = !DILocation(line: 910, column: 38, scope: !11407)
!11431 = !DILocation(line: 910, column: 52, scope: !11407)
!11432 = !DILocation(line: 910, column: 58, scope: !11407)
!11433 = !DILocation(line: 910, column: 49, scope: !11407)
!11434 = !DILocation(line: 906, column: 13, scope: !11408)
!11435 = !DILocation(line: 912, column: 13, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11407, file: !953, line: 911, column: 9)
!11437 = !DILocation(line: 914, column: 5, scope: !11408)
!11438 = !DILocation(line: 904, column: 88, scope: !11403)
!11439 = !DILocation(line: 904, column: 102, scope: !11403)
!11440 = !DILocation(line: 904, column: 86, scope: !11403)
!11441 = !DILocation(line: 904, column: 5, scope: !11403)
!11442 = distinct !{!11442, !11405, !11443}
!11443 = !DILocation(line: 914, column: 5, scope: !11398)
!11444 = !DILocation(line: 915, column: 9, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11348, file: !953, line: 915, column: 9)
!11446 = !DILocation(line: 915, column: 22, scope: !11445)
!11447 = !DILocation(line: 915, column: 9, scope: !11348)
!11448 = !DILocation(line: 917, column: 47, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11445, file: !953, line: 916, column: 5)
!11450 = !DILocation(line: 917, column: 24, scope: !11449)
!11451 = !DILocation(line: 917, column: 22, scope: !11449)
!11452 = !DILocation(line: 918, column: 13, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11449, file: !953, line: 918, column: 13)
!11454 = !DILocation(line: 918, column: 26, scope: !11453)
!11455 = !DILocation(line: 918, column: 13, scope: !11449)
!11456 = !DILocation(line: 918, column: 35, scope: !11453)
!11457 = !DILocation(line: 919, column: 16, scope: !11449)
!11458 = !DILocation(line: 919, column: 9, scope: !11449)
!11459 = !DILocation(line: 921, column: 61, scope: !11449)
!11460 = !DILocation(line: 921, column: 70, scope: !11449)
!11461 = !DILocation(line: 921, column: 45, scope: !11449)
!11462 = !DILocation(line: 921, column: 28, scope: !11449)
!11463 = !DILocation(line: 921, column: 9, scope: !11449)
!11464 = !DILocation(line: 921, column: 23, scope: !11449)
!11465 = !DILocation(line: 921, column: 26, scope: !11449)
!11466 = !DILocation(line: 922, column: 17, scope: !11449)
!11467 = !DILocation(line: 922, column: 31, scope: !11449)
!11468 = !DILocation(line: 922, column: 9, scope: !11449)
!11469 = !DILocation(line: 922, column: 36, scope: !11449)
!11470 = !DILocation(line: 923, column: 33, scope: !11449)
!11471 = !DILocation(line: 923, column: 9, scope: !11449)
!11472 = !DILocation(line: 923, column: 23, scope: !11449)
!11473 = !DILocation(line: 923, column: 31, scope: !11449)
!11474 = !DILocation(line: 925, column: 73, scope: !11449)
!11475 = !DILocation(line: 925, column: 50, scope: !11449)
!11476 = !DILocation(line: 925, column: 9, scope: !11449)
!11477 = !DILocation(line: 925, column: 23, scope: !11449)
!11478 = !DILocation(line: 925, column: 32, scope: !11449)
!11479 = !DILocation(line: 925, column: 48, scope: !11449)
!11480 = !DILocation(line: 926, column: 5, scope: !11449)
!11481 = !DILocation(line: 927, column: 5, scope: !11348)
!11482 = !DILocation(line: 927, column: 19, scope: !11348)
!11483 = !DILocation(line: 927, column: 26, scope: !11348)
!11484 = !DILocation(line: 928, column: 30, scope: !11348)
!11485 = !DILocation(line: 928, column: 5, scope: !11348)
!11486 = !DILocation(line: 928, column: 19, scope: !11348)
!11487 = !DILocation(line: 928, column: 28, scope: !11348)
!11488 = !DILocation(line: 929, column: 30, scope: !11348)
!11489 = !DILocation(line: 929, column: 5, scope: !11348)
!11490 = !DILocation(line: 929, column: 19, scope: !11348)
!11491 = !DILocation(line: 929, column: 28, scope: !11348)
!11492 = !DILocation(line: 931, column: 16, scope: !11348)
!11493 = !DILocation(line: 931, column: 25, scope: !11348)
!11494 = !DILocation(line: 931, column: 36, scope: !11348)
!11495 = !DILocation(line: 931, column: 5, scope: !11348)
!11496 = !DILocation(line: 931, column: 14, scope: !11348)
!11497 = !DILocation(line: 932, column: 16, scope: !11348)
!11498 = !DILocation(line: 932, column: 25, scope: !11348)
!11499 = !DILocation(line: 932, column: 36, scope: !11348)
!11500 = !DILocation(line: 932, column: 5, scope: !11348)
!11501 = !DILocation(line: 932, column: 14, scope: !11348)
!11502 = !DILocation(line: 933, column: 16, scope: !11348)
!11503 = !DILocation(line: 933, column: 30, scope: !11348)
!11504 = !DILocation(line: 933, column: 33, scope: !11348)
!11505 = !DILocation(line: 933, column: 5, scope: !11348)
!11506 = !DILocation(line: 933, column: 14, scope: !11348)
!11507 = !DILocation(line: 934, column: 16, scope: !11348)
!11508 = !DILocation(line: 934, column: 30, scope: !11348)
!11509 = !DILocation(line: 934, column: 33, scope: !11348)
!11510 = !DILocation(line: 934, column: 5, scope: !11348)
!11511 = !DILocation(line: 934, column: 14, scope: !11348)
!11512 = !DILocation(line: 936, column: 36, scope: !11348)
!11513 = !DILocation(line: 936, column: 45, scope: !11348)
!11514 = !DILocation(line: 936, column: 65, scope: !11348)
!11515 = !DILocation(line: 936, column: 74, scope: !11348)
!11516 = !DILocation(line: 936, column: 83, scope: !11348)
!11517 = !DILocation(line: 936, column: 89, scope: !11348)
!11518 = !DILocation(line: 936, column: 99, scope: !11348)
!11519 = !DILocation(line: 936, column: 106, scope: !11348)
!11520 = !DILocation(line: 936, column: 113, scope: !11348)
!11521 = !DILocation(line: 936, column: 20, scope: !11348)
!11522 = !DILocation(line: 936, column: 18, scope: !11348)
!11523 = !DILocation(line: 937, column: 9, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11348, file: !953, line: 937, column: 9)
!11525 = !DILocation(line: 937, column: 22, scope: !11524)
!11526 = !DILocation(line: 937, column: 9, scope: !11348)
!11527 = !DILocation(line: 939, column: 73, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11524, file: !953, line: 938, column: 5)
!11529 = !DILocation(line: 939, column: 50, scope: !11528)
!11530 = !DILocation(line: 939, column: 9, scope: !11528)
!11531 = !DILocation(line: 939, column: 23, scope: !11528)
!11532 = !DILocation(line: 939, column: 32, scope: !11528)
!11533 = !DILocation(line: 939, column: 48, scope: !11528)
!11534 = !DILocation(line: 940, column: 20, scope: !11528)
!11535 = !DILocation(line: 940, column: 9, scope: !11528)
!11536 = !DILocation(line: 941, column: 9, scope: !11528)
!11537 = !DILocation(line: 944, column: 29, scope: !11348)
!11538 = !DILocation(line: 944, column: 43, scope: !11348)
!11539 = !DILocation(line: 944, column: 5, scope: !11348)
!11540 = !DILocation(line: 945, column: 9, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11348, file: !953, line: 945, column: 9)
!11542 = !DILocation(line: 945, column: 18, scope: !11541)
!11543 = !DILocation(line: 945, column: 30, scope: !11541)
!11544 = !DILocation(line: 945, column: 9, scope: !11348)
!11545 = !DILocation(line: 947, column: 32, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11541, file: !953, line: 946, column: 5)
!11547 = !DILocation(line: 947, column: 46, scope: !11546)
!11548 = !DILocation(line: 947, column: 9, scope: !11546)
!11549 = !DILocation(line: 948, column: 5, scope: !11546)
!11550 = !DILocation(line: 951, column: 32, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11541, file: !953, line: 950, column: 5)
!11552 = !DILocation(line: 951, column: 46, scope: !11551)
!11553 = !DILocation(line: 951, column: 9, scope: !11551)
!11554 = !DILocation(line: 954, column: 5, scope: !11348)
!11555 = !DILocation(line: 954, column: 19, scope: !11348)
!11556 = !DILocation(line: 954, column: 28, scope: !11348)
!11557 = !DILocation(line: 955, column: 38, scope: !11348)
!11558 = !DILocation(line: 955, column: 30, scope: !11348)
!11559 = !DILocation(line: 955, column: 5, scope: !11348)
!11560 = !DILocation(line: 955, column: 19, scope: !11348)
!11561 = !DILocation(line: 955, column: 28, scope: !11348)
!11562 = !DILocation(line: 957, column: 56, scope: !11348)
!11563 = !DILocation(line: 957, column: 33, scope: !11348)
!11564 = !DILocation(line: 957, column: 5, scope: !11348)
!11565 = !DILocation(line: 957, column: 15, scope: !11348)
!11566 = !DILocation(line: 957, column: 31, scope: !11348)
!11567 = !DILocation(line: 959, column: 29, scope: !11348)
!11568 = !DILocation(line: 959, column: 39, scope: !11348)
!11569 = !DILocation(line: 959, column: 12, scope: !11348)
!11570 = !DILocation(line: 959, column: 5, scope: !11348)
!11571 = !DILocation(line: 960, column: 1, scope: !11348)
!11572 = distinct !DISubprogram(name: "prv_obsRequestCallback", scope: !953, file: !953, line: 790, type: !1029, isLocal: true, isDefinition: true, scopeLine: 792, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11573 = !DILocalVariable(name: "transacP", arg: 1, scope: !11572, file: !953, line: 790, type: !1012)
!11574 = !DILocation(line: 790, column: 58, scope: !11572)
!11575 = !DILocalVariable(name: "message", arg: 2, scope: !11572, file: !953, line: 791, type: !54)
!11576 = !DILocation(line: 791, column: 43, scope: !11572)
!11577 = !DILocalVariable(name: "observationP", scope: !11572, file: !953, line: 793, type: !955)
!11578 = !DILocation(line: 793, column: 27, scope: !11572)
!11579 = !DILocation(line: 793, column: 65, scope: !11572)
!11580 = !DILocation(line: 793, column: 75, scope: !11572)
!11581 = !DILocation(line: 793, column: 42, scope: !11572)
!11582 = !DILocalVariable(name: "packet", scope: !11572, file: !953, line: 794, type: !1040)
!11583 = !DILocation(line: 794, column: 21, scope: !11572)
!11584 = !DILocation(line: 794, column: 47, scope: !11572)
!11585 = !DILocation(line: 794, column: 30, scope: !11572)
!11586 = !DILocalVariable(name: "code", scope: !11572, file: !953, line: 795, type: !107)
!11587 = !DILocation(line: 795, column: 13, scope: !11572)
!11588 = !DILocation(line: 797, column: 13, scope: !11572)
!11589 = !DILocation(line: 797, column: 27, scope: !11572)
!11590 = !DILocation(line: 797, column: 5, scope: !11572)
!11591 = !DILocation(line: 801, column: 24, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11572, file: !953, line: 798, column: 5)
!11593 = !DILocation(line: 801, column: 9, scope: !11592)
!11594 = !DILocation(line: 802, column: 9, scope: !11592)
!11595 = !DILocation(line: 805, column: 9, scope: !11592)
!11596 = !DILocation(line: 805, column: 23, scope: !11592)
!11597 = !DILocation(line: 805, column: 30, scope: !11592)
!11598 = !DILocation(line: 806, column: 9, scope: !11592)
!11599 = !DILocation(line: 809, column: 9, scope: !11592)
!11600 = !DILocation(line: 812, column: 9, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11572, file: !953, line: 812, column: 9)
!11602 = !DILocation(line: 812, column: 17, scope: !11601)
!11603 = !DILocation(line: 812, column: 9, scope: !11572)
!11604 = !DILocation(line: 814, column: 14, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11601, file: !953, line: 813, column: 5)
!11606 = !DILocation(line: 815, column: 5, scope: !11605)
!11607 = !DILocation(line: 816, column: 14, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11601, file: !953, line: 816, column: 14)
!11609 = !DILocation(line: 816, column: 22, scope: !11608)
!11610 = !DILocation(line: 816, column: 27, scope: !11608)
!11611 = !DILocation(line: 817, column: 10, scope: !11608)
!11612 = !DILocation(line: 816, column: 14, scope: !11601)
!11613 = !DILocation(line: 817, column: 14, scope: !11608)
!11614 = !DILocation(line: 819, column: 14, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11608, file: !953, line: 818, column: 5)
!11616 = !DILocation(line: 820, column: 5, scope: !11615)
!11617 = !DILocation(line: 823, column: 16, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11608, file: !953, line: 822, column: 5)
!11619 = !DILocation(line: 823, column: 24, scope: !11618)
!11620 = !DILocation(line: 823, column: 14, scope: !11618)
!11621 = !DILocation(line: 826, column: 9, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11572, file: !953, line: 826, column: 9)
!11623 = !DILocation(line: 826, column: 14, scope: !11622)
!11624 = !DILocation(line: 826, column: 9, scope: !11572)
!11625 = !DILocation(line: 828, column: 9, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11622, file: !953, line: 827, column: 5)
!11627 = !DILocation(line: 828, column: 23, scope: !11626)
!11628 = !DILocation(line: 828, column: 32, scope: !11626)
!11629 = !DILocation(line: 828, column: 46, scope: !11626)
!11630 = !DILocation(line: 828, column: 55, scope: !11626)
!11631 = !DILocation(line: 829, column: 33, scope: !11626)
!11632 = !DILocation(line: 829, column: 47, scope: !11626)
!11633 = !DILocation(line: 830, column: 32, scope: !11626)
!11634 = !DILocation(line: 832, column: 32, scope: !11626)
!11635 = !DILocation(line: 832, column: 46, scope: !11626)
!11636 = !DILocation(line: 833, column: 24, scope: !11626)
!11637 = !DILocation(line: 833, column: 9, scope: !11626)
!11638 = !DILocation(line: 834, column: 5, scope: !11626)
!11639 = !DILocation(line: 837, column: 9, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11622, file: !953, line: 836, column: 5)
!11641 = !DILocation(line: 837, column: 23, scope: !11640)
!11642 = !DILocation(line: 837, column: 32, scope: !11640)
!11643 = !DILocation(line: 837, column: 46, scope: !11640)
!11644 = !DILocation(line: 837, column: 55, scope: !11640)
!11645 = !DILocation(line: 838, column: 33, scope: !11640)
!11646 = !DILocation(line: 838, column: 47, scope: !11640)
!11647 = !DILocation(line: 840, column: 32, scope: !11640)
!11648 = !DILocation(line: 840, column: 40, scope: !11640)
!11649 = !DILocation(line: 840, column: 54, scope: !11640)
!11650 = !DILocation(line: 840, column: 62, scope: !11640)
!11651 = !DILocation(line: 840, column: 71, scope: !11640)
!11652 = !DILocation(line: 840, column: 79, scope: !11640)
!11653 = !DILocation(line: 841, column: 32, scope: !11640)
!11654 = !DILocation(line: 841, column: 46, scope: !11640)
!11655 = !DILocation(line: 843, column: 1, scope: !11572)
!11656 = distinct !DISubprogram(name: "lwm2m_observe_cancel", scope: !953, file: !953, line: 962, type: !11349, isLocal: false, isDefinition: true, scopeLine: 967, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11657 = !DILocalVariable(name: "contextP", arg: 1, scope: !11656, file: !953, line: 962, type: !11351)
!11658 = !DILocation(line: 962, column: 44, scope: !11656)
!11659 = !DILocalVariable(name: "clientID", arg: 2, scope: !11656, file: !953, line: 963, type: !79)
!11660 = !DILocation(line: 963, column: 35, scope: !11656)
!11661 = !DILocalVariable(name: "uriP", arg: 3, scope: !11656, file: !953, line: 964, type: !1007)
!11662 = !DILocation(line: 964, column: 40, scope: !11656)
!11663 = !DILocalVariable(name: "callback", arg: 4, scope: !11656, file: !953, line: 965, type: !1003)
!11664 = !DILocation(line: 965, column: 50, scope: !11656)
!11665 = !DILocalVariable(name: "userData", arg: 5, scope: !11656, file: !953, line: 966, type: !54)
!11666 = !DILocation(line: 966, column: 33, scope: !11656)
!11667 = !DILocalVariable(name: "clientP", scope: !11656, file: !953, line: 968, type: !1010)
!11668 = !DILocation(line: 968, column: 22, scope: !11656)
!11669 = !DILocalVariable(name: "observationP", scope: !11656, file: !953, line: 969, type: !955)
!11670 = !DILocation(line: 969, column: 27, scope: !11656)
!11671 = !DILocation(line: 974, column: 65, scope: !11656)
!11672 = !DILocation(line: 974, column: 75, scope: !11656)
!11673 = !DILocation(line: 974, column: 49, scope: !11656)
!11674 = !DILocation(line: 974, column: 87, scope: !11656)
!11675 = !DILocation(line: 974, column: 33, scope: !11656)
!11676 = !DILocation(line: 974, column: 15, scope: !11656)
!11677 = !DILocation(line: 974, column: 13, scope: !11656)
!11678 = !DILocation(line: 975, column: 9, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11656, file: !953, line: 975, column: 9)
!11680 = !DILocation(line: 975, column: 17, scope: !11679)
!11681 = !DILocation(line: 975, column: 9, scope: !11656)
!11682 = !DILocation(line: 975, column: 26, scope: !11679)
!11683 = !DILocation(line: 977, column: 45, scope: !11656)
!11684 = !DILocation(line: 977, column: 54, scope: !11656)
!11685 = !DILocation(line: 977, column: 20, scope: !11656)
!11686 = !DILocation(line: 977, column: 18, scope: !11656)
!11687 = !DILocation(line: 978, column: 9, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11656, file: !953, line: 978, column: 9)
!11689 = !DILocation(line: 978, column: 22, scope: !11688)
!11690 = !DILocation(line: 978, column: 9, scope: !11656)
!11691 = !DILocation(line: 978, column: 31, scope: !11688)
!11692 = !DILocation(line: 980, column: 13, scope: !11656)
!11693 = !DILocation(line: 980, column: 27, scope: !11656)
!11694 = !DILocation(line: 980, column: 5, scope: !11656)
!11695 = !DILocalVariable(name: "transactionP", scope: !11696, file: !953, line: 984, type: !1012)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !953, line: 983, column: 5)
!11697 = distinct !DILexicalBlock(scope: !11656, file: !953, line: 981, column: 5)
!11698 = !DILocation(line: 984, column: 31, scope: !11696)
!11699 = !DILocalVariable(name: "cancelP", scope: !11696, file: !953, line: 985, type: !1032)
!11700 = !DILocation(line: 985, column: 31, scope: !11696)
!11701 = !DILocalVariable(name: "token", scope: !11696, file: !953, line: 986, type: !5234)
!11702 = !DILocation(line: 986, column: 17, scope: !11696)
!11703 = !DILocation(line: 988, column: 20, scope: !11696)
!11704 = !DILocation(line: 988, column: 29, scope: !11696)
!11705 = !DILocation(line: 988, column: 40, scope: !11696)
!11706 = !DILocation(line: 988, column: 9, scope: !11696)
!11707 = !DILocation(line: 988, column: 18, scope: !11696)
!11708 = !DILocation(line: 989, column: 20, scope: !11696)
!11709 = !DILocation(line: 989, column: 29, scope: !11696)
!11710 = !DILocation(line: 989, column: 40, scope: !11696)
!11711 = !DILocation(line: 989, column: 9, scope: !11696)
!11712 = !DILocation(line: 989, column: 18, scope: !11696)
!11713 = !DILocation(line: 990, column: 20, scope: !11696)
!11714 = !DILocation(line: 990, column: 34, scope: !11696)
!11715 = !DILocation(line: 990, column: 37, scope: !11696)
!11716 = !DILocation(line: 990, column: 9, scope: !11696)
!11717 = !DILocation(line: 990, column: 18, scope: !11696)
!11718 = !DILocation(line: 991, column: 20, scope: !11696)
!11719 = !DILocation(line: 991, column: 34, scope: !11696)
!11720 = !DILocation(line: 991, column: 37, scope: !11696)
!11721 = !DILocation(line: 991, column: 9, scope: !11696)
!11722 = !DILocation(line: 991, column: 18, scope: !11696)
!11723 = !DILocation(line: 993, column: 40, scope: !11696)
!11724 = !DILocation(line: 993, column: 49, scope: !11696)
!11725 = !DILocation(line: 993, column: 69, scope: !11696)
!11726 = !DILocation(line: 993, column: 78, scope: !11696)
!11727 = !DILocation(line: 993, column: 87, scope: !11696)
!11728 = !DILocation(line: 993, column: 93, scope: !11696)
!11729 = !DILocation(line: 993, column: 103, scope: !11696)
!11730 = !DILocation(line: 993, column: 110, scope: !11696)
!11731 = !DILocation(line: 993, column: 117, scope: !11696)
!11732 = !DILocation(line: 993, column: 24, scope: !11696)
!11733 = !DILocation(line: 993, column: 22, scope: !11696)
!11734 = !DILocation(line: 994, column: 13, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11696, file: !953, line: 994, column: 13)
!11736 = !DILocation(line: 994, column: 26, scope: !11735)
!11737 = !DILocation(line: 994, column: 13, scope: !11696)
!11738 = !DILocation(line: 996, column: 13, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !953, line: 995, column: 9)
!11740 = !DILocation(line: 998, column: 42, scope: !11696)
!11741 = !DILocation(line: 998, column: 19, scope: !11696)
!11742 = !DILocation(line: 998, column: 17, scope: !11696)
!11743 = !DILocation(line: 999, column: 13, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11696, file: !953, line: 999, column: 13)
!11745 = !DILocation(line: 999, column: 21, scope: !11744)
!11746 = !DILocation(line: 999, column: 13, scope: !11696)
!11747 = !DILocation(line: 1001, column: 24, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11744, file: !953, line: 1000, column: 9)
!11749 = !DILocation(line: 1001, column: 13, scope: !11748)
!11750 = !DILocation(line: 1002, column: 13, scope: !11748)
!11751 = !DILocation(line: 1005, column: 33, scope: !11696)
!11752 = !DILocation(line: 1005, column: 47, scope: !11696)
!11753 = !DILocation(line: 1005, column: 9, scope: !11696)
!11754 = !DILocation(line: 1007, column: 33, scope: !11696)
!11755 = !DILocation(line: 1007, column: 9, scope: !11696)
!11756 = !DILocation(line: 1007, column: 18, scope: !11696)
!11757 = !DILocation(line: 1007, column: 31, scope: !11696)
!11758 = !DILocation(line: 1008, column: 30, scope: !11696)
!11759 = !DILocation(line: 1008, column: 9, scope: !11696)
!11760 = !DILocation(line: 1008, column: 18, scope: !11696)
!11761 = !DILocation(line: 1008, column: 28, scope: !11696)
!11762 = !DILocation(line: 1009, column: 30, scope: !11696)
!11763 = !DILocation(line: 1009, column: 9, scope: !11696)
!11764 = !DILocation(line: 1009, column: 18, scope: !11696)
!11765 = !DILocation(line: 1009, column: 28, scope: !11696)
!11766 = !DILocation(line: 1011, column: 9, scope: !11696)
!11767 = !DILocation(line: 1011, column: 23, scope: !11696)
!11768 = !DILocation(line: 1011, column: 32, scope: !11696)
!11769 = !DILocation(line: 1012, column: 42, scope: !11696)
!11770 = !DILocation(line: 1012, column: 34, scope: !11696)
!11771 = !DILocation(line: 1012, column: 9, scope: !11696)
!11772 = !DILocation(line: 1012, column: 23, scope: !11696)
!11773 = !DILocation(line: 1012, column: 32, scope: !11696)
!11774 = !DILocation(line: 1014, column: 60, scope: !11696)
!11775 = !DILocation(line: 1014, column: 37, scope: !11696)
!11776 = !DILocation(line: 1014, column: 9, scope: !11696)
!11777 = !DILocation(line: 1014, column: 19, scope: !11696)
!11778 = !DILocation(line: 1014, column: 35, scope: !11696)
!11779 = !DILocation(line: 1016, column: 33, scope: !11696)
!11780 = !DILocation(line: 1016, column: 43, scope: !11696)
!11781 = !DILocation(line: 1016, column: 16, scope: !11696)
!11782 = !DILocation(line: 1016, column: 9, scope: !11696)
!11783 = !DILocation(line: 1020, column: 9, scope: !11697)
!11784 = !DILocation(line: 1020, column: 23, scope: !11697)
!11785 = !DILocation(line: 1020, column: 30, scope: !11697)
!11786 = !DILocation(line: 1021, column: 9, scope: !11697)
!11787 = !DILocation(line: 1025, column: 9, scope: !11697)
!11788 = !DILocation(line: 1028, column: 5, scope: !11656)
!11789 = !DILocation(line: 1029, column: 1, scope: !11656)
!11790 = distinct !DISubprogram(name: "prv_findObservationByURI", scope: !953, file: !953, line: 761, type: !11791, isLocal: true, isDefinition: true, scopeLine: 763, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{!955, !1010, !1007}
!11793 = !DILocalVariable(name: "clientP", arg: 1, scope: !11790, file: !953, line: 761, type: !1010)
!11794 = !DILocation(line: 761, column: 72, scope: !11790)
!11795 = !DILocalVariable(name: "uriP", arg: 2, scope: !11790, file: !953, line: 762, type: !1007)
!11796 = !DILocation(line: 762, column: 69, scope: !11790)
!11797 = !DILocalVariable(name: "targetP", scope: !11790, file: !953, line: 764, type: !955)
!11798 = !DILocation(line: 764, column: 27, scope: !11790)
!11799 = !DILocation(line: 766, column: 15, scope: !11790)
!11800 = !DILocation(line: 766, column: 24, scope: !11790)
!11801 = !DILocation(line: 766, column: 13, scope: !11790)
!11802 = !DILocation(line: 767, column: 5, scope: !11790)
!11803 = !DILocation(line: 767, column: 12, scope: !11790)
!11804 = !DILocation(line: 767, column: 20, scope: !11790)
!11805 = !DILocation(line: 769, column: 13, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !953, line: 769, column: 13)
!11807 = distinct !DILexicalBlock(scope: !11790, file: !953, line: 768, column: 5)
!11808 = !DILocation(line: 769, column: 22, scope: !11806)
!11809 = !DILocation(line: 769, column: 26, scope: !11806)
!11810 = !DILocation(line: 769, column: 38, scope: !11806)
!11811 = !DILocation(line: 769, column: 44, scope: !11806)
!11812 = !DILocation(line: 769, column: 35, scope: !11806)
!11813 = !DILocation(line: 770, column: 10, scope: !11806)
!11814 = !DILocation(line: 770, column: 13, scope: !11806)
!11815 = !DILocation(line: 770, column: 22, scope: !11806)
!11816 = !DILocation(line: 770, column: 26, scope: !11806)
!11817 = !DILocation(line: 770, column: 34, scope: !11806)
!11818 = !DILocation(line: 770, column: 40, scope: !11806)
!11819 = !DILocation(line: 770, column: 31, scope: !11806)
!11820 = !DILocation(line: 771, column: 10, scope: !11806)
!11821 = !DILocation(line: 771, column: 13, scope: !11806)
!11822 = !DILocation(line: 771, column: 22, scope: !11806)
!11823 = !DILocation(line: 771, column: 26, scope: !11806)
!11824 = !DILocation(line: 771, column: 40, scope: !11806)
!11825 = !DILocation(line: 771, column: 46, scope: !11806)
!11826 = !DILocation(line: 771, column: 37, scope: !11806)
!11827 = !DILocation(line: 772, column: 10, scope: !11806)
!11828 = !DILocation(line: 772, column: 13, scope: !11806)
!11829 = !DILocation(line: 772, column: 22, scope: !11806)
!11830 = !DILocation(line: 772, column: 26, scope: !11806)
!11831 = !DILocation(line: 772, column: 40, scope: !11806)
!11832 = !DILocation(line: 772, column: 46, scope: !11806)
!11833 = !DILocation(line: 772, column: 37, scope: !11806)
!11834 = !DILocation(line: 769, column: 13, scope: !11807)
!11835 = !DILocation(line: 774, column: 20, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11806, file: !953, line: 773, column: 9)
!11837 = !DILocation(line: 774, column: 13, scope: !11836)
!11838 = !DILocation(line: 777, column: 19, scope: !11807)
!11839 = !DILocation(line: 777, column: 28, scope: !11807)
!11840 = !DILocation(line: 777, column: 17, scope: !11807)
!11841 = distinct !{!11841, !11802, !11842}
!11842 = !DILocation(line: 778, column: 5, scope: !11790)
!11843 = !DILocation(line: 780, column: 12, scope: !11790)
!11844 = !DILocation(line: 780, column: 5, scope: !11790)
!11845 = !DILocation(line: 781, column: 1, scope: !11790)
!11846 = distinct !DISubprogram(name: "prv_obsCancelRequestCallback", scope: !953, file: !953, line: 846, type: !1029, isLocal: true, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11847 = !DILocalVariable(name: "transacP", arg: 1, scope: !11846, file: !953, line: 846, type: !1012)
!11848 = !DILocation(line: 846, column: 64, scope: !11846)
!11849 = !DILocalVariable(name: "message", arg: 2, scope: !11846, file: !953, line: 847, type: !54)
!11850 = !DILocation(line: 847, column: 49, scope: !11846)
!11851 = !DILocalVariable(name: "cancelP", scope: !11846, file: !953, line: 849, type: !1032)
!11852 = !DILocation(line: 849, column: 27, scope: !11846)
!11853 = !DILocation(line: 849, column: 60, scope: !11846)
!11854 = !DILocation(line: 849, column: 70, scope: !11846)
!11855 = !DILocation(line: 849, column: 37, scope: !11846)
!11856 = !DILocalVariable(name: "packet", scope: !11846, file: !953, line: 850, type: !1040)
!11857 = !DILocation(line: 850, column: 21, scope: !11846)
!11858 = !DILocation(line: 850, column: 47, scope: !11846)
!11859 = !DILocation(line: 850, column: 30, scope: !11846)
!11860 = !DILocalVariable(name: "code", scope: !11846, file: !953, line: 851, type: !107)
!11861 = !DILocation(line: 851, column: 13, scope: !11846)
!11862 = !DILocation(line: 853, column: 9, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11846, file: !953, line: 853, column: 9)
!11864 = !DILocation(line: 853, column: 17, scope: !11863)
!11865 = !DILocation(line: 853, column: 9, scope: !11846)
!11866 = !DILocation(line: 855, column: 14, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11863, file: !953, line: 854, column: 5)
!11868 = !DILocation(line: 856, column: 5, scope: !11867)
!11869 = !DILocation(line: 859, column: 16, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11863, file: !953, line: 858, column: 5)
!11871 = !DILocation(line: 859, column: 24, scope: !11870)
!11872 = !DILocation(line: 859, column: 14, scope: !11870)
!11873 = !DILocation(line: 862, column: 9, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11846, file: !953, line: 862, column: 9)
!11875 = !DILocation(line: 862, column: 14, scope: !11874)
!11876 = !DILocation(line: 862, column: 9, scope: !11846)
!11877 = !DILocation(line: 864, column: 9, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11874, file: !953, line: 863, column: 5)
!11879 = !DILocation(line: 864, column: 18, scope: !11878)
!11880 = !DILocation(line: 864, column: 28, scope: !11878)
!11881 = !DILocation(line: 864, column: 37, scope: !11878)
!11882 = !DILocation(line: 864, column: 51, scope: !11878)
!11883 = !DILocation(line: 864, column: 60, scope: !11878)
!11884 = !DILocation(line: 865, column: 29, scope: !11878)
!11885 = !DILocation(line: 865, column: 38, scope: !11878)
!11886 = !DILocation(line: 865, column: 52, scope: !11878)
!11887 = !DILocation(line: 866, column: 28, scope: !11878)
!11888 = !DILocation(line: 868, column: 28, scope: !11878)
!11889 = !DILocation(line: 868, column: 37, scope: !11878)
!11890 = !DILocation(line: 869, column: 5, scope: !11878)
!11891 = !DILocation(line: 872, column: 9, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11874, file: !953, line: 871, column: 5)
!11893 = !DILocation(line: 872, column: 18, scope: !11892)
!11894 = !DILocation(line: 872, column: 28, scope: !11892)
!11895 = !DILocation(line: 872, column: 37, scope: !11892)
!11896 = !DILocation(line: 872, column: 51, scope: !11892)
!11897 = !DILocation(line: 872, column: 60, scope: !11892)
!11898 = !DILocation(line: 873, column: 29, scope: !11892)
!11899 = !DILocation(line: 873, column: 38, scope: !11892)
!11900 = !DILocation(line: 873, column: 52, scope: !11892)
!11901 = !DILocation(line: 875, column: 28, scope: !11892)
!11902 = !DILocation(line: 875, column: 36, scope: !11892)
!11903 = !DILocation(line: 875, column: 50, scope: !11892)
!11904 = !DILocation(line: 875, column: 58, scope: !11892)
!11905 = !DILocation(line: 875, column: 67, scope: !11892)
!11906 = !DILocation(line: 875, column: 75, scope: !11892)
!11907 = !DILocation(line: 876, column: 28, scope: !11892)
!11908 = !DILocation(line: 876, column: 37, scope: !11892)
!11909 = !DILocation(line: 879, column: 20, scope: !11846)
!11910 = !DILocation(line: 879, column: 29, scope: !11846)
!11911 = !DILocation(line: 879, column: 5, scope: !11846)
!11912 = !DILocation(line: 881, column: 16, scope: !11846)
!11913 = !DILocation(line: 881, column: 5, scope: !11846)
!11914 = !DILocation(line: 882, column: 1, scope: !11846)
!11915 = distinct !DISubprogram(name: "observe_handleNotify", scope: !953, file: !953, line: 1031, type: !11916, isLocal: false, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: false, unit: !952, variables: !488)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!136, !11351, !54, !1040, !1040}
!11918 = !DILocalVariable(name: "contextP", arg: 1, scope: !11915, file: !953, line: 1031, type: !11351)
!11919 = !DILocation(line: 1031, column: 45, scope: !11915)
!11920 = !DILocalVariable(name: "fromSessionH", arg: 2, scope: !11915, file: !953, line: 1032, type: !54)
!11921 = !DILocation(line: 1032, column: 35, scope: !11915)
!11922 = !DILocalVariable(name: "message", arg: 3, scope: !11915, file: !953, line: 1033, type: !1040)
!11923 = !DILocation(line: 1033, column: 44, scope: !11915)
!11924 = !DILocalVariable(name: "response", arg: 4, scope: !11915, file: !953, line: 1034, type: !1040)
!11925 = !DILocation(line: 1034, column: 32, scope: !11915)
!11926 = !DILocalVariable(name: "tokenP", scope: !11915, file: !953, line: 1036, type: !186)
!11927 = !DILocation(line: 1036, column: 15, scope: !11915)
!11928 = !DILocalVariable(name: "token_len", scope: !11915, file: !953, line: 1037, type: !58)
!11929 = !DILocation(line: 1037, column: 9, scope: !11915)
!11930 = !DILocalVariable(name: "clientID", scope: !11915, file: !953, line: 1038, type: !79)
!11931 = !DILocation(line: 1038, column: 14, scope: !11915)
!11932 = !DILocalVariable(name: "obsID", scope: !11915, file: !953, line: 1039, type: !79)
!11933 = !DILocation(line: 1039, column: 14, scope: !11915)
!11934 = !DILocalVariable(name: "clientP", scope: !11915, file: !953, line: 1040, type: !1010)
!11935 = !DILocation(line: 1040, column: 22, scope: !11915)
!11936 = !DILocalVariable(name: "observationP", scope: !11915, file: !953, line: 1041, type: !955)
!11937 = !DILocation(line: 1041, column: 27, scope: !11915)
!11938 = !DILocalVariable(name: "count", scope: !11915, file: !953, line: 1042, type: !86)
!11939 = !DILocation(line: 1042, column: 14, scope: !11915)
!11940 = !DILocation(line: 1045, column: 39, scope: !11915)
!11941 = !DILocation(line: 1045, column: 17, scope: !11915)
!11942 = !DILocation(line: 1045, column: 15, scope: !11915)
!11943 = !DILocation(line: 1046, column: 9, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11915, file: !953, line: 1046, column: 9)
!11945 = !DILocation(line: 1046, column: 19, scope: !11944)
!11946 = !DILocation(line: 1046, column: 9, scope: !11915)
!11947 = !DILocation(line: 1046, column: 40, scope: !11944)
!11948 = !DILocation(line: 1048, column: 38, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11915, file: !953, line: 1048, column: 9)
!11950 = !DILocation(line: 1048, column: 14, scope: !11949)
!11951 = !DILocation(line: 1048, column: 11, scope: !11949)
!11952 = !DILocation(line: 1048, column: 9, scope: !11915)
!11953 = !DILocation(line: 1048, column: 56, scope: !11949)
!11954 = !DILocation(line: 1050, column: 17, scope: !11915)
!11955 = !DILocation(line: 1050, column: 27, scope: !11915)
!11956 = !DILocation(line: 1050, column: 35, scope: !11915)
!11957 = !DILocation(line: 1050, column: 33, scope: !11915)
!11958 = !DILocation(line: 1050, column: 16, scope: !11915)
!11959 = !DILocation(line: 1050, column: 14, scope: !11915)
!11960 = !DILocation(line: 1051, column: 14, scope: !11915)
!11961 = !DILocation(line: 1051, column: 24, scope: !11915)
!11962 = !DILocation(line: 1051, column: 32, scope: !11915)
!11963 = !DILocation(line: 1051, column: 30, scope: !11915)
!11964 = !DILocation(line: 1051, column: 13, scope: !11915)
!11965 = !DILocation(line: 1051, column: 11, scope: !11915)
!11966 = !DILocation(line: 1053, column: 65, scope: !11915)
!11967 = !DILocation(line: 1053, column: 75, scope: !11915)
!11968 = !DILocation(line: 1053, column: 49, scope: !11915)
!11969 = !DILocation(line: 1053, column: 87, scope: !11915)
!11970 = !DILocation(line: 1053, column: 33, scope: !11915)
!11971 = !DILocation(line: 1053, column: 15, scope: !11915)
!11972 = !DILocation(line: 1053, column: 13, scope: !11915)
!11973 = !DILocation(line: 1054, column: 9, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11915, file: !953, line: 1054, column: 9)
!11975 = !DILocation(line: 1054, column: 17, scope: !11974)
!11976 = !DILocation(line: 1054, column: 9, scope: !11915)
!11977 = !DILocation(line: 1054, column: 26, scope: !11974)
!11978 = !DILocation(line: 1056, column: 75, scope: !11915)
!11979 = !DILocation(line: 1056, column: 84, scope: !11915)
!11980 = !DILocation(line: 1056, column: 59, scope: !11915)
!11981 = !DILocation(line: 1056, column: 101, scope: !11915)
!11982 = !DILocation(line: 1056, column: 43, scope: !11915)
!11983 = !DILocation(line: 1056, column: 20, scope: !11915)
!11984 = !DILocation(line: 1056, column: 18, scope: !11915)
!11985 = !DILocation(line: 1057, column: 9, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11915, file: !953, line: 1057, column: 9)
!11987 = !DILocation(line: 1057, column: 22, scope: !11986)
!11988 = !DILocation(line: 1057, column: 9, scope: !11915)
!11989 = !DILocation(line: 1059, column: 27, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11986, file: !953, line: 1058, column: 5)
!11991 = !DILocation(line: 1059, column: 55, scope: !11990)
!11992 = !DILocation(line: 1059, column: 64, scope: !11990)
!11993 = !DILocation(line: 1059, column: 9, scope: !11990)
!11994 = !DILocation(line: 1060, column: 22, scope: !11990)
!11995 = !DILocation(line: 1060, column: 32, scope: !11990)
!11996 = !DILocation(line: 1060, column: 42, scope: !11990)
!11997 = !DILocation(line: 1060, column: 9, scope: !11990)
!11998 = !DILocation(line: 1061, column: 5, scope: !11990)
!11999 = !DILocation(line: 1064, column: 13, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !953, line: 1064, column: 13)
!12001 = distinct !DILexicalBlock(scope: !11986, file: !953, line: 1063, column: 5)
!12002 = !DILocation(line: 1064, column: 22, scope: !12000)
!12003 = !DILocation(line: 1064, column: 27, scope: !12000)
!12004 = !DILocation(line: 1064, column: 13, scope: !12001)
!12005 = !DILocation(line: 1065, column: 31, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12000, file: !953, line: 1064, column: 46)
!12007 = !DILocation(line: 1065, column: 59, scope: !12006)
!12008 = !DILocation(line: 1065, column: 68, scope: !12006)
!12009 = !DILocation(line: 1065, column: 13, scope: !12006)
!12010 = !DILocation(line: 1066, column: 26, scope: !12006)
!12011 = !DILocation(line: 1066, column: 36, scope: !12006)
!12012 = !DILocation(line: 1066, column: 46, scope: !12006)
!12013 = !DILocation(line: 1066, column: 13, scope: !12006)
!12014 = !DILocation(line: 1067, column: 9, scope: !12006)
!12015 = !DILocation(line: 1068, column: 9, scope: !12001)
!12016 = !DILocation(line: 1068, column: 23, scope: !12001)
!12017 = !DILocation(line: 1068, column: 32, scope: !12001)
!12018 = !DILocation(line: 1069, column: 33, scope: !12001)
!12019 = !DILocation(line: 1069, column: 47, scope: !12001)
!12020 = !DILocation(line: 1070, column: 37, scope: !12001)
!12021 = !DILocation(line: 1071, column: 32, scope: !12001)
!12022 = !DILocation(line: 1071, column: 41, scope: !12001)
!12023 = !DILocation(line: 1071, column: 55, scope: !12001)
!12024 = !DILocation(line: 1071, column: 64, scope: !12001)
!12025 = !DILocation(line: 1071, column: 73, scope: !12001)
!12026 = !DILocation(line: 1071, column: 82, scope: !12001)
!12027 = !DILocation(line: 1072, column: 32, scope: !12001)
!12028 = !DILocation(line: 1072, column: 46, scope: !12001)
!12029 = !DILocation(line: 1074, column: 5, scope: !11915)
!12030 = !DILocation(line: 1075, column: 1, scope: !11915)
!12031 = distinct !DISubprogram(name: "json_parse", scope: !1093, file: !1093, line: 753, type: !12032, isLocal: false, isDefinition: true, scopeLine: 757, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!12032 = !DISubroutineType(types: !12033)
!12033 = !{!58, !12034, !186, !438, !12042}
!12034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12035, size: 64)
!12035 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_uri_t", file: !6, line: 259, baseType: !12036)
!12036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 253, size: 64, elements: !12037)
!12037 = !{!12038, !12039, !12040, !12041}
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12036, file: !6, line: 255, baseType: !107, size: 8)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !12036, file: !6, line: 256, baseType: !79, size: 16, offset: 16)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "instanceId", scope: !12036, file: !6, line: 257, baseType: !79, size: 16, offset: 32)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "resourceId", scope: !12036, file: !6, line: 258, baseType: !79, size: 16, offset: 48)
!12042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12043, size: 64)
!12043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12044, size: 64)
!12044 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_data_t", file: !6, line: 298, baseType: !12045)
!12045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_data_t", file: !6, line: 300, size: 192, elements: !12046)
!12046 = !{!12047, !12048, !12049}
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12045, file: !6, line: 302, baseType: !689, size: 32)
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12045, file: !6, line: 303, baseType: !79, size: 16, offset: 32)
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12045, file: !6, line: 324, baseType: !12050, size: 128, offset: 64)
!12050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12045, file: !6, line: 304, size: 128, elements: !12051)
!12051 = !{!12052, !12053, !12054, !12055, !12060, !12065}
!12052 = !DIDerivedType(tag: DW_TAG_member, name: "asBoolean", scope: !12050, file: !6, line: 306, baseType: !136, size: 8)
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "asInteger", scope: !12050, file: !6, line: 307, baseType: !254, size: 64)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "asFloat", scope: !12050, file: !6, line: 308, baseType: !253, size: 64)
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "asBuffer", scope: !12050, file: !6, line: 313, baseType: !12056, size: 128)
!12056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12050, file: !6, line: 309, size: 128, elements: !12057)
!12057 = !{!12058, !12059}
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12056, file: !6, line: 311, baseType: !438, size: 64)
!12059 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !12056, file: !6, line: 312, baseType: !186, size: 64, offset: 64)
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "asChildren", scope: !12050, file: !6, line: 318, baseType: !12061, size: 128)
!12061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12050, file: !6, line: 314, size: 128, elements: !12062)
!12062 = !{!12063, !12064}
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !12061, file: !6, line: 316, baseType: !438, size: 64)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !12061, file: !6, line: 317, baseType: !12043, size: 64, offset: 64)
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "asObjLink", scope: !12050, file: !6, line: 323, baseType: !12066, size: 32)
!12066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12050, file: !6, line: 319, size: 32, elements: !12067)
!12067 = !{!12068, !12069}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !12066, file: !6, line: 321, baseType: !79, size: 16)
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "objectInstanceId", scope: !12066, file: !6, line: 322, baseType: !79, size: 16, offset: 16)
!12070 = !DILocalVariable(name: "uriP", arg: 1, scope: !12031, file: !1093, line: 753, type: !12034)
!12071 = !DILocation(line: 753, column: 30, scope: !12031)
!12072 = !DILocalVariable(name: "buffer", arg: 2, scope: !12031, file: !1093, line: 754, type: !186)
!12073 = !DILocation(line: 754, column: 26, scope: !12031)
!12074 = !DILocalVariable(name: "bufferLen", arg: 3, scope: !12031, file: !1093, line: 755, type: !438)
!12075 = !DILocation(line: 755, column: 23, scope: !12031)
!12076 = !DILocalVariable(name: "dataP", arg: 4, scope: !12031, file: !1093, line: 756, type: !12042)
!12077 = !DILocation(line: 756, column: 32, scope: !12031)
!12078 = !DILocalVariable(name: "index", scope: !12031, file: !1093, line: 758, type: !438)
!12079 = !DILocation(line: 758, column: 12, scope: !12031)
!12080 = !DILocalVariable(name: "count", scope: !12031, file: !1093, line: 759, type: !58)
!12081 = !DILocation(line: 759, column: 9, scope: !12031)
!12082 = !DILocalVariable(name: "eFound", scope: !12031, file: !1093, line: 760, type: !136)
!12083 = !DILocation(line: 760, column: 10, scope: !12031)
!12084 = !DILocalVariable(name: "bnFound", scope: !12031, file: !1093, line: 761, type: !136)
!12085 = !DILocation(line: 761, column: 10, scope: !12031)
!12086 = !DILocalVariable(name: "btFound", scope: !12031, file: !1093, line: 762, type: !136)
!12087 = !DILocation(line: 762, column: 10, scope: !12031)
!12088 = !DILocalVariable(name: "bnStart", scope: !12031, file: !1093, line: 763, type: !58)
!12089 = !DILocation(line: 763, column: 9, scope: !12031)
!12090 = !DILocalVariable(name: "bnLen", scope: !12031, file: !1093, line: 764, type: !58)
!12091 = !DILocation(line: 764, column: 9, scope: !12031)
!12092 = !DILocalVariable(name: "recordArray", scope: !12031, file: !1093, line: 765, type: !1112)
!12093 = !DILocation(line: 765, column: 17, scope: !12031)
!12094 = !DILocalVariable(name: "parsedP", scope: !12031, file: !1093, line: 766, type: !12043)
!12095 = !DILocation(line: 766, column: 20, scope: !12031)
!12096 = !DILocation(line: 770, column: 6, scope: !12031)
!12097 = !DILocation(line: 770, column: 12, scope: !12031)
!12098 = !DILocation(line: 771, column: 17, scope: !12031)
!12099 = !DILocation(line: 772, column: 13, scope: !12031)
!12100 = !DILocation(line: 774, column: 27, scope: !12031)
!12101 = !DILocation(line: 774, column: 35, scope: !12031)
!12102 = !DILocation(line: 774, column: 13, scope: !12031)
!12103 = !DILocation(line: 774, column: 11, scope: !12031)
!12104 = !DILocation(line: 775, column: 9, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 775, column: 9)
!12106 = !DILocation(line: 775, column: 18, scope: !12105)
!12107 = !DILocation(line: 775, column: 15, scope: !12105)
!12108 = !DILocation(line: 775, column: 9, scope: !12031)
!12109 = !DILocation(line: 775, column: 29, scope: !12105)
!12110 = !DILocation(line: 777, column: 9, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 777, column: 9)
!12112 = !DILocation(line: 777, column: 16, scope: !12111)
!12113 = !DILocation(line: 777, column: 23, scope: !12111)
!12114 = !DILocation(line: 777, column: 9, scope: !12031)
!12115 = !DILocation(line: 777, column: 31, scope: !12111)
!12116 = !DILocation(line: 778, column: 5, scope: !12031)
!12117 = distinct !{!12117, !12116, !12118}
!12118 = !DILocation(line: 890, column: 34, scope: !12031)
!12119 = !DILocation(line: 780, column: 9, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12121, file: !1093, line: 780, column: 9)
!12121 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 779, column: 5)
!12122 = !DILocation(line: 780, column: 9, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12120, file: !1093, line: 780, column: 9)
!12124 = !DILocation(line: 781, column: 13, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12121, file: !1093, line: 781, column: 13)
!12126 = !DILocation(line: 781, column: 20, scope: !12125)
!12127 = !DILocation(line: 781, column: 27, scope: !12125)
!12128 = !DILocation(line: 781, column: 13, scope: !12121)
!12129 = !DILocation(line: 781, column: 35, scope: !12125)
!12130 = !DILocation(line: 782, column: 18, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12121, file: !1093, line: 782, column: 13)
!12132 = !DILocation(line: 782, column: 24, scope: !12131)
!12133 = !DILocation(line: 782, column: 21, scope: !12131)
!12134 = !DILocation(line: 782, column: 13, scope: !12121)
!12135 = !DILocation(line: 782, column: 35, scope: !12131)
!12136 = !DILocation(line: 783, column: 17, scope: !12121)
!12137 = !DILocation(line: 783, column: 24, scope: !12121)
!12138 = !DILocation(line: 783, column: 9, scope: !12121)
!12139 = !DILocalVariable(name: "recordIndex", scope: !12140, file: !1093, line: 787, type: !58)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !1093, line: 786, column: 9)
!12141 = distinct !DILexicalBlock(scope: !12121, file: !1093, line: 784, column: 9)
!12142 = !DILocation(line: 787, column: 17, scope: !12140)
!12143 = !DILocation(line: 789, column: 17, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 789, column: 17)
!12145 = !DILocation(line: 789, column: 27, scope: !12144)
!12146 = !DILocation(line: 789, column: 26, scope: !12144)
!12147 = !DILocation(line: 789, column: 33, scope: !12144)
!12148 = !DILocation(line: 789, column: 17, scope: !12140)
!12149 = !DILocation(line: 789, column: 55, scope: !12144)
!12150 = !DILocation(line: 790, column: 18, scope: !12140)
!12151 = !DILocation(line: 791, column: 17, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 791, column: 17)
!12153 = !DILocation(line: 791, column: 24, scope: !12152)
!12154 = !DILocation(line: 791, column: 31, scope: !12152)
!12155 = !DILocation(line: 791, column: 17, scope: !12140)
!12156 = !DILocation(line: 791, column: 39, scope: !12152)
!12157 = !DILocation(line: 792, column: 17, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 792, column: 17)
!12159 = !DILocation(line: 792, column: 24, scope: !12158)
!12160 = !DILocation(line: 792, column: 17, scope: !12140)
!12161 = !DILocation(line: 792, column: 33, scope: !12158)
!12162 = !DILocation(line: 793, column: 20, scope: !12140)
!12163 = !DILocation(line: 795, column: 13, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 795, column: 13)
!12165 = !DILocation(line: 795, column: 13, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12164, file: !1093, line: 795, column: 13)
!12167 = !DILocation(line: 796, column: 17, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 796, column: 17)
!12169 = !DILocation(line: 796, column: 24, scope: !12168)
!12170 = !DILocation(line: 796, column: 31, scope: !12168)
!12171 = !DILocation(line: 796, column: 17, scope: !12140)
!12172 = !DILocation(line: 796, column: 39, scope: !12168)
!12173 = !DILocation(line: 797, column: 13, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 797, column: 13)
!12175 = !DILocation(line: 797, column: 13, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12174, file: !1093, line: 797, column: 13)
!12177 = !DILocation(line: 798, column: 17, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 798, column: 17)
!12179 = !DILocation(line: 798, column: 24, scope: !12178)
!12180 = !DILocation(line: 798, column: 31, scope: !12178)
!12181 = !DILocation(line: 798, column: 17, scope: !12140)
!12182 = !DILocation(line: 798, column: 39, scope: !12178)
!12183 = !DILocation(line: 799, column: 13, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 799, column: 13)
!12185 = !DILocation(line: 799, column: 13, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12184, file: !1093, line: 799, column: 13)
!12187 = !DILocation(line: 800, column: 36, scope: !12140)
!12188 = !DILocation(line: 800, column: 45, scope: !12140)
!12189 = !DILocation(line: 800, column: 43, scope: !12140)
!12190 = !DILocation(line: 800, column: 52, scope: !12140)
!12191 = !DILocation(line: 800, column: 64, scope: !12140)
!12192 = !DILocation(line: 800, column: 62, scope: !12140)
!12193 = !DILocation(line: 800, column: 21, scope: !12140)
!12194 = !DILocation(line: 800, column: 19, scope: !12140)
!12195 = !DILocation(line: 801, column: 17, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 801, column: 17)
!12197 = !DILocation(line: 801, column: 23, scope: !12196)
!12198 = !DILocation(line: 801, column: 17, scope: !12140)
!12199 = !DILocation(line: 801, column: 29, scope: !12196)
!12200 = !DILocation(line: 802, column: 52, scope: !12140)
!12201 = !DILocation(line: 802, column: 58, scope: !12140)
!12202 = !DILocation(line: 802, column: 39, scope: !12140)
!12203 = !DILocation(line: 802, column: 27, scope: !12140)
!12204 = !DILocation(line: 802, column: 25, scope: !12140)
!12205 = !DILocation(line: 803, column: 17, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 803, column: 17)
!12207 = !DILocation(line: 803, column: 29, scope: !12206)
!12208 = !DILocation(line: 803, column: 17, scope: !12140)
!12209 = !DILocation(line: 803, column: 38, scope: !12206)
!12210 = !DILocation(line: 805, column: 25, scope: !12140)
!12211 = !DILocation(line: 806, column: 13, scope: !12140)
!12212 = !DILocation(line: 806, column: 20, scope: !12140)
!12213 = !DILocation(line: 806, column: 34, scope: !12140)
!12214 = !DILocation(line: 806, column: 32, scope: !12140)
!12215 = !DILocalVariable(name: "itemLen", scope: !12216, file: !1093, line: 808, type: !58)
!12216 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 807, column: 13)
!12217 = !DILocation(line: 808, column: 21, scope: !12216)
!12218 = !DILocation(line: 810, column: 21, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12216, file: !1093, line: 810, column: 21)
!12220 = !DILocation(line: 810, column: 28, scope: !12219)
!12221 = !DILocation(line: 810, column: 35, scope: !12219)
!12222 = !DILocation(line: 810, column: 21, scope: !12216)
!12223 = !DILocation(line: 810, column: 43, scope: !12219)
!12224 = !DILocation(line: 811, column: 25, scope: !12216)
!12225 = !DILocation(line: 812, column: 17, scope: !12216)
!12226 = !DILocation(line: 812, column: 24, scope: !12216)
!12227 = !DILocation(line: 812, column: 31, scope: !12216)
!12228 = !DILocation(line: 812, column: 39, scope: !12216)
!12229 = !DILocation(line: 812, column: 37, scope: !12216)
!12230 = !DILocation(line: 812, column: 48, scope: !12216)
!12231 = !DILocation(line: 812, column: 63, scope: !12216)
!12232 = distinct !{!12232, !12225, !12231}
!12233 = !DILocation(line: 813, column: 40, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12216, file: !1093, line: 813, column: 21)
!12235 = !DILocation(line: 813, column: 49, scope: !12234)
!12236 = !DILocation(line: 813, column: 47, scope: !12234)
!12237 = !DILocation(line: 813, column: 55, scope: !12234)
!12238 = !DILocation(line: 813, column: 60, scope: !12234)
!12239 = !DILocation(line: 813, column: 68, scope: !12234)
!12240 = !DILocation(line: 813, column: 73, scope: !12234)
!12241 = !DILocation(line: 813, column: 87, scope: !12234)
!12242 = !DILocation(line: 813, column: 85, scope: !12234)
!12243 = !DILocation(line: 813, column: 26, scope: !12234)
!12244 = !DILocation(line: 813, column: 23, scope: !12234)
!12245 = !DILocation(line: 813, column: 21, scope: !12216)
!12246 = !DILocation(line: 815, column: 21, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12234, file: !1093, line: 814, column: 17)
!12248 = !DILocation(line: 817, column: 28, scope: !12216)
!12249 = !DILocation(line: 818, column: 26, scope: !12216)
!12250 = !DILocation(line: 818, column: 23, scope: !12216)
!12251 = !DILocation(line: 819, column: 17, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12216, file: !1093, line: 819, column: 17)
!12253 = !DILocation(line: 819, column: 17, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12252, file: !1093, line: 819, column: 17)
!12255 = !DILocation(line: 820, column: 25, scope: !12216)
!12256 = !DILocation(line: 820, column: 32, scope: !12216)
!12257 = !DILocation(line: 820, column: 17, scope: !12216)
!12258 = !DILocation(line: 823, column: 21, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12260, file: !1093, line: 823, column: 21)
!12260 = distinct !DILexicalBlock(scope: !12216, file: !1093, line: 821, column: 17)
!12261 = !DILocation(line: 823, column: 21, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12259, file: !1093, line: 823, column: 21)
!12263 = !DILocation(line: 824, column: 21, scope: !12260)
!12264 = !DILocation(line: 826, column: 25, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12260, file: !1093, line: 826, column: 25)
!12266 = !DILocation(line: 826, column: 40, scope: !12265)
!12267 = !DILocation(line: 826, column: 37, scope: !12265)
!12268 = !DILocation(line: 826, column: 25, scope: !12260)
!12269 = !DILocation(line: 826, column: 47, scope: !12265)
!12270 = !DILocation(line: 829, column: 21, scope: !12260)
!12271 = distinct !{!12271, !12211, !12272}
!12272 = !DILocation(line: 831, column: 13, scope: !12140)
!12273 = !DILocation(line: 832, column: 17, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12140, file: !1093, line: 832, column: 17)
!12275 = !DILocation(line: 832, column: 24, scope: !12274)
!12276 = !DILocation(line: 832, column: 31, scope: !12274)
!12277 = !DILocation(line: 832, column: 17, scope: !12140)
!12278 = !DILocation(line: 832, column: 39, scope: !12274)
!12279 = !DILocation(line: 834, column: 9, scope: !12141)
!12280 = !DILocation(line: 837, column: 17, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12141, file: !1093, line: 837, column: 17)
!12282 = !DILocation(line: 837, column: 27, scope: !12281)
!12283 = !DILocation(line: 837, column: 26, scope: !12281)
!12284 = !DILocation(line: 837, column: 33, scope: !12281)
!12285 = !DILocation(line: 837, column: 17, scope: !12141)
!12286 = !DILocation(line: 837, column: 52, scope: !12281)
!12287 = !DILocation(line: 838, column: 18, scope: !12141)
!12288 = !DILocation(line: 839, column: 21, scope: !12141)
!12289 = !DILocation(line: 839, column: 28, scope: !12141)
!12290 = !DILocation(line: 839, column: 13, scope: !12141)
!12291 = !DILocation(line: 842, column: 22, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12141, file: !1093, line: 840, column: 13)
!12293 = !DILocation(line: 843, column: 21, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12292, file: !1093, line: 843, column: 21)
!12295 = !DILocation(line: 843, column: 28, scope: !12294)
!12296 = !DILocation(line: 843, column: 35, scope: !12294)
!12297 = !DILocation(line: 843, column: 21, scope: !12292)
!12298 = !DILocation(line: 843, column: 43, scope: !12294)
!12299 = !DILocation(line: 844, column: 21, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12292, file: !1093, line: 844, column: 21)
!12301 = !DILocation(line: 844, column: 29, scope: !12300)
!12302 = !DILocation(line: 844, column: 21, scope: !12292)
!12303 = !DILocation(line: 844, column: 38, scope: !12300)
!12304 = !DILocation(line: 845, column: 25, scope: !12292)
!12305 = !DILocation(line: 849, column: 17, scope: !12292)
!12306 = !DILocation(line: 849, column: 23, scope: !12292)
!12307 = !DILocation(line: 849, column: 31, scope: !12292)
!12308 = !DILocation(line: 849, column: 29, scope: !12292)
!12309 = !DILocation(line: 849, column: 41, scope: !12292)
!12310 = !DILocation(line: 849, column: 44, scope: !12292)
!12311 = !DILocation(line: 849, column: 51, scope: !12292)
!12312 = !DILocation(line: 849, column: 58, scope: !12292)
!12313 = !DILocation(line: 849, column: 65, scope: !12292)
!12314 = !DILocation(line: 849, column: 68, scope: !12292)
!12315 = !DILocation(line: 849, column: 75, scope: !12292)
!12316 = !DILocation(line: 849, column: 82, scope: !12292)
!12317 = !DILocation(line: 849, column: 95, scope: !12292)
!12318 = distinct !{!12318, !12305, !12317}
!12319 = !DILocation(line: 850, column: 21, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12292, file: !1093, line: 850, column: 21)
!12321 = !DILocation(line: 850, column: 30, scope: !12320)
!12322 = !DILocation(line: 850, column: 27, scope: !12320)
!12323 = !DILocation(line: 850, column: 21, scope: !12292)
!12324 = !DILocation(line: 850, column: 41, scope: !12320)
!12325 = !DILocation(line: 851, column: 22, scope: !12292)
!12326 = !DILocation(line: 853, column: 17, scope: !12292)
!12327 = !DILocalVariable(name: "next", scope: !12328, file: !1093, line: 856, type: !58)
!12328 = distinct !DILexicalBlock(scope: !12292, file: !1093, line: 855, column: 17)
!12329 = !DILocation(line: 856, column: 25, scope: !12328)
!12330 = !DILocalVariable(name: "tokenStart", scope: !12328, file: !1093, line: 857, type: !58)
!12331 = !DILocation(line: 857, column: 25, scope: !12328)
!12332 = !DILocalVariable(name: "tokenLen", scope: !12328, file: !1093, line: 858, type: !58)
!12333 = !DILocation(line: 858, column: 25, scope: !12328)
!12334 = !DILocalVariable(name: "itemLen", scope: !12328, file: !1093, line: 859, type: !58)
!12335 = !DILocation(line: 859, column: 25, scope: !12328)
!12336 = !DILocation(line: 861, column: 26, scope: !12328)
!12337 = !DILocation(line: 862, column: 25, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12328, file: !1093, line: 862, column: 25)
!12339 = !DILocation(line: 862, column: 32, scope: !12338)
!12340 = !DILocation(line: 862, column: 39, scope: !12338)
!12341 = !DILocation(line: 862, column: 25, scope: !12328)
!12342 = !DILocation(line: 862, column: 47, scope: !12338)
!12343 = !DILocation(line: 863, column: 25, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12328, file: !1093, line: 863, column: 25)
!12345 = !DILocation(line: 863, column: 33, scope: !12344)
!12346 = !DILocation(line: 863, column: 25, scope: !12328)
!12347 = !DILocation(line: 863, column: 42, scope: !12344)
!12348 = !DILocation(line: 864, column: 29, scope: !12328)
!12349 = !DILocation(line: 865, column: 27, scope: !12328)
!12350 = !DILocation(line: 866, column: 29, scope: !12328)
!12351 = !DILocation(line: 867, column: 21, scope: !12328)
!12352 = !DILocation(line: 867, column: 28, scope: !12328)
!12353 = !DILocation(line: 867, column: 35, scope: !12328)
!12354 = !DILocation(line: 867, column: 43, scope: !12328)
!12355 = !DILocation(line: 867, column: 41, scope: !12328)
!12356 = !DILocation(line: 867, column: 52, scope: !12328)
!12357 = !DILocation(line: 868, column: 25, scope: !12328)
!12358 = !DILocation(line: 868, column: 28, scope: !12328)
!12359 = !DILocation(line: 868, column: 35, scope: !12328)
!12360 = !DILocation(line: 868, column: 43, scope: !12328)
!12361 = !DILocation(line: 868, column: 41, scope: !12328)
!12362 = !DILocation(line: 868, column: 52, scope: !12328)
!12363 = !DILocation(line: 869, column: 25, scope: !12328)
!12364 = !DILocation(line: 869, column: 28, scope: !12328)
!12365 = !DILocation(line: 869, column: 36, scope: !12328)
!12366 = !DILocation(line: 869, column: 34, scope: !12328)
!12367 = !DILocation(line: 869, column: 46, scope: !12328)
!12368 = !DILocation(line: 869, column: 44, scope: !12328)
!12369 = !DILocation(line: 871, column: 32, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12328, file: !1093, line: 870, column: 21)
!12371 = distinct !{!12371, !12351, !12372}
!12372 = !DILocation(line: 872, column: 21, scope: !12328)
!12373 = !DILocation(line: 873, column: 25, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12328, file: !1093, line: 873, column: 25)
!12375 = !DILocation(line: 873, column: 33, scope: !12374)
!12376 = !DILocation(line: 873, column: 31, scope: !12374)
!12377 = !DILocation(line: 873, column: 44, scope: !12374)
!12378 = !DILocation(line: 873, column: 41, scope: !12374)
!12379 = !DILocation(line: 873, column: 25, scope: !12328)
!12380 = !DILocation(line: 873, column: 55, scope: !12374)
!12381 = !DILocation(line: 874, column: 38, scope: !12328)
!12382 = !DILocation(line: 874, column: 45, scope: !12328)
!12383 = !DILocation(line: 874, column: 44, scope: !12328)
!12384 = !DILocation(line: 874, column: 52, scope: !12328)
!12385 = !DILocation(line: 874, column: 28, scope: !12328)
!12386 = !DILocation(line: 874, column: 26, scope: !12328)
!12387 = !DILocation(line: 875, column: 25, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12328, file: !1093, line: 875, column: 25)
!12389 = !DILocation(line: 875, column: 30, scope: !12388)
!12390 = !DILocation(line: 875, column: 25, scope: !12328)
!12391 = !DILocation(line: 875, column: 35, scope: !12388)
!12392 = !DILocation(line: 876, column: 32, scope: !12328)
!12393 = !DILocation(line: 876, column: 29, scope: !12328)
!12394 = !DILocation(line: 877, column: 30, scope: !12328)
!12395 = !DILocation(line: 877, column: 35, scope: !12328)
!12396 = !DILocation(line: 877, column: 27, scope: !12328)
!12397 = !DILocation(line: 879, column: 17, scope: !12292)
!12398 = !DILocation(line: 881, column: 17, scope: !12292)
!12399 = !DILocation(line: 883, column: 13, scope: !12141)
!12400 = !DILocation(line: 886, column: 13, scope: !12141)
!12401 = !DILocation(line: 889, column: 9, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12121, file: !1093, line: 889, column: 9)
!12403 = !DILocation(line: 889, column: 9, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12402, file: !1093, line: 889, column: 9)
!12405 = !DILocation(line: 890, column: 5, scope: !12121)
!12406 = !DILocation(line: 890, column: 14, scope: !12031)
!12407 = !DILocation(line: 890, column: 21, scope: !12031)
!12408 = !DILocation(line: 890, column: 28, scope: !12031)
!12409 = !DILocation(line: 892, column: 9, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 892, column: 9)
!12411 = !DILocation(line: 892, column: 16, scope: !12410)
!12412 = !DILocation(line: 892, column: 23, scope: !12410)
!12413 = !DILocation(line: 892, column: 9, scope: !12031)
!12414 = !DILocation(line: 892, column: 31, scope: !12410)
!12415 = !DILocation(line: 894, column: 9, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 894, column: 9)
!12417 = !DILocation(line: 894, column: 16, scope: !12416)
!12418 = !DILocation(line: 894, column: 9, scope: !12031)
!12419 = !DILocalVariable(name: "baseURI", scope: !12420, file: !1093, line: 896, type: !12035)
!12420 = distinct !DILexicalBlock(scope: !12416, file: !1093, line: 895, column: 5)
!12421 = !DILocation(line: 896, column: 21, scope: !12420)
!12422 = !DILocalVariable(name: "baseUriP", scope: !12420, file: !1093, line: 897, type: !12034)
!12423 = !DILocation(line: 897, column: 23, scope: !12420)
!12424 = !DILocalVariable(name: "resultP", scope: !12420, file: !1093, line: 898, type: !12043)
!12425 = !DILocation(line: 898, column: 24, scope: !12420)
!12426 = !DILocalVariable(name: "size", scope: !12420, file: !1093, line: 899, type: !58)
!12427 = !DILocation(line: 899, column: 13, scope: !12420)
!12428 = !DILocation(line: 901, column: 9, scope: !12420)
!12429 = !DILocation(line: 902, column: 13, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12420, file: !1093, line: 902, column: 13)
!12431 = !DILocation(line: 902, column: 21, scope: !12430)
!12432 = !DILocation(line: 902, column: 13, scope: !12420)
!12433 = !DILocation(line: 904, column: 24, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12430, file: !1093, line: 903, column: 9)
!12435 = !DILocation(line: 904, column: 22, scope: !12434)
!12436 = !DILocation(line: 905, column: 9, scope: !12434)
!12437 = !DILocalVariable(name: "res", scope: !12438, file: !1093, line: 908, type: !58)
!12438 = distinct !DILexicalBlock(scope: !12430, file: !1093, line: 907, column: 9)
!12439 = !DILocation(line: 908, column: 17, scope: !12438)
!12440 = !DILocation(line: 913, column: 17, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12438, file: !1093, line: 913, column: 17)
!12442 = !DILocation(line: 913, column: 23, scope: !12441)
!12443 = !DILocation(line: 914, column: 14, scope: !12441)
!12444 = !DILocation(line: 914, column: 17, scope: !12441)
!12445 = !DILocation(line: 914, column: 24, scope: !12441)
!12446 = !DILocation(line: 914, column: 33, scope: !12441)
!12447 = !DILocation(line: 915, column: 14, scope: !12441)
!12448 = !DILocation(line: 915, column: 17, scope: !12441)
!12449 = !DILocation(line: 915, column: 24, scope: !12441)
!12450 = !DILocation(line: 915, column: 32, scope: !12441)
!12451 = !DILocation(line: 915, column: 31, scope: !12441)
!12452 = !DILocation(line: 915, column: 37, scope: !12441)
!12453 = !DILocation(line: 915, column: 41, scope: !12441)
!12454 = !DILocation(line: 913, column: 17, scope: !12438)
!12455 = !DILocation(line: 917, column: 17, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12441, file: !1093, line: 916, column: 13)
!12457 = !DILocation(line: 919, column: 21, scope: !12438)
!12458 = !DILocation(line: 920, column: 19, scope: !12438)
!12459 = !DILocation(line: 922, column: 17, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12438, file: !1093, line: 922, column: 17)
!12461 = !DILocation(line: 922, column: 23, scope: !12460)
!12462 = !DILocation(line: 922, column: 17, scope: !12438)
!12463 = !DILocation(line: 924, column: 21, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !1093, line: 924, column: 21)
!12465 = distinct !DILexicalBlock(scope: !12460, file: !1093, line: 923, column: 13)
!12466 = !DILocation(line: 924, column: 28, scope: !12464)
!12467 = !DILocation(line: 924, column: 37, scope: !12464)
!12468 = !DILocation(line: 924, column: 21, scope: !12465)
!12469 = !DILocation(line: 924, column: 45, scope: !12464)
!12470 = !DILocation(line: 925, column: 26, scope: !12465)
!12471 = !DILocation(line: 926, column: 13, scope: !12465)
!12472 = !DILocation(line: 929, column: 49, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12460, file: !1093, line: 928, column: 13)
!12474 = !DILocation(line: 929, column: 58, scope: !12473)
!12475 = !DILocation(line: 929, column: 56, scope: !12473)
!12476 = !DILocation(line: 929, column: 67, scope: !12473)
!12477 = !DILocation(line: 929, column: 23, scope: !12473)
!12478 = !DILocation(line: 929, column: 21, scope: !12473)
!12479 = !DILocation(line: 930, column: 21, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12473, file: !1093, line: 930, column: 21)
!12481 = !DILocation(line: 930, column: 25, scope: !12480)
!12482 = !DILocation(line: 930, column: 29, scope: !12480)
!12483 = !DILocation(line: 930, column: 32, scope: !12480)
!12484 = !DILocation(line: 930, column: 39, scope: !12480)
!12485 = !DILocation(line: 930, column: 36, scope: !12480)
!12486 = !DILocation(line: 930, column: 21, scope: !12473)
!12487 = !DILocation(line: 930, column: 46, scope: !12480)
!12488 = !DILocation(line: 931, column: 26, scope: !12473)
!12489 = !DILocation(line: 935, column: 35, scope: !12420)
!12490 = !DILocation(line: 935, column: 45, scope: !12420)
!12491 = !DILocation(line: 935, column: 58, scope: !12420)
!12492 = !DILocation(line: 935, column: 17, scope: !12420)
!12493 = !DILocation(line: 935, column: 15, scope: !12420)
!12494 = !DILocation(line: 936, column: 20, scope: !12420)
!12495 = !DILocation(line: 936, column: 9, scope: !12420)
!12496 = !DILocation(line: 937, column: 21, scope: !12420)
!12497 = !DILocation(line: 939, column: 13, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12420, file: !1093, line: 939, column: 13)
!12499 = !DILocation(line: 939, column: 19, scope: !12498)
!12500 = !DILocation(line: 939, column: 23, scope: !12498)
!12501 = !DILocation(line: 939, column: 26, scope: !12498)
!12502 = !DILocation(line: 939, column: 31, scope: !12498)
!12503 = !DILocation(line: 939, column: 13, scope: !12420)
!12504 = !DILocation(line: 941, column: 17, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !1093, line: 941, column: 17)
!12506 = distinct !DILexicalBlock(scope: !12498, file: !1093, line: 940, column: 9)
!12507 = !DILocation(line: 941, column: 26, scope: !12505)
!12508 = !DILocation(line: 941, column: 31, scope: !12505)
!12509 = !DILocation(line: 941, column: 52, scope: !12505)
!12510 = !DILocation(line: 941, column: 55, scope: !12505)
!12511 = !DILocation(line: 941, column: 64, scope: !12505)
!12512 = !DILocation(line: 941, column: 70, scope: !12505)
!12513 = !DILocation(line: 941, column: 76, scope: !12505)
!12514 = !DILocation(line: 941, column: 67, scope: !12505)
!12515 = !DILocation(line: 941, column: 17, scope: !12506)
!12516 = !DILocation(line: 941, column: 86, scope: !12505)
!12517 = !DILocation(line: 942, column: 18, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12506, file: !1093, line: 942, column: 17)
!12519 = !DILocation(line: 942, column: 17, scope: !12506)
!12520 = !DILocation(line: 944, column: 24, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12518, file: !1093, line: 943, column: 13)
!12522 = !DILocation(line: 944, column: 33, scope: !12521)
!12523 = !DILocation(line: 944, column: 39, scope: !12521)
!12524 = !DILocation(line: 944, column: 50, scope: !12521)
!12525 = !DILocation(line: 944, column: 22, scope: !12521)
!12526 = !DILocation(line: 945, column: 27, scope: !12521)
!12527 = !DILocation(line: 945, column: 36, scope: !12521)
!12528 = !DILocation(line: 945, column: 42, scope: !12521)
!12529 = !DILocation(line: 945, column: 53, scope: !12521)
!12530 = !DILocation(line: 945, column: 25, scope: !12521)
!12531 = !DILocation(line: 946, column: 13, scope: !12521)
!12532 = !DILocalVariable(name: "i", scope: !12533, file: !1093, line: 949, type: !58)
!12533 = distinct !DILexicalBlock(scope: !12518, file: !1093, line: 948, column: 13)
!12534 = !DILocation(line: 949, column: 21, scope: !12533)
!12535 = !DILocation(line: 951, column: 25, scope: !12533)
!12536 = !DILocation(line: 953, column: 24, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12533, file: !1093, line: 953, column: 17)
!12538 = !DILocation(line: 953, column: 22, scope: !12537)
!12539 = !DILocation(line: 953, column: 30, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12537, file: !1093, line: 953, column: 17)
!12541 = !DILocation(line: 953, column: 39, scope: !12540)
!12542 = !DILocation(line: 953, column: 48, scope: !12540)
!12543 = !DILocation(line: 953, column: 54, scope: !12540)
!12544 = !DILocation(line: 953, column: 65, scope: !12540)
!12545 = !DILocation(line: 953, column: 34, scope: !12540)
!12546 = !DILocation(line: 953, column: 32, scope: !12540)
!12547 = !DILocation(line: 953, column: 71, scope: !12540)
!12548 = !DILocation(line: 953, column: 74, scope: !12540)
!12549 = !DILocation(line: 953, column: 82, scope: !12540)
!12550 = !DILocation(line: 953, column: 17, scope: !12537)
!12551 = !DILocalVariable(name: "targetP", scope: !12552, file: !1093, line: 955, type: !12043)
!12552 = distinct !DILexicalBlock(scope: !12540, file: !1093, line: 954, column: 17)
!12553 = !DILocation(line: 955, column: 36, scope: !12552)
!12554 = !DILocation(line: 957, column: 31, scope: !12552)
!12555 = !DILocation(line: 957, column: 40, scope: !12552)
!12556 = !DILocation(line: 957, column: 46, scope: !12552)
!12557 = !DILocation(line: 957, column: 57, scope: !12552)
!12558 = !DILocation(line: 957, column: 65, scope: !12552)
!12559 = !DILocation(line: 957, column: 63, scope: !12552)
!12560 = !DILocation(line: 957, column: 29, scope: !12552)
!12561 = !DILocation(line: 958, column: 25, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12552, file: !1093, line: 958, column: 25)
!12563 = !DILocation(line: 958, column: 34, scope: !12562)
!12564 = !DILocation(line: 958, column: 40, scope: !12562)
!12565 = !DILocation(line: 958, column: 46, scope: !12562)
!12566 = !DILocation(line: 958, column: 37, scope: !12562)
!12567 = !DILocation(line: 958, column: 25, scope: !12552)
!12568 = !DILocation(line: 960, column: 35, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12562, file: !1093, line: 959, column: 21)
!12570 = !DILocation(line: 960, column: 44, scope: !12569)
!12571 = !DILocation(line: 960, column: 50, scope: !12569)
!12572 = !DILocation(line: 960, column: 61, scope: !12569)
!12573 = !DILocation(line: 960, column: 33, scope: !12569)
!12574 = !DILocation(line: 961, column: 32, scope: !12569)
!12575 = !DILocation(line: 961, column: 41, scope: !12569)
!12576 = !DILocation(line: 961, column: 47, scope: !12569)
!12577 = !DILocation(line: 961, column: 58, scope: !12569)
!12578 = !DILocation(line: 961, column: 30, scope: !12569)
!12579 = !DILocation(line: 962, column: 21, scope: !12569)
!12580 = !DILocation(line: 963, column: 17, scope: !12552)
!12581 = !DILocation(line: 953, column: 92, scope: !12540)
!12582 = !DILocation(line: 953, column: 17, scope: !12540)
!12583 = distinct !{!12583, !12550, !12584}
!12584 = !DILocation(line: 963, column: 17, scope: !12537)
!12585 = !DILocation(line: 964, column: 21, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12533, file: !1093, line: 964, column: 21)
!12587 = !DILocation(line: 964, column: 29, scope: !12586)
!12588 = !DILocation(line: 964, column: 21, scope: !12533)
!12589 = !DILocation(line: 964, column: 38, scope: !12586)
!12590 = !DILocation(line: 965, column: 21, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12533, file: !1093, line: 965, column: 21)
!12592 = !DILocation(line: 965, column: 21, scope: !12533)
!12593 = !DILocalVariable(name: "resP", scope: !12594, file: !1093, line: 967, type: !12043)
!12594 = distinct !DILexicalBlock(scope: !12591, file: !1093, line: 966, column: 17)
!12595 = !DILocation(line: 967, column: 36, scope: !12594)
!12596 = !DILocation(line: 969, column: 26, scope: !12594)
!12597 = !DILocation(line: 970, column: 28, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12594, file: !1093, line: 970, column: 21)
!12599 = !DILocation(line: 970, column: 26, scope: !12598)
!12600 = !DILocation(line: 970, column: 34, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12598, file: !1093, line: 970, column: 21)
!12602 = !DILocation(line: 970, column: 38, scope: !12601)
!12603 = !DILocation(line: 970, column: 36, scope: !12601)
!12604 = !DILocation(line: 970, column: 43, scope: !12601)
!12605 = !DILocation(line: 970, column: 46, scope: !12601)
!12606 = !DILocation(line: 970, column: 51, scope: !12601)
!12607 = !DILocation(line: 970, column: 21, scope: !12598)
!12608 = !DILocalVariable(name: "targetP", scope: !12609, file: !1093, line: 972, type: !12043)
!12609 = distinct !DILexicalBlock(scope: !12601, file: !1093, line: 971, column: 21)
!12610 = !DILocation(line: 972, column: 40, scope: !12609)
!12611 = !DILocation(line: 974, column: 35, scope: !12609)
!12612 = !DILocation(line: 974, column: 45, scope: !12609)
!12613 = !DILocation(line: 974, column: 43, scope: !12609)
!12614 = !DILocation(line: 974, column: 33, scope: !12609)
!12615 = !DILocation(line: 975, column: 29, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12609, file: !1093, line: 975, column: 29)
!12617 = !DILocation(line: 975, column: 38, scope: !12616)
!12618 = !DILocation(line: 975, column: 44, scope: !12616)
!12619 = !DILocation(line: 975, column: 50, scope: !12616)
!12620 = !DILocation(line: 975, column: 41, scope: !12616)
!12621 = !DILocation(line: 975, column: 29, scope: !12609)
!12622 = !DILocation(line: 977, column: 33, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12624, file: !1093, line: 977, column: 33)
!12624 = distinct !DILexicalBlock(scope: !12616, file: !1093, line: 976, column: 25)
!12625 = !DILocation(line: 977, column: 42, scope: !12623)
!12626 = !DILocation(line: 977, column: 47, scope: !12623)
!12627 = !DILocation(line: 977, column: 33, scope: !12624)
!12628 = !DILocation(line: 979, column: 40, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12623, file: !1093, line: 978, column: 29)
!12630 = !DILocation(line: 979, column: 49, scope: !12629)
!12631 = !DILocation(line: 979, column: 55, scope: !12629)
!12632 = !DILocation(line: 979, column: 66, scope: !12629)
!12633 = !DILocation(line: 979, column: 38, scope: !12629)
!12634 = !DILocation(line: 980, column: 40, scope: !12629)
!12635 = !DILocation(line: 980, column: 49, scope: !12629)
!12636 = !DILocation(line: 980, column: 55, scope: !12629)
!12637 = !DILocation(line: 980, column: 66, scope: !12629)
!12638 = !DILocation(line: 980, column: 38, scope: !12629)
!12639 = !DILocation(line: 981, column: 29, scope: !12629)
!12640 = !DILocation(line: 984, column: 57, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12623, file: !1093, line: 983, column: 29)
!12642 = !DILocation(line: 984, column: 40, scope: !12641)
!12643 = !DILocation(line: 984, column: 38, scope: !12641)
!12644 = !DILocation(line: 985, column: 37, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12641, file: !1093, line: 985, column: 37)
!12646 = !DILocation(line: 985, column: 42, scope: !12645)
!12647 = !DILocation(line: 985, column: 37, scope: !12641)
!12648 = !DILocation(line: 985, column: 48, scope: !12645)
!12649 = !DILocation(line: 986, column: 49, scope: !12641)
!12650 = !DILocation(line: 986, column: 56, scope: !12641)
!12651 = !DILocation(line: 986, column: 33, scope: !12641)
!12652 = !DILocation(line: 987, column: 41, scope: !12641)
!12653 = !DILocation(line: 989, column: 25, scope: !12624)
!12654 = !DILocation(line: 990, column: 21, scope: !12609)
!12655 = !DILocation(line: 970, column: 61, scope: !12601)
!12656 = !DILocation(line: 970, column: 21, scope: !12601)
!12657 = distinct !{!12657, !12607, !12658}
!12658 = !DILocation(line: 990, column: 21, scope: !12598)
!12659 = !DILocation(line: 991, column: 25, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12594, file: !1093, line: 991, column: 25)
!12661 = !DILocation(line: 991, column: 30, scope: !12660)
!12662 = !DILocation(line: 991, column: 25, scope: !12594)
!12663 = !DILocation(line: 991, column: 39, scope: !12660)
!12664 = !DILocation(line: 992, column: 31, scope: !12594)
!12665 = !DILocation(line: 992, column: 29, scope: !12594)
!12666 = !DILocation(line: 993, column: 17, scope: !12594)
!12667 = !DILocation(line: 995, column: 9, scope: !12506)
!12668 = !DILocation(line: 998, column: 23, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12498, file: !1093, line: 997, column: 9)
!12670 = !DILocation(line: 998, column: 21, scope: !12669)
!12671 = !DILocation(line: 999, column: 20, scope: !12669)
!12672 = !DILocation(line: 999, column: 18, scope: !12669)
!12673 = !DILocation(line: 1002, column: 13, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12420, file: !1093, line: 1002, column: 13)
!12675 = !DILocation(line: 1002, column: 21, scope: !12674)
!12676 = !DILocation(line: 1002, column: 13, scope: !12420)
!12677 = !DILocalVariable(name: "tempP", scope: !12678, file: !1093, line: 1004, type: !12043)
!12678 = distinct !DILexicalBlock(scope: !12674, file: !1093, line: 1003, column: 9)
!12679 = !DILocation(line: 1004, column: 28, scope: !12678)
!12680 = !DILocation(line: 1006, column: 34, scope: !12678)
!12681 = !DILocation(line: 1006, column: 40, scope: !12678)
!12682 = !DILocation(line: 1006, column: 20, scope: !12678)
!12683 = !DILocation(line: 1006, column: 18, scope: !12678)
!12684 = !DILocation(line: 1007, column: 17, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12678, file: !1093, line: 1007, column: 17)
!12686 = !DILocation(line: 1007, column: 22, scope: !12685)
!12687 = !DILocation(line: 1007, column: 17, scope: !12678)
!12688 = !DILocation(line: 1007, column: 28, scope: !12685)
!12689 = !DILocation(line: 1008, column: 29, scope: !12678)
!12690 = !DILocation(line: 1008, column: 36, scope: !12678)
!12691 = !DILocation(line: 1008, column: 13, scope: !12678)
!12692 = !DILocation(line: 1009, column: 23, scope: !12678)
!12693 = !DILocation(line: 1009, column: 21, scope: !12678)
!12694 = !DILocation(line: 1010, column: 9, scope: !12678)
!12695 = !DILocation(line: 1011, column: 17, scope: !12420)
!12696 = !DILocation(line: 1011, column: 15, scope: !12420)
!12697 = !DILocation(line: 1012, column: 18, scope: !12420)
!12698 = !DILocation(line: 1012, column: 10, scope: !12420)
!12699 = !DILocation(line: 1012, column: 16, scope: !12420)
!12700 = !DILocation(line: 1013, column: 5, scope: !12420)
!12701 = !DILocation(line: 1016, column: 12, scope: !12031)
!12702 = !DILocation(line: 1016, column: 5, scope: !12031)
!12703 = !DILocation(line: 1020, column: 9, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 1020, column: 9)
!12705 = !DILocation(line: 1020, column: 17, scope: !12704)
!12706 = !DILocation(line: 1020, column: 9, scope: !12031)
!12707 = !DILocation(line: 1022, column: 25, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !1093, line: 1021, column: 5)
!12709 = !DILocation(line: 1022, column: 32, scope: !12708)
!12710 = !DILocation(line: 1022, column: 9, scope: !12708)
!12711 = !DILocation(line: 1023, column: 17, scope: !12708)
!12712 = !DILocation(line: 1024, column: 5, scope: !12708)
!12713 = !DILocation(line: 1025, column: 9, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12031, file: !1093, line: 1025, column: 9)
!12715 = !DILocation(line: 1025, column: 21, scope: !12714)
!12716 = !DILocation(line: 1025, column: 9, scope: !12031)
!12717 = !DILocation(line: 1027, column: 20, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12714, file: !1093, line: 1026, column: 5)
!12719 = !DILocation(line: 1027, column: 9, scope: !12718)
!12720 = !DILocation(line: 1028, column: 5, scope: !12718)
!12721 = !DILocation(line: 1029, column: 5, scope: !12031)
!12722 = !DILocation(line: 1030, column: 1, scope: !12031)
!12723 = distinct !DISubprogram(name: "prv_skipSpace", scope: !1093, file: !1093, line: 127, type: !12724, isLocal: true, isDefinition: true, scopeLine: 129, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!12724 = !DISubroutineType(types: !12725)
!12725 = !{!438, !186, !438}
!12726 = !DILocalVariable(name: "buffer", arg: 1, scope: !12723, file: !1093, line: 127, type: !186)
!12727 = !DILocation(line: 127, column: 39, scope: !12723)
!12728 = !DILocalVariable(name: "bufferLen", arg: 2, scope: !12723, file: !1093, line: 128, type: !438)
!12729 = !DILocation(line: 128, column: 36, scope: !12723)
!12730 = !DILocalVariable(name: "i", scope: !12723, file: !1093, line: 130, type: !438)
!12731 = !DILocation(line: 130, column: 12, scope: !12723)
!12732 = !DILocation(line: 132, column: 7, scope: !12723)
!12733 = !DILocation(line: 133, column: 5, scope: !12723)
!12734 = !DILocation(line: 133, column: 13, scope: !12723)
!12735 = !DILocation(line: 133, column: 17, scope: !12723)
!12736 = !DILocation(line: 133, column: 15, scope: !12723)
!12737 = !DILocation(line: 134, column: 9, scope: !12723)
!12738 = !DILocation(line: 134, column: 29, scope: !12723)
!12739 = !DILocation(line: 134, column: 36, scope: !12723)
!12740 = !DILocation(line: 134, column: 12, scope: !12723)
!12741 = !DILocation(line: 136, column: 10, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12723, file: !1093, line: 135, column: 5)
!12743 = distinct !{!12743, !12733, !12744}
!12744 = !DILocation(line: 137, column: 5, scope: !12723)
!12745 = !DILocation(line: 139, column: 12, scope: !12723)
!12746 = !DILocation(line: 139, column: 5, scope: !12723)
!12747 = distinct !DISubprogram(name: "prv_countItems", scope: !1093, file: !1093, line: 239, type: !3116, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!12748 = !DILocalVariable(name: "buffer", arg: 1, scope: !12747, file: !1093, line: 239, type: !186)
!12749 = !DILocation(line: 239, column: 37, scope: !12747)
!12750 = !DILocalVariable(name: "bufferLen", arg: 2, scope: !12747, file: !1093, line: 240, type: !438)
!12751 = !DILocation(line: 240, column: 34, scope: !12747)
!12752 = !DILocalVariable(name: "count", scope: !12747, file: !1093, line: 242, type: !58)
!12753 = !DILocation(line: 242, column: 9, scope: !12747)
!12754 = !DILocalVariable(name: "index", scope: !12747, file: !1093, line: 243, type: !438)
!12755 = !DILocation(line: 243, column: 12, scope: !12747)
!12756 = !DILocalVariable(name: "in", scope: !12747, file: !1093, line: 244, type: !58)
!12757 = !DILocation(line: 244, column: 9, scope: !12747)
!12758 = !DILocation(line: 246, column: 11, scope: !12747)
!12759 = !DILocation(line: 247, column: 11, scope: !12747)
!12760 = !DILocation(line: 248, column: 8, scope: !12747)
!12761 = !DILocation(line: 250, column: 5, scope: !12747)
!12762 = !DILocation(line: 250, column: 12, scope: !12747)
!12763 = !DILocation(line: 250, column: 20, scope: !12747)
!12764 = !DILocation(line: 250, column: 18, scope: !12747)
!12765 = !DILocation(line: 252, column: 13, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !1093, line: 252, column: 13)
!12767 = distinct !DILexicalBlock(scope: !12747, file: !1093, line: 251, column: 5)
!12768 = !DILocation(line: 252, column: 16, scope: !12766)
!12769 = !DILocation(line: 252, column: 13, scope: !12767)
!12770 = !DILocation(line: 254, column: 17, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12772, file: !1093, line: 254, column: 17)
!12772 = distinct !DILexicalBlock(scope: !12766, file: !1093, line: 253, column: 9)
!12773 = !DILocation(line: 254, column: 24, scope: !12771)
!12774 = !DILocation(line: 254, column: 31, scope: !12771)
!12775 = !DILocation(line: 254, column: 17, scope: !12772)
!12776 = !DILocation(line: 254, column: 39, scope: !12771)
!12777 = !DILocation(line: 255, column: 16, scope: !12772)
!12778 = !DILocation(line: 256, column: 13, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12772, file: !1093, line: 256, column: 13)
!12780 = !DILocation(line: 256, column: 13, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12779, file: !1093, line: 256, column: 13)
!12782 = !DILocation(line: 257, column: 9, scope: !12772)
!12783 = !DILocation(line: 260, column: 17, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !1093, line: 260, column: 17)
!12785 = distinct !DILexicalBlock(scope: !12766, file: !1093, line: 259, column: 9)
!12786 = !DILocation(line: 260, column: 24, scope: !12784)
!12787 = !DILocation(line: 260, column: 31, scope: !12784)
!12788 = !DILocation(line: 260, column: 17, scope: !12785)
!12789 = !DILocation(line: 260, column: 39, scope: !12784)
!12790 = !DILocation(line: 261, column: 17, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12785, file: !1093, line: 261, column: 17)
!12792 = !DILocation(line: 261, column: 24, scope: !12791)
!12793 = !DILocation(line: 261, column: 31, scope: !12791)
!12794 = !DILocation(line: 261, column: 17, scope: !12785)
!12795 = !DILocation(line: 263, column: 20, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12791, file: !1093, line: 262, column: 13)
!12797 = !DILocation(line: 264, column: 22, scope: !12796)
!12798 = !DILocation(line: 265, column: 17, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12796, file: !1093, line: 265, column: 17)
!12800 = !DILocation(line: 265, column: 17, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12799, file: !1093, line: 265, column: 17)
!12802 = !DILocation(line: 266, column: 21, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12796, file: !1093, line: 266, column: 21)
!12804 = !DILocation(line: 266, column: 28, scope: !12803)
!12805 = !DILocation(line: 266, column: 35, scope: !12803)
!12806 = !DILocation(line: 266, column: 21, scope: !12796)
!12807 = !DILocation(line: 268, column: 21, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12803, file: !1093, line: 267, column: 17)
!12809 = !DILocation(line: 270, column: 21, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12796, file: !1093, line: 270, column: 21)
!12811 = !DILocation(line: 270, column: 28, scope: !12810)
!12812 = !DILocation(line: 270, column: 35, scope: !12810)
!12813 = !DILocation(line: 270, column: 21, scope: !12796)
!12814 = !DILocation(line: 270, column: 43, scope: !12810)
!12815 = !DILocation(line: 271, column: 17, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12796, file: !1093, line: 271, column: 17)
!12817 = !DILocation(line: 271, column: 17, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12816, file: !1093, line: 271, column: 17)
!12819 = !DILocation(line: 272, column: 13, scope: !12796)
!12820 = !DILocation(line: 275, column: 17, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !1093, line: 275, column: 17)
!12822 = distinct !DILexicalBlock(scope: !12791, file: !1093, line: 274, column: 13)
!12823 = !DILocation(line: 275, column: 17, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12821, file: !1093, line: 275, column: 17)
!12825 = distinct !{!12825, !12761, !12826}
!12826 = !DILocation(line: 278, column: 5, scope: !12747)
!12827 = !DILocation(line: 279, column: 9, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12747, file: !1093, line: 279, column: 9)
!12829 = !DILocation(line: 279, column: 12, scope: !12828)
!12830 = !DILocation(line: 279, column: 9, scope: !12747)
!12831 = !DILocation(line: 279, column: 18, scope: !12828)
!12832 = !DILocation(line: 281, column: 12, scope: !12747)
!12833 = !DILocation(line: 281, column: 5, scope: !12747)
!12834 = !DILocation(line: 284, column: 5, scope: !12747)
!12835 = !DILocation(line: 285, column: 1, scope: !12747)
!12836 = distinct !DISubprogram(name: "prv_parseItem", scope: !1093, file: !1093, line: 287, type: !12837, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!12837 = !DISubroutineType(types: !12838)
!12838 = !{!58, !186, !438, !1112}
!12839 = !DILocalVariable(name: "buffer", arg: 1, scope: !12836, file: !1093, line: 287, type: !186)
!12840 = !DILocation(line: 287, column: 36, scope: !12836)
!12841 = !DILocalVariable(name: "bufferLen", arg: 2, scope: !12836, file: !1093, line: 288, type: !438)
!12842 = !DILocation(line: 288, column: 33, scope: !12836)
!12843 = !DILocalVariable(name: "recordP", arg: 3, scope: !12836, file: !1093, line: 289, type: !1112)
!12844 = !DILocation(line: 289, column: 38, scope: !12836)
!12845 = !DILocalVariable(name: "index", scope: !12836, file: !1093, line: 291, type: !438)
!12846 = !DILocation(line: 291, column: 12, scope: !12836)
!12847 = !DILocation(line: 293, column: 12, scope: !12836)
!12848 = !DILocation(line: 293, column: 21, scope: !12836)
!12849 = !DILocation(line: 293, column: 5, scope: !12836)
!12850 = !DILocation(line: 294, column: 5, scope: !12836)
!12851 = !DILocation(line: 294, column: 14, scope: !12836)
!12852 = !DILocation(line: 294, column: 19, scope: !12836)
!12853 = !DILocation(line: 295, column: 5, scope: !12836)
!12854 = !DILocation(line: 295, column: 14, scope: !12836)
!12855 = !DILocation(line: 295, column: 20, scope: !12836)
!12856 = !DILocation(line: 296, column: 5, scope: !12836)
!12857 = !DILocation(line: 296, column: 14, scope: !12836)
!12858 = !DILocation(line: 296, column: 23, scope: !12836)
!12859 = !DILocation(line: 298, column: 11, scope: !12836)
!12860 = !DILocation(line: 299, column: 5, scope: !12836)
!12861 = distinct !{!12861, !12860, !12862}
!12862 = !DILocation(line: 435, column: 31, scope: !12836)
!12863 = !DILocalVariable(name: "tokenStart", scope: !12864, file: !1093, line: 301, type: !58)
!12864 = distinct !DILexicalBlock(scope: !12836, file: !1093, line: 300, column: 5)
!12865 = !DILocation(line: 301, column: 13, scope: !12864)
!12866 = !DILocalVariable(name: "tokenLen", scope: !12864, file: !1093, line: 302, type: !58)
!12867 = !DILocation(line: 302, column: 13, scope: !12864)
!12868 = !DILocalVariable(name: "valueStart", scope: !12864, file: !1093, line: 303, type: !58)
!12869 = !DILocation(line: 303, column: 13, scope: !12864)
!12870 = !DILocalVariable(name: "valueLen", scope: !12864, file: !1093, line: 304, type: !58)
!12871 = !DILocation(line: 304, column: 13, scope: !12864)
!12872 = !DILocalVariable(name: "next", scope: !12864, file: !1093, line: 305, type: !58)
!12873 = !DILocation(line: 305, column: 13, scope: !12864)
!12874 = !DILocation(line: 307, column: 26, scope: !12864)
!12875 = !DILocation(line: 307, column: 33, scope: !12864)
!12876 = !DILocation(line: 307, column: 32, scope: !12864)
!12877 = !DILocation(line: 307, column: 40, scope: !12864)
!12878 = !DILocation(line: 307, column: 50, scope: !12864)
!12879 = !DILocation(line: 307, column: 49, scope: !12864)
!12880 = !DILocation(line: 307, column: 16, scope: !12864)
!12881 = !DILocation(line: 307, column: 14, scope: !12864)
!12882 = !DILocation(line: 308, column: 13, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12864, file: !1093, line: 308, column: 13)
!12884 = !DILocation(line: 308, column: 18, scope: !12883)
!12885 = !DILocation(line: 308, column: 13, scope: !12864)
!12886 = !DILocation(line: 308, column: 23, scope: !12883)
!12887 = !DILocation(line: 310, column: 17, scope: !12864)
!12888 = !DILocation(line: 310, column: 9, scope: !12864)
!12889 = !DILocation(line: 314, column: 21, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12891, file: !1093, line: 313, column: 9)
!12891 = distinct !DILexicalBlock(scope: !12864, file: !1093, line: 311, column: 9)
!12892 = !DILocation(line: 314, column: 28, scope: !12890)
!12893 = !DILocation(line: 314, column: 34, scope: !12890)
!12894 = !DILocation(line: 314, column: 33, scope: !12890)
!12895 = !DILocation(line: 314, column: 13, scope: !12890)
!12896 = !DILocalVariable(name: "i", scope: !12897, file: !1093, line: 318, type: !58)
!12897 = distinct !DILexicalBlock(scope: !12898, file: !1093, line: 317, column: 13)
!12898 = distinct !DILexicalBlock(scope: !12890, file: !1093, line: 315, column: 13)
!12899 = !DILocation(line: 318, column: 21, scope: !12897)
!12900 = !DILocalVariable(name: "j", scope: !12897, file: !1093, line: 319, type: !58)
!12901 = !DILocation(line: 319, column: 21, scope: !12897)
!12902 = !DILocation(line: 321, column: 21, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12897, file: !1093, line: 321, column: 21)
!12904 = !DILocation(line: 321, column: 30, scope: !12903)
!12905 = !DILocation(line: 321, column: 37, scope: !12903)
!12906 = !DILocation(line: 321, column: 21, scope: !12897)
!12907 = !DILocation(line: 321, column: 54, scope: !12903)
!12908 = !DILocation(line: 324, column: 21, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12897, file: !1093, line: 324, column: 21)
!12910 = !DILocation(line: 324, column: 30, scope: !12909)
!12911 = !DILocation(line: 325, column: 18, scope: !12909)
!12912 = !DILocation(line: 325, column: 21, scope: !12909)
!12913 = !DILocation(line: 325, column: 28, scope: !12909)
!12914 = !DILocation(line: 325, column: 34, scope: !12909)
!12915 = !DILocation(line: 325, column: 33, scope: !12909)
!12916 = !DILocation(line: 325, column: 46, scope: !12909)
!12917 = !DILocation(line: 326, column: 18, scope: !12909)
!12918 = !DILocation(line: 326, column: 21, scope: !12909)
!12919 = !DILocation(line: 326, column: 28, scope: !12909)
!12920 = !DILocation(line: 326, column: 34, scope: !12909)
!12921 = !DILocation(line: 326, column: 33, scope: !12909)
!12922 = !DILocation(line: 326, column: 45, scope: !12909)
!12923 = !DILocation(line: 326, column: 44, scope: !12909)
!12924 = !DILocation(line: 326, column: 53, scope: !12909)
!12925 = !DILocation(line: 326, column: 57, scope: !12909)
!12926 = !DILocation(line: 324, column: 21, scope: !12897)
!12927 = !DILocation(line: 328, column: 21, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12909, file: !1093, line: 327, column: 17)
!12929 = !DILocation(line: 331, column: 21, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12897, file: !1093, line: 331, column: 21)
!12931 = !DILocation(line: 331, column: 28, scope: !12930)
!12932 = !DILocation(line: 331, column: 36, scope: !12930)
!12933 = !DILocation(line: 331, column: 34, scope: !12930)
!12934 = !DILocation(line: 331, column: 47, scope: !12930)
!12935 = !DILocation(line: 331, column: 52, scope: !12930)
!12936 = !DILocation(line: 331, column: 21, scope: !12897)
!12937 = !DILocation(line: 333, column: 25, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !1093, line: 333, column: 25)
!12939 = distinct !DILexicalBlock(scope: !12930, file: !1093, line: 332, column: 17)
!12940 = !DILocation(line: 333, column: 34, scope: !12938)
!12941 = !DILocation(line: 333, column: 25, scope: !12939)
!12942 = !DILocation(line: 335, column: 25, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12938, file: !1093, line: 334, column: 21)
!12944 = !DILocation(line: 337, column: 32, scope: !12939)
!12945 = !DILocation(line: 338, column: 30, scope: !12939)
!12946 = !DILocation(line: 339, column: 17, scope: !12939)
!12947 = !DILocation(line: 340, column: 19, scope: !12897)
!12948 = !DILocation(line: 341, column: 19, scope: !12897)
!12949 = !DILocation(line: 342, column: 17, scope: !12897)
!12950 = distinct !{!12950, !12949, !12951}
!12951 = !DILocation(line: 361, column: 86, scope: !12897)
!12952 = !DILocalVariable(name: "readId", scope: !12953, file: !1093, line: 343, type: !86)
!12953 = distinct !DILexicalBlock(scope: !12897, file: !1093, line: 342, column: 20)
!12954 = !DILocation(line: 343, column: 30, scope: !12953)
!12955 = !DILocation(line: 345, column: 28, scope: !12953)
!12956 = !DILocation(line: 346, column: 22, scope: !12953)
!12957 = !DILocation(line: 347, column: 21, scope: !12953)
!12958 = !DILocation(line: 347, column: 28, scope: !12953)
!12959 = !DILocation(line: 347, column: 32, scope: !12953)
!12960 = !DILocation(line: 347, column: 40, scope: !12953)
!12961 = !DILocation(line: 347, column: 30, scope: !12953)
!12962 = !DILocation(line: 347, column: 43, scope: !12953)
!12963 = !DILocation(line: 347, column: 46, scope: !12953)
!12964 = !DILocation(line: 347, column: 53, scope: !12953)
!12965 = !DILocation(line: 347, column: 59, scope: !12953)
!12966 = !DILocation(line: 347, column: 58, scope: !12953)
!12967 = !DILocation(line: 347, column: 70, scope: !12953)
!12968 = !DILocation(line: 347, column: 69, scope: !12953)
!12969 = !DILocation(line: 347, column: 73, scope: !12953)
!12970 = !DILocation(line: 349, column: 29, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !1093, line: 349, column: 29)
!12972 = distinct !DILexicalBlock(scope: !12953, file: !1093, line: 348, column: 21)
!12973 = !DILocation(line: 349, column: 36, scope: !12971)
!12974 = !DILocation(line: 349, column: 42, scope: !12971)
!12975 = !DILocation(line: 349, column: 41, scope: !12971)
!12976 = !DILocation(line: 349, column: 53, scope: !12971)
!12977 = !DILocation(line: 349, column: 52, scope: !12971)
!12978 = !DILocation(line: 349, column: 56, scope: !12971)
!12979 = !DILocation(line: 350, column: 26, scope: !12971)
!12980 = !DILocation(line: 350, column: 29, scope: !12971)
!12981 = !DILocation(line: 350, column: 36, scope: !12971)
!12982 = !DILocation(line: 350, column: 42, scope: !12971)
!12983 = !DILocation(line: 350, column: 41, scope: !12971)
!12984 = !DILocation(line: 350, column: 53, scope: !12971)
!12985 = !DILocation(line: 350, column: 52, scope: !12971)
!12986 = !DILocation(line: 350, column: 56, scope: !12971)
!12987 = !DILocation(line: 349, column: 29, scope: !12972)
!12988 = !DILocation(line: 352, column: 29, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12971, file: !1093, line: 351, column: 25)
!12990 = !DILocation(line: 354, column: 32, scope: !12972)
!12991 = !DILocation(line: 355, column: 35, scope: !12972)
!12992 = !DILocation(line: 355, column: 42, scope: !12972)
!12993 = !DILocation(line: 355, column: 48, scope: !12972)
!12994 = !DILocation(line: 355, column: 47, scope: !12972)
!12995 = !DILocation(line: 355, column: 59, scope: !12972)
!12996 = !DILocation(line: 355, column: 58, scope: !12972)
!12997 = !DILocation(line: 355, column: 62, scope: !12972)
!12998 = !DILocation(line: 355, column: 32, scope: !12972)
!12999 = !DILocation(line: 356, column: 29, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12972, file: !1093, line: 356, column: 29)
!13001 = !DILocation(line: 356, column: 36, scope: !13000)
!13002 = !DILocation(line: 356, column: 29, scope: !12972)
!13003 = !DILocation(line: 356, column: 52, scope: !13000)
!13004 = !DILocation(line: 357, column: 26, scope: !12972)
!13005 = distinct !{!13005, !12957, !13006}
!13006 = !DILocation(line: 358, column: 21, scope: !12953)
!13007 = !DILocation(line: 359, column: 39, scope: !12953)
!13008 = !DILocation(line: 359, column: 21, scope: !12953)
!13009 = !DILocation(line: 359, column: 30, scope: !12953)
!13010 = !DILocation(line: 359, column: 34, scope: !12953)
!13011 = !DILocation(line: 359, column: 37, scope: !12953)
!13012 = !DILocation(line: 360, column: 22, scope: !12953)
!13013 = !DILocation(line: 361, column: 17, scope: !12953)
!13014 = !DILocation(line: 361, column: 26, scope: !12897)
!13015 = !DILocation(line: 361, column: 30, scope: !12897)
!13016 = !DILocation(line: 361, column: 38, scope: !12897)
!13017 = !DILocation(line: 361, column: 28, scope: !12897)
!13018 = !DILocation(line: 361, column: 41, scope: !12897)
!13019 = !DILocation(line: 361, column: 44, scope: !12897)
!13020 = !DILocation(line: 361, column: 46, scope: !12897)
!13021 = !DILocation(line: 361, column: 50, scope: !12897)
!13022 = !DILocation(line: 361, column: 53, scope: !12897)
!13023 = !DILocation(line: 361, column: 60, scope: !12897)
!13024 = !DILocation(line: 361, column: 66, scope: !12897)
!13025 = !DILocation(line: 361, column: 65, scope: !12897)
!13026 = !DILocation(line: 361, column: 77, scope: !12897)
!13027 = !DILocation(line: 361, column: 76, scope: !12897)
!13028 = !DILocation(line: 361, column: 80, scope: !12897)
!13029 = !DILocation(line: 362, column: 21, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !12897, file: !1093, line: 362, column: 21)
!13031 = !DILocation(line: 362, column: 25, scope: !13030)
!13032 = !DILocation(line: 362, column: 33, scope: !13030)
!13033 = !DILocation(line: 362, column: 23, scope: !13030)
!13034 = !DILocation(line: 362, column: 21, scope: !12897)
!13035 = !DILocation(line: 362, column: 38, scope: !13030)
!13036 = !DILocation(line: 364, column: 13, scope: !12898)
!13037 = !DILocation(line: 367, column: 21, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !12898, file: !1093, line: 367, column: 21)
!13039 = !DILocation(line: 367, column: 30, scope: !13038)
!13040 = !DILocation(line: 367, column: 35, scope: !13038)
!13041 = !DILocation(line: 367, column: 21, scope: !12898)
!13042 = !DILocation(line: 367, column: 51, scope: !13038)
!13043 = !DILocation(line: 368, column: 17, scope: !12898)
!13044 = !DILocation(line: 368, column: 26, scope: !12898)
!13045 = !DILocation(line: 368, column: 31, scope: !12898)
!13046 = !DILocation(line: 369, column: 34, scope: !12898)
!13047 = !DILocation(line: 369, column: 43, scope: !12898)
!13048 = !DILocation(line: 369, column: 41, scope: !12898)
!13049 = !DILocation(line: 369, column: 51, scope: !12898)
!13050 = !DILocation(line: 369, column: 49, scope: !12898)
!13051 = !DILocation(line: 369, column: 17, scope: !12898)
!13052 = !DILocation(line: 369, column: 26, scope: !12898)
!13053 = !DILocation(line: 369, column: 32, scope: !12898)
!13054 = !DILocation(line: 370, column: 37, scope: !12898)
!13055 = !DILocation(line: 370, column: 17, scope: !12898)
!13056 = !DILocation(line: 370, column: 26, scope: !12898)
!13057 = !DILocation(line: 370, column: 35, scope: !12898)
!13058 = !DILocation(line: 371, column: 17, scope: !12898)
!13059 = !DILocation(line: 375, column: 17, scope: !12898)
!13060 = !DILocation(line: 378, column: 17, scope: !12898)
!13061 = !DILocation(line: 381, column: 9, scope: !12891)
!13062 = !DILocation(line: 386, column: 17, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13064, file: !1093, line: 386, column: 17)
!13064 = distinct !DILexicalBlock(scope: !12891, file: !1093, line: 384, column: 9)
!13065 = !DILocation(line: 386, column: 24, scope: !13063)
!13066 = !DILocation(line: 386, column: 30, scope: !13063)
!13067 = !DILocation(line: 386, column: 29, scope: !13063)
!13068 = !DILocation(line: 386, column: 40, scope: !13063)
!13069 = !DILocation(line: 386, column: 44, scope: !13063)
!13070 = !DILocation(line: 386, column: 17, scope: !13064)
!13071 = !DILocation(line: 386, column: 52, scope: !13063)
!13072 = !DILocation(line: 387, column: 21, scope: !13064)
!13073 = !DILocation(line: 387, column: 28, scope: !13064)
!13074 = !DILocation(line: 387, column: 34, scope: !13064)
!13075 = !DILocation(line: 387, column: 33, scope: !13064)
!13076 = !DILocation(line: 387, column: 13, scope: !13064)
!13077 = !DILocation(line: 390, column: 21, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13079, file: !1093, line: 390, column: 21)
!13079 = distinct !DILexicalBlock(scope: !13064, file: !1093, line: 388, column: 13)
!13080 = !DILocation(line: 390, column: 30, scope: !13078)
!13081 = !DILocation(line: 390, column: 35, scope: !13078)
!13082 = !DILocation(line: 390, column: 21, scope: !13079)
!13083 = !DILocation(line: 390, column: 51, scope: !13078)
!13084 = !DILocation(line: 391, column: 66, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13079, file: !1093, line: 391, column: 21)
!13086 = !DILocation(line: 391, column: 75, scope: !13085)
!13087 = !DILocation(line: 391, column: 73, scope: !13085)
!13088 = !DILocation(line: 391, column: 83, scope: !13085)
!13089 = !DILocation(line: 391, column: 81, scope: !13085)
!13090 = !DILocation(line: 391, column: 95, scope: !13085)
!13091 = !DILocation(line: 391, column: 26, scope: !13085)
!13092 = !DILocation(line: 391, column: 23, scope: !13085)
!13093 = !DILocation(line: 391, column: 21, scope: !13079)
!13094 = !DILocation(line: 393, column: 21, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13085, file: !1093, line: 392, column: 17)
!13096 = !DILocation(line: 393, column: 30, scope: !13095)
!13097 = !DILocation(line: 393, column: 35, scope: !13095)
!13098 = !DILocation(line: 394, column: 17, scope: !13095)
!13099 = !DILocation(line: 395, column: 72, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13085, file: !1093, line: 395, column: 26)
!13101 = !DILocation(line: 395, column: 81, scope: !13100)
!13102 = !DILocation(line: 395, column: 79, scope: !13100)
!13103 = !DILocation(line: 395, column: 89, scope: !13100)
!13104 = !DILocation(line: 395, column: 87, scope: !13100)
!13105 = !DILocation(line: 395, column: 101, scope: !13100)
!13106 = !DILocation(line: 395, column: 31, scope: !13100)
!13107 = !DILocation(line: 395, column: 28, scope: !13100)
!13108 = !DILocation(line: 395, column: 26, scope: !13085)
!13109 = !DILocation(line: 397, column: 21, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13100, file: !1093, line: 396, column: 17)
!13111 = !DILocation(line: 397, column: 30, scope: !13110)
!13112 = !DILocation(line: 397, column: 35, scope: !13110)
!13113 = !DILocation(line: 398, column: 17, scope: !13110)
!13114 = !DILocation(line: 401, column: 21, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13100, file: !1093, line: 400, column: 17)
!13116 = !DILocation(line: 403, column: 17, scope: !13079)
!13117 = !DILocation(line: 406, column: 21, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13079, file: !1093, line: 406, column: 21)
!13119 = !DILocation(line: 406, column: 30, scope: !13118)
!13120 = !DILocation(line: 406, column: 35, scope: !13118)
!13121 = !DILocation(line: 406, column: 21, scope: !13079)
!13122 = !DILocation(line: 406, column: 51, scope: !13118)
!13123 = !DILocation(line: 408, column: 17, scope: !13079)
!13124 = !DILocation(line: 411, column: 21, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13079, file: !1093, line: 411, column: 21)
!13126 = !DILocation(line: 411, column: 30, scope: !13125)
!13127 = !DILocation(line: 411, column: 35, scope: !13125)
!13128 = !DILocation(line: 411, column: 21, scope: !13079)
!13129 = !DILocation(line: 411, column: 51, scope: !13125)
!13130 = !DILocation(line: 413, column: 21, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13079, file: !1093, line: 413, column: 21)
!13132 = !DILocation(line: 413, column: 30, scope: !13131)
!13133 = !DILocation(line: 414, column: 18, scope: !13131)
!13134 = !DILocation(line: 414, column: 21, scope: !13131)
!13135 = !DILocation(line: 414, column: 28, scope: !13131)
!13136 = !DILocation(line: 414, column: 34, scope: !13131)
!13137 = !DILocation(line: 414, column: 33, scope: !13131)
!13138 = !DILocation(line: 414, column: 46, scope: !13131)
!13139 = !DILocation(line: 415, column: 18, scope: !13131)
!13140 = !DILocation(line: 415, column: 21, scope: !13131)
!13141 = !DILocation(line: 415, column: 28, scope: !13131)
!13142 = !DILocation(line: 415, column: 34, scope: !13131)
!13143 = !DILocation(line: 415, column: 33, scope: !13131)
!13144 = !DILocation(line: 415, column: 45, scope: !13131)
!13145 = !DILocation(line: 415, column: 44, scope: !13131)
!13146 = !DILocation(line: 415, column: 53, scope: !13131)
!13147 = !DILocation(line: 415, column: 57, scope: !13131)
!13148 = !DILocation(line: 413, column: 21, scope: !13079)
!13149 = !DILocation(line: 417, column: 21, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13131, file: !1093, line: 416, column: 17)
!13151 = !DILocation(line: 419, column: 17, scope: !13079)
!13152 = !DILocation(line: 419, column: 26, scope: !13079)
!13153 = !DILocation(line: 419, column: 31, scope: !13079)
!13154 = !DILocation(line: 420, column: 34, scope: !13079)
!13155 = !DILocation(line: 420, column: 43, scope: !13079)
!13156 = !DILocation(line: 420, column: 41, scope: !13079)
!13157 = !DILocation(line: 420, column: 51, scope: !13079)
!13158 = !DILocation(line: 420, column: 49, scope: !13079)
!13159 = !DILocation(line: 420, column: 62, scope: !13079)
!13160 = !DILocation(line: 420, column: 17, scope: !13079)
!13161 = !DILocation(line: 420, column: 26, scope: !13079)
!13162 = !DILocation(line: 420, column: 32, scope: !13079)
!13163 = !DILocation(line: 421, column: 37, scope: !13079)
!13164 = !DILocation(line: 421, column: 46, scope: !13079)
!13165 = !DILocation(line: 421, column: 17, scope: !13079)
!13166 = !DILocation(line: 421, column: 26, scope: !13079)
!13167 = !DILocation(line: 421, column: 35, scope: !13079)
!13168 = !DILocation(line: 422, column: 17, scope: !13079)
!13169 = !DILocation(line: 425, column: 17, scope: !13079)
!13170 = !DILocation(line: 428, column: 9, scope: !12891)
!13171 = !DILocation(line: 431, column: 13, scope: !12891)
!13172 = !DILocation(line: 434, column: 18, scope: !12864)
!13173 = !DILocation(line: 434, column: 23, scope: !12864)
!13174 = !DILocation(line: 434, column: 15, scope: !12864)
!13175 = !DILocation(line: 435, column: 5, scope: !12864)
!13176 = !DILocation(line: 435, column: 14, scope: !12836)
!13177 = !DILocation(line: 435, column: 22, scope: !12836)
!13178 = !DILocation(line: 435, column: 20, scope: !12836)
!13179 = !DILocation(line: 437, column: 5, scope: !12836)
!13180 = !DILocation(line: 438, column: 1, scope: !12836)
!13181 = distinct !DISubprogram(name: "prv_split", scope: !1093, file: !1093, line: 142, type: !13182, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!13182 = !DISubroutineType(types: !13183)
!13183 = !{!58, !186, !438, !13184, !13184, !13184, !13184}
!13184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!13185 = !DILocalVariable(name: "buffer", arg: 1, scope: !13181, file: !1093, line: 142, type: !186)
!13186 = !DILocation(line: 142, column: 32, scope: !13181)
!13187 = !DILocalVariable(name: "bufferLen", arg: 2, scope: !13181, file: !1093, line: 143, type: !438)
!13188 = !DILocation(line: 143, column: 29, scope: !13181)
!13189 = !DILocalVariable(name: "tokenStartP", arg: 3, scope: !13181, file: !1093, line: 144, type: !13184)
!13190 = !DILocation(line: 144, column: 28, scope: !13181)
!13191 = !DILocalVariable(name: "tokenLenP", arg: 4, scope: !13181, file: !1093, line: 145, type: !13184)
!13192 = !DILocation(line: 145, column: 28, scope: !13181)
!13193 = !DILocalVariable(name: "valueStartP", arg: 5, scope: !13181, file: !1093, line: 146, type: !13184)
!13194 = !DILocation(line: 146, column: 28, scope: !13181)
!13195 = !DILocalVariable(name: "valueLenP", arg: 6, scope: !13181, file: !1093, line: 147, type: !13184)
!13196 = !DILocation(line: 147, column: 28, scope: !13181)
!13197 = !DILocalVariable(name: "index", scope: !13181, file: !1093, line: 149, type: !438)
!13198 = !DILocation(line: 149, column: 12, scope: !13181)
!13199 = !DILocalVariable(name: "step", scope: !13181, file: !1093, line: 150, type: !13200)
!13200 = !DIDerivedType(tag: DW_TAG_typedef, name: "_itemState", file: !1093, line: 79, baseType: !1102)
!13201 = !DILocation(line: 150, column: 16, scope: !13181)
!13202 = !DILocation(line: 152, column: 11, scope: !13181)
!13203 = !DILocation(line: 153, column: 10, scope: !13181)
!13204 = !DILocation(line: 155, column: 27, scope: !13181)
!13205 = !DILocation(line: 155, column: 36, scope: !13181)
!13206 = !DILocation(line: 155, column: 34, scope: !13181)
!13207 = !DILocation(line: 155, column: 43, scope: !13181)
!13208 = !DILocation(line: 155, column: 55, scope: !13181)
!13209 = !DILocation(line: 155, column: 53, scope: !13181)
!13210 = !DILocation(line: 155, column: 13, scope: !13181)
!13211 = !DILocation(line: 155, column: 11, scope: !13181)
!13212 = !DILocation(line: 156, column: 9, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13181, file: !1093, line: 156, column: 9)
!13214 = !DILocation(line: 156, column: 18, scope: !13213)
!13215 = !DILocation(line: 156, column: 15, scope: !13213)
!13216 = !DILocation(line: 156, column: 9, scope: !13181)
!13217 = !DILocation(line: 156, column: 29, scope: !13213)
!13218 = !DILocation(line: 158, column: 5, scope: !13181)
!13219 = !DILocation(line: 158, column: 13, scope: !13181)
!13220 = !DILocation(line: 158, column: 21, scope: !13181)
!13221 = !DILocation(line: 158, column: 19, scope: !13181)
!13222 = !DILocation(line: 159, column: 9, scope: !13181)
!13223 = !DILocation(line: 159, column: 13, scope: !13181)
!13224 = !DILocation(line: 159, column: 20, scope: !13181)
!13225 = !DILocation(line: 159, column: 27, scope: !13181)
!13226 = !DILocation(line: 161, column: 17, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13181, file: !1093, line: 160, column: 5)
!13228 = !DILocation(line: 161, column: 9, scope: !13227)
!13229 = !DILocation(line: 164, column: 17, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !1093, line: 164, column: 17)
!13231 = distinct !DILexicalBlock(scope: !13227, file: !1093, line: 162, column: 9)
!13232 = !DILocation(line: 164, column: 24, scope: !13230)
!13233 = !DILocation(line: 164, column: 31, scope: !13230)
!13234 = !DILocation(line: 164, column: 17, scope: !13231)
!13235 = !DILocation(line: 164, column: 39, scope: !13230)
!13236 = !DILocation(line: 165, column: 28, scope: !13231)
!13237 = !DILocation(line: 165, column: 33, scope: !13231)
!13238 = !DILocation(line: 165, column: 14, scope: !13231)
!13239 = !DILocation(line: 165, column: 26, scope: !13231)
!13240 = !DILocation(line: 166, column: 18, scope: !13231)
!13241 = !DILocation(line: 167, column: 13, scope: !13231)
!13242 = !DILocation(line: 170, column: 17, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13231, file: !1093, line: 170, column: 17)
!13244 = !DILocation(line: 170, column: 24, scope: !13243)
!13245 = !DILocation(line: 170, column: 31, scope: !13243)
!13246 = !DILocation(line: 170, column: 17, scope: !13231)
!13247 = !DILocation(line: 172, column: 30, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13243, file: !1093, line: 171, column: 13)
!13249 = !DILocation(line: 172, column: 39, scope: !13248)
!13250 = !DILocation(line: 172, column: 38, scope: !13248)
!13251 = !DILocation(line: 172, column: 36, scope: !13248)
!13252 = !DILocation(line: 172, column: 18, scope: !13248)
!13253 = !DILocation(line: 172, column: 28, scope: !13248)
!13254 = !DILocation(line: 173, column: 22, scope: !13248)
!13255 = !DILocation(line: 174, column: 13, scope: !13248)
!13256 = !DILocation(line: 175, column: 13, scope: !13231)
!13257 = !DILocation(line: 178, column: 17, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13231, file: !1093, line: 178, column: 17)
!13259 = !DILocation(line: 178, column: 24, scope: !13258)
!13260 = !DILocation(line: 178, column: 31, scope: !13258)
!13261 = !DILocation(line: 178, column: 17, scope: !13231)
!13262 = !DILocation(line: 178, column: 39, scope: !13258)
!13263 = !DILocation(line: 179, column: 18, scope: !13231)
!13264 = !DILocation(line: 180, column: 13, scope: !13231)
!13265 = !DILocation(line: 183, column: 17, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13231, file: !1093, line: 183, column: 17)
!13267 = !DILocation(line: 183, column: 24, scope: !13266)
!13268 = !DILocation(line: 183, column: 31, scope: !13266)
!13269 = !DILocation(line: 183, column: 17, scope: !13231)
!13270 = !DILocation(line: 185, column: 32, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13266, file: !1093, line: 184, column: 13)
!13272 = !DILocation(line: 185, column: 18, scope: !13271)
!13273 = !DILocation(line: 185, column: 30, scope: !13271)
!13274 = !DILocation(line: 186, column: 22, scope: !13271)
!13275 = !DILocation(line: 187, column: 13, scope: !13271)
!13276 = !DILocation(line: 187, column: 40, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13266, file: !1093, line: 187, column: 24)
!13278 = !DILocation(line: 187, column: 47, scope: !13277)
!13279 = !DILocation(line: 187, column: 25, scope: !13277)
!13280 = !DILocation(line: 187, column: 24, scope: !13266)
!13281 = !DILocation(line: 189, column: 32, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13277, file: !1093, line: 188, column: 13)
!13283 = !DILocation(line: 189, column: 18, scope: !13282)
!13284 = !DILocation(line: 189, column: 30, scope: !13282)
!13285 = !DILocation(line: 190, column: 22, scope: !13282)
!13286 = !DILocation(line: 191, column: 13, scope: !13282)
!13287 = !DILocation(line: 193, column: 17, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13277, file: !1093, line: 192, column: 13)
!13289 = !DILocation(line: 195, column: 13, scope: !13231)
!13290 = !DILocation(line: 198, column: 17, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13231, file: !1093, line: 198, column: 17)
!13292 = !DILocation(line: 198, column: 24, scope: !13291)
!13293 = !DILocation(line: 198, column: 31, scope: !13291)
!13294 = !DILocation(line: 198, column: 38, scope: !13291)
!13295 = !DILocation(line: 198, column: 41, scope: !13291)
!13296 = !DILocation(line: 198, column: 48, scope: !13291)
!13297 = !DILocation(line: 198, column: 53, scope: !13291)
!13298 = !DILocation(line: 198, column: 57, scope: !13291)
!13299 = !DILocation(line: 198, column: 17, scope: !13231)
!13300 = !DILocation(line: 200, column: 30, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13291, file: !1093, line: 199, column: 13)
!13302 = !DILocation(line: 200, column: 39, scope: !13301)
!13303 = !DILocation(line: 200, column: 38, scope: !13301)
!13304 = !DILocation(line: 200, column: 36, scope: !13301)
!13305 = !DILocation(line: 200, column: 51, scope: !13301)
!13306 = !DILocation(line: 200, column: 18, scope: !13301)
!13307 = !DILocation(line: 200, column: 28, scope: !13301)
!13308 = !DILocation(line: 201, column: 22, scope: !13301)
!13309 = !DILocation(line: 202, column: 13, scope: !13301)
!13310 = !DILocation(line: 203, column: 13, scope: !13231)
!13311 = !DILocation(line: 206, column: 34, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13231, file: !1093, line: 206, column: 17)
!13313 = !DILocation(line: 206, column: 41, scope: !13312)
!13314 = !DILocation(line: 206, column: 17, scope: !13312)
!13315 = !DILocation(line: 206, column: 17, scope: !13231)
!13316 = !DILocation(line: 208, column: 30, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13312, file: !1093, line: 207, column: 13)
!13318 = !DILocation(line: 208, column: 39, scope: !13317)
!13319 = !DILocation(line: 208, column: 38, scope: !13317)
!13320 = !DILocation(line: 208, column: 36, scope: !13317)
!13321 = !DILocation(line: 208, column: 18, scope: !13317)
!13322 = !DILocation(line: 208, column: 28, scope: !13317)
!13323 = !DILocation(line: 209, column: 22, scope: !13317)
!13324 = !DILocation(line: 210, column: 13, scope: !13317)
!13325 = !DILocation(line: 211, column: 13, scope: !13231)
!13326 = !DILocation(line: 215, column: 13, scope: !13231)
!13327 = !DILocation(line: 218, column: 14, scope: !13227)
!13328 = !DILocation(line: 219, column: 13, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13227, file: !1093, line: 219, column: 13)
!13330 = !DILocation(line: 219, column: 18, scope: !13329)
!13331 = !DILocation(line: 220, column: 10, scope: !13329)
!13332 = !DILocation(line: 220, column: 13, scope: !13329)
!13333 = !DILocation(line: 220, column: 18, scope: !13329)
!13334 = !DILocation(line: 221, column: 10, scope: !13329)
!13335 = !DILocation(line: 221, column: 13, scope: !13329)
!13336 = !DILocation(line: 221, column: 18, scope: !13329)
!13337 = !DILocation(line: 222, column: 10, scope: !13329)
!13338 = !DILocation(line: 222, column: 13, scope: !13329)
!13339 = !DILocation(line: 222, column: 18, scope: !13329)
!13340 = !DILocation(line: 219, column: 13, scope: !13227)
!13341 = !DILocation(line: 224, column: 36, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13329, file: !1093, line: 223, column: 9)
!13343 = !DILocation(line: 224, column: 45, scope: !13342)
!13344 = !DILocation(line: 224, column: 43, scope: !13342)
!13345 = !DILocation(line: 224, column: 52, scope: !13342)
!13346 = !DILocation(line: 224, column: 64, scope: !13342)
!13347 = !DILocation(line: 224, column: 62, scope: !13342)
!13348 = !DILocation(line: 224, column: 22, scope: !13342)
!13349 = !DILocation(line: 224, column: 19, scope: !13342)
!13350 = !DILocation(line: 225, column: 9, scope: !13342)
!13351 = distinct !{!13351, !13218, !13352}
!13352 = !DILocation(line: 226, column: 5, scope: !13181)
!13353 = !DILocation(line: 228, column: 9, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13181, file: !1093, line: 228, column: 9)
!13355 = !DILocation(line: 228, column: 14, scope: !13354)
!13356 = !DILocation(line: 228, column: 9, scope: !13181)
!13357 = !DILocation(line: 230, column: 22, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13354, file: !1093, line: 229, column: 5)
!13359 = !DILocation(line: 230, column: 31, scope: !13358)
!13360 = !DILocation(line: 230, column: 30, scope: !13358)
!13361 = !DILocation(line: 230, column: 28, scope: !13358)
!13362 = !DILocation(line: 230, column: 10, scope: !13358)
!13363 = !DILocation(line: 230, column: 20, scope: !13358)
!13364 = !DILocation(line: 231, column: 14, scope: !13358)
!13365 = !DILocation(line: 232, column: 5, scope: !13358)
!13366 = !DILocation(line: 234, column: 9, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13181, file: !1093, line: 234, column: 9)
!13368 = !DILocation(line: 234, column: 14, scope: !13367)
!13369 = !DILocation(line: 234, column: 9, scope: !13181)
!13370 = !DILocation(line: 234, column: 29, scope: !13367)
!13371 = !DILocation(line: 236, column: 17, scope: !13181)
!13372 = !DILocation(line: 236, column: 12, scope: !13181)
!13373 = !DILocation(line: 236, column: 5, scope: !13181)
!13374 = !DILocation(line: 237, column: 1, scope: !13181)
!13375 = distinct !DISubprogram(name: "prv_convertRecord", scope: !1093, file: !1093, line: 556, type: !13376, isLocal: true, isDefinition: true, scopeLine: 560, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!13376 = !DISubroutineType(types: !13377)
!13377 = !{!58, !12034, !1112, !58, !12042}
!13378 = !DILocalVariable(name: "uriP", arg: 1, scope: !13375, file: !1093, line: 556, type: !12034)
!13379 = !DILocation(line: 556, column: 44, scope: !13375)
!13380 = !DILocalVariable(name: "recordArray", arg: 2, scope: !13375, file: !1093, line: 557, type: !1112)
!13381 = !DILocation(line: 557, column: 42, scope: !13375)
!13382 = !DILocalVariable(name: "count", arg: 3, scope: !13375, file: !1093, line: 558, type: !58)
!13383 = !DILocation(line: 558, column: 34, scope: !13375)
!13384 = !DILocalVariable(name: "dataP", arg: 4, scope: !13375, file: !1093, line: 559, type: !12042)
!13385 = !DILocation(line: 559, column: 46, scope: !13375)
!13386 = !DILocalVariable(name: "index", scope: !13375, file: !1093, line: 561, type: !58)
!13387 = !DILocation(line: 561, column: 9, scope: !13375)
!13388 = !DILocalVariable(name: "freeIndex", scope: !13375, file: !1093, line: 562, type: !58)
!13389 = !DILocation(line: 562, column: 9, scope: !13375)
!13390 = !DILocalVariable(name: "rootP", scope: !13375, file: !1093, line: 563, type: !12043)
!13391 = !DILocation(line: 563, column: 20, scope: !13375)
!13392 = !DILocalVariable(name: "size", scope: !13375, file: !1093, line: 564, type: !58)
!13393 = !DILocation(line: 564, column: 9, scope: !13375)
!13394 = !DILocalVariable(name: "rootLevel", scope: !13375, file: !1093, line: 565, type: !3638)
!13395 = !DILocation(line: 565, column: 17, scope: !13375)
!13396 = !DILocation(line: 567, column: 9, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13375, file: !1093, line: 567, column: 9)
!13398 = !DILocation(line: 567, column: 14, scope: !13397)
!13399 = !DILocation(line: 567, column: 9, scope: !13375)
!13400 = !DILocation(line: 569, column: 16, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13397, file: !1093, line: 568, column: 5)
!13402 = !DILocation(line: 569, column: 14, scope: !13401)
!13403 = !DILocation(line: 570, column: 33, scope: !13401)
!13404 = !DILocation(line: 570, column: 18, scope: !13401)
!13405 = !DILocation(line: 570, column: 10, scope: !13401)
!13406 = !DILocation(line: 570, column: 16, scope: !13401)
!13407 = !DILocation(line: 571, column: 22, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13401, file: !1093, line: 571, column: 13)
!13409 = !DILocation(line: 571, column: 21, scope: !13408)
!13410 = !DILocation(line: 571, column: 18, scope: !13408)
!13411 = !DILocation(line: 571, column: 13, scope: !13401)
!13412 = !DILocation(line: 571, column: 29, scope: !13408)
!13413 = !DILocation(line: 572, column: 19, scope: !13401)
!13414 = !DILocation(line: 573, column: 18, scope: !13401)
!13415 = !DILocation(line: 573, column: 17, scope: !13401)
!13416 = !DILocation(line: 573, column: 15, scope: !13401)
!13417 = !DILocation(line: 574, column: 5, scope: !13401)
!13418 = !DILocalVariable(name: "parentP", scope: !13419, file: !1093, line: 577, type: !12043)
!13419 = distinct !DILexicalBlock(scope: !13397, file: !1093, line: 576, column: 5)
!13420 = !DILocation(line: 577, column: 24, scope: !13419)
!13421 = !DILocation(line: 578, column: 14, scope: !13419)
!13422 = !DILocation(line: 580, column: 18, scope: !13419)
!13423 = !DILocation(line: 580, column: 10, scope: !13419)
!13424 = !DILocation(line: 580, column: 16, scope: !13419)
!13425 = !DILocation(line: 581, column: 22, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13419, file: !1093, line: 581, column: 13)
!13427 = !DILocation(line: 581, column: 21, scope: !13426)
!13428 = !DILocation(line: 581, column: 18, scope: !13426)
!13429 = !DILocation(line: 581, column: 13, scope: !13419)
!13430 = !DILocation(line: 581, column: 29, scope: !13426)
!13431 = !DILocation(line: 582, column: 11, scope: !13419)
!13432 = !DILocation(line: 582, column: 10, scope: !13419)
!13433 = !DILocation(line: 582, column: 19, scope: !13419)
!13434 = !DILocation(line: 582, column: 24, scope: !13419)
!13435 = !DILocation(line: 583, column: 24, scope: !13419)
!13436 = !DILocation(line: 583, column: 30, scope: !13419)
!13437 = !DILocation(line: 583, column: 11, scope: !13419)
!13438 = !DILocation(line: 583, column: 10, scope: !13419)
!13439 = !DILocation(line: 583, column: 19, scope: !13419)
!13440 = !DILocation(line: 583, column: 22, scope: !13419)
!13441 = !DILocation(line: 584, column: 19, scope: !13419)
!13442 = !DILocation(line: 585, column: 20, scope: !13419)
!13443 = !DILocation(line: 585, column: 19, scope: !13419)
!13444 = !DILocation(line: 585, column: 17, scope: !13419)
!13445 = !DILocation(line: 586, column: 13, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13419, file: !1093, line: 586, column: 13)
!13447 = !DILocation(line: 586, column: 13, scope: !13419)
!13448 = !DILocation(line: 588, column: 13, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13446, file: !1093, line: 587, column: 9)
!13450 = !DILocation(line: 588, column: 22, scope: !13449)
!13451 = !DILocation(line: 588, column: 28, scope: !13449)
!13452 = !DILocation(line: 588, column: 39, scope: !13449)
!13453 = !DILocation(line: 588, column: 45, scope: !13449)
!13454 = !DILocation(line: 589, column: 47, scope: !13449)
!13455 = !DILocation(line: 589, column: 13, scope: !13449)
!13456 = !DILocation(line: 589, column: 22, scope: !13449)
!13457 = !DILocation(line: 589, column: 28, scope: !13449)
!13458 = !DILocation(line: 589, column: 39, scope: !13449)
!13459 = !DILocation(line: 589, column: 45, scope: !13449)
!13460 = !DILocation(line: 590, column: 25, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13449, file: !1093, line: 590, column: 17)
!13462 = !DILocation(line: 590, column: 34, scope: !13461)
!13463 = !DILocation(line: 590, column: 40, scope: !13461)
!13464 = !DILocation(line: 590, column: 51, scope: !13461)
!13465 = !DILocation(line: 590, column: 22, scope: !13461)
!13466 = !DILocation(line: 590, column: 17, scope: !13449)
!13467 = !DILocation(line: 590, column: 58, scope: !13461)
!13468 = !DILocation(line: 591, column: 23, scope: !13449)
!13469 = !DILocation(line: 591, column: 32, scope: !13449)
!13470 = !DILocation(line: 591, column: 38, scope: !13449)
!13471 = !DILocation(line: 591, column: 49, scope: !13449)
!13472 = !DILocation(line: 591, column: 21, scope: !13449)
!13473 = !DILocation(line: 592, column: 13, scope: !13449)
!13474 = !DILocation(line: 592, column: 22, scope: !13449)
!13475 = !DILocation(line: 592, column: 27, scope: !13449)
!13476 = !DILocation(line: 593, column: 27, scope: !13449)
!13477 = !DILocation(line: 593, column: 33, scope: !13449)
!13478 = !DILocation(line: 593, column: 13, scope: !13449)
!13479 = !DILocation(line: 593, column: 22, scope: !13449)
!13480 = !DILocation(line: 593, column: 25, scope: !13449)
!13481 = !DILocation(line: 594, column: 23, scope: !13449)
!13482 = !DILocation(line: 595, column: 17, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13449, file: !1093, line: 595, column: 17)
!13484 = !DILocation(line: 595, column: 17, scope: !13449)
!13485 = !DILocation(line: 597, column: 17, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13483, file: !1093, line: 596, column: 13)
!13487 = !DILocation(line: 597, column: 26, scope: !13486)
!13488 = !DILocation(line: 597, column: 32, scope: !13486)
!13489 = !DILocation(line: 597, column: 43, scope: !13486)
!13490 = !DILocation(line: 597, column: 49, scope: !13486)
!13491 = !DILocation(line: 598, column: 51, scope: !13486)
!13492 = !DILocation(line: 598, column: 17, scope: !13486)
!13493 = !DILocation(line: 598, column: 26, scope: !13486)
!13494 = !DILocation(line: 598, column: 32, scope: !13486)
!13495 = !DILocation(line: 598, column: 43, scope: !13486)
!13496 = !DILocation(line: 598, column: 49, scope: !13486)
!13497 = !DILocation(line: 599, column: 29, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13486, file: !1093, line: 599, column: 21)
!13499 = !DILocation(line: 599, column: 38, scope: !13498)
!13500 = !DILocation(line: 599, column: 44, scope: !13498)
!13501 = !DILocation(line: 599, column: 55, scope: !13498)
!13502 = !DILocation(line: 599, column: 26, scope: !13498)
!13503 = !DILocation(line: 599, column: 21, scope: !13486)
!13504 = !DILocation(line: 599, column: 62, scope: !13498)
!13505 = !DILocation(line: 600, column: 27, scope: !13486)
!13506 = !DILocation(line: 600, column: 36, scope: !13486)
!13507 = !DILocation(line: 600, column: 42, scope: !13486)
!13508 = !DILocation(line: 600, column: 53, scope: !13486)
!13509 = !DILocation(line: 600, column: 25, scope: !13486)
!13510 = !DILocation(line: 601, column: 17, scope: !13486)
!13511 = !DILocation(line: 601, column: 26, scope: !13486)
!13512 = !DILocation(line: 601, column: 31, scope: !13486)
!13513 = !DILocation(line: 602, column: 31, scope: !13486)
!13514 = !DILocation(line: 602, column: 37, scope: !13486)
!13515 = !DILocation(line: 602, column: 17, scope: !13486)
!13516 = !DILocation(line: 602, column: 26, scope: !13486)
!13517 = !DILocation(line: 602, column: 29, scope: !13486)
!13518 = !DILocation(line: 603, column: 27, scope: !13486)
!13519 = !DILocation(line: 604, column: 13, scope: !13486)
!13520 = !DILocation(line: 605, column: 9, scope: !13449)
!13521 = !DILocation(line: 606, column: 43, scope: !13419)
!13522 = !DILocation(line: 606, column: 9, scope: !13419)
!13523 = !DILocation(line: 606, column: 18, scope: !13419)
!13524 = !DILocation(line: 606, column: 24, scope: !13419)
!13525 = !DILocation(line: 606, column: 35, scope: !13419)
!13526 = !DILocation(line: 606, column: 41, scope: !13419)
!13527 = !DILocation(line: 607, column: 58, scope: !13419)
!13528 = !DILocation(line: 607, column: 43, scope: !13419)
!13529 = !DILocation(line: 607, column: 9, scope: !13419)
!13530 = !DILocation(line: 607, column: 18, scope: !13419)
!13531 = !DILocation(line: 607, column: 24, scope: !13419)
!13532 = !DILocation(line: 607, column: 35, scope: !13419)
!13533 = !DILocation(line: 607, column: 41, scope: !13419)
!13534 = !DILocation(line: 608, column: 21, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13419, file: !1093, line: 608, column: 13)
!13536 = !DILocation(line: 608, column: 30, scope: !13535)
!13537 = !DILocation(line: 608, column: 36, scope: !13535)
!13538 = !DILocation(line: 608, column: 47, scope: !13535)
!13539 = !DILocation(line: 608, column: 18, scope: !13535)
!13540 = !DILocation(line: 608, column: 13, scope: !13419)
!13541 = !DILocation(line: 608, column: 54, scope: !13535)
!13542 = !DILocation(line: 609, column: 17, scope: !13419)
!13543 = !DILocation(line: 609, column: 26, scope: !13419)
!13544 = !DILocation(line: 609, column: 32, scope: !13419)
!13545 = !DILocation(line: 609, column: 43, scope: !13419)
!13546 = !DILocation(line: 609, column: 15, scope: !13419)
!13547 = !DILocation(line: 612, column: 15, scope: !13375)
!13548 = !DILocation(line: 613, column: 16, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13375, file: !1093, line: 613, column: 5)
!13550 = !DILocation(line: 613, column: 10, scope: !13549)
!13551 = !DILocation(line: 613, column: 22, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13549, file: !1093, line: 613, column: 5)
!13553 = !DILocation(line: 613, column: 30, scope: !13552)
!13554 = !DILocation(line: 613, column: 28, scope: !13552)
!13555 = !DILocation(line: 613, column: 5, scope: !13549)
!13556 = !DILocalVariable(name: "targetP", scope: !13557, file: !1093, line: 615, type: !12043)
!13557 = distinct !DILexicalBlock(scope: !13552, file: !1093, line: 614, column: 5)
!13558 = !DILocation(line: 615, column: 24, scope: !13557)
!13559 = !DILocalVariable(name: "resSegmentIndex", scope: !13557, file: !1093, line: 616, type: !58)
!13560 = !DILocation(line: 616, column: 13, scope: !13557)
!13561 = !DILocalVariable(name: "i", scope: !13557, file: !1093, line: 617, type: !58)
!13562 = !DILocation(line: 617, column: 13, scope: !13557)
!13563 = !DILocation(line: 621, column: 16, scope: !13557)
!13564 = !DILocation(line: 621, column: 9, scope: !13557)
!13565 = !DILocation(line: 624, column: 29, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13557, file: !1093, line: 622, column: 9)
!13567 = !DILocation(line: 625, column: 13, scope: !13566)
!13568 = !DILocation(line: 627, column: 29, scope: !13566)
!13569 = !DILocation(line: 628, column: 13, scope: !13566)
!13570 = !DILocation(line: 630, column: 29, scope: !13566)
!13571 = !DILocation(line: 631, column: 13, scope: !13566)
!13572 = !DILocation(line: 633, column: 29, scope: !13566)
!13573 = !DILocation(line: 634, column: 13, scope: !13566)
!13574 = !DILocation(line: 636, column: 13, scope: !13566)
!13575 = !DILocation(line: 638, column: 16, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13557, file: !1093, line: 638, column: 9)
!13577 = !DILocation(line: 638, column: 14, scope: !13576)
!13578 = !DILocation(line: 638, column: 22, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13576, file: !1093, line: 638, column: 9)
!13580 = !DILocation(line: 638, column: 27, scope: !13579)
!13581 = !DILocation(line: 638, column: 24, scope: !13579)
!13582 = !DILocation(line: 638, column: 9, scope: !13576)
!13583 = !DILocation(line: 640, column: 17, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13585, file: !1093, line: 640, column: 17)
!13585 = distinct !DILexicalBlock(scope: !13579, file: !1093, line: 639, column: 9)
!13586 = !DILocation(line: 640, column: 29, scope: !13584)
!13587 = !DILocation(line: 640, column: 36, scope: !13584)
!13588 = !DILocation(line: 640, column: 40, scope: !13584)
!13589 = !DILocation(line: 640, column: 43, scope: !13584)
!13590 = !DILocation(line: 640, column: 17, scope: !13585)
!13591 = !DILocation(line: 640, column: 60, scope: !13584)
!13592 = !DILocation(line: 641, column: 9, scope: !13585)
!13593 = !DILocation(line: 638, column: 46, scope: !13579)
!13594 = !DILocation(line: 638, column: 9, scope: !13579)
!13595 = distinct !{!13595, !13582, !13596}
!13596 = !DILocation(line: 641, column: 9, scope: !13576)
!13597 = !DILocation(line: 642, column: 13, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13557, file: !1093, line: 642, column: 13)
!13599 = !DILocation(line: 642, column: 29, scope: !13598)
!13600 = !DILocation(line: 642, column: 13, scope: !13557)
!13601 = !DILocation(line: 644, column: 17, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13603, file: !1093, line: 644, column: 17)
!13603 = distinct !DILexicalBlock(scope: !13598, file: !1093, line: 643, column: 9)
!13604 = !DILocation(line: 644, column: 29, scope: !13602)
!13605 = !DILocation(line: 644, column: 36, scope: !13602)
!13606 = !DILocation(line: 644, column: 40, scope: !13602)
!13607 = !DILocation(line: 644, column: 56, scope: !13602)
!13608 = !DILocation(line: 644, column: 61, scope: !13602)
!13609 = !DILocation(line: 644, column: 17, scope: !13603)
!13610 = !DILocation(line: 644, column: 78, scope: !13602)
!13611 = !DILocation(line: 645, column: 9, scope: !13603)
!13612 = !DILocation(line: 647, column: 36, scope: !13557)
!13613 = !DILocation(line: 647, column: 43, scope: !13557)
!13614 = !DILocation(line: 647, column: 50, scope: !13557)
!13615 = !DILocation(line: 647, column: 62, scope: !13557)
!13616 = !DILocation(line: 647, column: 69, scope: !13557)
!13617 = !DILocation(line: 647, column: 19, scope: !13557)
!13618 = !DILocation(line: 647, column: 17, scope: !13557)
!13619 = !DILocation(line: 648, column: 13, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13557, file: !1093, line: 648, column: 13)
!13621 = !DILocation(line: 648, column: 21, scope: !13620)
!13622 = !DILocation(line: 648, column: 13, scope: !13557)
!13623 = !DILocation(line: 650, column: 23, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13620, file: !1093, line: 649, column: 9)
!13625 = !DILocation(line: 650, column: 31, scope: !13624)
!13626 = !DILocation(line: 650, column: 29, scope: !13624)
!13627 = !DILocation(line: 650, column: 21, scope: !13624)
!13628 = !DILocation(line: 651, column: 22, scope: !13624)
!13629 = !DILocation(line: 652, column: 27, scope: !13624)
!13630 = !DILocation(line: 652, column: 39, scope: !13624)
!13631 = !DILocation(line: 652, column: 46, scope: !13624)
!13632 = !DILocation(line: 652, column: 13, scope: !13624)
!13633 = !DILocation(line: 652, column: 22, scope: !13624)
!13634 = !DILocation(line: 652, column: 25, scope: !13624)
!13635 = !DILocation(line: 653, column: 51, scope: !13624)
!13636 = !DILocation(line: 653, column: 29, scope: !13624)
!13637 = !DILocation(line: 653, column: 13, scope: !13624)
!13638 = !DILocation(line: 653, column: 22, scope: !13624)
!13639 = !DILocation(line: 653, column: 27, scope: !13624)
!13640 = !DILocation(line: 654, column: 9, scope: !13624)
!13641 = !DILocation(line: 655, column: 13, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13557, file: !1093, line: 655, column: 13)
!13643 = !DILocation(line: 655, column: 25, scope: !13642)
!13644 = !DILocation(line: 655, column: 32, scope: !13642)
!13645 = !DILocation(line: 655, column: 39, scope: !13642)
!13646 = !DILocation(line: 655, column: 13, scope: !13557)
!13647 = !DILocalVariable(name: "parentP", scope: !13648, file: !1093, line: 657, type: !12043)
!13648 = distinct !DILexicalBlock(scope: !13642, file: !1093, line: 656, column: 9)
!13649 = !DILocation(line: 657, column: 28, scope: !13648)
!13650 = !DILocalVariable(name: "level", scope: !13648, file: !1093, line: 658, type: !3638)
!13651 = !DILocation(line: 658, column: 25, scope: !13648)
!13652 = !DILocation(line: 660, column: 23, scope: !13648)
!13653 = !DILocation(line: 660, column: 21, scope: !13648)
!13654 = !DILocation(line: 661, column: 39, scope: !13648)
!13655 = !DILocation(line: 661, column: 21, scope: !13648)
!13656 = !DILocation(line: 661, column: 19, scope: !13648)
!13657 = !DILocation(line: 662, column: 20, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13648, file: !1093, line: 662, column: 13)
!13659 = !DILocation(line: 662, column: 18, scope: !13658)
!13660 = !DILocation(line: 662, column: 26, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13658, file: !1093, line: 662, column: 13)
!13662 = !DILocation(line: 662, column: 31, scope: !13661)
!13663 = !DILocation(line: 662, column: 28, scope: !13661)
!13664 = !DILocation(line: 662, column: 13, scope: !13658)
!13665 = !DILocation(line: 664, column: 44, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13661, file: !1093, line: 663, column: 13)
!13667 = !DILocation(line: 664, column: 53, scope: !13666)
!13668 = !DILocation(line: 664, column: 59, scope: !13666)
!13669 = !DILocation(line: 664, column: 70, scope: !13666)
!13670 = !DILocation(line: 664, column: 77, scope: !13666)
!13671 = !DILocation(line: 664, column: 86, scope: !13666)
!13672 = !DILocation(line: 664, column: 92, scope: !13666)
!13673 = !DILocation(line: 664, column: 103, scope: !13666)
!13674 = !DILocation(line: 664, column: 110, scope: !13666)
!13675 = !DILocation(line: 664, column: 122, scope: !13666)
!13676 = !DILocation(line: 664, column: 129, scope: !13666)
!13677 = !DILocation(line: 664, column: 133, scope: !13666)
!13678 = !DILocation(line: 664, column: 27, scope: !13666)
!13679 = !DILocation(line: 664, column: 25, scope: !13666)
!13680 = !DILocation(line: 665, column: 21, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13666, file: !1093, line: 665, column: 21)
!13682 = !DILocation(line: 665, column: 29, scope: !13681)
!13683 = !DILocation(line: 665, column: 21, scope: !13666)
!13684 = !DILocation(line: 667, column: 46, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13681, file: !1093, line: 666, column: 17)
!13686 = !DILocation(line: 667, column: 31, scope: !13685)
!13687 = !DILocation(line: 667, column: 29, scope: !13685)
!13688 = !DILocation(line: 668, column: 25, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13685, file: !1093, line: 668, column: 25)
!13690 = !DILocation(line: 668, column: 33, scope: !13689)
!13691 = !DILocation(line: 668, column: 25, scope: !13685)
!13692 = !DILocation(line: 668, column: 42, scope: !13689)
!13693 = !DILocation(line: 669, column: 35, scope: !13685)
!13694 = !DILocation(line: 669, column: 47, scope: !13685)
!13695 = !DILocation(line: 669, column: 54, scope: !13685)
!13696 = !DILocation(line: 669, column: 58, scope: !13685)
!13697 = !DILocation(line: 669, column: 21, scope: !13685)
!13698 = !DILocation(line: 669, column: 30, scope: !13685)
!13699 = !DILocation(line: 669, column: 33, scope: !13685)
!13700 = !DILocation(line: 670, column: 59, scope: !13685)
!13701 = !DILocation(line: 670, column: 37, scope: !13685)
!13702 = !DILocation(line: 670, column: 21, scope: !13685)
!13703 = !DILocation(line: 670, column: 30, scope: !13685)
!13704 = !DILocation(line: 670, column: 35, scope: !13685)
!13705 = !DILocation(line: 671, column: 17, scope: !13685)
!13706 = !DILocation(line: 672, column: 43, scope: !13666)
!13707 = !DILocation(line: 672, column: 25, scope: !13666)
!13708 = !DILocation(line: 672, column: 23, scope: !13666)
!13709 = !DILocation(line: 673, column: 27, scope: !13666)
!13710 = !DILocation(line: 673, column: 25, scope: !13666)
!13711 = !DILocation(line: 674, column: 13, scope: !13666)
!13712 = !DILocation(line: 662, column: 50, scope: !13661)
!13713 = !DILocation(line: 662, column: 13, scope: !13661)
!13714 = distinct !{!13714, !13664, !13715}
!13715 = !DILocation(line: 674, column: 13, scope: !13658)
!13716 = !DILocation(line: 675, column: 17, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13648, file: !1093, line: 675, column: 17)
!13718 = !DILocation(line: 675, column: 29, scope: !13717)
!13719 = !DILocation(line: 675, column: 36, scope: !13717)
!13720 = !DILocation(line: 675, column: 40, scope: !13717)
!13721 = !DILocation(line: 675, column: 56, scope: !13717)
!13722 = !DILocation(line: 675, column: 61, scope: !13717)
!13723 = !DILocation(line: 675, column: 17, scope: !13648)
!13724 = !DILocation(line: 677, column: 17, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13717, file: !1093, line: 676, column: 13)
!13726 = !DILocation(line: 677, column: 26, scope: !13725)
!13727 = !DILocation(line: 677, column: 31, scope: !13725)
!13728 = !DILocation(line: 678, column: 42, scope: !13725)
!13729 = !DILocation(line: 678, column: 27, scope: !13725)
!13730 = !DILocation(line: 678, column: 25, scope: !13725)
!13731 = !DILocation(line: 679, column: 21, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13725, file: !1093, line: 679, column: 21)
!13733 = !DILocation(line: 679, column: 29, scope: !13732)
!13734 = !DILocation(line: 679, column: 21, scope: !13725)
!13735 = !DILocation(line: 679, column: 38, scope: !13732)
!13736 = !DILocation(line: 680, column: 31, scope: !13725)
!13737 = !DILocation(line: 680, column: 43, scope: !13725)
!13738 = !DILocation(line: 680, column: 50, scope: !13725)
!13739 = !DILocation(line: 680, column: 54, scope: !13725)
!13740 = !DILocation(line: 680, column: 70, scope: !13725)
!13741 = !DILocation(line: 680, column: 17, scope: !13725)
!13742 = !DILocation(line: 680, column: 26, scope: !13725)
!13743 = !DILocation(line: 680, column: 29, scope: !13725)
!13744 = !DILocation(line: 681, column: 17, scope: !13725)
!13745 = !DILocation(line: 681, column: 26, scope: !13725)
!13746 = !DILocation(line: 681, column: 31, scope: !13725)
!13747 = !DILocation(line: 682, column: 13, scope: !13725)
!13748 = !DILocation(line: 683, column: 9, scope: !13648)
!13749 = !DILocation(line: 685, column: 38, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13557, file: !1093, line: 685, column: 13)
!13751 = !DILocation(line: 685, column: 52, scope: !13750)
!13752 = !DILocation(line: 685, column: 50, scope: !13750)
!13753 = !DILocation(line: 685, column: 59, scope: !13750)
!13754 = !DILocation(line: 685, column: 21, scope: !13750)
!13755 = !DILocation(line: 685, column: 18, scope: !13750)
!13756 = !DILocation(line: 685, column: 13, scope: !13557)
!13757 = !DILocation(line: 685, column: 69, scope: !13750)
!13758 = !DILocation(line: 686, column: 5, scope: !13557)
!13759 = !DILocation(line: 613, column: 43, scope: !13552)
!13760 = !DILocation(line: 613, column: 5, scope: !13552)
!13761 = distinct !{!13761, !13555, !13762}
!13762 = !DILocation(line: 686, column: 5, scope: !13549)
!13763 = !DILocation(line: 688, column: 12, scope: !13375)
!13764 = !DILocation(line: 688, column: 5, scope: !13375)
!13765 = !DILocation(line: 691, column: 21, scope: !13375)
!13766 = !DILocation(line: 691, column: 28, scope: !13375)
!13767 = !DILocation(line: 691, column: 27, scope: !13375)
!13768 = !DILocation(line: 691, column: 5, scope: !13375)
!13769 = !DILocation(line: 692, column: 6, scope: !13375)
!13770 = !DILocation(line: 692, column: 12, scope: !13375)
!13771 = !DILocation(line: 694, column: 5, scope: !13375)
!13772 = !DILocation(line: 695, column: 1, scope: !13375)
!13773 = distinct !DISubprogram(name: "prv_dataStrip", scope: !1093, file: !1093, line: 697, type: !13774, isLocal: true, isDefinition: true, scopeLine: 700, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!13774 = !DISubroutineType(types: !13775)
!13775 = !{!58, !58, !12043, !12042}
!13776 = !DILocalVariable(name: "size", arg: 1, scope: !13773, file: !1093, line: 697, type: !58)
!13777 = !DILocation(line: 697, column: 30, scope: !13773)
!13778 = !DILocalVariable(name: "dataP", arg: 2, scope: !13773, file: !1093, line: 698, type: !12043)
!13779 = !DILocation(line: 698, column: 41, scope: !13773)
!13780 = !DILocalVariable(name: "resultP", arg: 3, scope: !13773, file: !1093, line: 699, type: !12042)
!13781 = !DILocation(line: 699, column: 42, scope: !13773)
!13782 = !DILocalVariable(name: "i", scope: !13773, file: !1093, line: 701, type: !58)
!13783 = !DILocation(line: 701, column: 9, scope: !13773)
!13784 = !DILocalVariable(name: "j", scope: !13773, file: !1093, line: 702, type: !58)
!13785 = !DILocation(line: 702, column: 9, scope: !13773)
!13786 = !DILocalVariable(name: "realSize", scope: !13773, file: !1093, line: 703, type: !58)
!13787 = !DILocation(line: 703, column: 9, scope: !13773)
!13788 = !DILocation(line: 705, column: 14, scope: !13773)
!13789 = !DILocation(line: 706, column: 12, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13773, file: !1093, line: 706, column: 5)
!13791 = !DILocation(line: 706, column: 10, scope: !13790)
!13792 = !DILocation(line: 706, column: 18, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13790, file: !1093, line: 706, column: 5)
!13794 = !DILocation(line: 706, column: 22, scope: !13793)
!13795 = !DILocation(line: 706, column: 20, scope: !13793)
!13796 = !DILocation(line: 706, column: 5, scope: !13790)
!13797 = !DILocation(line: 708, column: 13, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13799, file: !1093, line: 708, column: 13)
!13799 = distinct !DILexicalBlock(scope: !13793, file: !1093, line: 707, column: 5)
!13800 = !DILocation(line: 708, column: 19, scope: !13798)
!13801 = !DILocation(line: 708, column: 22, scope: !13798)
!13802 = !DILocation(line: 708, column: 27, scope: !13798)
!13803 = !DILocation(line: 708, column: 13, scope: !13799)
!13804 = !DILocation(line: 710, column: 21, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13798, file: !1093, line: 709, column: 9)
!13806 = !DILocation(line: 711, column: 9, scope: !13805)
!13807 = !DILocation(line: 712, column: 5, scope: !13799)
!13808 = !DILocation(line: 706, column: 30, scope: !13793)
!13809 = !DILocation(line: 706, column: 5, scope: !13793)
!13810 = distinct !{!13810, !13796, !13811}
!13811 = !DILocation(line: 712, column: 5, scope: !13790)
!13812 = !DILocation(line: 714, column: 31, scope: !13773)
!13813 = !DILocation(line: 714, column: 16, scope: !13773)
!13814 = !DILocation(line: 714, column: 6, scope: !13773)
!13815 = !DILocation(line: 714, column: 14, scope: !13773)
!13816 = !DILocation(line: 715, column: 10, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13773, file: !1093, line: 715, column: 9)
!13818 = !DILocation(line: 715, column: 9, scope: !13817)
!13819 = !DILocation(line: 715, column: 18, scope: !13817)
!13820 = !DILocation(line: 715, column: 9, scope: !13773)
!13821 = !DILocation(line: 715, column: 27, scope: !13817)
!13822 = !DILocation(line: 717, column: 7, scope: !13773)
!13823 = !DILocation(line: 718, column: 12, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13773, file: !1093, line: 718, column: 5)
!13825 = !DILocation(line: 718, column: 10, scope: !13824)
!13826 = !DILocation(line: 718, column: 18, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13824, file: !1093, line: 718, column: 5)
!13828 = !DILocation(line: 718, column: 22, scope: !13827)
!13829 = !DILocation(line: 718, column: 20, scope: !13827)
!13830 = !DILocation(line: 718, column: 5, scope: !13824)
!13831 = !DILocation(line: 720, column: 13, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !1093, line: 720, column: 13)
!13833 = distinct !DILexicalBlock(scope: !13827, file: !1093, line: 719, column: 5)
!13834 = !DILocation(line: 720, column: 19, scope: !13832)
!13835 = !DILocation(line: 720, column: 22, scope: !13832)
!13836 = !DILocation(line: 720, column: 27, scope: !13832)
!13837 = !DILocation(line: 720, column: 13, scope: !13833)
!13838 = !DILocation(line: 722, column: 22, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13832, file: !1093, line: 721, column: 9)
!13840 = !DILocation(line: 722, column: 21, scope: !13839)
!13841 = !DILocation(line: 722, column: 33, scope: !13839)
!13842 = !DILocation(line: 722, column: 31, scope: !13839)
!13843 = !DILocation(line: 722, column: 13, scope: !13839)
!13844 = !DILocation(line: 722, column: 36, scope: !13839)
!13845 = !DILocation(line: 722, column: 44, scope: !13839)
!13846 = !DILocation(line: 722, column: 42, scope: !13839)
!13847 = !DILocation(line: 724, column: 17, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13839, file: !1093, line: 724, column: 17)
!13849 = !DILocation(line: 724, column: 23, scope: !13848)
!13850 = !DILocation(line: 724, column: 26, scope: !13848)
!13851 = !DILocation(line: 724, column: 31, scope: !13848)
!13852 = !DILocation(line: 725, column: 14, scope: !13848)
!13853 = !DILocation(line: 725, column: 17, scope: !13848)
!13854 = !DILocation(line: 725, column: 23, scope: !13848)
!13855 = !DILocation(line: 725, column: 26, scope: !13848)
!13856 = !DILocation(line: 725, column: 31, scope: !13848)
!13857 = !DILocation(line: 726, column: 14, scope: !13848)
!13858 = !DILocation(line: 726, column: 17, scope: !13848)
!13859 = !DILocation(line: 726, column: 23, scope: !13848)
!13860 = !DILocation(line: 726, column: 26, scope: !13848)
!13861 = !DILocation(line: 726, column: 31, scope: !13848)
!13862 = !DILocation(line: 724, column: 17, scope: !13839)
!13863 = !DILocalVariable(name: "childLen", scope: !13864, file: !1093, line: 728, type: !58)
!13864 = distinct !DILexicalBlock(scope: !13848, file: !1093, line: 727, column: 13)
!13865 = !DILocation(line: 728, column: 21, scope: !13864)
!13866 = !DILocation(line: 730, column: 42, scope: !13864)
!13867 = !DILocation(line: 730, column: 48, scope: !13864)
!13868 = !DILocation(line: 730, column: 51, scope: !13864)
!13869 = !DILocation(line: 730, column: 57, scope: !13864)
!13870 = !DILocation(line: 730, column: 68, scope: !13864)
!13871 = !DILocation(line: 730, column: 75, scope: !13864)
!13872 = !DILocation(line: 730, column: 81, scope: !13864)
!13873 = !DILocation(line: 730, column: 84, scope: !13864)
!13874 = !DILocation(line: 730, column: 90, scope: !13864)
!13875 = !DILocation(line: 730, column: 101, scope: !13864)
!13876 = !DILocation(line: 730, column: 112, scope: !13864)
!13877 = !DILocation(line: 730, column: 111, scope: !13864)
!13878 = !DILocation(line: 730, column: 121, scope: !13864)
!13879 = !DILocation(line: 730, column: 110, scope: !13864)
!13880 = !DILocation(line: 730, column: 124, scope: !13864)
!13881 = !DILocation(line: 730, column: 130, scope: !13864)
!13882 = !DILocation(line: 730, column: 141, scope: !13864)
!13883 = !DILocation(line: 730, column: 28, scope: !13864)
!13884 = !DILocation(line: 730, column: 26, scope: !13864)
!13885 = !DILocation(line: 731, column: 21, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13864, file: !1093, line: 731, column: 21)
!13887 = !DILocation(line: 731, column: 30, scope: !13886)
!13888 = !DILocation(line: 731, column: 21, scope: !13864)
!13889 = !DILocation(line: 734, column: 22, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13886, file: !1093, line: 732, column: 17)
!13891 = !DILocation(line: 735, column: 17, scope: !13890)
!13892 = !DILocation(line: 738, column: 60, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13886, file: !1093, line: 737, column: 17)
!13894 = !DILocation(line: 738, column: 23, scope: !13893)
!13895 = !DILocation(line: 738, column: 22, scope: !13893)
!13896 = !DILocation(line: 738, column: 32, scope: !13893)
!13897 = !DILocation(line: 738, column: 21, scope: !13893)
!13898 = !DILocation(line: 738, column: 35, scope: !13893)
!13899 = !DILocation(line: 738, column: 41, scope: !13893)
!13900 = !DILocation(line: 738, column: 52, scope: !13893)
!13901 = !DILocation(line: 738, column: 58, scope: !13893)
!13902 = !DILocation(line: 740, column: 13, scope: !13864)
!13903 = !DILocation(line: 743, column: 17, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13848, file: !1093, line: 742, column: 13)
!13905 = !DILocation(line: 743, column: 23, scope: !13904)
!13906 = !DILocation(line: 743, column: 26, scope: !13904)
!13907 = !DILocation(line: 743, column: 32, scope: !13904)
!13908 = !DILocation(line: 743, column: 41, scope: !13904)
!13909 = !DILocation(line: 743, column: 48, scope: !13904)
!13910 = !DILocation(line: 746, column: 14, scope: !13839)
!13911 = !DILocation(line: 747, column: 9, scope: !13839)
!13912 = !DILocation(line: 748, column: 5, scope: !13833)
!13913 = !DILocation(line: 718, column: 30, scope: !13827)
!13914 = !DILocation(line: 718, column: 5, scope: !13827)
!13915 = distinct !{!13915, !13830, !13916}
!13916 = !DILocation(line: 748, column: 5, scope: !13824)
!13917 = !DILocation(line: 750, column: 12, scope: !13773)
!13918 = !DILocation(line: 750, column: 5, scope: !13773)
!13919 = !DILocation(line: 751, column: 1, scope: !13773)
!13920 = distinct !DISubprogram(name: "prv_findDataItem", scope: !1093, file: !1093, line: 503, type: !13921, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!13921 = !DISubroutineType(types: !13922)
!13922 = !{!12043, !12043, !58, !79}
!13923 = !DILocalVariable(name: "listP", arg: 1, scope: !13920, file: !1093, line: 503, type: !12043)
!13924 = !DILocation(line: 503, column: 55, scope: !13920)
!13925 = !DILocalVariable(name: "count", arg: 2, scope: !13920, file: !1093, line: 504, type: !58)
!13926 = !DILocation(line: 504, column: 44, scope: !13920)
!13927 = !DILocalVariable(name: "id", arg: 3, scope: !13920, file: !1093, line: 505, type: !79)
!13928 = !DILocation(line: 505, column: 49, scope: !13920)
!13929 = !DILocalVariable(name: "i", scope: !13920, file: !1093, line: 507, type: !58)
!13930 = !DILocation(line: 507, column: 9, scope: !13920)
!13931 = !DILocation(line: 509, column: 7, scope: !13920)
!13932 = !DILocation(line: 510, column: 5, scope: !13920)
!13933 = !DILocation(line: 510, column: 12, scope: !13920)
!13934 = !DILocation(line: 510, column: 16, scope: !13920)
!13935 = !DILocation(line: 510, column: 14, scope: !13920)
!13936 = !DILocation(line: 512, column: 13, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !1093, line: 512, column: 13)
!13938 = distinct !DILexicalBlock(scope: !13920, file: !1093, line: 511, column: 5)
!13939 = !DILocation(line: 512, column: 19, scope: !13937)
!13940 = !DILocation(line: 512, column: 22, scope: !13937)
!13941 = !DILocation(line: 512, column: 27, scope: !13937)
!13942 = !DILocation(line: 512, column: 51, scope: !13937)
!13943 = !DILocation(line: 512, column: 54, scope: !13937)
!13944 = !DILocation(line: 512, column: 60, scope: !13937)
!13945 = !DILocation(line: 512, column: 63, scope: !13937)
!13946 = !DILocation(line: 512, column: 69, scope: !13937)
!13947 = !DILocation(line: 512, column: 66, scope: !13937)
!13948 = !DILocation(line: 512, column: 13, scope: !13938)
!13949 = !DILocation(line: 514, column: 20, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13937, file: !1093, line: 513, column: 9)
!13951 = !DILocation(line: 514, column: 28, scope: !13950)
!13952 = !DILocation(line: 514, column: 26, scope: !13950)
!13953 = !DILocation(line: 514, column: 13, scope: !13950)
!13954 = !DILocation(line: 516, column: 10, scope: !13938)
!13955 = distinct !{!13955, !13932, !13956}
!13956 = !DILocation(line: 517, column: 5, scope: !13920)
!13957 = !DILocation(line: 519, column: 5, scope: !13920)
!13958 = !DILocation(line: 520, column: 1, scope: !13920)
!13959 = distinct !DISubprogram(name: "prv_decreaseLevel", scope: !1093, file: !1093, line: 522, type: !13960, isLocal: true, isDefinition: true, scopeLine: 523, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{!3638, !3638}
!13962 = !DILocalVariable(name: "level", arg: 1, scope: !13959, file: !1093, line: 522, type: !3638)
!13963 = !DILocation(line: 522, column: 50, scope: !13959)
!13964 = !DILocation(line: 524, column: 12, scope: !13959)
!13965 = !DILocation(line: 524, column: 5, scope: !13959)
!13966 = !DILocation(line: 527, column: 9, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13959, file: !1093, line: 525, column: 5)
!13968 = !DILocation(line: 529, column: 9, scope: !13967)
!13969 = !DILocation(line: 531, column: 9, scope: !13967)
!13970 = !DILocation(line: 533, column: 9, scope: !13967)
!13971 = !DILocation(line: 535, column: 9, scope: !13967)
!13972 = !DILocation(line: 537, column: 1, scope: !13959)
!13973 = distinct !DISubprogram(name: "prv_extendData", scope: !1093, file: !1093, line: 539, type: !13974, isLocal: true, isDefinition: true, scopeLine: 540, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!12043, !12043}
!13976 = !DILocalVariable(name: "parentP", arg: 1, scope: !13973, file: !1093, line: 539, type: !12043)
!13977 = !DILocation(line: 539, column: 53, scope: !13973)
!13978 = !DILocalVariable(name: "newP", scope: !13973, file: !1093, line: 541, type: !12043)
!13979 = !DILocation(line: 541, column: 20, scope: !13973)
!13980 = !DILocation(line: 543, column: 27, scope: !13973)
!13981 = !DILocation(line: 543, column: 36, scope: !13973)
!13982 = !DILocation(line: 543, column: 42, scope: !13973)
!13983 = !DILocation(line: 543, column: 53, scope: !13973)
!13984 = !DILocation(line: 543, column: 59, scope: !13973)
!13985 = !DILocation(line: 543, column: 12, scope: !13973)
!13986 = !DILocation(line: 543, column: 10, scope: !13973)
!13987 = !DILocation(line: 544, column: 9, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13973, file: !1093, line: 544, column: 9)
!13989 = !DILocation(line: 544, column: 14, scope: !13988)
!13990 = !DILocation(line: 544, column: 9, scope: !13973)
!13991 = !DILocation(line: 544, column: 23, scope: !13988)
!13992 = !DILocation(line: 545, column: 9, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13973, file: !1093, line: 545, column: 9)
!13994 = !DILocation(line: 545, column: 18, scope: !13993)
!13995 = !DILocation(line: 545, column: 24, scope: !13993)
!13996 = !DILocation(line: 545, column: 35, scope: !13993)
!13997 = !DILocation(line: 545, column: 41, scope: !13993)
!13998 = !DILocation(line: 545, column: 9, scope: !13973)
!13999 = !DILocation(line: 547, column: 16, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13993, file: !1093, line: 546, column: 5)
!14001 = !DILocation(line: 547, column: 9, scope: !14000)
!14002 = !DILocation(line: 547, column: 22, scope: !14000)
!14003 = !DILocation(line: 547, column: 31, scope: !14000)
!14004 = !DILocation(line: 547, column: 37, scope: !14000)
!14005 = !DILocation(line: 547, column: 48, scope: !14000)
!14006 = !DILocation(line: 547, column: 55, scope: !14000)
!14007 = !DILocation(line: 547, column: 64, scope: !14000)
!14008 = !DILocation(line: 547, column: 70, scope: !14000)
!14009 = !DILocation(line: 547, column: 81, scope: !14000)
!14010 = !DILocation(line: 547, column: 87, scope: !14000)
!14011 = !DILocation(line: 548, column: 20, scope: !14000)
!14012 = !DILocation(line: 548, column: 29, scope: !14000)
!14013 = !DILocation(line: 548, column: 35, scope: !14000)
!14014 = !DILocation(line: 548, column: 46, scope: !14000)
!14015 = !DILocation(line: 548, column: 9, scope: !14000)
!14016 = !DILocation(line: 549, column: 5, scope: !14000)
!14017 = !DILocation(line: 550, column: 39, scope: !13973)
!14018 = !DILocation(line: 550, column: 5, scope: !13973)
!14019 = !DILocation(line: 550, column: 14, scope: !13973)
!14020 = !DILocation(line: 550, column: 20, scope: !13973)
!14021 = !DILocation(line: 550, column: 31, scope: !13973)
!14022 = !DILocation(line: 550, column: 37, scope: !13973)
!14023 = !DILocation(line: 551, column: 5, scope: !13973)
!14024 = !DILocation(line: 551, column: 14, scope: !13973)
!14025 = !DILocation(line: 551, column: 20, scope: !13973)
!14026 = !DILocation(line: 551, column: 31, scope: !13973)
!14027 = !DILocation(line: 551, column: 37, scope: !13973)
!14028 = !DILocation(line: 553, column: 12, scope: !13973)
!14029 = !DILocation(line: 553, column: 19, scope: !13973)
!14030 = !DILocation(line: 553, column: 28, scope: !13973)
!14031 = !DILocation(line: 553, column: 34, scope: !13973)
!14032 = !DILocation(line: 553, column: 45, scope: !13973)
!14033 = !DILocation(line: 553, column: 17, scope: !13973)
!14034 = !DILocation(line: 553, column: 51, scope: !13973)
!14035 = !DILocation(line: 553, column: 5, scope: !13973)
!14036 = !DILocation(line: 554, column: 1, scope: !13973)
!14037 = distinct !DISubprogram(name: "prv_convertValue", scope: !1093, file: !1093, line: 440, type: !14038, isLocal: true, isDefinition: true, scopeLine: 442, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!136, !1112, !12043}
!14040 = !DILocalVariable(name: "recordP", arg: 1, scope: !14037, file: !1093, line: 440, type: !1112)
!14041 = !DILocation(line: 440, column: 42, scope: !14037)
!14042 = !DILocalVariable(name: "targetP", arg: 2, scope: !14037, file: !1093, line: 441, type: !12043)
!14043 = !DILocation(line: 441, column: 45, scope: !14037)
!14044 = !DILocation(line: 443, column: 13, scope: !14037)
!14045 = !DILocation(line: 443, column: 22, scope: !14037)
!14046 = !DILocation(line: 443, column: 5, scope: !14037)
!14047 = !DILocation(line: 446, column: 39, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14037, file: !1093, line: 444, column: 5)
!14049 = !DILocation(line: 446, column: 9, scope: !14048)
!14050 = !DILocation(line: 447, column: 9, scope: !14048)
!14051 = !DILocation(line: 449, column: 38, scope: !14048)
!14052 = !DILocation(line: 449, column: 9, scope: !14048)
!14053 = !DILocation(line: 450, column: 9, scope: !14048)
!14054 = !DILocalVariable(name: "i", scope: !14055, file: !1093, line: 453, type: !438)
!14055 = distinct !DILexicalBlock(scope: !14048, file: !1093, line: 452, column: 5)
!14056 = !DILocation(line: 453, column: 16, scope: !14055)
!14057 = !DILocation(line: 455, column: 11, scope: !14055)
!14058 = !DILocation(line: 456, column: 9, scope: !14055)
!14059 = !DILocation(line: 456, column: 16, scope: !14055)
!14060 = !DILocation(line: 456, column: 20, scope: !14055)
!14061 = !DILocation(line: 456, column: 29, scope: !14055)
!14062 = !DILocation(line: 456, column: 18, scope: !14055)
!14063 = !DILocation(line: 457, column: 13, scope: !14055)
!14064 = !DILocation(line: 457, column: 16, scope: !14055)
!14065 = !DILocation(line: 457, column: 25, scope: !14055)
!14066 = !DILocation(line: 457, column: 31, scope: !14055)
!14067 = !DILocation(line: 457, column: 34, scope: !14055)
!14068 = !DILocation(line: 459, column: 14, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14055, file: !1093, line: 458, column: 9)
!14070 = distinct !{!14070, !14058, !14071}
!14071 = !DILocation(line: 460, column: 9, scope: !14055)
!14072 = !DILocation(line: 461, column: 13, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14055, file: !1093, line: 461, column: 13)
!14074 = !DILocation(line: 461, column: 18, scope: !14073)
!14075 = !DILocation(line: 461, column: 27, scope: !14073)
!14076 = !DILocation(line: 461, column: 15, scope: !14073)
!14077 = !DILocation(line: 461, column: 13, scope: !14055)
!14078 = !DILocalVariable(name: "value", scope: !14079, file: !1093, line: 463, type: !254)
!14079 = distinct !DILexicalBlock(scope: !14073, file: !1093, line: 462, column: 9)
!14080 = !DILocation(line: 463, column: 21, scope: !14079)
!14081 = !DILocation(line: 465, column: 39, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14079, file: !1093, line: 465, column: 18)
!14083 = !DILocation(line: 465, column: 48, scope: !14082)
!14084 = !DILocation(line: 466, column: 39, scope: !14082)
!14085 = !DILocation(line: 466, column: 48, scope: !14082)
!14086 = !DILocation(line: 465, column: 23, scope: !14082)
!14087 = !DILocation(line: 465, column: 20, scope: !14082)
!14088 = !DILocation(line: 465, column: 18, scope: !14079)
!14089 = !DILocation(line: 469, column: 17, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14082, file: !1093, line: 468, column: 13)
!14091 = !DILocation(line: 472, column: 35, scope: !14079)
!14092 = !DILocation(line: 472, column: 42, scope: !14079)
!14093 = !DILocation(line: 472, column: 13, scope: !14079)
!14094 = !DILocation(line: 473, column: 9, scope: !14079)
!14095 = !DILocalVariable(name: "value", scope: !14096, file: !1093, line: 476, type: !253)
!14096 = distinct !DILexicalBlock(scope: !14073, file: !1093, line: 475, column: 9)
!14097 = !DILocation(line: 476, column: 20, scope: !14096)
!14098 = !DILocation(line: 478, column: 41, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14096, file: !1093, line: 478, column: 18)
!14100 = !DILocation(line: 478, column: 50, scope: !14099)
!14101 = !DILocation(line: 479, column: 41, scope: !14099)
!14102 = !DILocation(line: 479, column: 50, scope: !14099)
!14103 = !DILocation(line: 478, column: 23, scope: !14099)
!14104 = !DILocation(line: 478, column: 20, scope: !14099)
!14105 = !DILocation(line: 478, column: 18, scope: !14096)
!14106 = !DILocation(line: 482, column: 17, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14099, file: !1093, line: 481, column: 13)
!14108 = !DILocation(line: 485, column: 37, scope: !14096)
!14109 = !DILocation(line: 485, column: 44, scope: !14096)
!14110 = !DILocation(line: 485, column: 13, scope: !14096)
!14111 = !DILocation(line: 488, column: 5, scope: !14048)
!14112 = !DILocation(line: 491, column: 34, scope: !14048)
!14113 = !DILocation(line: 491, column: 43, scope: !14048)
!14114 = !DILocation(line: 491, column: 50, scope: !14048)
!14115 = !DILocation(line: 491, column: 59, scope: !14048)
!14116 = !DILocation(line: 491, column: 69, scope: !14048)
!14117 = !DILocation(line: 491, column: 9, scope: !14048)
!14118 = !DILocation(line: 492, column: 9, scope: !14048)
!14119 = !DILocation(line: 492, column: 18, scope: !14048)
!14120 = !DILocation(line: 492, column: 23, scope: !14048)
!14121 = !DILocation(line: 493, column: 9, scope: !14048)
!14122 = !DILocation(line: 497, column: 9, scope: !14048)
!14123 = !DILocation(line: 500, column: 5, scope: !14037)
!14124 = !DILocation(line: 501, column: 1, scope: !14037)
!14125 = distinct !DISubprogram(name: "prv_isReserved", scope: !1093, file: !1093, line: 98, type: !14126, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!58, !69}
!14128 = !DILocalVariable(name: "sign", arg: 1, scope: !14125, file: !1093, line: 98, type: !69)
!14129 = !DILocation(line: 98, column: 32, scope: !14125)
!14130 = !DILocation(line: 100, column: 9, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14125, file: !1093, line: 100, column: 9)
!14132 = !DILocation(line: 100, column: 14, scope: !14131)
!14133 = !DILocation(line: 101, column: 6, scope: !14131)
!14134 = !DILocation(line: 101, column: 9, scope: !14131)
!14135 = !DILocation(line: 101, column: 14, scope: !14131)
!14136 = !DILocation(line: 102, column: 6, scope: !14131)
!14137 = !DILocation(line: 102, column: 9, scope: !14131)
!14138 = !DILocation(line: 102, column: 14, scope: !14131)
!14139 = !DILocation(line: 103, column: 6, scope: !14131)
!14140 = !DILocation(line: 103, column: 9, scope: !14131)
!14141 = !DILocation(line: 103, column: 14, scope: !14131)
!14142 = !DILocation(line: 104, column: 6, scope: !14131)
!14143 = !DILocation(line: 104, column: 9, scope: !14131)
!14144 = !DILocation(line: 104, column: 14, scope: !14131)
!14145 = !DILocation(line: 105, column: 6, scope: !14131)
!14146 = !DILocation(line: 105, column: 9, scope: !14131)
!14147 = !DILocation(line: 105, column: 14, scope: !14131)
!14148 = !DILocation(line: 106, column: 6, scope: !14131)
!14149 = !DILocation(line: 106, column: 9, scope: !14131)
!14150 = !DILocation(line: 106, column: 14, scope: !14131)
!14151 = !DILocation(line: 100, column: 9, scope: !14125)
!14152 = !DILocation(line: 108, column: 9, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14131, file: !1093, line: 107, column: 5)
!14154 = !DILocation(line: 111, column: 5, scope: !14125)
!14155 = !DILocation(line: 112, column: 1, scope: !14125)
!14156 = distinct !DISubprogram(name: "prv_isWhiteSpace", scope: !1093, file: !1093, line: 114, type: !14157, isLocal: true, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{!58, !107}
!14159 = !DILocalVariable(name: "sign", arg: 1, scope: !14156, file: !1093, line: 114, type: !107)
!14160 = !DILocation(line: 114, column: 37, scope: !14156)
!14161 = !DILocation(line: 116, column: 9, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14156, file: !1093, line: 116, column: 9)
!14163 = !DILocation(line: 116, column: 14, scope: !14162)
!14164 = !DILocation(line: 117, column: 6, scope: !14162)
!14165 = !DILocation(line: 117, column: 9, scope: !14162)
!14166 = !DILocation(line: 117, column: 14, scope: !14162)
!14167 = !DILocation(line: 118, column: 6, scope: !14162)
!14168 = !DILocation(line: 118, column: 9, scope: !14162)
!14169 = !DILocation(line: 118, column: 14, scope: !14162)
!14170 = !DILocation(line: 119, column: 6, scope: !14162)
!14171 = !DILocation(line: 119, column: 9, scope: !14162)
!14172 = !DILocation(line: 119, column: 14, scope: !14162)
!14173 = !DILocation(line: 116, column: 9, scope: !14156)
!14174 = !DILocation(line: 121, column: 9, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14162, file: !1093, line: 120, column: 5)
!14176 = !DILocation(line: 124, column: 5, scope: !14156)
!14177 = !DILocation(line: 125, column: 1, scope: !14156)
!14178 = distinct !DISubprogram(name: "prv_serializeData", scope: !1093, file: !1093, line: 1142, type: !14179, isLocal: false, isDefinition: true, scopeLine: 1147, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!58, !12043, !186, !438, !186, !438}
!14181 = !DILocalVariable(name: "tlvP", arg: 1, scope: !14178, file: !1093, line: 1142, type: !12043)
!14182 = !DILocation(line: 1142, column: 38, scope: !14178)
!14183 = !DILocalVariable(name: "parentUriStr", arg: 2, scope: !14178, file: !1093, line: 1143, type: !186)
!14184 = !DILocation(line: 1143, column: 33, scope: !14178)
!14185 = !DILocalVariable(name: "parentUriLen", arg: 3, scope: !14178, file: !1093, line: 1144, type: !438)
!14186 = !DILocation(line: 1144, column: 30, scope: !14178)
!14187 = !DILocalVariable(name: "buffer", arg: 4, scope: !14178, file: !1093, line: 1145, type: !186)
!14188 = !DILocation(line: 1145, column: 33, scope: !14178)
!14189 = !DILocalVariable(name: "bufferLen", arg: 5, scope: !14178, file: !1093, line: 1146, type: !438)
!14190 = !DILocation(line: 1146, column: 30, scope: !14178)
!14191 = !DILocalVariable(name: "head", scope: !14178, file: !1093, line: 1148, type: !58)
!14192 = !DILocation(line: 1148, column: 9, scope: !14178)
!14193 = !DILocalVariable(name: "res", scope: !14178, file: !1093, line: 1149, type: !58)
!14194 = !DILocation(line: 1149, column: 9, scope: !14178)
!14195 = !DILocation(line: 1151, column: 10, scope: !14178)
!14196 = !DILocation(line: 1153, column: 13, scope: !14178)
!14197 = !DILocation(line: 1153, column: 19, scope: !14178)
!14198 = !DILocation(line: 1153, column: 5, scope: !14178)
!14199 = !DILocalVariable(name: "uriStr", scope: !14200, file: !1093, line: 1159, type: !14202)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !1093, line: 1158, column: 5)
!14201 = distinct !DILexicalBlock(scope: !14178, file: !1093, line: 1154, column: 5)
!14202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 144, elements: !14203)
!14203 = !{!14204}
!14204 = !DISubrange(count: 18)
!14205 = !DILocation(line: 1159, column: 17, scope: !14200)
!14206 = !DILocalVariable(name: "uriLen", scope: !14200, file: !1093, line: 1160, type: !438)
!14207 = !DILocation(line: 1160, column: 16, scope: !14200)
!14208 = !DILocalVariable(name: "index", scope: !14200, file: !1093, line: 1161, type: !438)
!14209 = !DILocation(line: 1161, column: 16, scope: !14200)
!14210 = !DILocation(line: 1163, column: 13, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14200, file: !1093, line: 1163, column: 13)
!14212 = !DILocation(line: 1163, column: 26, scope: !14211)
!14213 = !DILocation(line: 1163, column: 13, scope: !14200)
!14214 = !DILocation(line: 1165, column: 38, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !1093, line: 1165, column: 17)
!14216 = distinct !DILexicalBlock(scope: !14211, file: !1093, line: 1164, column: 9)
!14217 = !DILocation(line: 1165, column: 36, scope: !14215)
!14218 = !DILocation(line: 1165, column: 17, scope: !14216)
!14219 = !DILocation(line: 1165, column: 52, scope: !14215)
!14220 = !DILocation(line: 1166, column: 13, scope: !14216)
!14221 = !DILocation(line: 1166, column: 28, scope: !14216)
!14222 = !DILocation(line: 1166, column: 42, scope: !14216)
!14223 = !DILocation(line: 1167, column: 22, scope: !14216)
!14224 = !DILocation(line: 1167, column: 20, scope: !14216)
!14225 = !DILocation(line: 1168, column: 9, scope: !14216)
!14226 = !DILocation(line: 1171, column: 20, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14211, file: !1093, line: 1170, column: 9)
!14228 = !DILocation(line: 1173, column: 31, scope: !14200)
!14229 = !DILocation(line: 1173, column: 37, scope: !14200)
!14230 = !DILocation(line: 1173, column: 41, scope: !14200)
!14231 = !DILocation(line: 1173, column: 50, scope: !14200)
!14232 = !DILocation(line: 1173, column: 48, scope: !14200)
!14233 = !DILocation(line: 1173, column: 79, scope: !14200)
!14234 = !DILocation(line: 1173, column: 77, scope: !14200)
!14235 = !DILocation(line: 1173, column: 15, scope: !14200)
!14236 = !DILocation(line: 1173, column: 13, scope: !14200)
!14237 = !DILocation(line: 1174, column: 13, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14200, file: !1093, line: 1174, column: 13)
!14239 = !DILocation(line: 1174, column: 17, scope: !14238)
!14240 = !DILocation(line: 1174, column: 13, scope: !14200)
!14241 = !DILocation(line: 1174, column: 23, scope: !14238)
!14242 = !DILocation(line: 1175, column: 19, scope: !14200)
!14243 = !DILocation(line: 1175, column: 16, scope: !14200)
!14244 = !DILocation(line: 1176, column: 16, scope: !14200)
!14245 = !DILocation(line: 1176, column: 9, scope: !14200)
!14246 = !DILocation(line: 1176, column: 24, scope: !14200)
!14247 = !DILocation(line: 1177, column: 15, scope: !14200)
!14248 = !DILocation(line: 1179, column: 14, scope: !14200)
!14249 = !DILocation(line: 1180, column: 20, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14200, file: !1093, line: 1180, column: 9)
!14251 = !DILocation(line: 1180, column: 14, scope: !14250)
!14252 = !DILocation(line: 1180, column: 26, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14250, file: !1093, line: 1180, column: 9)
!14254 = !DILocation(line: 1180, column: 34, scope: !14253)
!14255 = !DILocation(line: 1180, column: 40, scope: !14253)
!14256 = !DILocation(line: 1180, column: 46, scope: !14253)
!14257 = !DILocation(line: 1180, column: 57, scope: !14253)
!14258 = !DILocation(line: 1180, column: 32, scope: !14253)
!14259 = !DILocation(line: 1180, column: 9, scope: !14250)
!14260 = !DILocation(line: 1182, column: 37, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14253, file: !1093, line: 1181, column: 9)
!14262 = !DILocation(line: 1182, column: 43, scope: !14261)
!14263 = !DILocation(line: 1182, column: 49, scope: !14261)
!14264 = !DILocation(line: 1182, column: 60, scope: !14261)
!14265 = !DILocation(line: 1182, column: 68, scope: !14261)
!14266 = !DILocation(line: 1182, column: 66, scope: !14261)
!14267 = !DILocation(line: 1182, column: 75, scope: !14261)
!14268 = !DILocation(line: 1182, column: 83, scope: !14261)
!14269 = !DILocation(line: 1182, column: 91, scope: !14261)
!14270 = !DILocation(line: 1182, column: 100, scope: !14261)
!14271 = !DILocation(line: 1182, column: 98, scope: !14261)
!14272 = !DILocation(line: 1182, column: 106, scope: !14261)
!14273 = !DILocation(line: 1182, column: 118, scope: !14261)
!14274 = !DILocation(line: 1182, column: 116, scope: !14261)
!14275 = !DILocation(line: 1182, column: 19, scope: !14261)
!14276 = !DILocation(line: 1182, column: 17, scope: !14261)
!14277 = !DILocation(line: 1183, column: 17, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14261, file: !1093, line: 1183, column: 17)
!14279 = !DILocation(line: 1183, column: 21, scope: !14278)
!14280 = !DILocation(line: 1183, column: 17, scope: !14261)
!14281 = !DILocation(line: 1183, column: 26, scope: !14278)
!14282 = !DILocation(line: 1184, column: 21, scope: !14261)
!14283 = !DILocation(line: 1184, column: 18, scope: !14261)
!14284 = !DILocation(line: 1185, column: 9, scope: !14261)
!14285 = !DILocation(line: 1180, column: 69, scope: !14253)
!14286 = !DILocation(line: 1180, column: 9, scope: !14253)
!14287 = distinct !{!14287, !14259, !14288}
!14288 = !DILocation(line: 1185, column: 9, scope: !14250)
!14289 = !DILocation(line: 1187, column: 5, scope: !14201)
!14290 = !DILocation(line: 1190, column: 13, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14201, file: !1093, line: 1190, column: 13)
!14292 = !DILocation(line: 1190, column: 23, scope: !14291)
!14293 = !DILocation(line: 1190, column: 13, scope: !14201)
!14294 = !DILocation(line: 1190, column: 49, scope: !14291)
!14295 = !DILocation(line: 1191, column: 16, scope: !14201)
!14296 = !DILocation(line: 1191, column: 9, scope: !14201)
!14297 = !DILocation(line: 1192, column: 14, scope: !14201)
!14298 = !DILocation(line: 1194, column: 13, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14201, file: !1093, line: 1194, column: 13)
!14300 = !DILocation(line: 1194, column: 26, scope: !14299)
!14301 = !DILocation(line: 1194, column: 13, scope: !14201)
!14302 = !DILocation(line: 1196, column: 17, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14304, file: !1093, line: 1196, column: 17)
!14304 = distinct !DILexicalBlock(scope: !14299, file: !1093, line: 1195, column: 9)
!14305 = !DILocation(line: 1196, column: 29, scope: !14303)
!14306 = !DILocation(line: 1196, column: 27, scope: !14303)
!14307 = !DILocation(line: 1196, column: 36, scope: !14303)
!14308 = !DILocation(line: 1196, column: 34, scope: !14303)
!14309 = !DILocation(line: 1196, column: 17, scope: !14304)
!14310 = !DILocation(line: 1196, column: 50, scope: !14303)
!14311 = !DILocation(line: 1197, column: 20, scope: !14304)
!14312 = !DILocation(line: 1197, column: 29, scope: !14304)
!14313 = !DILocation(line: 1197, column: 27, scope: !14304)
!14314 = !DILocation(line: 1197, column: 35, scope: !14304)
!14315 = !DILocation(line: 1197, column: 49, scope: !14304)
!14316 = !DILocation(line: 1197, column: 13, scope: !14304)
!14317 = !DILocation(line: 1198, column: 21, scope: !14304)
!14318 = !DILocation(line: 1198, column: 18, scope: !14304)
!14319 = !DILocation(line: 1199, column: 9, scope: !14304)
!14320 = !DILocation(line: 1201, column: 31, scope: !14201)
!14321 = !DILocation(line: 1201, column: 37, scope: !14201)
!14322 = !DILocation(line: 1201, column: 41, scope: !14201)
!14323 = !DILocation(line: 1201, column: 50, scope: !14201)
!14324 = !DILocation(line: 1201, column: 48, scope: !14201)
!14325 = !DILocation(line: 1201, column: 56, scope: !14201)
!14326 = !DILocation(line: 1201, column: 68, scope: !14201)
!14327 = !DILocation(line: 1201, column: 66, scope: !14201)
!14328 = !DILocation(line: 1201, column: 15, scope: !14201)
!14329 = !DILocation(line: 1201, column: 13, scope: !14201)
!14330 = !DILocation(line: 1202, column: 13, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14201, file: !1093, line: 1202, column: 13)
!14332 = !DILocation(line: 1202, column: 17, scope: !14331)
!14333 = !DILocation(line: 1202, column: 13, scope: !14201)
!14334 = !DILocation(line: 1202, column: 23, scope: !14331)
!14335 = !DILocation(line: 1203, column: 17, scope: !14201)
!14336 = !DILocation(line: 1203, column: 14, scope: !14201)
!14337 = !DILocation(line: 1205, column: 34, scope: !14201)
!14338 = !DILocation(line: 1205, column: 40, scope: !14201)
!14339 = !DILocation(line: 1205, column: 49, scope: !14201)
!14340 = !DILocation(line: 1205, column: 47, scope: !14201)
!14341 = !DILocation(line: 1205, column: 55, scope: !14201)
!14342 = !DILocation(line: 1205, column: 67, scope: !14201)
!14343 = !DILocation(line: 1205, column: 65, scope: !14201)
!14344 = !DILocation(line: 1205, column: 15, scope: !14201)
!14345 = !DILocation(line: 1205, column: 13, scope: !14201)
!14346 = !DILocation(line: 1206, column: 13, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14201, file: !1093, line: 1206, column: 13)
!14348 = !DILocation(line: 1206, column: 17, scope: !14347)
!14349 = !DILocation(line: 1206, column: 13, scope: !14201)
!14350 = !DILocation(line: 1206, column: 22, scope: !14347)
!14351 = !DILocation(line: 1207, column: 17, scope: !14201)
!14352 = !DILocation(line: 1207, column: 14, scope: !14201)
!14353 = !DILocation(line: 1208, column: 9, scope: !14201)
!14354 = !DILocation(line: 1211, column: 12, scope: !14178)
!14355 = !DILocation(line: 1211, column: 5, scope: !14178)
!14356 = !DILocation(line: 1212, column: 1, scope: !14178)
!14357 = distinct !DISubprogram(name: "prv_serializeValue", scope: !1093, file: !1093, line: 1032, type: !14358, isLocal: true, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{!58, !12043, !186, !438}
!14360 = !DILocalVariable(name: "tlvP", arg: 1, scope: !14357, file: !1093, line: 1032, type: !12043)
!14361 = !DILocation(line: 1032, column: 46, scope: !14357)
!14362 = !DILocalVariable(name: "buffer", arg: 2, scope: !14357, file: !1093, line: 1033, type: !186)
!14363 = !DILocation(line: 1033, column: 41, scope: !14357)
!14364 = !DILocalVariable(name: "bufferLen", arg: 3, scope: !14357, file: !1093, line: 1034, type: !438)
!14365 = !DILocation(line: 1034, column: 38, scope: !14357)
!14366 = !DILocalVariable(name: "res", scope: !14357, file: !1093, line: 1036, type: !58)
!14367 = !DILocation(line: 1036, column: 9, scope: !14357)
!14368 = !DILocalVariable(name: "head", scope: !14357, file: !1093, line: 1037, type: !58)
!14369 = !DILocation(line: 1037, column: 9, scope: !14357)
!14370 = !DILocation(line: 1039, column: 13, scope: !14357)
!14371 = !DILocation(line: 1039, column: 19, scope: !14357)
!14372 = !DILocation(line: 1039, column: 5, scope: !14357)
!14373 = !DILocation(line: 1042, column: 13, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1042, column: 13)
!14375 = distinct !DILexicalBlock(scope: !14357, file: !1093, line: 1040, column: 5)
!14376 = !DILocation(line: 1042, column: 23, scope: !14374)
!14377 = !DILocation(line: 1042, column: 13, scope: !14375)
!14378 = !DILocation(line: 1042, column: 54, scope: !14374)
!14379 = !DILocation(line: 1043, column: 16, scope: !14375)
!14380 = !DILocation(line: 1043, column: 9, scope: !14375)
!14381 = !DILocation(line: 1044, column: 14, scope: !14375)
!14382 = !DILocation(line: 1046, column: 13, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1046, column: 13)
!14384 = !DILocation(line: 1046, column: 25, scope: !14383)
!14385 = !DILocation(line: 1046, column: 23, scope: !14383)
!14386 = !DILocation(line: 1046, column: 32, scope: !14383)
!14387 = !DILocation(line: 1046, column: 38, scope: !14383)
!14388 = !DILocation(line: 1046, column: 44, scope: !14383)
!14389 = !DILocation(line: 1046, column: 53, scope: !14383)
!14390 = !DILocation(line: 1046, column: 30, scope: !14383)
!14391 = !DILocation(line: 1046, column: 13, scope: !14375)
!14392 = !DILocation(line: 1046, column: 61, scope: !14383)
!14393 = !DILocation(line: 1047, column: 16, scope: !14375)
!14394 = !DILocation(line: 1047, column: 25, scope: !14375)
!14395 = !DILocation(line: 1047, column: 23, scope: !14375)
!14396 = !DILocation(line: 1047, column: 31, scope: !14375)
!14397 = !DILocation(line: 1047, column: 37, scope: !14375)
!14398 = !DILocation(line: 1047, column: 43, scope: !14375)
!14399 = !DILocation(line: 1047, column: 52, scope: !14375)
!14400 = !DILocation(line: 1047, column: 60, scope: !14375)
!14401 = !DILocation(line: 1047, column: 66, scope: !14375)
!14402 = !DILocation(line: 1047, column: 72, scope: !14375)
!14403 = !DILocation(line: 1047, column: 81, scope: !14375)
!14404 = !DILocation(line: 1047, column: 9, scope: !14375)
!14405 = !DILocation(line: 1048, column: 17, scope: !14375)
!14406 = !DILocation(line: 1048, column: 23, scope: !14375)
!14407 = !DILocation(line: 1048, column: 29, scope: !14375)
!14408 = !DILocation(line: 1048, column: 38, scope: !14375)
!14409 = !DILocation(line: 1048, column: 14, scope: !14375)
!14410 = !DILocation(line: 1050, column: 13, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1050, column: 13)
!14412 = !DILocation(line: 1050, column: 25, scope: !14411)
!14413 = !DILocation(line: 1050, column: 23, scope: !14411)
!14414 = !DILocation(line: 1050, column: 30, scope: !14411)
!14415 = !DILocation(line: 1050, column: 13, scope: !14375)
!14416 = !DILocation(line: 1050, column: 59, scope: !14411)
!14417 = !DILocation(line: 1051, column: 16, scope: !14375)
!14418 = !DILocation(line: 1051, column: 25, scope: !14375)
!14419 = !DILocation(line: 1051, column: 23, scope: !14375)
!14420 = !DILocation(line: 1051, column: 9, scope: !14375)
!14421 = !DILocation(line: 1052, column: 14, scope: !14375)
!14422 = !DILocation(line: 1054, column: 9, scope: !14375)
!14423 = !DILocalVariable(name: "value", scope: !14424, file: !1093, line: 1058, type: !254)
!14424 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1057, column: 5)
!14425 = !DILocation(line: 1058, column: 17, scope: !14424)
!14426 = !DILocation(line: 1060, column: 40, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14424, file: !1093, line: 1060, column: 13)
!14428 = !DILocation(line: 1060, column: 18, scope: !14427)
!14429 = !DILocation(line: 1060, column: 15, scope: !14427)
!14430 = !DILocation(line: 1060, column: 13, scope: !14424)
!14431 = !DILocation(line: 1060, column: 55, scope: !14427)
!14432 = !DILocation(line: 1062, column: 13, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14424, file: !1093, line: 1062, column: 13)
!14434 = !DILocation(line: 1062, column: 23, scope: !14433)
!14435 = !DILocation(line: 1062, column: 13, scope: !14424)
!14436 = !DILocation(line: 1062, column: 45, scope: !14433)
!14437 = !DILocation(line: 1063, column: 16, scope: !14424)
!14438 = !DILocation(line: 1063, column: 9, scope: !14424)
!14439 = !DILocation(line: 1064, column: 14, scope: !14424)
!14440 = !DILocation(line: 1066, column: 31, scope: !14424)
!14441 = !DILocation(line: 1066, column: 38, scope: !14424)
!14442 = !DILocation(line: 1066, column: 47, scope: !14424)
!14443 = !DILocation(line: 1066, column: 45, scope: !14424)
!14444 = !DILocation(line: 1066, column: 53, scope: !14424)
!14445 = !DILocation(line: 1066, column: 65, scope: !14424)
!14446 = !DILocation(line: 1066, column: 63, scope: !14424)
!14447 = !DILocation(line: 1066, column: 15, scope: !14424)
!14448 = !DILocation(line: 1066, column: 13, scope: !14424)
!14449 = !DILocation(line: 1067, column: 13, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14424, file: !1093, line: 1067, column: 13)
!14451 = !DILocation(line: 1067, column: 17, scope: !14450)
!14452 = !DILocation(line: 1067, column: 13, scope: !14424)
!14453 = !DILocation(line: 1067, column: 23, scope: !14450)
!14454 = !DILocation(line: 1068, column: 17, scope: !14424)
!14455 = !DILocation(line: 1068, column: 14, scope: !14424)
!14456 = !DILocation(line: 1070, column: 13, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14424, file: !1093, line: 1070, column: 13)
!14458 = !DILocation(line: 1070, column: 25, scope: !14457)
!14459 = !DILocation(line: 1070, column: 23, scope: !14457)
!14460 = !DILocation(line: 1070, column: 30, scope: !14457)
!14461 = !DILocation(line: 1070, column: 13, scope: !14424)
!14462 = !DILocation(line: 1070, column: 56, scope: !14457)
!14463 = !DILocation(line: 1071, column: 16, scope: !14424)
!14464 = !DILocation(line: 1071, column: 25, scope: !14424)
!14465 = !DILocation(line: 1071, column: 23, scope: !14424)
!14466 = !DILocation(line: 1071, column: 9, scope: !14424)
!14467 = !DILocation(line: 1072, column: 14, scope: !14424)
!14468 = !DILocation(line: 1074, column: 5, scope: !14375)
!14469 = !DILocalVariable(name: "value", scope: !14470, file: !1093, line: 1078, type: !253)
!14470 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1077, column: 5)
!14471 = !DILocation(line: 1078, column: 16, scope: !14470)
!14472 = !DILocation(line: 1080, column: 42, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14470, file: !1093, line: 1080, column: 13)
!14474 = !DILocation(line: 1080, column: 18, scope: !14473)
!14475 = !DILocation(line: 1080, column: 15, scope: !14473)
!14476 = !DILocation(line: 1080, column: 13, scope: !14470)
!14477 = !DILocation(line: 1080, column: 57, scope: !14473)
!14478 = !DILocation(line: 1082, column: 13, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14470, file: !1093, line: 1082, column: 13)
!14480 = !DILocation(line: 1082, column: 23, scope: !14479)
!14481 = !DILocation(line: 1082, column: 13, scope: !14470)
!14482 = !DILocation(line: 1082, column: 45, scope: !14479)
!14483 = !DILocation(line: 1083, column: 16, scope: !14470)
!14484 = !DILocation(line: 1083, column: 9, scope: !14470)
!14485 = !DILocation(line: 1084, column: 14, scope: !14470)
!14486 = !DILocation(line: 1086, column: 33, scope: !14470)
!14487 = !DILocation(line: 1086, column: 40, scope: !14470)
!14488 = !DILocation(line: 1086, column: 49, scope: !14470)
!14489 = !DILocation(line: 1086, column: 47, scope: !14470)
!14490 = !DILocation(line: 1086, column: 55, scope: !14470)
!14491 = !DILocation(line: 1086, column: 67, scope: !14470)
!14492 = !DILocation(line: 1086, column: 65, scope: !14470)
!14493 = !DILocation(line: 1086, column: 15, scope: !14470)
!14494 = !DILocation(line: 1086, column: 13, scope: !14470)
!14495 = !DILocation(line: 1087, column: 13, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14470, file: !1093, line: 1087, column: 13)
!14497 = !DILocation(line: 1087, column: 17, scope: !14496)
!14498 = !DILocation(line: 1087, column: 13, scope: !14470)
!14499 = !DILocation(line: 1087, column: 23, scope: !14496)
!14500 = !DILocation(line: 1088, column: 17, scope: !14470)
!14501 = !DILocation(line: 1088, column: 14, scope: !14470)
!14502 = !DILocation(line: 1090, column: 13, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14470, file: !1093, line: 1090, column: 13)
!14504 = !DILocation(line: 1090, column: 25, scope: !14503)
!14505 = !DILocation(line: 1090, column: 23, scope: !14503)
!14506 = !DILocation(line: 1090, column: 30, scope: !14503)
!14507 = !DILocation(line: 1090, column: 13, scope: !14470)
!14508 = !DILocation(line: 1090, column: 56, scope: !14503)
!14509 = !DILocation(line: 1091, column: 16, scope: !14470)
!14510 = !DILocation(line: 1091, column: 25, scope: !14470)
!14511 = !DILocation(line: 1091, column: 23, scope: !14470)
!14512 = !DILocation(line: 1091, column: 9, scope: !14470)
!14513 = !DILocation(line: 1092, column: 14, scope: !14470)
!14514 = !DILocation(line: 1094, column: 5, scope: !14375)
!14515 = !DILocalVariable(name: "value", scope: !14516, file: !1093, line: 1098, type: !136)
!14516 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1097, column: 5)
!14517 = !DILocation(line: 1098, column: 14, scope: !14516)
!14518 = !DILocation(line: 1100, column: 41, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14516, file: !1093, line: 1100, column: 13)
!14520 = !DILocation(line: 1100, column: 18, scope: !14519)
!14521 = !DILocation(line: 1100, column: 15, scope: !14519)
!14522 = !DILocation(line: 1100, column: 13, scope: !14516)
!14523 = !DILocation(line: 1100, column: 56, scope: !14519)
!14524 = !DILocation(line: 1102, column: 13, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14516, file: !1093, line: 1102, column: 13)
!14526 = !DILocation(line: 1102, column: 19, scope: !14525)
!14527 = !DILocation(line: 1102, column: 13, scope: !14516)
!14528 = !DILocation(line: 1104, column: 17, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14530, file: !1093, line: 1104, column: 17)
!14530 = distinct !DILexicalBlock(scope: !14525, file: !1093, line: 1103, column: 9)
!14531 = !DILocation(line: 1104, column: 27, scope: !14529)
!14532 = !DILocation(line: 1104, column: 17, scope: !14530)
!14533 = !DILocation(line: 1104, column: 55, scope: !14529)
!14534 = !DILocation(line: 1105, column: 20, scope: !14530)
!14535 = !DILocation(line: 1105, column: 13, scope: !14530)
!14536 = !DILocation(line: 1106, column: 18, scope: !14530)
!14537 = !DILocation(line: 1107, column: 9, scope: !14530)
!14538 = !DILocation(line: 1110, column: 17, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !1093, line: 1110, column: 17)
!14540 = distinct !DILexicalBlock(scope: !14525, file: !1093, line: 1109, column: 9)
!14541 = !DILocation(line: 1110, column: 27, scope: !14539)
!14542 = !DILocation(line: 1110, column: 17, scope: !14540)
!14543 = !DILocation(line: 1110, column: 56, scope: !14539)
!14544 = !DILocation(line: 1111, column: 20, scope: !14540)
!14545 = !DILocation(line: 1111, column: 13, scope: !14540)
!14546 = !DILocation(line: 1112, column: 18, scope: !14540)
!14547 = !DILocation(line: 1115, column: 5, scope: !14375)
!14548 = !DILocation(line: 1118, column: 13, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1118, column: 13)
!14550 = !DILocation(line: 1118, column: 23, scope: !14549)
!14551 = !DILocation(line: 1118, column: 13, scope: !14375)
!14552 = !DILocation(line: 1118, column: 54, scope: !14549)
!14553 = !DILocation(line: 1119, column: 16, scope: !14375)
!14554 = !DILocation(line: 1119, column: 9, scope: !14375)
!14555 = !DILocation(line: 1120, column: 14, scope: !14375)
!14556 = !DILocation(line: 1122, column: 34, scope: !14375)
!14557 = !DILocation(line: 1122, column: 40, scope: !14375)
!14558 = !DILocation(line: 1122, column: 46, scope: !14375)
!14559 = !DILocation(line: 1122, column: 55, scope: !14375)
!14560 = !DILocation(line: 1122, column: 63, scope: !14375)
!14561 = !DILocation(line: 1122, column: 69, scope: !14375)
!14562 = !DILocation(line: 1122, column: 75, scope: !14375)
!14563 = !DILocation(line: 1122, column: 84, scope: !14375)
!14564 = !DILocation(line: 1122, column: 92, scope: !14375)
!14565 = !DILocation(line: 1122, column: 99, scope: !14375)
!14566 = !DILocation(line: 1122, column: 98, scope: !14375)
!14567 = !DILocation(line: 1122, column: 105, scope: !14375)
!14568 = !DILocation(line: 1122, column: 117, scope: !14375)
!14569 = !DILocation(line: 1122, column: 115, scope: !14375)
!14570 = !DILocation(line: 1122, column: 15, scope: !14375)
!14571 = !DILocation(line: 1122, column: 13, scope: !14375)
!14572 = !DILocation(line: 1123, column: 13, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1123, column: 13)
!14574 = !DILocation(line: 1123, column: 17, scope: !14573)
!14575 = !DILocation(line: 1123, column: 13, scope: !14375)
!14576 = !DILocation(line: 1123, column: 23, scope: !14573)
!14577 = !DILocation(line: 1124, column: 17, scope: !14375)
!14578 = !DILocation(line: 1124, column: 14, scope: !14375)
!14579 = !DILocation(line: 1126, column: 13, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14375, file: !1093, line: 1126, column: 13)
!14581 = !DILocation(line: 1126, column: 25, scope: !14580)
!14582 = !DILocation(line: 1126, column: 23, scope: !14580)
!14583 = !DILocation(line: 1126, column: 30, scope: !14580)
!14584 = !DILocation(line: 1126, column: 13, scope: !14375)
!14585 = !DILocation(line: 1126, column: 59, scope: !14580)
!14586 = !DILocation(line: 1127, column: 16, scope: !14375)
!14587 = !DILocation(line: 1127, column: 25, scope: !14375)
!14588 = !DILocation(line: 1127, column: 23, scope: !14375)
!14589 = !DILocation(line: 1127, column: 9, scope: !14375)
!14590 = !DILocation(line: 1128, column: 14, scope: !14375)
!14591 = !DILocation(line: 1129, column: 9, scope: !14375)
!14592 = !DILocation(line: 1133, column: 9, scope: !14375)
!14593 = !DILocation(line: 1136, column: 9, scope: !14375)
!14594 = !DILocation(line: 1139, column: 12, scope: !14357)
!14595 = !DILocation(line: 1139, column: 5, scope: !14357)
!14596 = !DILocation(line: 1140, column: 1, scope: !14357)
!14597 = distinct !DISubprogram(name: "json_serialize", scope: !1093, file: !1093, line: 1356, type: !14598, isLocal: false, isDefinition: true, scopeLine: 1360, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14598 = !DISubroutineType(types: !14599)
!14599 = !{!58, !12034, !58, !12043, !5103}
!14600 = !DILocalVariable(name: "uriP", arg: 1, scope: !14597, file: !1093, line: 1356, type: !12034)
!14601 = !DILocation(line: 1356, column: 34, scope: !14597)
!14602 = !DILocalVariable(name: "size", arg: 2, scope: !14597, file: !1093, line: 1357, type: !58)
!14603 = !DILocation(line: 1357, column: 24, scope: !14597)
!14604 = !DILocalVariable(name: "tlvP", arg: 3, scope: !14597, file: !1093, line: 1358, type: !12043)
!14605 = !DILocation(line: 1358, column: 35, scope: !14597)
!14606 = !DILocalVariable(name: "bufferP", arg: 4, scope: !14597, file: !1093, line: 1359, type: !5103)
!14607 = !DILocation(line: 1359, column: 31, scope: !14597)
!14608 = !DILocalVariable(name: "index", scope: !14597, file: !1093, line: 1361, type: !58)
!14609 = !DILocation(line: 1361, column: 9, scope: !14597)
!14610 = !DILocalVariable(name: "head", scope: !14597, file: !1093, line: 1362, type: !438)
!14611 = !DILocation(line: 1362, column: 12, scope: !14597)
!14612 = !DILocalVariable(name: "bufferJSON", scope: !14597, file: !1093, line: 1363, type: !1425)
!14613 = !DILocation(line: 1363, column: 13, scope: !14597)
!14614 = !DILocalVariable(name: "baseUriStr", scope: !14597, file: !1093, line: 1364, type: !14202)
!14615 = !DILocation(line: 1364, column: 13, scope: !14597)
!14616 = !DILocalVariable(name: "baseUriLen", scope: !14597, file: !1093, line: 1365, type: !58)
!14617 = !DILocation(line: 1365, column: 9, scope: !14597)
!14618 = !DILocalVariable(name: "rootLevel", scope: !14597, file: !1093, line: 1366, type: !3638)
!14619 = !DILocation(line: 1366, column: 17, scope: !14597)
!14620 = !DILocalVariable(name: "num", scope: !14597, file: !1093, line: 1367, type: !58)
!14621 = !DILocation(line: 1367, column: 9, scope: !14597)
!14622 = !DILocalVariable(name: "targetP", scope: !14597, file: !1093, line: 1368, type: !12043)
!14623 = !DILocation(line: 1368, column: 20, scope: !14597)
!14624 = !DILocation(line: 1372, column: 9, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1372, column: 9)
!14626 = !DILocation(line: 1372, column: 14, scope: !14625)
!14627 = !DILocation(line: 1372, column: 19, scope: !14625)
!14628 = !DILocation(line: 1372, column: 22, scope: !14625)
!14629 = !DILocation(line: 1372, column: 27, scope: !14625)
!14630 = !DILocation(line: 1372, column: 9, scope: !14597)
!14631 = !DILocation(line: 1372, column: 36, scope: !14625)
!14632 = !DILocation(line: 1374, column: 31, scope: !14597)
!14633 = !DILocation(line: 1374, column: 37, scope: !14597)
!14634 = !DILocation(line: 1374, column: 18, scope: !14597)
!14635 = !DILocation(line: 1374, column: 16, scope: !14597)
!14636 = !DILocation(line: 1375, column: 9, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1375, column: 9)
!14638 = !DILocation(line: 1375, column: 20, scope: !14637)
!14639 = !DILocation(line: 1375, column: 9, scope: !14597)
!14640 = !DILocation(line: 1375, column: 25, scope: !14637)
!14641 = !DILocation(line: 1377, column: 32, scope: !14597)
!14642 = !DILocation(line: 1377, column: 38, scope: !14597)
!14643 = !DILocation(line: 1377, column: 49, scope: !14597)
!14644 = !DILocation(line: 1377, column: 55, scope: !14597)
!14645 = !DILocation(line: 1377, column: 11, scope: !14597)
!14646 = !DILocation(line: 1377, column: 9, scope: !14597)
!14647 = !DILocation(line: 1378, column: 9, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1378, column: 9)
!14649 = !DILocation(line: 1378, column: 13, scope: !14648)
!14650 = !DILocation(line: 1378, column: 9, scope: !14597)
!14651 = !DILocation(line: 1378, column: 18, scope: !14648)
!14652 = !DILocation(line: 1380, column: 5, scope: !14597)
!14653 = !DILocation(line: 1380, column: 12, scope: !14597)
!14654 = !DILocation(line: 1380, column: 16, scope: !14597)
!14655 = !DILocation(line: 1381, column: 9, scope: !14597)
!14656 = !DILocation(line: 1381, column: 13, scope: !14597)
!14657 = !DILocation(line: 1381, column: 22, scope: !14597)
!14658 = !DILocation(line: 1381, column: 27, scope: !14597)
!14659 = !DILocation(line: 1382, column: 10, scope: !14597)
!14660 = !DILocation(line: 1382, column: 13, scope: !14597)
!14661 = !DILocation(line: 1382, column: 22, scope: !14597)
!14662 = !DILocation(line: 1382, column: 27, scope: !14597)
!14663 = !DILocation(line: 1383, column: 10, scope: !14597)
!14664 = !DILocation(line: 1383, column: 13, scope: !14597)
!14665 = !DILocation(line: 1383, column: 22, scope: !14597)
!14666 = !DILocation(line: 1383, column: 27, scope: !14597)
!14667 = !DILocalVariable(name: "res", scope: !14668, file: !1093, line: 1385, type: !58)
!14668 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1384, column: 5)
!14669 = !DILocation(line: 1385, column: 13, scope: !14668)
!14670 = !DILocation(line: 1387, column: 31, scope: !14668)
!14671 = !DILocation(line: 1387, column: 40, scope: !14668)
!14672 = !DILocation(line: 1387, column: 44, scope: !14668)
!14673 = !DILocation(line: 1387, column: 57, scope: !14668)
!14674 = !DILocation(line: 1387, column: 55, scope: !14668)
!14675 = !DILocation(line: 1387, column: 90, scope: !14668)
!14676 = !DILocation(line: 1387, column: 88, scope: !14668)
!14677 = !DILocation(line: 1387, column: 69, scope: !14668)
!14678 = !DILocation(line: 1387, column: 15, scope: !14668)
!14679 = !DILocation(line: 1387, column: 13, scope: !14668)
!14680 = !DILocation(line: 1388, column: 13, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14668, file: !1093, line: 1388, column: 13)
!14682 = !DILocation(line: 1388, column: 17, scope: !14681)
!14683 = !DILocation(line: 1388, column: 13, scope: !14668)
!14684 = !DILocation(line: 1388, column: 23, scope: !14681)
!14685 = !DILocation(line: 1389, column: 23, scope: !14668)
!14686 = !DILocation(line: 1389, column: 20, scope: !14668)
!14687 = !DILocation(line: 1390, column: 13, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14668, file: !1093, line: 1390, column: 13)
!14689 = !DILocation(line: 1390, column: 24, scope: !14688)
!14690 = !DILocation(line: 1390, column: 13, scope: !14668)
!14691 = !DILocation(line: 1390, column: 50, scope: !14688)
!14692 = !DILocation(line: 1391, column: 15, scope: !14668)
!14693 = !DILocation(line: 1391, column: 24, scope: !14668)
!14694 = !DILocation(line: 1391, column: 30, scope: !14668)
!14695 = !DILocation(line: 1391, column: 41, scope: !14668)
!14696 = !DILocation(line: 1391, column: 13, scope: !14668)
!14697 = !DILocation(line: 1392, column: 19, scope: !14668)
!14698 = !DILocation(line: 1392, column: 28, scope: !14668)
!14699 = !DILocation(line: 1392, column: 34, scope: !14668)
!14700 = !DILocation(line: 1392, column: 45, scope: !14668)
!14701 = !DILocation(line: 1392, column: 17, scope: !14668)
!14702 = !DILocation(line: 1393, column: 20, scope: !14668)
!14703 = !DILocation(line: 1393, column: 9, scope: !14668)
!14704 = !DILocation(line: 1393, column: 32, scope: !14668)
!14705 = !DILocation(line: 1394, column: 19, scope: !14668)
!14706 = distinct !{!14706, !14652, !14707}
!14707 = !DILocation(line: 1395, column: 5, scope: !14597)
!14708 = !DILocation(line: 1397, column: 9, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1397, column: 9)
!14710 = !DILocation(line: 1397, column: 20, scope: !14709)
!14711 = !DILocation(line: 1397, column: 9, scope: !14597)
!14712 = !DILocation(line: 1399, column: 9, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14709, file: !1093, line: 1398, column: 5)
!14714 = !DILocation(line: 1400, column: 14, scope: !14713)
!14715 = !DILocation(line: 1401, column: 16, scope: !14713)
!14716 = !DILocation(line: 1401, column: 29, scope: !14713)
!14717 = !DILocation(line: 1401, column: 27, scope: !14713)
!14718 = !DILocation(line: 1401, column: 9, scope: !14713)
!14719 = !DILocation(line: 1401, column: 47, scope: !14713)
!14720 = !DILocation(line: 1402, column: 17, scope: !14713)
!14721 = !DILocation(line: 1402, column: 14, scope: !14713)
!14722 = !DILocation(line: 1403, column: 16, scope: !14713)
!14723 = !DILocation(line: 1403, column: 29, scope: !14713)
!14724 = !DILocation(line: 1403, column: 27, scope: !14713)
!14725 = !DILocation(line: 1403, column: 9, scope: !14713)
!14726 = !DILocation(line: 1404, column: 14, scope: !14713)
!14727 = !DILocation(line: 1405, column: 5, scope: !14713)
!14728 = !DILocation(line: 1408, column: 9, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14709, file: !1093, line: 1407, column: 5)
!14730 = !DILocation(line: 1409, column: 14, scope: !14729)
!14731 = !DILocation(line: 1412, column: 16, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1412, column: 5)
!14733 = !DILocation(line: 1412, column: 10, scope: !14732)
!14734 = !DILocation(line: 1412, column: 22, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14732, file: !1093, line: 1412, column: 5)
!14736 = !DILocation(line: 1412, column: 30, scope: !14735)
!14737 = !DILocation(line: 1412, column: 28, scope: !14735)
!14738 = !DILocation(line: 1412, column: 34, scope: !14735)
!14739 = !DILocation(line: 1412, column: 37, scope: !14735)
!14740 = !DILocation(line: 1412, column: 42, scope: !14735)
!14741 = !DILocation(line: 1412, column: 5, scope: !14732)
!14742 = !DILocalVariable(name: "res", scope: !14743, file: !1093, line: 1414, type: !58)
!14743 = distinct !DILexicalBlock(scope: !14735, file: !1093, line: 1413, column: 5)
!14744 = !DILocation(line: 1414, column: 13, scope: !14743)
!14745 = !DILocation(line: 1416, column: 33, scope: !14743)
!14746 = !DILocation(line: 1416, column: 43, scope: !14743)
!14747 = !DILocation(line: 1416, column: 41, scope: !14743)
!14748 = !DILocation(line: 1416, column: 59, scope: !14743)
!14749 = !DILocation(line: 1416, column: 72, scope: !14743)
!14750 = !DILocation(line: 1416, column: 70, scope: !14743)
!14751 = !DILocation(line: 1416, column: 101, scope: !14743)
!14752 = !DILocation(line: 1416, column: 99, scope: !14743)
!14753 = !DILocation(line: 1416, column: 15, scope: !14743)
!14754 = !DILocation(line: 1416, column: 13, scope: !14743)
!14755 = !DILocation(line: 1417, column: 13, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14743, file: !1093, line: 1417, column: 13)
!14757 = !DILocation(line: 1417, column: 17, scope: !14756)
!14758 = !DILocation(line: 1417, column: 13, scope: !14743)
!14759 = !DILocation(line: 1417, column: 22, scope: !14756)
!14760 = !DILocation(line: 1418, column: 17, scope: !14743)
!14761 = !DILocation(line: 1418, column: 14, scope: !14743)
!14762 = !DILocation(line: 1419, column: 5, scope: !14743)
!14763 = !DILocation(line: 1412, column: 72, scope: !14735)
!14764 = !DILocation(line: 1412, column: 5, scope: !14735)
!14765 = distinct !{!14765, !14741, !14766}
!14766 = !DILocation(line: 1419, column: 5, scope: !14732)
!14767 = !DILocation(line: 1421, column: 9, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1421, column: 9)
!14769 = !DILocation(line: 1421, column: 14, scope: !14768)
!14770 = !DILocation(line: 1421, column: 33, scope: !14768)
!14771 = !DILocation(line: 1421, column: 37, scope: !14768)
!14772 = !DILocation(line: 1421, column: 9, scope: !14597)
!14773 = !DILocation(line: 1421, column: 61, scope: !14768)
!14774 = !DILocation(line: 1423, column: 9, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1423, column: 9)
!14776 = !DILocation(line: 1423, column: 13, scope: !14775)
!14777 = !DILocation(line: 1423, column: 9, scope: !14597)
!14778 = !DILocation(line: 1423, column: 25, scope: !14775)
!14779 = !DILocation(line: 1423, column: 30, scope: !14775)
!14780 = !DILocation(line: 1423, column: 23, scope: !14775)
!14781 = !DILocation(line: 1423, column: 18, scope: !14775)
!14782 = !DILocation(line: 1425, column: 12, scope: !14597)
!14783 = !DILocation(line: 1425, column: 25, scope: !14597)
!14784 = !DILocation(line: 1425, column: 23, scope: !14597)
!14785 = !DILocation(line: 1425, column: 5, scope: !14597)
!14786 = !DILocation(line: 1426, column: 12, scope: !14597)
!14787 = !DILocation(line: 1426, column: 17, scope: !14597)
!14788 = !DILocation(line: 1426, column: 10, scope: !14597)
!14789 = !DILocation(line: 1428, column: 40, scope: !14597)
!14790 = !DILocation(line: 1428, column: 27, scope: !14597)
!14791 = !DILocation(line: 1428, column: 6, scope: !14597)
!14792 = !DILocation(line: 1428, column: 14, scope: !14597)
!14793 = !DILocation(line: 1429, column: 10, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14597, file: !1093, line: 1429, column: 9)
!14795 = !DILocation(line: 1429, column: 9, scope: !14794)
!14796 = !DILocation(line: 1429, column: 18, scope: !14794)
!14797 = !DILocation(line: 1429, column: 9, scope: !14597)
!14798 = !DILocation(line: 1429, column: 27, scope: !14794)
!14799 = !DILocation(line: 1430, column: 13, scope: !14597)
!14800 = !DILocation(line: 1430, column: 12, scope: !14597)
!14801 = !DILocation(line: 1430, column: 5, scope: !14597)
!14802 = !DILocation(line: 1430, column: 34, scope: !14597)
!14803 = !DILocation(line: 1432, column: 12, scope: !14597)
!14804 = !DILocation(line: 1432, column: 5, scope: !14597)
!14805 = !DILocation(line: 1433, column: 1, scope: !14597)
!14806 = distinct !DISubprogram(name: "prv_findAndCheckData", scope: !1093, file: !1093, line: 1214, type: !14807, isLocal: true, isDefinition: true, scopeLine: 1219, flags: DIFlagPrototyped, isOptimized: false, unit: !1092, variables: !488)
!14807 = !DISubroutineType(types: !14808)
!14808 = !{!58, !12034, !3638, !438, !12043, !12042}
!14809 = !DILocalVariable(name: "uriP", arg: 1, scope: !14806, file: !1093, line: 1214, type: !12034)
!14810 = !DILocation(line: 1214, column: 47, scope: !14806)
!14811 = !DILocalVariable(name: "level", arg: 2, scope: !14806, file: !1093, line: 1215, type: !3638)
!14812 = !DILocation(line: 1215, column: 45, scope: !14806)
!14813 = !DILocalVariable(name: "size", arg: 3, scope: !14806, file: !1093, line: 1216, type: !438)
!14814 = !DILocation(line: 1216, column: 40, scope: !14806)
!14815 = !DILocalVariable(name: "tlvP", arg: 4, scope: !14806, file: !1093, line: 1217, type: !12043)
!14816 = !DILocation(line: 1217, column: 48, scope: !14806)
!14817 = !DILocalVariable(name: "targetP", arg: 5, scope: !14806, file: !1093, line: 1218, type: !12042)
!14818 = !DILocation(line: 1218, column: 49, scope: !14806)
!14819 = !DILocalVariable(name: "index", scope: !14806, file: !1093, line: 1220, type: !438)
!14820 = !DILocation(line: 1220, column: 12, scope: !14806)
!14821 = !DILocalVariable(name: "result", scope: !14806, file: !1093, line: 1221, type: !58)
!14822 = !DILocation(line: 1221, column: 9, scope: !14806)
!14823 = !DILocation(line: 1223, column: 9, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14806, file: !1093, line: 1223, column: 9)
!14825 = !DILocation(line: 1223, column: 14, scope: !14824)
!14826 = !DILocation(line: 1223, column: 9, scope: !14806)
!14827 = !DILocation(line: 1223, column: 20, scope: !14824)
!14828 = !DILocation(line: 1225, column: 9, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14806, file: !1093, line: 1225, column: 9)
!14830 = !DILocation(line: 1225, column: 14, scope: !14829)
!14831 = !DILocation(line: 1225, column: 9, scope: !14806)
!14832 = !DILocation(line: 1227, column: 13, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14834, file: !1093, line: 1227, column: 13)
!14834 = distinct !DILexicalBlock(scope: !14829, file: !1093, line: 1226, column: 5)
!14835 = !DILocation(line: 1227, column: 21, scope: !14833)
!14836 = !DILocation(line: 1227, column: 26, scope: !14833)
!14837 = !DILocation(line: 1227, column: 47, scope: !14833)
!14838 = !DILocation(line: 1227, column: 50, scope: !14833)
!14839 = !DILocation(line: 1227, column: 58, scope: !14833)
!14840 = !DILocation(line: 1227, column: 63, scope: !14833)
!14841 = !DILocation(line: 1227, column: 13, scope: !14834)
!14842 = !DILocation(line: 1229, column: 24, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14844, file: !1093, line: 1229, column: 13)
!14844 = distinct !DILexicalBlock(scope: !14833, file: !1093, line: 1228, column: 9)
!14845 = !DILocation(line: 1229, column: 18, scope: !14843)
!14846 = !DILocation(line: 1229, column: 29, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14843, file: !1093, line: 1229, column: 13)
!14848 = !DILocation(line: 1229, column: 37, scope: !14847)
!14849 = !DILocation(line: 1229, column: 35, scope: !14847)
!14850 = !DILocation(line: 1229, column: 13, scope: !14843)
!14851 = !DILocation(line: 1231, column: 21, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14853, file: !1093, line: 1231, column: 21)
!14853 = distinct !DILexicalBlock(scope: !14847, file: !1093, line: 1230, column: 13)
!14854 = !DILocation(line: 1231, column: 26, scope: !14852)
!14855 = !DILocation(line: 1231, column: 33, scope: !14852)
!14856 = !DILocation(line: 1231, column: 41, scope: !14852)
!14857 = !DILocation(line: 1231, column: 49, scope: !14852)
!14858 = !DILocation(line: 1231, column: 38, scope: !14852)
!14859 = !DILocation(line: 1231, column: 21, scope: !14853)
!14860 = !DILocation(line: 1233, column: 22, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14852, file: !1093, line: 1232, column: 17)
!14862 = !DILocation(line: 1233, column: 30, scope: !14861)
!14863 = !DILocation(line: 1234, column: 21, scope: !14861)
!14864 = !DILocation(line: 1236, column: 13, scope: !14853)
!14865 = !DILocation(line: 1229, column: 48, scope: !14847)
!14866 = !DILocation(line: 1229, column: 13, scope: !14847)
!14867 = distinct !{!14867, !14850, !14868}
!14868 = !DILocation(line: 1236, column: 13, scope: !14843)
!14869 = !DILocation(line: 1237, column: 9, scope: !14844)
!14870 = !DILocation(line: 1240, column: 24, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14872, file: !1093, line: 1240, column: 13)
!14872 = distinct !DILexicalBlock(scope: !14833, file: !1093, line: 1239, column: 9)
!14873 = !DILocation(line: 1240, column: 18, scope: !14871)
!14874 = !DILocation(line: 1240, column: 29, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14871, file: !1093, line: 1240, column: 13)
!14876 = !DILocation(line: 1240, column: 37, scope: !14875)
!14877 = !DILocation(line: 1240, column: 35, scope: !14875)
!14878 = !DILocation(line: 1240, column: 13, scope: !14871)
!14879 = !DILocation(line: 1242, column: 21, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !1093, line: 1242, column: 21)
!14881 = distinct !DILexicalBlock(scope: !14875, file: !1093, line: 1241, column: 13)
!14882 = !DILocation(line: 1242, column: 26, scope: !14880)
!14883 = !DILocation(line: 1242, column: 33, scope: !14880)
!14884 = !DILocation(line: 1242, column: 38, scope: !14880)
!14885 = !DILocation(line: 1242, column: 59, scope: !14880)
!14886 = !DILocation(line: 1242, column: 62, scope: !14880)
!14887 = !DILocation(line: 1242, column: 67, scope: !14880)
!14888 = !DILocation(line: 1242, column: 74, scope: !14880)
!14889 = !DILocation(line: 1242, column: 79, scope: !14880)
!14890 = !DILocation(line: 1242, column: 21, scope: !14881)
!14891 = !DILocation(line: 1244, column: 22, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14880, file: !1093, line: 1243, column: 17)
!14893 = !DILocation(line: 1244, column: 30, scope: !14892)
!14894 = !DILocation(line: 1245, column: 21, scope: !14892)
!14895 = !DILocation(line: 1247, column: 13, scope: !14881)
!14896 = !DILocation(line: 1240, column: 48, scope: !14875)
!14897 = !DILocation(line: 1240, column: 13, scope: !14875)
!14898 = distinct !{!14898, !14878, !14899}
!14899 = !DILocation(line: 1247, column: 13, scope: !14871)
!14900 = !DILocation(line: 1249, column: 5, scope: !14834)
!14901 = !DILocation(line: 1251, column: 6, scope: !14806)
!14902 = !DILocation(line: 1251, column: 14, scope: !14806)
!14903 = !DILocation(line: 1252, column: 12, scope: !14806)
!14904 = !DILocation(line: 1253, column: 13, scope: !14806)
!14905 = !DILocation(line: 1253, column: 5, scope: !14806)
!14906 = !DILocation(line: 1256, column: 13, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14908, file: !1093, line: 1256, column: 13)
!14908 = distinct !DILexicalBlock(scope: !14806, file: !1093, line: 1254, column: 5)
!14909 = !DILocation(line: 1256, column: 21, scope: !14907)
!14910 = !DILocation(line: 1256, column: 26, scope: !14907)
!14911 = !DILocation(line: 1256, column: 13, scope: !14908)
!14912 = !DILocation(line: 1258, column: 24, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14907, file: !1093, line: 1257, column: 9)
!14914 = !DILocation(line: 1258, column: 14, scope: !14913)
!14915 = !DILocation(line: 1258, column: 22, scope: !14913)
!14916 = !DILocation(line: 1259, column: 27, scope: !14913)
!14917 = !DILocation(line: 1259, column: 22, scope: !14913)
!14918 = !DILocation(line: 1259, column: 20, scope: !14913)
!14919 = !DILocation(line: 1260, column: 9, scope: !14913)
!14920 = !DILocation(line: 1261, column: 9, scope: !14908)
!14921 = !DILocation(line: 1264, column: 17, scope: !14908)
!14922 = !DILocation(line: 1264, column: 25, scope: !14908)
!14923 = !DILocation(line: 1264, column: 9, scope: !14908)
!14924 = !DILocation(line: 1267, column: 24, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14926, file: !1093, line: 1267, column: 13)
!14926 = distinct !DILexicalBlock(scope: !14908, file: !1093, line: 1265, column: 9)
!14927 = !DILocation(line: 1267, column: 18, scope: !14925)
!14928 = !DILocation(line: 1267, column: 29, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14925, file: !1093, line: 1267, column: 13)
!14930 = !DILocation(line: 1267, column: 37, scope: !14929)
!14931 = !DILocation(line: 1267, column: 35, scope: !14929)
!14932 = !DILocation(line: 1267, column: 13, scope: !14925)
!14933 = !DILocation(line: 1269, column: 21, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !1093, line: 1269, column: 21)
!14935 = distinct !DILexicalBlock(scope: !14929, file: !1093, line: 1268, column: 13)
!14936 = !DILocation(line: 1269, column: 26, scope: !14934)
!14937 = !DILocation(line: 1269, column: 33, scope: !14934)
!14938 = !DILocation(line: 1269, column: 39, scope: !14934)
!14939 = !DILocation(line: 1269, column: 45, scope: !14934)
!14940 = !DILocation(line: 1269, column: 36, scope: !14934)
!14941 = !DILocation(line: 1269, column: 21, scope: !14935)
!14942 = !DILocation(line: 1271, column: 49, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14934, file: !1093, line: 1270, column: 17)
!14944 = !DILocation(line: 1271, column: 55, scope: !14943)
!14945 = !DILocation(line: 1271, column: 62, scope: !14943)
!14946 = !DILocation(line: 1271, column: 67, scope: !14943)
!14947 = !DILocation(line: 1271, column: 74, scope: !14943)
!14948 = !DILocation(line: 1271, column: 80, scope: !14943)
!14949 = !DILocation(line: 1271, column: 91, scope: !14943)
!14950 = !DILocation(line: 1271, column: 98, scope: !14943)
!14951 = !DILocation(line: 1271, column: 103, scope: !14943)
!14952 = !DILocation(line: 1271, column: 110, scope: !14943)
!14953 = !DILocation(line: 1271, column: 116, scope: !14943)
!14954 = !DILocation(line: 1271, column: 127, scope: !14943)
!14955 = !DILocation(line: 1271, column: 134, scope: !14943)
!14956 = !DILocation(line: 1271, column: 28, scope: !14943)
!14957 = !DILocation(line: 1271, column: 21, scope: !14943)
!14958 = !DILocation(line: 1273, column: 13, scope: !14935)
!14959 = !DILocation(line: 1267, column: 48, scope: !14929)
!14960 = !DILocation(line: 1267, column: 13, scope: !14929)
!14961 = distinct !{!14961, !14932, !14962}
!14962 = !DILocation(line: 1273, column: 13, scope: !14925)
!14963 = !DILocation(line: 1274, column: 13, scope: !14926)
!14964 = !DILocation(line: 1276, column: 24, scope: !14926)
!14965 = !DILocation(line: 1276, column: 14, scope: !14926)
!14966 = !DILocation(line: 1276, column: 22, scope: !14926)
!14967 = !DILocation(line: 1277, column: 27, scope: !14926)
!14968 = !DILocation(line: 1277, column: 22, scope: !14926)
!14969 = !DILocation(line: 1277, column: 20, scope: !14926)
!14970 = !DILocation(line: 1278, column: 13, scope: !14926)
!14971 = !DILocation(line: 1280, column: 13, scope: !14926)
!14972 = !DILocation(line: 1282, column: 9, scope: !14908)
!14973 = !DILocation(line: 1285, column: 17, scope: !14908)
!14974 = !DILocation(line: 1285, column: 25, scope: !14908)
!14975 = !DILocation(line: 1285, column: 9, scope: !14908)
!14976 = !DILocation(line: 1288, column: 24, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14978, file: !1093, line: 1288, column: 13)
!14978 = distinct !DILexicalBlock(scope: !14908, file: !1093, line: 1286, column: 9)
!14979 = !DILocation(line: 1288, column: 18, scope: !14977)
!14980 = !DILocation(line: 1288, column: 29, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14977, file: !1093, line: 1288, column: 13)
!14982 = !DILocation(line: 1288, column: 37, scope: !14981)
!14983 = !DILocation(line: 1288, column: 35, scope: !14981)
!14984 = !DILocation(line: 1288, column: 13, scope: !14977)
!14985 = !DILocation(line: 1290, column: 21, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14987, file: !1093, line: 1290, column: 21)
!14987 = distinct !DILexicalBlock(scope: !14981, file: !1093, line: 1289, column: 13)
!14988 = !DILocation(line: 1290, column: 26, scope: !14986)
!14989 = !DILocation(line: 1290, column: 33, scope: !14986)
!14990 = !DILocation(line: 1290, column: 39, scope: !14986)
!14991 = !DILocation(line: 1290, column: 45, scope: !14986)
!14992 = !DILocation(line: 1290, column: 36, scope: !14986)
!14993 = !DILocation(line: 1290, column: 21, scope: !14987)
!14994 = !DILocation(line: 1292, column: 49, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14986, file: !1093, line: 1291, column: 17)
!14996 = !DILocation(line: 1292, column: 55, scope: !14995)
!14997 = !DILocation(line: 1292, column: 62, scope: !14995)
!14998 = !DILocation(line: 1292, column: 67, scope: !14995)
!14999 = !DILocation(line: 1292, column: 74, scope: !14995)
!15000 = !DILocation(line: 1292, column: 80, scope: !14995)
!15001 = !DILocation(line: 1292, column: 91, scope: !14995)
!15002 = !DILocation(line: 1292, column: 98, scope: !14995)
!15003 = !DILocation(line: 1292, column: 103, scope: !14995)
!15004 = !DILocation(line: 1292, column: 110, scope: !14995)
!15005 = !DILocation(line: 1292, column: 116, scope: !14995)
!15006 = !DILocation(line: 1292, column: 127, scope: !14995)
!15007 = !DILocation(line: 1292, column: 134, scope: !14995)
!15008 = !DILocation(line: 1292, column: 28, scope: !14995)
!15009 = !DILocation(line: 1292, column: 21, scope: !14995)
!15010 = !DILocation(line: 1294, column: 13, scope: !14987)
!15011 = !DILocation(line: 1288, column: 48, scope: !14981)
!15012 = !DILocation(line: 1288, column: 13, scope: !14981)
!15013 = distinct !{!15013, !14984, !15014}
!15014 = !DILocation(line: 1294, column: 13, scope: !14977)
!15015 = !DILocation(line: 1295, column: 13, scope: !14978)
!15016 = !DILocation(line: 1297, column: 24, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !14978, file: !1093, line: 1297, column: 13)
!15018 = !DILocation(line: 1297, column: 18, scope: !15017)
!15019 = !DILocation(line: 1297, column: 29, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15017, file: !1093, line: 1297, column: 13)
!15021 = !DILocation(line: 1297, column: 37, scope: !15020)
!15022 = !DILocation(line: 1297, column: 35, scope: !15020)
!15023 = !DILocation(line: 1297, column: 13, scope: !15017)
!15024 = !DILocation(line: 1299, column: 21, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15026, file: !1093, line: 1299, column: 21)
!15026 = distinct !DILexicalBlock(scope: !15020, file: !1093, line: 1298, column: 13)
!15027 = !DILocation(line: 1299, column: 26, scope: !15025)
!15028 = !DILocation(line: 1299, column: 33, scope: !15025)
!15029 = !DILocation(line: 1299, column: 39, scope: !15025)
!15030 = !DILocation(line: 1299, column: 45, scope: !15025)
!15031 = !DILocation(line: 1299, column: 36, scope: !15025)
!15032 = !DILocation(line: 1299, column: 21, scope: !15026)
!15033 = !DILocation(line: 1301, column: 49, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15025, file: !1093, line: 1300, column: 17)
!15035 = !DILocation(line: 1301, column: 55, scope: !15034)
!15036 = !DILocation(line: 1301, column: 62, scope: !15034)
!15037 = !DILocation(line: 1301, column: 67, scope: !15034)
!15038 = !DILocation(line: 1301, column: 74, scope: !15034)
!15039 = !DILocation(line: 1301, column: 80, scope: !15034)
!15040 = !DILocation(line: 1301, column: 91, scope: !15034)
!15041 = !DILocation(line: 1301, column: 98, scope: !15034)
!15042 = !DILocation(line: 1301, column: 103, scope: !15034)
!15043 = !DILocation(line: 1301, column: 110, scope: !15034)
!15044 = !DILocation(line: 1301, column: 116, scope: !15034)
!15045 = !DILocation(line: 1301, column: 127, scope: !15034)
!15046 = !DILocation(line: 1301, column: 134, scope: !15034)
!15047 = !DILocation(line: 1301, column: 28, scope: !15034)
!15048 = !DILocation(line: 1301, column: 21, scope: !15034)
!15049 = !DILocation(line: 1303, column: 13, scope: !15026)
!15050 = !DILocation(line: 1297, column: 48, scope: !15020)
!15051 = !DILocation(line: 1297, column: 13, scope: !15020)
!15052 = distinct !{!15052, !15023, !15053}
!15053 = !DILocation(line: 1303, column: 13, scope: !15017)
!15054 = !DILocation(line: 1304, column: 13, scope: !14978)
!15055 = !DILocation(line: 1306, column: 24, scope: !14978)
!15056 = !DILocation(line: 1306, column: 14, scope: !14978)
!15057 = !DILocation(line: 1306, column: 22, scope: !14978)
!15058 = !DILocation(line: 1307, column: 27, scope: !14978)
!15059 = !DILocation(line: 1307, column: 22, scope: !14978)
!15060 = !DILocation(line: 1307, column: 20, scope: !14978)
!15061 = !DILocation(line: 1308, column: 13, scope: !14978)
!15062 = !DILocation(line: 1310, column: 9, scope: !14908)
!15063 = !DILocation(line: 1313, column: 17, scope: !14908)
!15064 = !DILocation(line: 1313, column: 25, scope: !14908)
!15065 = !DILocation(line: 1313, column: 9, scope: !14908)
!15066 = !DILocation(line: 1316, column: 24, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15068, file: !1093, line: 1316, column: 13)
!15068 = distinct !DILexicalBlock(scope: !14908, file: !1093, line: 1314, column: 9)
!15069 = !DILocation(line: 1316, column: 18, scope: !15067)
!15070 = !DILocation(line: 1316, column: 29, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15067, file: !1093, line: 1316, column: 13)
!15072 = !DILocation(line: 1316, column: 37, scope: !15071)
!15073 = !DILocation(line: 1316, column: 35, scope: !15071)
!15074 = !DILocation(line: 1316, column: 13, scope: !15067)
!15075 = !DILocation(line: 1318, column: 21, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15077, file: !1093, line: 1318, column: 21)
!15077 = distinct !DILexicalBlock(scope: !15071, file: !1093, line: 1317, column: 13)
!15078 = !DILocation(line: 1318, column: 26, scope: !15076)
!15079 = !DILocation(line: 1318, column: 33, scope: !15076)
!15080 = !DILocation(line: 1318, column: 39, scope: !15076)
!15081 = !DILocation(line: 1318, column: 45, scope: !15076)
!15082 = !DILocation(line: 1318, column: 36, scope: !15076)
!15083 = !DILocation(line: 1318, column: 21, scope: !15077)
!15084 = !DILocation(line: 1320, column: 49, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15076, file: !1093, line: 1319, column: 17)
!15086 = !DILocation(line: 1320, column: 55, scope: !15085)
!15087 = !DILocation(line: 1320, column: 62, scope: !15085)
!15088 = !DILocation(line: 1320, column: 67, scope: !15085)
!15089 = !DILocation(line: 1320, column: 74, scope: !15085)
!15090 = !DILocation(line: 1320, column: 80, scope: !15085)
!15091 = !DILocation(line: 1320, column: 91, scope: !15085)
!15092 = !DILocation(line: 1320, column: 98, scope: !15085)
!15093 = !DILocation(line: 1320, column: 103, scope: !15085)
!15094 = !DILocation(line: 1320, column: 110, scope: !15085)
!15095 = !DILocation(line: 1320, column: 116, scope: !15085)
!15096 = !DILocation(line: 1320, column: 127, scope: !15085)
!15097 = !DILocation(line: 1320, column: 134, scope: !15085)
!15098 = !DILocation(line: 1320, column: 28, scope: !15085)
!15099 = !DILocation(line: 1320, column: 21, scope: !15085)
!15100 = !DILocation(line: 1322, column: 13, scope: !15077)
!15101 = !DILocation(line: 1316, column: 48, scope: !15071)
!15102 = !DILocation(line: 1316, column: 13, scope: !15071)
!15103 = distinct !{!15103, !15074, !15104}
!15104 = !DILocation(line: 1322, column: 13, scope: !15067)
!15105 = !DILocation(line: 1323, column: 13, scope: !15068)
!15106 = !DILocation(line: 1325, column: 24, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15068, file: !1093, line: 1325, column: 13)
!15108 = !DILocation(line: 1325, column: 18, scope: !15107)
!15109 = !DILocation(line: 1325, column: 29, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15107, file: !1093, line: 1325, column: 13)
!15111 = !DILocation(line: 1325, column: 37, scope: !15110)
!15112 = !DILocation(line: 1325, column: 35, scope: !15110)
!15113 = !DILocation(line: 1325, column: 13, scope: !15107)
!15114 = !DILocation(line: 1327, column: 21, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15116, file: !1093, line: 1327, column: 21)
!15116 = distinct !DILexicalBlock(scope: !15110, file: !1093, line: 1326, column: 13)
!15117 = !DILocation(line: 1327, column: 26, scope: !15115)
!15118 = !DILocation(line: 1327, column: 33, scope: !15115)
!15119 = !DILocation(line: 1327, column: 39, scope: !15115)
!15120 = !DILocation(line: 1327, column: 45, scope: !15115)
!15121 = !DILocation(line: 1327, column: 36, scope: !15115)
!15122 = !DILocation(line: 1327, column: 21, scope: !15116)
!15123 = !DILocation(line: 1329, column: 49, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15115, file: !1093, line: 1328, column: 17)
!15125 = !DILocation(line: 1329, column: 55, scope: !15124)
!15126 = !DILocation(line: 1329, column: 62, scope: !15124)
!15127 = !DILocation(line: 1329, column: 67, scope: !15124)
!15128 = !DILocation(line: 1329, column: 74, scope: !15124)
!15129 = !DILocation(line: 1329, column: 80, scope: !15124)
!15130 = !DILocation(line: 1329, column: 91, scope: !15124)
!15131 = !DILocation(line: 1329, column: 98, scope: !15124)
!15132 = !DILocation(line: 1329, column: 103, scope: !15124)
!15133 = !DILocation(line: 1329, column: 110, scope: !15124)
!15134 = !DILocation(line: 1329, column: 116, scope: !15124)
!15135 = !DILocation(line: 1329, column: 127, scope: !15124)
!15136 = !DILocation(line: 1329, column: 134, scope: !15124)
!15137 = !DILocation(line: 1329, column: 28, scope: !15124)
!15138 = !DILocation(line: 1329, column: 21, scope: !15124)
!15139 = !DILocation(line: 1331, column: 13, scope: !15116)
!15140 = !DILocation(line: 1325, column: 48, scope: !15110)
!15141 = !DILocation(line: 1325, column: 13, scope: !15110)
!15142 = distinct !{!15142, !15113, !15143}
!15143 = !DILocation(line: 1331, column: 13, scope: !15107)
!15144 = !DILocation(line: 1332, column: 13, scope: !15068)
!15145 = !DILocation(line: 1334, column: 24, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15068, file: !1093, line: 1334, column: 13)
!15147 = !DILocation(line: 1334, column: 18, scope: !15146)
!15148 = !DILocation(line: 1334, column: 29, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15146, file: !1093, line: 1334, column: 13)
!15150 = !DILocation(line: 1334, column: 37, scope: !15149)
!15151 = !DILocation(line: 1334, column: 35, scope: !15149)
!15152 = !DILocation(line: 1334, column: 13, scope: !15146)
!15153 = !DILocation(line: 1336, column: 21, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15155, file: !1093, line: 1336, column: 21)
!15155 = distinct !DILexicalBlock(scope: !15149, file: !1093, line: 1335, column: 13)
!15156 = !DILocation(line: 1336, column: 26, scope: !15154)
!15157 = !DILocation(line: 1336, column: 33, scope: !15154)
!15158 = !DILocation(line: 1336, column: 39, scope: !15154)
!15159 = !DILocation(line: 1336, column: 45, scope: !15154)
!15160 = !DILocation(line: 1336, column: 36, scope: !15154)
!15161 = !DILocation(line: 1336, column: 21, scope: !15155)
!15162 = !DILocation(line: 1338, column: 49, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15154, file: !1093, line: 1337, column: 17)
!15164 = !DILocation(line: 1338, column: 55, scope: !15163)
!15165 = !DILocation(line: 1338, column: 62, scope: !15163)
!15166 = !DILocation(line: 1338, column: 67, scope: !15163)
!15167 = !DILocation(line: 1338, column: 74, scope: !15163)
!15168 = !DILocation(line: 1338, column: 80, scope: !15163)
!15169 = !DILocation(line: 1338, column: 91, scope: !15163)
!15170 = !DILocation(line: 1338, column: 98, scope: !15163)
!15171 = !DILocation(line: 1338, column: 103, scope: !15163)
!15172 = !DILocation(line: 1338, column: 110, scope: !15163)
!15173 = !DILocation(line: 1338, column: 116, scope: !15163)
!15174 = !DILocation(line: 1338, column: 127, scope: !15163)
!15175 = !DILocation(line: 1338, column: 134, scope: !15163)
!15176 = !DILocation(line: 1338, column: 28, scope: !15163)
!15177 = !DILocation(line: 1338, column: 21, scope: !15163)
!15178 = !DILocation(line: 1340, column: 13, scope: !15155)
!15179 = !DILocation(line: 1334, column: 48, scope: !15149)
!15180 = !DILocation(line: 1334, column: 13, scope: !15149)
!15181 = distinct !{!15181, !15152, !15182}
!15182 = !DILocation(line: 1340, column: 13, scope: !15146)
!15183 = !DILocation(line: 1341, column: 13, scope: !15068)
!15184 = !DILocation(line: 1343, column: 24, scope: !15068)
!15185 = !DILocation(line: 1343, column: 14, scope: !15068)
!15186 = !DILocation(line: 1343, column: 22, scope: !15068)
!15187 = !DILocation(line: 1344, column: 27, scope: !15068)
!15188 = !DILocation(line: 1344, column: 22, scope: !15068)
!15189 = !DILocation(line: 1344, column: 20, scope: !15068)
!15190 = !DILocation(line: 1345, column: 13, scope: !15068)
!15191 = !DILocation(line: 1347, column: 9, scope: !14908)
!15192 = !DILocation(line: 1350, column: 9, scope: !14908)
!15193 = !DILocation(line: 1353, column: 12, scope: !14806)
!15194 = !DILocation(line: 1353, column: 5, scope: !14806)
!15195 = !DILocation(line: 1354, column: 1, scope: !14806)
!15196 = distinct !DISubprogram(name: "coap_block1_handler", scope: !1125, file: !1125, line: 52, type: !15197, isLocal: false, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, unit: !1124, variables: !488)
!15197 = !DISubroutineType(types: !15198)
!15198 = !{!107, !15199, !79, !186, !438, !79, !86, !136, !5103, !3131}
!15199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15200, size: 64)
!15200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15201, size: 64)
!15201 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_block1_data_t", file: !6, line: 452, baseType: !15202)
!15202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_block1_data_", file: !6, line: 454, size: 192, elements: !15203)
!15203 = !{!15204, !15205, !15206}
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "block1buffer", scope: !15202, file: !6, line: 456, baseType: !186, size: 64)
!15205 = !DIDerivedType(tag: DW_TAG_member, name: "block1bufferSize", scope: !15202, file: !6, line: 457, baseType: !438, size: 64, offset: 64)
!15206 = !DIDerivedType(tag: DW_TAG_member, name: "lastmid", scope: !15202, file: !6, line: 458, baseType: !79, size: 16, offset: 128)
!15207 = !DILocalVariable(name: "pBlock1Data", arg: 1, scope: !15196, file: !1125, line: 52, type: !15199)
!15208 = !DILocation(line: 52, column: 52, scope: !15196)
!15209 = !DILocalVariable(name: "mid", arg: 2, scope: !15196, file: !1125, line: 53, type: !79)
!15210 = !DILocation(line: 53, column: 38, scope: !15196)
!15211 = !DILocalVariable(name: "buffer", arg: 3, scope: !15196, file: !1125, line: 54, type: !186)
!15212 = !DILocation(line: 54, column: 39, scope: !15196)
!15213 = !DILocalVariable(name: "length", arg: 4, scope: !15196, file: !1125, line: 55, type: !438)
!15214 = !DILocation(line: 55, column: 36, scope: !15196)
!15215 = !DILocalVariable(name: "blockSize", arg: 5, scope: !15196, file: !1125, line: 56, type: !79)
!15216 = !DILocation(line: 56, column: 38, scope: !15196)
!15217 = !DILocalVariable(name: "blockNum", arg: 6, scope: !15196, file: !1125, line: 57, type: !86)
!15218 = !DILocation(line: 57, column: 38, scope: !15196)
!15219 = !DILocalVariable(name: "blockMore", arg: 7, scope: !15196, file: !1125, line: 58, type: !136)
!15220 = !DILocation(line: 58, column: 34, scope: !15196)
!15221 = !DILocalVariable(name: "outputBuffer", arg: 8, scope: !15196, file: !1125, line: 59, type: !5103)
!15222 = !DILocation(line: 59, column: 40, scope: !15196)
!15223 = !DILocalVariable(name: "outputLength", arg: 9, scope: !15196, file: !1125, line: 60, type: !3131)
!15224 = !DILocation(line: 60, column: 38, scope: !15196)
!15225 = !DILocalVariable(name: "block1Data", scope: !15196, file: !1125, line: 62, type: !15200)
!15226 = !DILocation(line: 62, column: 27, scope: !15196)
!15227 = !DILocation(line: 62, column: 41, scope: !15196)
!15228 = !DILocation(line: 62, column: 40, scope: !15196)
!15229 = !DILocation(line: 65, column: 9, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15196, file: !1125, line: 65, column: 9)
!15231 = !DILocation(line: 65, column: 18, scope: !15230)
!15232 = !DILocation(line: 65, column: 9, scope: !15196)
!15233 = !DILocation(line: 68, column: 12, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15235, file: !1125, line: 68, column: 12)
!15235 = distinct !DILexicalBlock(scope: !15230, file: !1125, line: 66, column: 5)
!15236 = !DILocation(line: 68, column: 23, scope: !15234)
!15237 = !DILocation(line: 68, column: 12, scope: !15235)
!15238 = !DILocation(line: 70, column: 23, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15234, file: !1125, line: 69, column: 8)
!15240 = !DILocation(line: 70, column: 35, scope: !15239)
!15241 = !DILocation(line: 70, column: 12, scope: !15239)
!15242 = !DILocation(line: 71, column: 8, scope: !15239)
!15243 = !DILocation(line: 74, column: 25, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15234, file: !1125, line: 73, column: 8)
!15245 = !DILocation(line: 74, column: 23, scope: !15244)
!15246 = !DILocation(line: 75, column: 27, scope: !15244)
!15247 = !DILocation(line: 75, column: 13, scope: !15244)
!15248 = !DILocation(line: 75, column: 25, scope: !15244)
!15249 = !DILocation(line: 76, column: 24, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15244, file: !1125, line: 76, column: 16)
!15251 = !DILocation(line: 76, column: 21, scope: !15250)
!15252 = !DILocation(line: 76, column: 16, scope: !15244)
!15253 = !DILocation(line: 76, column: 36, scope: !15250)
!15254 = !DILocation(line: 79, column: 48, scope: !15235)
!15255 = !DILocation(line: 79, column: 35, scope: !15235)
!15256 = !DILocation(line: 79, column: 8, scope: !15235)
!15257 = !DILocation(line: 79, column: 20, scope: !15235)
!15258 = !DILocation(line: 79, column: 33, scope: !15235)
!15259 = !DILocation(line: 80, column: 39, scope: !15235)
!15260 = !DILocation(line: 80, column: 8, scope: !15235)
!15261 = !DILocation(line: 80, column: 20, scope: !15235)
!15262 = !DILocation(line: 80, column: 37, scope: !15235)
!15263 = !DILocation(line: 83, column: 15, scope: !15235)
!15264 = !DILocation(line: 83, column: 27, scope: !15235)
!15265 = !DILocation(line: 83, column: 41, scope: !15235)
!15266 = !DILocation(line: 83, column: 49, scope: !15235)
!15267 = !DILocation(line: 83, column: 8, scope: !15235)
!15268 = !DILocation(line: 84, column: 30, scope: !15235)
!15269 = !DILocation(line: 84, column: 8, scope: !15235)
!15270 = !DILocation(line: 84, column: 20, scope: !15235)
!15271 = !DILocation(line: 84, column: 28, scope: !15235)
!15272 = !DILocation(line: 85, column: 5, scope: !15235)
!15273 = !DILocation(line: 89, column: 12, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15275, file: !1125, line: 89, column: 12)
!15275 = distinct !DILexicalBlock(scope: !15230, file: !1125, line: 88, column: 5)
!15276 = !DILocation(line: 89, column: 23, scope: !15274)
!15277 = !DILocation(line: 89, column: 12, scope: !15275)
!15278 = !DILocation(line: 93, column: 12, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15274, file: !1125, line: 90, column: 8)
!15280 = !DILocation(line: 97, column: 12, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15275, file: !1125, line: 97, column: 12)
!15282 = !DILocation(line: 97, column: 24, scope: !15281)
!15283 = !DILocation(line: 97, column: 35, scope: !15281)
!15284 = !DILocation(line: 97, column: 32, scope: !15281)
!15285 = !DILocation(line: 97, column: 12, scope: !15275)
!15286 = !DILocalVariable(name: "oldBuffer", scope: !15287, file: !1125, line: 99, type: !186)
!15287 = distinct !DILexicalBlock(scope: !15281, file: !1125, line: 98, column: 8)
!15288 = !DILocation(line: 99, column: 21, scope: !15287)
!15289 = !DILocation(line: 99, column: 33, scope: !15287)
!15290 = !DILocation(line: 99, column: 45, scope: !15287)
!15291 = !DILocalVariable(name: "oldSize", scope: !15287, file: !1125, line: 100, type: !438)
!15292 = !DILocation(line: 100, column: 18, scope: !15287)
!15293 = !DILocation(line: 100, column: 28, scope: !15287)
!15294 = !DILocation(line: 100, column: 40, scope: !15287)
!15295 = !DILocation(line: 102, column: 15, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15287, file: !1125, line: 102, column: 15)
!15297 = !DILocation(line: 102, column: 27, scope: !15296)
!15298 = !DILocation(line: 102, column: 47, scope: !15296)
!15299 = !DILocation(line: 102, column: 59, scope: !15296)
!15300 = !DILocation(line: 102, column: 57, scope: !15296)
!15301 = !DILocation(line: 102, column: 44, scope: !15296)
!15302 = !DILocation(line: 102, column: 15, scope: !15287)
!15303 = !DILocation(line: 106, column: 15, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15296, file: !1125, line: 103, column: 11)
!15305 = !DILocation(line: 110, column: 15, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15287, file: !1125, line: 110, column: 15)
!15307 = !DILocation(line: 110, column: 27, scope: !15306)
!15308 = !DILocation(line: 110, column: 46, scope: !15306)
!15309 = !DILocation(line: 110, column: 44, scope: !15306)
!15310 = !DILocation(line: 110, column: 53, scope: !15306)
!15311 = !DILocation(line: 110, column: 15, scope: !15287)
!15312 = !DILocation(line: 111, column: 15, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15306, file: !1125, line: 110, column: 73)
!15314 = !DILocation(line: 114, column: 42, scope: !15287)
!15315 = !DILocation(line: 114, column: 50, scope: !15287)
!15316 = !DILocation(line: 114, column: 49, scope: !15287)
!15317 = !DILocation(line: 114, column: 11, scope: !15287)
!15318 = !DILocation(line: 114, column: 23, scope: !15287)
!15319 = !DILocation(line: 114, column: 40, scope: !15287)
!15320 = !DILocation(line: 115, column: 51, scope: !15287)
!15321 = !DILocation(line: 115, column: 63, scope: !15287)
!15322 = !DILocation(line: 115, column: 38, scope: !15287)
!15323 = !DILocation(line: 115, column: 11, scope: !15287)
!15324 = !DILocation(line: 115, column: 23, scope: !15287)
!15325 = !DILocation(line: 115, column: 36, scope: !15287)
!15326 = !DILocation(line: 116, column: 23, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15287, file: !1125, line: 116, column: 15)
!15328 = !DILocation(line: 116, column: 35, scope: !15327)
!15329 = !DILocation(line: 116, column: 20, scope: !15327)
!15330 = !DILocation(line: 116, column: 15, scope: !15287)
!15331 = !DILocation(line: 116, column: 49, scope: !15327)
!15332 = !DILocation(line: 117, column: 18, scope: !15287)
!15333 = !DILocation(line: 117, column: 30, scope: !15287)
!15334 = !DILocation(line: 117, column: 44, scope: !15287)
!15335 = !DILocation(line: 117, column: 55, scope: !15287)
!15336 = !DILocation(line: 117, column: 11, scope: !15287)
!15337 = !DILocation(line: 118, column: 22, scope: !15287)
!15338 = !DILocation(line: 118, column: 11, scope: !15287)
!15339 = !DILocation(line: 121, column: 18, scope: !15287)
!15340 = !DILocation(line: 121, column: 30, scope: !15287)
!15341 = !DILocation(line: 121, column: 45, scope: !15287)
!15342 = !DILocation(line: 121, column: 43, scope: !15287)
!15343 = !DILocation(line: 121, column: 54, scope: !15287)
!15344 = !DILocation(line: 121, column: 62, scope: !15287)
!15345 = !DILocation(line: 121, column: 11, scope: !15287)
!15346 = !DILocation(line: 122, column: 33, scope: !15287)
!15347 = !DILocation(line: 122, column: 11, scope: !15287)
!15348 = !DILocation(line: 122, column: 23, scope: !15287)
!15349 = !DILocation(line: 122, column: 31, scope: !15287)
!15350 = !DILocation(line: 123, column: 8, scope: !15287)
!15351 = !DILocation(line: 126, column: 9, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15196, file: !1125, line: 126, column: 9)
!15353 = !DILocation(line: 126, column: 9, scope: !15196)
!15354 = !DILocation(line: 128, column: 10, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15352, file: !1125, line: 127, column: 5)
!15356 = !DILocation(line: 128, column: 23, scope: !15355)
!15357 = !DILocation(line: 129, column: 9, scope: !15355)
!15358 = !DILocation(line: 135, column: 25, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15352, file: !1125, line: 132, column: 5)
!15360 = !DILocation(line: 135, column: 37, scope: !15359)
!15361 = !DILocation(line: 135, column: 10, scope: !15359)
!15362 = !DILocation(line: 135, column: 23, scope: !15359)
!15363 = !DILocation(line: 136, column: 25, scope: !15359)
!15364 = !DILocation(line: 136, column: 37, scope: !15359)
!15365 = !DILocation(line: 136, column: 10, scope: !15359)
!15366 = !DILocation(line: 136, column: 23, scope: !15359)
!15367 = !DILocation(line: 138, column: 9, scope: !15359)
!15368 = !DILocation(line: 140, column: 1, scope: !15196)
!15369 = distinct !DISubprogram(name: "free_block1_buffer", scope: !1125, file: !1125, line: 142, type: !15370, isLocal: false, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: false, unit: !1124, variables: !488)
!15370 = !DISubroutineType(types: !15371)
!15371 = !{null, !15200}
!15372 = !DILocalVariable(name: "block1Data", arg: 1, scope: !15369, file: !1125, line: 142, type: !15200)
!15373 = !DILocation(line: 142, column: 47, scope: !15369)
!15374 = !DILocation(line: 144, column: 9, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15369, file: !1125, line: 144, column: 9)
!15376 = !DILocation(line: 144, column: 20, scope: !15375)
!15377 = !DILocation(line: 144, column: 9, scope: !15369)
!15378 = !DILocation(line: 147, column: 20, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15375, file: !1125, line: 145, column: 5)
!15380 = !DILocation(line: 147, column: 32, scope: !15379)
!15381 = !DILocation(line: 147, column: 9, scope: !15379)
!15382 = !DILocation(line: 148, column: 9, scope: !15379)
!15383 = !DILocation(line: 148, column: 21, scope: !15379)
!15384 = !DILocation(line: 148, column: 38, scope: !15379)
!15385 = !DILocation(line: 151, column: 20, scope: !15379)
!15386 = !DILocation(line: 151, column: 9, scope: !15379)
!15387 = !DILocation(line: 152, column: 5, scope: !15379)
!15388 = !DILocation(line: 153, column: 1, scope: !15369)
!15389 = distinct !DISubprogram(name: "coap_add_multi_option", scope: !492, file: !492, line: 257, type: !15390, isLocal: false, isDefinition: true, scopeLine: 258, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{null, !15392, !186, !438, !107}
!15392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!15393 = !DILocalVariable(name: "dst", arg: 1, scope: !15389, file: !492, line: 257, type: !15392)
!15394 = !DILocation(line: 257, column: 40, scope: !15389)
!15395 = !DILocalVariable(name: "option", arg: 2, scope: !15389, file: !492, line: 257, type: !186)
!15396 = !DILocation(line: 257, column: 54, scope: !15389)
!15397 = !DILocalVariable(name: "option_len", arg: 3, scope: !15389, file: !492, line: 257, type: !438)
!15398 = !DILocation(line: 257, column: 69, scope: !15389)
!15399 = !DILocalVariable(name: "is_static", arg: 4, scope: !15389, file: !492, line: 257, type: !107)
!15400 = !DILocation(line: 257, column: 89, scope: !15389)
!15401 = !DILocalVariable(name: "opt", scope: !15389, file: !492, line: 259, type: !495)
!15402 = !DILocation(line: 259, column: 19, scope: !15389)
!15403 = !DILocation(line: 259, column: 43, scope: !15389)
!15404 = !DILocation(line: 259, column: 25, scope: !15389)
!15405 = !DILocation(line: 261, column: 7, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15389, file: !492, line: 261, column: 7)
!15407 = !DILocation(line: 261, column: 7, scope: !15389)
!15408 = !DILocation(line: 263, column: 5, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15406, file: !492, line: 262, column: 3)
!15410 = !DILocation(line: 263, column: 10, scope: !15409)
!15411 = !DILocation(line: 263, column: 15, scope: !15409)
!15412 = !DILocation(line: 264, column: 25, scope: !15409)
!15413 = !DILocation(line: 264, column: 16, scope: !15409)
!15414 = !DILocation(line: 264, column: 5, scope: !15409)
!15415 = !DILocation(line: 264, column: 10, scope: !15409)
!15416 = !DILocation(line: 264, column: 14, scope: !15409)
!15417 = !DILocation(line: 265, column: 9, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15409, file: !492, line: 265, column: 9)
!15419 = !DILocation(line: 265, column: 9, scope: !15409)
!15420 = !DILocation(line: 267, column: 19, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15418, file: !492, line: 266, column: 5)
!15422 = !DILocation(line: 267, column: 7, scope: !15421)
!15423 = !DILocation(line: 267, column: 12, scope: !15421)
!15424 = !DILocation(line: 267, column: 17, scope: !15421)
!15425 = !DILocation(line: 268, column: 7, scope: !15421)
!15426 = !DILocation(line: 268, column: 12, scope: !15421)
!15427 = !DILocation(line: 268, column: 22, scope: !15421)
!15428 = !DILocation(line: 269, column: 5, scope: !15421)
!15429 = !DILocation(line: 272, column: 9, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15418, file: !492, line: 271, column: 5)
!15431 = !DILocation(line: 272, column: 14, scope: !15430)
!15432 = !DILocation(line: 272, column: 24, scope: !15430)
!15433 = !DILocation(line: 273, column: 45, scope: !15430)
!15434 = !DILocation(line: 273, column: 32, scope: !15430)
!15435 = !DILocation(line: 273, column: 9, scope: !15430)
!15436 = !DILocation(line: 273, column: 14, scope: !15430)
!15437 = !DILocation(line: 273, column: 19, scope: !15430)
!15438 = !DILocation(line: 274, column: 13, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15430, file: !492, line: 274, column: 13)
!15440 = !DILocation(line: 274, column: 18, scope: !15439)
!15441 = !DILocation(line: 274, column: 23, scope: !15439)
!15442 = !DILocation(line: 274, column: 13, scope: !15430)
!15443 = !DILocation(line: 276, column: 24, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15439, file: !492, line: 275, column: 9)
!15445 = !DILocation(line: 276, column: 13, scope: !15444)
!15446 = !DILocation(line: 277, column: 13, scope: !15444)
!15447 = !DILocation(line: 279, column: 16, scope: !15430)
!15448 = !DILocation(line: 279, column: 21, scope: !15430)
!15449 = !DILocation(line: 279, column: 27, scope: !15430)
!15450 = !DILocation(line: 279, column: 35, scope: !15430)
!15451 = !DILocation(line: 279, column: 9, scope: !15430)
!15452 = !DILocation(line: 282, column: 10, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15409, file: !492, line: 282, column: 9)
!15454 = !DILocation(line: 282, column: 9, scope: !15453)
!15455 = !DILocation(line: 282, column: 9, scope: !15409)
!15456 = !DILocalVariable(name: "i", scope: !15457, file: !492, line: 284, type: !495)
!15457 = distinct !DILexicalBlock(scope: !15453, file: !492, line: 283, column: 5)
!15458 = !DILocation(line: 284, column: 24, scope: !15457)
!15459 = !DILocation(line: 284, column: 29, scope: !15457)
!15460 = !DILocation(line: 284, column: 28, scope: !15457)
!15461 = !DILocation(line: 285, column: 7, scope: !15457)
!15462 = !DILocation(line: 285, column: 14, scope: !15457)
!15463 = !DILocation(line: 285, column: 17, scope: !15457)
!15464 = !DILocation(line: 287, column: 13, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15457, file: !492, line: 286, column: 7)
!15466 = !DILocation(line: 287, column: 16, scope: !15465)
!15467 = !DILocation(line: 287, column: 11, scope: !15465)
!15468 = distinct !{!15468, !15461, !15469}
!15469 = !DILocation(line: 288, column: 7, scope: !15457)
!15470 = !DILocation(line: 289, column: 17, scope: !15457)
!15471 = !DILocation(line: 289, column: 7, scope: !15457)
!15472 = !DILocation(line: 289, column: 10, scope: !15457)
!15473 = !DILocation(line: 289, column: 15, scope: !15457)
!15474 = !DILocation(line: 290, column: 5, scope: !15457)
!15475 = !DILocation(line: 293, column: 14, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15453, file: !492, line: 292, column: 5)
!15477 = !DILocation(line: 293, column: 8, scope: !15476)
!15478 = !DILocation(line: 293, column: 12, scope: !15476)
!15479 = !DILocation(line: 295, column: 3, scope: !15409)
!15480 = !DILocation(line: 296, column: 1, scope: !15389)
!15481 = distinct !DISubprogram(name: "free_multi_option", scope: !492, file: !492, line: 299, type: !15482, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15482 = !DISubroutineType(types: !15483)
!15483 = !{null, !495}
!15484 = !DILocalVariable(name: "dst", arg: 1, scope: !15481, file: !492, line: 299, type: !495)
!15485 = !DILocation(line: 299, column: 35, scope: !15481)
!15486 = !DILocation(line: 301, column: 7, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15481, file: !492, line: 301, column: 7)
!15488 = !DILocation(line: 301, column: 7, scope: !15481)
!15489 = !DILocalVariable(name: "n", scope: !15490, file: !492, line: 303, type: !495)
!15490 = distinct !DILexicalBlock(scope: !15487, file: !492, line: 302, column: 3)
!15491 = !DILocation(line: 303, column: 21, scope: !15490)
!15492 = !DILocation(line: 303, column: 25, scope: !15490)
!15493 = !DILocation(line: 303, column: 30, scope: !15490)
!15494 = !DILocation(line: 304, column: 5, scope: !15490)
!15495 = !DILocation(line: 304, column: 10, scope: !15490)
!15496 = !DILocation(line: 304, column: 15, scope: !15490)
!15497 = !DILocation(line: 305, column: 9, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15490, file: !492, line: 305, column: 9)
!15499 = !DILocation(line: 305, column: 14, scope: !15498)
!15500 = !DILocation(line: 305, column: 24, scope: !15498)
!15501 = !DILocation(line: 305, column: 9, scope: !15490)
!15502 = !DILocation(line: 307, column: 20, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15498, file: !492, line: 306, column: 5)
!15504 = !DILocation(line: 307, column: 25, scope: !15503)
!15505 = !DILocation(line: 307, column: 9, scope: !15503)
!15506 = !DILocation(line: 308, column: 5, scope: !15503)
!15507 = !DILocation(line: 309, column: 16, scope: !15490)
!15508 = !DILocation(line: 309, column: 5, scope: !15490)
!15509 = !DILocation(line: 310, column: 23, scope: !15490)
!15510 = !DILocation(line: 310, column: 5, scope: !15490)
!15511 = !DILocation(line: 311, column: 3, scope: !15490)
!15512 = !DILocation(line: 312, column: 1, scope: !15481)
!15513 = distinct !DISubprogram(name: "coap_get_multi_option_as_string", scope: !492, file: !492, line: 314, type: !15514, isLocal: false, isDefinition: true, scopeLine: 315, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{!117, !495}
!15516 = !DILocalVariable(name: "option", arg: 1, scope: !15513, file: !492, line: 314, type: !495)
!15517 = !DILocation(line: 314, column: 57, scope: !15513)
!15518 = !DILocalVariable(name: "len", scope: !15513, file: !492, line: 316, type: !438)
!15519 = !DILocation(line: 316, column: 12, scope: !15513)
!15520 = !DILocalVariable(name: "opt", scope: !15513, file: !492, line: 317, type: !495)
!15521 = !DILocation(line: 317, column: 22, scope: !15513)
!15522 = !DILocalVariable(name: "output", scope: !15513, file: !492, line: 318, type: !117)
!15523 = !DILocation(line: 318, column: 12, scope: !15513)
!15524 = !DILocation(line: 320, column: 16, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15513, file: !492, line: 320, column: 5)
!15526 = !DILocation(line: 320, column: 14, scope: !15525)
!15527 = !DILocation(line: 320, column: 10, scope: !15525)
!15528 = !DILocation(line: 320, column: 24, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15525, file: !492, line: 320, column: 5)
!15530 = !DILocation(line: 320, column: 28, scope: !15529)
!15531 = !DILocation(line: 320, column: 5, scope: !15525)
!15532 = !DILocation(line: 322, column: 15, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15529, file: !492, line: 321, column: 5)
!15534 = !DILocation(line: 322, column: 20, scope: !15533)
!15535 = !DILocation(line: 322, column: 24, scope: !15533)
!15536 = !DILocation(line: 322, column: 12, scope: !15533)
!15537 = !DILocation(line: 323, column: 5, scope: !15533)
!15538 = !DILocation(line: 320, column: 43, scope: !15529)
!15539 = !DILocation(line: 320, column: 48, scope: !15529)
!15540 = !DILocation(line: 320, column: 41, scope: !15529)
!15541 = !DILocation(line: 320, column: 5, scope: !15529)
!15542 = distinct !{!15542, !15531, !15543}
!15543 = !DILocation(line: 323, column: 5, scope: !15525)
!15544 = !DILocation(line: 325, column: 27, scope: !15513)
!15545 = !DILocation(line: 325, column: 31, scope: !15513)
!15546 = !DILocation(line: 325, column: 14, scope: !15513)
!15547 = !DILocation(line: 325, column: 12, scope: !15513)
!15548 = !DILocation(line: 326, column: 9, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15513, file: !492, line: 326, column: 9)
!15550 = !DILocation(line: 326, column: 16, scope: !15549)
!15551 = !DILocation(line: 326, column: 9, scope: !15513)
!15552 = !DILocalVariable(name: "i", scope: !15553, file: !492, line: 328, type: !438)
!15553 = distinct !DILexicalBlock(scope: !15549, file: !492, line: 327, column: 5)
!15554 = !DILocation(line: 328, column: 16, scope: !15553)
!15555 = !DILocation(line: 330, column: 20, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15553, file: !492, line: 330, column: 9)
!15557 = !DILocation(line: 330, column: 18, scope: !15556)
!15558 = !DILocation(line: 330, column: 14, scope: !15556)
!15559 = !DILocation(line: 330, column: 28, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15556, file: !492, line: 330, column: 9)
!15561 = !DILocation(line: 330, column: 32, scope: !15560)
!15562 = !DILocation(line: 330, column: 9, scope: !15556)
!15563 = !DILocation(line: 332, column: 13, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15560, file: !492, line: 331, column: 9)
!15565 = !DILocation(line: 332, column: 20, scope: !15564)
!15566 = !DILocation(line: 332, column: 23, scope: !15564)
!15567 = !DILocation(line: 333, column: 15, scope: !15564)
!15568 = !DILocation(line: 335, column: 21, scope: !15564)
!15569 = !DILocation(line: 335, column: 30, scope: !15564)
!15570 = !DILocation(line: 335, column: 28, scope: !15564)
!15571 = !DILocation(line: 335, column: 33, scope: !15564)
!15572 = !DILocation(line: 335, column: 38, scope: !15564)
!15573 = !DILocation(line: 335, column: 44, scope: !15564)
!15574 = !DILocation(line: 335, column: 49, scope: !15564)
!15575 = !DILocation(line: 335, column: 13, scope: !15564)
!15576 = !DILocation(line: 336, column: 18, scope: !15564)
!15577 = !DILocation(line: 336, column: 23, scope: !15564)
!15578 = !DILocation(line: 336, column: 15, scope: !15564)
!15579 = !DILocation(line: 337, column: 9, scope: !15564)
!15580 = !DILocation(line: 330, column: 47, scope: !15560)
!15581 = !DILocation(line: 330, column: 52, scope: !15560)
!15582 = !DILocation(line: 330, column: 45, scope: !15560)
!15583 = !DILocation(line: 330, column: 9, scope: !15560)
!15584 = distinct !{!15584, !15562, !15585}
!15585 = !DILocation(line: 337, column: 9, scope: !15556)
!15586 = !DILocation(line: 338, column: 9, scope: !15553)
!15587 = !DILocation(line: 338, column: 16, scope: !15553)
!15588 = !DILocation(line: 338, column: 19, scope: !15553)
!15589 = !DILocation(line: 339, column: 5, scope: !15553)
!15590 = !DILocation(line: 341, column: 12, scope: !15513)
!15591 = !DILocation(line: 341, column: 5, scope: !15513)
!15592 = distinct !DISubprogram(name: "coap_get_mid", scope: !492, file: !492, line: 384, type: !15593, isLocal: false, isDefinition: true, scopeLine: 385, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15593 = !DISubroutineType(types: !15594)
!15594 = !{!79}
!15595 = !DILocation(line: 386, column: 10, scope: !15592)
!15596 = !DILocation(line: 386, column: 3, scope: !15592)
!15597 = distinct !DISubprogram(name: "coap_init_message", scope: !492, file: !492, line: 392, type: !15598, isLocal: false, isDefinition: true, scopeLine: 393, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15598 = !DISubroutineType(types: !15599)
!15599 = !{null, !54, !427, !107, !79}
!15600 = !DILocalVariable(name: "packet", arg: 1, scope: !15597, file: !492, line: 392, type: !54)
!15601 = !DILocation(line: 392, column: 25, scope: !15597)
!15602 = !DILocalVariable(name: "type", arg: 2, scope: !15597, file: !492, line: 392, type: !427)
!15603 = !DILocation(line: 392, column: 53, scope: !15597)
!15604 = !DILocalVariable(name: "code", arg: 3, scope: !15597, file: !492, line: 392, type: !107)
!15605 = !DILocation(line: 392, column: 67, scope: !15597)
!15606 = !DILocalVariable(name: "mid", arg: 4, scope: !15597, file: !492, line: 392, type: !79)
!15607 = !DILocation(line: 392, column: 82, scope: !15597)
!15608 = !DILocalVariable(name: "coap_pkt", scope: !15597, file: !492, line: 394, type: !15609)
!15609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!15610 = !DILocation(line: 394, column: 24, scope: !15597)
!15611 = !DILocation(line: 394, column: 53, scope: !15597)
!15612 = !DILocation(line: 394, column: 35, scope: !15597)
!15613 = !DILocation(line: 397, column: 10, scope: !15597)
!15614 = !DILocation(line: 397, column: 3, scope: !15597)
!15615 = !DILocation(line: 399, column: 20, scope: !15597)
!15616 = !DILocation(line: 399, column: 3, scope: !15597)
!15617 = !DILocation(line: 399, column: 13, scope: !15597)
!15618 = !DILocation(line: 399, column: 18, scope: !15597)
!15619 = !DILocation(line: 400, column: 20, scope: !15597)
!15620 = !DILocation(line: 400, column: 3, scope: !15597)
!15621 = !DILocation(line: 400, column: 13, scope: !15597)
!15622 = !DILocation(line: 400, column: 18, scope: !15597)
!15623 = !DILocation(line: 401, column: 19, scope: !15597)
!15624 = !DILocation(line: 401, column: 3, scope: !15597)
!15625 = !DILocation(line: 401, column: 13, scope: !15597)
!15626 = !DILocation(line: 401, column: 17, scope: !15597)
!15627 = !DILocation(line: 402, column: 1, scope: !15597)
!15628 = distinct !DISubprogram(name: "coap_free_header", scope: !492, file: !492, line: 405, type: !15629, isLocal: false, isDefinition: true, scopeLine: 406, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15629 = !DISubroutineType(types: !15630)
!15630 = !{null, !54}
!15631 = !DILocalVariable(name: "packet", arg: 1, scope: !15628, file: !492, line: 405, type: !54)
!15632 = !DILocation(line: 405, column: 24, scope: !15628)
!15633 = !DILocalVariable(name: "coap_pkt", scope: !15628, file: !492, line: 407, type: !15609)
!15634 = !DILocation(line: 407, column: 26, scope: !15628)
!15635 = !DILocation(line: 407, column: 55, scope: !15628)
!15636 = !DILocation(line: 407, column: 37, scope: !15628)
!15637 = !DILocation(line: 409, column: 23, scope: !15628)
!15638 = !DILocation(line: 409, column: 33, scope: !15628)
!15639 = !DILocation(line: 409, column: 5, scope: !15628)
!15640 = !DILocation(line: 410, column: 23, scope: !15628)
!15641 = !DILocation(line: 410, column: 33, scope: !15628)
!15642 = !DILocation(line: 410, column: 5, scope: !15628)
!15643 = !DILocation(line: 411, column: 23, scope: !15628)
!15644 = !DILocation(line: 411, column: 33, scope: !15628)
!15645 = !DILocation(line: 411, column: 5, scope: !15628)
!15646 = !DILocation(line: 412, column: 5, scope: !15628)
!15647 = !DILocation(line: 412, column: 15, scope: !15628)
!15648 = !DILocation(line: 412, column: 24, scope: !15628)
!15649 = !DILocation(line: 413, column: 5, scope: !15628)
!15650 = !DILocation(line: 413, column: 15, scope: !15628)
!15651 = !DILocation(line: 413, column: 25, scope: !15628)
!15652 = !DILocation(line: 414, column: 5, scope: !15628)
!15653 = !DILocation(line: 414, column: 15, scope: !15628)
!15654 = !DILocation(line: 414, column: 29, scope: !15628)
!15655 = !DILocation(line: 415, column: 1, scope: !15628)
!15656 = distinct !DISubprogram(name: "coap_serialize_get_size", scope: !492, file: !492, line: 418, type: !15657, isLocal: false, isDefinition: true, scopeLine: 419, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15657 = !DISubroutineType(types: !15658)
!15658 = !{!438, !54}
!15659 = !DILocalVariable(name: "packet", arg: 1, scope: !15656, file: !492, line: 418, type: !54)
!15660 = !DILocation(line: 418, column: 38, scope: !15656)
!15661 = !DILocalVariable(name: "coap_pkt", scope: !15656, file: !492, line: 420, type: !15609)
!15662 = !DILocation(line: 420, column: 26, scope: !15656)
!15663 = !DILocation(line: 420, column: 55, scope: !15656)
!15664 = !DILocation(line: 420, column: 37, scope: !15656)
!15665 = !DILocalVariable(name: "length", scope: !15656, file: !492, line: 421, type: !438)
!15666 = !DILocation(line: 421, column: 12, scope: !15656)
!15667 = !DILocation(line: 423, column: 32, scope: !15656)
!15668 = !DILocation(line: 423, column: 42, scope: !15656)
!15669 = !DILocation(line: 423, column: 30, scope: !15656)
!15670 = !DILocation(line: 423, column: 56, scope: !15656)
!15671 = !DILocation(line: 423, column: 66, scope: !15656)
!15672 = !DILocation(line: 423, column: 54, scope: !15656)
!15673 = !DILocation(line: 423, column: 14, scope: !15656)
!15674 = !DILocation(line: 423, column: 12, scope: !15656)
!15675 = !DILocation(line: 425, column: 9, scope: !15656)
!15676 = !DILocation(line: 425, column: 9, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 425, column: 9)
!15678 = !DILocation(line: 427, column: 48, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15677, file: !492, line: 426, column: 5)
!15680 = !DILocation(line: 427, column: 58, scope: !15679)
!15681 = !DILocation(line: 427, column: 46, scope: !15679)
!15682 = !DILocation(line: 427, column: 19, scope: !15679)
!15683 = !DILocation(line: 427, column: 16, scope: !15679)
!15684 = !DILocation(line: 428, column: 5, scope: !15679)
!15685 = !DILocation(line: 429, column: 9, scope: !15656)
!15686 = !DILocation(line: 429, column: 9, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 429, column: 9)
!15688 = !DILocation(line: 431, column: 48, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15687, file: !492, line: 430, column: 5)
!15690 = !DILocation(line: 431, column: 58, scope: !15689)
!15691 = !DILocation(line: 431, column: 46, scope: !15689)
!15692 = !DILocation(line: 431, column: 16, scope: !15689)
!15693 = !DILocation(line: 432, column: 5, scope: !15689)
!15694 = !DILocation(line: 433, column: 9, scope: !15656)
!15695 = !DILocation(line: 433, column: 9, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 433, column: 9)
!15697 = !DILocation(line: 435, column: 48, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15696, file: !492, line: 434, column: 5)
!15699 = !DILocation(line: 435, column: 58, scope: !15698)
!15700 = !DILocation(line: 435, column: 46, scope: !15698)
!15701 = !DILocation(line: 435, column: 19, scope: !15698)
!15702 = !DILocation(line: 435, column: 16, scope: !15698)
!15703 = !DILocation(line: 436, column: 5, scope: !15698)
!15704 = !DILocation(line: 437, column: 9, scope: !15656)
!15705 = !DILocation(line: 437, column: 9, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 437, column: 9)
!15707 = !DILocation(line: 440, column: 16, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15706, file: !492, line: 438, column: 5)
!15709 = !DILocation(line: 441, column: 5, scope: !15708)
!15710 = !DILocation(line: 442, column: 9, scope: !15656)
!15711 = !DILocation(line: 442, column: 9, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 442, column: 9)
!15713 = !DILocation(line: 445, column: 16, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15712, file: !492, line: 443, column: 5)
!15715 = !DILocation(line: 446, column: 5, scope: !15714)
!15716 = !DILocation(line: 447, column: 9, scope: !15656)
!15717 = !DILocation(line: 447, column: 9, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 447, column: 9)
!15719 = !DILocation(line: 450, column: 16, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15718, file: !492, line: 448, column: 5)
!15721 = !DILocation(line: 451, column: 5, scope: !15720)
!15722 = !DILocation(line: 452, column: 9, scope: !15656)
!15723 = !DILocation(line: 452, column: 9, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 452, column: 9)
!15725 = !DILocalVariable(name: "optP", scope: !15726, file: !492, line: 454, type: !495)
!15726 = distinct !DILexicalBlock(scope: !15724, file: !492, line: 453, column: 5)
!15727 = !DILocation(line: 454, column: 26, scope: !15726)
!15728 = !DILocation(line: 456, column: 21, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15726, file: !492, line: 456, column: 9)
!15730 = !DILocation(line: 456, column: 31, scope: !15729)
!15731 = !DILocation(line: 456, column: 19, scope: !15729)
!15732 = !DILocation(line: 456, column: 14, scope: !15729)
!15733 = !DILocation(line: 456, column: 47, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15729, file: !492, line: 456, column: 9)
!15735 = !DILocation(line: 456, column: 52, scope: !15734)
!15736 = !DILocation(line: 456, column: 9, scope: !15729)
!15737 = !DILocation(line: 458, column: 52, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15734, file: !492, line: 457, column: 9)
!15739 = !DILocation(line: 458, column: 58, scope: !15738)
!15740 = !DILocation(line: 458, column: 50, scope: !15738)
!15741 = !DILocation(line: 458, column: 23, scope: !15738)
!15742 = !DILocation(line: 458, column: 20, scope: !15738)
!15743 = !DILocation(line: 459, column: 9, scope: !15738)
!15744 = !DILocation(line: 456, column: 69, scope: !15734)
!15745 = !DILocation(line: 456, column: 75, scope: !15734)
!15746 = !DILocation(line: 456, column: 67, scope: !15734)
!15747 = !DILocation(line: 456, column: 9, scope: !15734)
!15748 = distinct !{!15748, !15736, !15749}
!15749 = !DILocation(line: 459, column: 9, scope: !15729)
!15750 = !DILocation(line: 460, column: 5, scope: !15726)
!15751 = !DILocation(line: 461, column: 9, scope: !15656)
!15752 = !DILocation(line: 461, column: 9, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 461, column: 9)
!15754 = !DILocalVariable(name: "optP", scope: !15755, file: !492, line: 463, type: !495)
!15755 = distinct !DILexicalBlock(scope: !15753, file: !492, line: 462, column: 5)
!15756 = !DILocation(line: 463, column: 26, scope: !15755)
!15757 = !DILocation(line: 465, column: 21, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15755, file: !492, line: 465, column: 9)
!15759 = !DILocation(line: 465, column: 31, scope: !15758)
!15760 = !DILocation(line: 465, column: 19, scope: !15758)
!15761 = !DILocation(line: 465, column: 14, scope: !15758)
!15762 = !DILocation(line: 465, column: 42, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15758, file: !492, line: 465, column: 9)
!15764 = !DILocation(line: 465, column: 47, scope: !15763)
!15765 = !DILocation(line: 465, column: 9, scope: !15758)
!15766 = !DILocation(line: 467, column: 52, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15763, file: !492, line: 466, column: 9)
!15768 = !DILocation(line: 467, column: 58, scope: !15767)
!15769 = !DILocation(line: 467, column: 50, scope: !15767)
!15770 = !DILocation(line: 467, column: 23, scope: !15767)
!15771 = !DILocation(line: 467, column: 20, scope: !15767)
!15772 = !DILocation(line: 468, column: 9, scope: !15767)
!15773 = !DILocation(line: 465, column: 64, scope: !15763)
!15774 = !DILocation(line: 465, column: 70, scope: !15763)
!15775 = !DILocation(line: 465, column: 62, scope: !15763)
!15776 = !DILocation(line: 465, column: 9, scope: !15763)
!15777 = distinct !{!15777, !15765, !15778}
!15778 = !DILocation(line: 468, column: 9, scope: !15758)
!15779 = !DILocation(line: 469, column: 5, scope: !15755)
!15780 = !DILocation(line: 470, column: 9, scope: !15656)
!15781 = !DILocation(line: 470, column: 9, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 470, column: 9)
!15783 = !DILocation(line: 473, column: 16, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15782, file: !492, line: 471, column: 5)
!15785 = !DILocation(line: 474, column: 5, scope: !15784)
!15786 = !DILocation(line: 475, column: 9, scope: !15656)
!15787 = !DILocation(line: 475, column: 9, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 475, column: 9)
!15789 = !DILocation(line: 478, column: 16, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15788, file: !492, line: 476, column: 5)
!15791 = !DILocation(line: 479, column: 5, scope: !15790)
!15792 = !DILocation(line: 480, column: 9, scope: !15656)
!15793 = !DILocation(line: 480, column: 9, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 480, column: 9)
!15795 = !DILocalVariable(name: "optP", scope: !15796, file: !492, line: 482, type: !495)
!15796 = distinct !DILexicalBlock(scope: !15794, file: !492, line: 481, column: 5)
!15797 = !DILocation(line: 482, column: 26, scope: !15796)
!15798 = !DILocation(line: 484, column: 21, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15796, file: !492, line: 484, column: 9)
!15800 = !DILocation(line: 484, column: 31, scope: !15799)
!15801 = !DILocation(line: 484, column: 19, scope: !15799)
!15802 = !DILocation(line: 484, column: 14, scope: !15799)
!15803 = !DILocation(line: 484, column: 43, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15799, file: !492, line: 484, column: 9)
!15805 = !DILocation(line: 484, column: 48, scope: !15804)
!15806 = !DILocation(line: 484, column: 9, scope: !15799)
!15807 = !DILocation(line: 486, column: 52, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15804, file: !492, line: 485, column: 9)
!15809 = !DILocation(line: 486, column: 58, scope: !15808)
!15810 = !DILocation(line: 486, column: 50, scope: !15808)
!15811 = !DILocation(line: 486, column: 23, scope: !15808)
!15812 = !DILocation(line: 486, column: 20, scope: !15808)
!15813 = !DILocation(line: 487, column: 9, scope: !15808)
!15814 = !DILocation(line: 484, column: 65, scope: !15804)
!15815 = !DILocation(line: 484, column: 71, scope: !15804)
!15816 = !DILocation(line: 484, column: 63, scope: !15804)
!15817 = !DILocation(line: 484, column: 9, scope: !15804)
!15818 = distinct !{!15818, !15806, !15819}
!15819 = !DILocation(line: 487, column: 9, scope: !15799)
!15820 = !DILocation(line: 488, column: 5, scope: !15796)
!15821 = !DILocation(line: 489, column: 9, scope: !15656)
!15822 = !DILocation(line: 489, column: 9, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 489, column: 9)
!15824 = !DILocation(line: 491, column: 19, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15823, file: !492, line: 490, column: 5)
!15826 = !DILocation(line: 491, column: 29, scope: !15825)
!15827 = !DILocation(line: 491, column: 40, scope: !15825)
!15828 = !DILocation(line: 491, column: 16, scope: !15825)
!15829 = !DILocation(line: 492, column: 5, scope: !15825)
!15830 = !DILocation(line: 493, column: 9, scope: !15656)
!15831 = !DILocation(line: 493, column: 9, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 493, column: 9)
!15833 = !DILocation(line: 495, column: 48, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15832, file: !492, line: 494, column: 5)
!15835 = !DILocation(line: 495, column: 58, scope: !15834)
!15836 = !DILocation(line: 495, column: 46, scope: !15834)
!15837 = !DILocation(line: 495, column: 16, scope: !15834)
!15838 = !DILocation(line: 496, column: 5, scope: !15834)
!15839 = !DILocation(line: 497, column: 9, scope: !15656)
!15840 = !DILocation(line: 497, column: 9, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 497, column: 9)
!15842 = !DILocation(line: 500, column: 16, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15841, file: !492, line: 498, column: 5)
!15844 = !DILocation(line: 501, column: 5, scope: !15843)
!15845 = !DILocation(line: 502, column: 9, scope: !15656)
!15846 = !DILocation(line: 502, column: 9, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 502, column: 9)
!15848 = !DILocation(line: 505, column: 16, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15847, file: !492, line: 503, column: 5)
!15850 = !DILocation(line: 506, column: 5, scope: !15849)
!15851 = !DILocation(line: 507, column: 9, scope: !15656)
!15852 = !DILocation(line: 507, column: 9, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 507, column: 9)
!15854 = !DILocation(line: 510, column: 16, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15853, file: !492, line: 508, column: 5)
!15856 = !DILocation(line: 511, column: 5, scope: !15855)
!15857 = !DILocation(line: 512, column: 9, scope: !15656)
!15858 = !DILocation(line: 512, column: 9, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 512, column: 9)
!15860 = !DILocation(line: 514, column: 48, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15859, file: !492, line: 513, column: 5)
!15862 = !DILocation(line: 514, column: 58, scope: !15861)
!15863 = !DILocation(line: 514, column: 46, scope: !15861)
!15864 = !DILocation(line: 514, column: 16, scope: !15861)
!15865 = !DILocation(line: 515, column: 5, scope: !15861)
!15866 = !DILocation(line: 517, column: 9, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15656, file: !492, line: 517, column: 9)
!15868 = !DILocation(line: 517, column: 19, scope: !15867)
!15869 = !DILocation(line: 517, column: 9, scope: !15656)
!15870 = !DILocation(line: 520, column: 16, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15867, file: !492, line: 518, column: 5)
!15872 = !DILocation(line: 521, column: 5, scope: !15871)
!15873 = !DILocation(line: 523, column: 12, scope: !15656)
!15874 = !DILocation(line: 523, column: 5, scope: !15656)
!15875 = distinct !DISubprogram(name: "coap_serialize_message", scope: !492, file: !492, line: 528, type: !15876, isLocal: false, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!15876 = !DISubroutineType(types: !15877)
!15877 = !{!438, !54, !186}
!15878 = !DILocalVariable(name: "packet", arg: 1, scope: !15875, file: !492, line: 528, type: !54)
!15879 = !DILocation(line: 528, column: 30, scope: !15875)
!15880 = !DILocalVariable(name: "buffer", arg: 2, scope: !15875, file: !492, line: 528, type: !186)
!15881 = !DILocation(line: 528, column: 47, scope: !15875)
!15882 = !DILocalVariable(name: "coap_pkt", scope: !15875, file: !492, line: 530, type: !15609)
!15883 = !DILocation(line: 530, column: 24, scope: !15875)
!15884 = !DILocation(line: 530, column: 53, scope: !15875)
!15885 = !DILocation(line: 530, column: 35, scope: !15875)
!15886 = !DILocalVariable(name: "option", scope: !15875, file: !492, line: 531, type: !186)
!15887 = !DILocation(line: 531, column: 12, scope: !15875)
!15888 = !DILocalVariable(name: "current_number", scope: !15875, file: !492, line: 532, type: !87)
!15889 = !DILocation(line: 532, column: 16, scope: !15875)
!15890 = !DILocation(line: 535, column: 22, scope: !15875)
!15891 = !DILocation(line: 535, column: 3, scope: !15875)
!15892 = !DILocation(line: 535, column: 13, scope: !15875)
!15893 = !DILocation(line: 535, column: 20, scope: !15875)
!15894 = !DILocation(line: 536, column: 3, scope: !15875)
!15895 = !DILocation(line: 536, column: 13, scope: !15875)
!15896 = !DILocation(line: 536, column: 21, scope: !15875)
!15897 = !DILocation(line: 541, column: 3, scope: !15875)
!15898 = !DILocation(line: 541, column: 13, scope: !15875)
!15899 = !DILocation(line: 541, column: 24, scope: !15875)
!15900 = !DILocation(line: 542, column: 54, scope: !15875)
!15901 = !DILocation(line: 542, column: 64, scope: !15875)
!15902 = !DILocation(line: 542, column: 53, scope: !15875)
!15903 = !DILocation(line: 542, column: 72, scope: !15875)
!15904 = !DILocation(line: 542, column: 51, scope: !15875)
!15905 = !DILocation(line: 542, column: 3, scope: !15875)
!15906 = !DILocation(line: 542, column: 13, scope: !15875)
!15907 = !DILocation(line: 542, column: 23, scope: !15875)
!15908 = !DILocation(line: 543, column: 51, scope: !15875)
!15909 = !DILocation(line: 543, column: 61, scope: !15875)
!15910 = !DILocation(line: 543, column: 66, scope: !15875)
!15911 = !DILocation(line: 543, column: 48, scope: !15875)
!15912 = !DILocation(line: 543, column: 3, scope: !15875)
!15913 = !DILocation(line: 543, column: 13, scope: !15875)
!15914 = !DILocation(line: 543, column: 23, scope: !15875)
!15915 = !DILocation(line: 544, column: 56, scope: !15875)
!15916 = !DILocation(line: 544, column: 66, scope: !15875)
!15917 = !DILocation(line: 544, column: 55, scope: !15875)
!15918 = !DILocation(line: 544, column: 76, scope: !15875)
!15919 = !DILocation(line: 544, column: 53, scope: !15875)
!15920 = !DILocation(line: 544, column: 3, scope: !15875)
!15921 = !DILocation(line: 544, column: 13, scope: !15875)
!15922 = !DILocation(line: 544, column: 23, scope: !15875)
!15923 = !DILocation(line: 545, column: 25, scope: !15875)
!15924 = !DILocation(line: 545, column: 35, scope: !15875)
!15925 = !DILocation(line: 545, column: 3, scope: !15875)
!15926 = !DILocation(line: 545, column: 13, scope: !15875)
!15927 = !DILocation(line: 545, column: 23, scope: !15875)
!15928 = !DILocation(line: 546, column: 37, scope: !15875)
!15929 = !DILocation(line: 546, column: 47, scope: !15875)
!15930 = !DILocation(line: 546, column: 36, scope: !15875)
!15931 = !DILocation(line: 546, column: 51, scope: !15875)
!15932 = !DILocation(line: 546, column: 25, scope: !15875)
!15933 = !DILocation(line: 546, column: 3, scope: !15875)
!15934 = !DILocation(line: 546, column: 13, scope: !15875)
!15935 = !DILocation(line: 546, column: 23, scope: !15875)
!15936 = !DILocation(line: 547, column: 36, scope: !15875)
!15937 = !DILocation(line: 547, column: 46, scope: !15875)
!15938 = !DILocation(line: 547, column: 25, scope: !15875)
!15939 = !DILocation(line: 547, column: 3, scope: !15875)
!15940 = !DILocation(line: 547, column: 13, scope: !15875)
!15941 = !DILocation(line: 547, column: 23, scope: !15875)
!15942 = !DILocation(line: 551, column: 12, scope: !15875)
!15943 = !DILocation(line: 551, column: 22, scope: !15875)
!15944 = !DILocation(line: 551, column: 29, scope: !15875)
!15945 = !DILocation(line: 551, column: 10, scope: !15875)
!15946 = !DILocation(line: 552, column: 22, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 552, column: 3)
!15948 = !DILocation(line: 552, column: 8, scope: !15947)
!15949 = !DILocation(line: 552, column: 26, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15947, file: !492, line: 552, column: 3)
!15951 = !DILocation(line: 552, column: 41, scope: !15950)
!15952 = !DILocation(line: 552, column: 51, scope: !15950)
!15953 = !DILocation(line: 552, column: 40, scope: !15950)
!15954 = !DILocation(line: 552, column: 3, scope: !15947)
!15955 = !DILocation(line: 555, column: 15, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15950, file: !492, line: 553, column: 3)
!15957 = !DILocation(line: 555, column: 25, scope: !15956)
!15958 = !DILocation(line: 555, column: 31, scope: !15956)
!15959 = !DILocation(line: 555, column: 6, scope: !15956)
!15960 = !DILocation(line: 555, column: 13, scope: !15956)
!15961 = !DILocation(line: 556, column: 5, scope: !15956)
!15962 = !DILocation(line: 557, column: 3, scope: !15956)
!15963 = !DILocation(line: 552, column: 62, scope: !15950)
!15964 = !DILocation(line: 552, column: 3, scope: !15950)
!15965 = distinct !{!15965, !15954, !15966}
!15966 = !DILocation(line: 557, column: 3, scope: !15947)
!15967 = !DILocation(line: 561, column: 18, scope: !15875)
!15968 = !DILocation(line: 566, column: 3, scope: !15875)
!15969 = !DILocation(line: 566, column: 3, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 566, column: 3)
!15971 = !DILocation(line: 566, column: 3, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15970, file: !492, line: 566, column: 3)
!15973 = !DILocation(line: 567, column: 3, scope: !15875)
!15974 = !DILocation(line: 567, column: 3, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 567, column: 3)
!15976 = !DILocation(line: 567, column: 3, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15975, file: !492, line: 567, column: 3)
!15978 = !DILocation(line: 568, column: 3, scope: !15875)
!15979 = !DILocation(line: 568, column: 3, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 568, column: 3)
!15981 = !DILocation(line: 568, column: 3, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15980, file: !492, line: 568, column: 3)
!15983 = !DILocation(line: 569, column: 3, scope: !15875)
!15984 = !DILocation(line: 569, column: 3, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 569, column: 3)
!15986 = !DILocation(line: 569, column: 3, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15985, file: !492, line: 569, column: 3)
!15988 = !DILocation(line: 570, column: 3, scope: !15875)
!15989 = !DILocation(line: 570, column: 3, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 570, column: 3)
!15991 = !DILocation(line: 570, column: 3, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15990, file: !492, line: 570, column: 3)
!15993 = !DILocation(line: 571, column: 3, scope: !15875)
!15994 = !DILocation(line: 571, column: 3, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 571, column: 3)
!15996 = !DILocation(line: 571, column: 3, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15995, file: !492, line: 571, column: 3)
!15998 = !DILocation(line: 572, column: 3, scope: !15875)
!15999 = !DILocation(line: 572, column: 3, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 572, column: 3)
!16001 = !DILocation(line: 572, column: 3, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !16000, file: !492, line: 572, column: 3)
!16003 = !DILocation(line: 573, column: 3, scope: !15875)
!16004 = !DILocation(line: 573, column: 3, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 573, column: 3)
!16006 = !DILocation(line: 573, column: 3, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16005, file: !492, line: 573, column: 3)
!16008 = !DILocation(line: 574, column: 3, scope: !15875)
!16009 = !DILocation(line: 574, column: 3, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 574, column: 3)
!16011 = !DILocation(line: 574, column: 3, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16010, file: !492, line: 574, column: 3)
!16013 = !DILocation(line: 575, column: 3, scope: !15875)
!16014 = !DILocation(line: 575, column: 3, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 575, column: 3)
!16016 = !DILocation(line: 575, column: 3, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16015, file: !492, line: 575, column: 3)
!16018 = !DILocation(line: 576, column: 3, scope: !15875)
!16019 = !DILocation(line: 576, column: 3, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 576, column: 3)
!16021 = !DILocation(line: 576, column: 3, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16020, file: !492, line: 576, column: 3)
!16023 = !DILocation(line: 577, column: 3, scope: !15875)
!16024 = !DILocation(line: 577, column: 3, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 577, column: 3)
!16026 = !DILocalVariable(name: "i", scope: !16027, file: !492, line: 577, type: !58)
!16027 = distinct !DILexicalBlock(scope: !16025, file: !492, line: 577, column: 3)
!16028 = !DILocation(line: 577, column: 3, scope: !16027)
!16029 = !DILocation(line: 577, column: 3, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16027, file: !492, line: 577, column: 3)
!16031 = !DILocation(line: 577, column: 3, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16030, file: !492, line: 577, column: 3)
!16033 = !DILocation(line: 577, column: 3, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16032, file: !492, line: 577, column: 3)
!16035 = distinct !{!16035, !16029, !16029}
!16036 = !DILocation(line: 578, column: 3, scope: !15875)
!16037 = !DILocation(line: 578, column: 3, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 578, column: 3)
!16039 = !DILocation(line: 578, column: 3, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16038, file: !492, line: 578, column: 3)
!16041 = !DILocation(line: 579, column: 3, scope: !15875)
!16042 = !DILocation(line: 579, column: 3, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 579, column: 3)
!16044 = !DILocalVariable(name: "block", scope: !16045, file: !492, line: 579, type: !86)
!16045 = distinct !DILexicalBlock(scope: !16043, file: !492, line: 579, column: 3)
!16046 = !DILocation(line: 579, column: 3, scope: !16045)
!16047 = !DILocation(line: 579, column: 3, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16045, file: !492, line: 579, column: 3)
!16049 = !DILocation(line: 580, column: 3, scope: !15875)
!16050 = !DILocation(line: 580, column: 3, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 580, column: 3)
!16052 = !DILocalVariable(name: "block", scope: !16053, file: !492, line: 580, type: !86)
!16053 = distinct !DILexicalBlock(scope: !16051, file: !492, line: 580, column: 3)
!16054 = !DILocation(line: 580, column: 3, scope: !16053)
!16055 = !DILocation(line: 580, column: 3, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16053, file: !492, line: 580, column: 3)
!16057 = !DILocation(line: 581, column: 3, scope: !15875)
!16058 = !DILocation(line: 581, column: 3, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 581, column: 3)
!16060 = !DILocation(line: 581, column: 3, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16059, file: !492, line: 581, column: 3)
!16062 = !DILocation(line: 582, column: 3, scope: !15875)
!16063 = !DILocation(line: 582, column: 3, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 582, column: 3)
!16065 = !DILocation(line: 582, column: 3, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16064, file: !492, line: 582, column: 3)
!16067 = !DILocation(line: 587, column: 20, scope: !15875)
!16068 = !DILocation(line: 587, column: 3, scope: !15875)
!16069 = !DILocation(line: 591, column: 7, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !15875, file: !492, line: 591, column: 7)
!16071 = !DILocation(line: 591, column: 17, scope: !16070)
!16072 = !DILocation(line: 591, column: 7, scope: !15875)
!16073 = !DILocation(line: 593, column: 6, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16070, file: !492, line: 592, column: 3)
!16075 = !DILocation(line: 593, column: 13, scope: !16074)
!16076 = !DILocation(line: 594, column: 5, scope: !16074)
!16077 = !DILocation(line: 595, column: 3, scope: !16074)
!16078 = !DILocation(line: 597, column: 11, scope: !15875)
!16079 = !DILocation(line: 597, column: 19, scope: !15875)
!16080 = !DILocation(line: 597, column: 29, scope: !15875)
!16081 = !DILocation(line: 597, column: 38, scope: !15875)
!16082 = !DILocation(line: 597, column: 48, scope: !15875)
!16083 = !DILocation(line: 597, column: 3, scope: !15875)
!16084 = !DILocation(line: 612, column: 11, scope: !15875)
!16085 = !DILocation(line: 612, column: 20, scope: !15875)
!16086 = !DILocation(line: 612, column: 18, scope: !15875)
!16087 = !DILocation(line: 612, column: 30, scope: !15875)
!16088 = !DILocation(line: 612, column: 40, scope: !15875)
!16089 = !DILocation(line: 612, column: 28, scope: !15875)
!16090 = !DILocation(line: 612, column: 3, scope: !15875)
!16091 = distinct !DISubprogram(name: "coap_serialize_array_option", scope: !492, file: !492, line: 172, type: !16092, isLocal: true, isDefinition: true, scopeLine: 173, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16092 = !DISubroutineType(types: !16093)
!16093 = !{!438, !87, !87, !186, !186, !438, !69}
!16094 = !DILocalVariable(name: "number", arg: 1, scope: !16091, file: !492, line: 172, type: !87)
!16095 = !DILocation(line: 172, column: 42, scope: !16091)
!16096 = !DILocalVariable(name: "current_number", arg: 2, scope: !16091, file: !492, line: 172, type: !87)
!16097 = !DILocation(line: 172, column: 63, scope: !16091)
!16098 = !DILocalVariable(name: "buffer", arg: 3, scope: !16091, file: !492, line: 172, type: !186)
!16099 = !DILocation(line: 172, column: 88, scope: !16091)
!16100 = !DILocalVariable(name: "array", arg: 4, scope: !16091, file: !492, line: 172, type: !186)
!16101 = !DILocation(line: 172, column: 105, scope: !16091)
!16102 = !DILocalVariable(name: "length", arg: 5, scope: !16091, file: !492, line: 172, type: !438)
!16103 = !DILocation(line: 172, column: 119, scope: !16091)
!16104 = !DILocalVariable(name: "split_char", arg: 6, scope: !16091, file: !492, line: 172, type: !69)
!16105 = !DILocation(line: 172, column: 132, scope: !16091)
!16106 = !DILocalVariable(name: "i", scope: !16091, file: !492, line: 174, type: !438)
!16107 = !DILocation(line: 174, column: 10, scope: !16091)
!16108 = !DILocation(line: 176, column: 7, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16091, file: !492, line: 176, column: 7)
!16110 = !DILocation(line: 176, column: 17, scope: !16109)
!16111 = !DILocation(line: 176, column: 7, scope: !16091)
!16112 = !DILocalVariable(name: "j", scope: !16113, file: !492, line: 178, type: !438)
!16113 = distinct !DILexicalBlock(scope: !16109, file: !492, line: 177, column: 3)
!16114 = !DILocation(line: 178, column: 12, scope: !16113)
!16115 = !DILocalVariable(name: "part_start", scope: !16113, file: !492, line: 179, type: !186)
!16116 = !DILocation(line: 179, column: 14, scope: !16113)
!16117 = !DILocation(line: 179, column: 27, scope: !16113)
!16118 = !DILocalVariable(name: "part_end", scope: !16113, file: !492, line: 180, type: !186)
!16119 = !DILocation(line: 180, column: 14, scope: !16113)
!16120 = !DILocalVariable(name: "temp_length", scope: !16113, file: !492, line: 181, type: !438)
!16121 = !DILocation(line: 181, column: 12, scope: !16113)
!16122 = !DILocation(line: 183, column: 12, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16113, file: !492, line: 183, column: 5)
!16124 = !DILocation(line: 183, column: 10, scope: !16123)
!16125 = !DILocation(line: 183, column: 17, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16123, file: !492, line: 183, column: 5)
!16127 = !DILocation(line: 183, column: 20, scope: !16126)
!16128 = !DILocation(line: 183, column: 18, scope: !16126)
!16129 = !DILocation(line: 183, column: 5, scope: !16123)
!16130 = !DILocation(line: 185, column: 11, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16132, file: !492, line: 185, column: 11)
!16132 = distinct !DILexicalBlock(scope: !16126, file: !492, line: 184, column: 5)
!16133 = !DILocation(line: 185, column: 17, scope: !16131)
!16134 = !DILocation(line: 185, column: 21, scope: !16131)
!16135 = !DILocation(line: 185, column: 19, scope: !16131)
!16136 = !DILocation(line: 185, column: 32, scope: !16131)
!16137 = !DILocation(line: 185, column: 35, scope: !16131)
!16138 = !DILocation(line: 185, column: 38, scope: !16131)
!16139 = !DILocation(line: 185, column: 36, scope: !16131)
!16140 = !DILocation(line: 185, column: 11, scope: !16132)
!16141 = !DILocation(line: 187, column: 20, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16131, file: !492, line: 186, column: 7)
!16143 = !DILocation(line: 187, column: 28, scope: !16142)
!16144 = !DILocation(line: 187, column: 26, scope: !16142)
!16145 = !DILocation(line: 187, column: 18, scope: !16142)
!16146 = !DILocation(line: 188, column: 23, scope: !16142)
!16147 = !DILocation(line: 188, column: 32, scope: !16142)
!16148 = !DILocation(line: 188, column: 31, scope: !16142)
!16149 = !DILocation(line: 188, column: 21, scope: !16142)
!16150 = !DILocation(line: 190, column: 37, scope: !16142)
!16151 = !DILocation(line: 190, column: 46, scope: !16142)
!16152 = !DILocation(line: 190, column: 44, scope: !16142)
!16153 = !DILocation(line: 190, column: 62, scope: !16142)
!16154 = !DILocation(line: 190, column: 76, scope: !16142)
!16155 = !DILocation(line: 190, column: 83, scope: !16142)
!16156 = !DILocation(line: 190, column: 14, scope: !16142)
!16157 = !DILocation(line: 190, column: 11, scope: !16142)
!16158 = !DILocation(line: 191, column: 17, scope: !16142)
!16159 = !DILocation(line: 191, column: 24, scope: !16142)
!16160 = !DILocation(line: 191, column: 28, scope: !16142)
!16161 = !DILocation(line: 191, column: 40, scope: !16142)
!16162 = !DILocation(line: 191, column: 9, scope: !16142)
!16163 = !DILocation(line: 192, column: 14, scope: !16142)
!16164 = !DILocation(line: 192, column: 11, scope: !16142)
!16165 = !DILocation(line: 196, column: 9, scope: !16142)
!16166 = !DILocation(line: 197, column: 26, scope: !16142)
!16167 = !DILocation(line: 197, column: 24, scope: !16142)
!16168 = !DILocation(line: 198, column: 22, scope: !16142)
!16169 = !DILocation(line: 198, column: 30, scope: !16142)
!16170 = !DILocation(line: 198, column: 28, scope: !16142)
!16171 = !DILocation(line: 198, column: 20, scope: !16142)
!16172 = !DILocation(line: 199, column: 7, scope: !16142)
!16173 = !DILocation(line: 200, column: 5, scope: !16132)
!16174 = !DILocation(line: 183, column: 28, scope: !16126)
!16175 = !DILocation(line: 183, column: 5, scope: !16126)
!16176 = distinct !{!16176, !16129, !16177}
!16177 = !DILocation(line: 200, column: 5, scope: !16123)
!16178 = !DILocation(line: 201, column: 3, scope: !16113)
!16179 = !DILocation(line: 204, column: 33, scope: !16180)
!16180 = distinct !DILexicalBlock(scope: !16109, file: !492, line: 203, column: 3)
!16181 = !DILocation(line: 204, column: 42, scope: !16180)
!16182 = !DILocation(line: 204, column: 40, scope: !16180)
!16183 = !DILocation(line: 204, column: 58, scope: !16180)
!16184 = !DILocation(line: 204, column: 67, scope: !16180)
!16185 = !DILocation(line: 204, column: 74, scope: !16180)
!16186 = !DILocation(line: 204, column: 10, scope: !16180)
!16187 = !DILocation(line: 204, column: 7, scope: !16180)
!16188 = !DILocation(line: 205, column: 13, scope: !16180)
!16189 = !DILocation(line: 205, column: 20, scope: !16180)
!16190 = !DILocation(line: 205, column: 24, scope: !16180)
!16191 = !DILocation(line: 205, column: 31, scope: !16180)
!16192 = !DILocation(line: 205, column: 5, scope: !16180)
!16193 = !DILocation(line: 206, column: 10, scope: !16180)
!16194 = !DILocation(line: 206, column: 7, scope: !16180)
!16195 = !DILocation(line: 211, column: 10, scope: !16091)
!16196 = !DILocation(line: 211, column: 3, scope: !16091)
!16197 = distinct !DISubprogram(name: "coap_serialize_int_option", scope: !492, file: !492, line: 149, type: !16198, isLocal: true, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{!438, !87, !87, !186, !86}
!16200 = !DILocalVariable(name: "number", arg: 1, scope: !16197, file: !492, line: 149, type: !87)
!16201 = !DILocation(line: 149, column: 40, scope: !16197)
!16202 = !DILocalVariable(name: "current_number", arg: 2, scope: !16197, file: !492, line: 149, type: !87)
!16203 = !DILocation(line: 149, column: 61, scope: !16197)
!16204 = !DILocalVariable(name: "buffer", arg: 3, scope: !16197, file: !492, line: 149, type: !186)
!16205 = !DILocation(line: 149, column: 86, scope: !16197)
!16206 = !DILocalVariable(name: "value", arg: 4, scope: !16197, file: !492, line: 149, type: !86)
!16207 = !DILocation(line: 149, column: 103, scope: !16197)
!16208 = !DILocalVariable(name: "i", scope: !16197, file: !492, line: 151, type: !438)
!16209 = !DILocation(line: 151, column: 10, scope: !16197)
!16210 = !DILocation(line: 153, column: 20, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 153, column: 7)
!16212 = !DILocation(line: 153, column: 18, scope: !16211)
!16213 = !DILocation(line: 153, column: 7, scope: !16197)
!16214 = !DILocation(line: 153, column: 27, scope: !16211)
!16215 = !DILocation(line: 154, column: 20, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 154, column: 7)
!16217 = !DILocation(line: 154, column: 18, scope: !16216)
!16218 = !DILocation(line: 154, column: 7, scope: !16197)
!16219 = !DILocation(line: 154, column: 27, scope: !16216)
!16220 = !DILocation(line: 155, column: 20, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 155, column: 7)
!16222 = !DILocation(line: 155, column: 18, scope: !16221)
!16223 = !DILocation(line: 155, column: 7, scope: !16197)
!16224 = !DILocation(line: 155, column: 27, scope: !16221)
!16225 = !DILocation(line: 156, column: 20, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 156, column: 7)
!16227 = !DILocation(line: 156, column: 18, scope: !16226)
!16228 = !DILocation(line: 156, column: 7, scope: !16197)
!16229 = !DILocation(line: 156, column: 27, scope: !16226)
!16230 = !DILocation(line: 160, column: 30, scope: !16197)
!16231 = !DILocation(line: 160, column: 39, scope: !16197)
!16232 = !DILocation(line: 160, column: 37, scope: !16197)
!16233 = !DILocation(line: 160, column: 55, scope: !16197)
!16234 = !DILocation(line: 160, column: 58, scope: !16197)
!16235 = !DILocation(line: 160, column: 7, scope: !16197)
!16236 = !DILocation(line: 160, column: 5, scope: !16197)
!16237 = !DILocation(line: 162, column: 20, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 162, column: 7)
!16239 = !DILocation(line: 162, column: 18, scope: !16238)
!16240 = !DILocation(line: 162, column: 7, scope: !16197)
!16241 = !DILocation(line: 162, column: 52, scope: !16238)
!16242 = !DILocation(line: 162, column: 57, scope: !16238)
!16243 = !DILocation(line: 162, column: 41, scope: !16238)
!16244 = !DILocation(line: 162, column: 27, scope: !16238)
!16245 = !DILocation(line: 162, column: 35, scope: !16238)
!16246 = !DILocation(line: 162, column: 39, scope: !16238)
!16247 = !DILocation(line: 163, column: 20, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 163, column: 7)
!16249 = !DILocation(line: 163, column: 18, scope: !16248)
!16250 = !DILocation(line: 163, column: 7, scope: !16197)
!16251 = !DILocation(line: 163, column: 52, scope: !16248)
!16252 = !DILocation(line: 163, column: 57, scope: !16248)
!16253 = !DILocation(line: 163, column: 41, scope: !16248)
!16254 = !DILocation(line: 163, column: 27, scope: !16248)
!16255 = !DILocation(line: 163, column: 35, scope: !16248)
!16256 = !DILocation(line: 163, column: 39, scope: !16248)
!16257 = !DILocation(line: 164, column: 20, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 164, column: 7)
!16259 = !DILocation(line: 164, column: 18, scope: !16258)
!16260 = !DILocation(line: 164, column: 7, scope: !16197)
!16261 = !DILocation(line: 164, column: 52, scope: !16258)
!16262 = !DILocation(line: 164, column: 57, scope: !16258)
!16263 = !DILocation(line: 164, column: 41, scope: !16258)
!16264 = !DILocation(line: 164, column: 27, scope: !16258)
!16265 = !DILocation(line: 164, column: 35, scope: !16258)
!16266 = !DILocation(line: 164, column: 39, scope: !16258)
!16267 = !DILocation(line: 165, column: 20, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16197, file: !492, line: 165, column: 7)
!16269 = !DILocation(line: 165, column: 18, scope: !16268)
!16270 = !DILocation(line: 165, column: 7, scope: !16197)
!16271 = !DILocation(line: 165, column: 52, scope: !16268)
!16272 = !DILocation(line: 165, column: 41, scope: !16268)
!16273 = !DILocation(line: 165, column: 27, scope: !16268)
!16274 = !DILocation(line: 165, column: 35, scope: !16268)
!16275 = !DILocation(line: 165, column: 39, scope: !16268)
!16276 = !DILocation(line: 167, column: 10, scope: !16197)
!16277 = !DILocation(line: 167, column: 3, scope: !16197)
!16278 = distinct !DISubprogram(name: "coap_serialize_multi_option", scope: !492, file: !492, line: 216, type: !16279, isLocal: true, isDefinition: true, scopeLine: 217, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16279 = !DISubroutineType(types: !16280)
!16280 = !{!438, !87, !87, !186, !495}
!16281 = !DILocalVariable(name: "number", arg: 1, scope: !16278, file: !492, line: 216, type: !87)
!16282 = !DILocation(line: 216, column: 42, scope: !16278)
!16283 = !DILocalVariable(name: "current_number", arg: 2, scope: !16278, file: !492, line: 216, type: !87)
!16284 = !DILocation(line: 216, column: 63, scope: !16278)
!16285 = !DILocalVariable(name: "buffer", arg: 3, scope: !16278, file: !492, line: 216, type: !186)
!16286 = !DILocation(line: 216, column: 88, scope: !16278)
!16287 = !DILocalVariable(name: "array", arg: 4, scope: !16278, file: !492, line: 216, type: !495)
!16288 = !DILocation(line: 216, column: 112, scope: !16278)
!16289 = !DILocalVariable(name: "i", scope: !16278, file: !492, line: 218, type: !438)
!16290 = !DILocation(line: 218, column: 10, scope: !16278)
!16291 = !DILocalVariable(name: "j", scope: !16278, file: !492, line: 219, type: !495)
!16292 = !DILocation(line: 219, column: 20, scope: !16278)
!16293 = !DILocation(line: 221, column: 12, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16278, file: !492, line: 221, column: 3)
!16295 = !DILocation(line: 221, column: 10, scope: !16294)
!16296 = !DILocation(line: 221, column: 8, scope: !16294)
!16297 = !DILocation(line: 221, column: 19, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16294, file: !492, line: 221, column: 3)
!16299 = !DILocation(line: 221, column: 21, scope: !16298)
!16300 = !DILocation(line: 221, column: 3, scope: !16294)
!16301 = !DILocation(line: 223, column: 34, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16298, file: !492, line: 222, column: 3)
!16303 = !DILocation(line: 223, column: 43, scope: !16302)
!16304 = !DILocation(line: 223, column: 41, scope: !16302)
!16305 = !DILocation(line: 223, column: 59, scope: !16302)
!16306 = !DILocation(line: 223, column: 62, scope: !16302)
!16307 = !DILocation(line: 223, column: 68, scope: !16302)
!16308 = !DILocation(line: 223, column: 75, scope: !16302)
!16309 = !DILocation(line: 223, column: 11, scope: !16302)
!16310 = !DILocation(line: 223, column: 8, scope: !16302)
!16311 = !DILocation(line: 224, column: 23, scope: !16302)
!16312 = !DILocation(line: 224, column: 21, scope: !16302)
!16313 = !DILocation(line: 225, column: 14, scope: !16302)
!16314 = !DILocation(line: 225, column: 21, scope: !16302)
!16315 = !DILocation(line: 225, column: 25, scope: !16302)
!16316 = !DILocation(line: 225, column: 28, scope: !16302)
!16317 = !DILocation(line: 225, column: 34, scope: !16302)
!16318 = !DILocation(line: 225, column: 37, scope: !16302)
!16319 = !DILocation(line: 225, column: 6, scope: !16302)
!16320 = !DILocation(line: 226, column: 11, scope: !16302)
!16321 = !DILocation(line: 226, column: 14, scope: !16302)
!16322 = !DILocation(line: 226, column: 8, scope: !16302)
!16323 = !DILocation(line: 227, column: 3, scope: !16302)
!16324 = !DILocation(line: 221, column: 33, scope: !16298)
!16325 = !DILocation(line: 221, column: 36, scope: !16298)
!16326 = !DILocation(line: 221, column: 31, scope: !16298)
!16327 = !DILocation(line: 221, column: 3, scope: !16298)
!16328 = distinct !{!16328, !16300, !16329}
!16329 = !DILocation(line: 227, column: 3, scope: !16294)
!16330 = !DILocation(line: 229, column: 10, scope: !16278)
!16331 = !DILocation(line: 229, column: 3, scope: !16278)
!16332 = distinct !DISubprogram(name: "coap_log_2", scope: !492, file: !492, line: 75, type: !16333, isLocal: true, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16333 = !DISubroutineType(types: !16334)
!16334 = !{!79, !79}
!16335 = !DILocalVariable(name: "value", arg: 1, scope: !16332, file: !492, line: 75, type: !79)
!16336 = !DILocation(line: 75, column: 21, scope: !16332)
!16337 = !DILocalVariable(name: "result", scope: !16332, file: !492, line: 77, type: !79)
!16338 = !DILocation(line: 77, column: 12, scope: !16332)
!16339 = !DILocation(line: 78, column: 3, scope: !16332)
!16340 = distinct !{!16340, !16339, !16341}
!16341 = !DILocation(line: 81, column: 17, scope: !16332)
!16342 = !DILocation(line: 79, column: 13, scope: !16343)
!16343 = distinct !DILexicalBlock(scope: !16332, file: !492, line: 78, column: 6)
!16344 = !DILocation(line: 79, column: 19, scope: !16343)
!16345 = !DILocation(line: 79, column: 11, scope: !16343)
!16346 = !DILocation(line: 80, column: 11, scope: !16343)
!16347 = !DILocation(line: 81, column: 3, scope: !16343)
!16348 = !DILocation(line: 81, column: 12, scope: !16332)
!16349 = !DILocation(line: 83, column: 10, scope: !16332)
!16350 = !DILocation(line: 83, column: 19, scope: !16332)
!16351 = !DILocation(line: 83, column: 26, scope: !16332)
!16352 = !DILocation(line: 83, column: 32, scope: !16332)
!16353 = !DILocation(line: 83, column: 3, scope: !16332)
!16354 = distinct !DISubprogram(name: "coap_set_option_header", scope: !492, file: !492, line: 120, type: !16355, isLocal: true, isDefinition: true, scopeLine: 121, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16355 = !DISubroutineType(types: !16356)
!16356 = !{!438, !87, !438, !186}
!16357 = !DILocalVariable(name: "delta", arg: 1, scope: !16354, file: !492, line: 120, type: !87)
!16358 = !DILocation(line: 120, column: 37, scope: !16354)
!16359 = !DILocalVariable(name: "length", arg: 2, scope: !16354, file: !492, line: 120, type: !438)
!16360 = !DILocation(line: 120, column: 51, scope: !16354)
!16361 = !DILocalVariable(name: "buffer", arg: 3, scope: !16354, file: !492, line: 120, type: !186)
!16362 = !DILocation(line: 120, column: 68, scope: !16354)
!16363 = !DILocalVariable(name: "written", scope: !16354, file: !492, line: 122, type: !438)
!16364 = !DILocation(line: 122, column: 10, scope: !16354)
!16365 = !DILocalVariable(name: "x", scope: !16354, file: !492, line: 123, type: !547)
!16366 = !DILocation(line: 123, column: 17, scope: !16354)
!16367 = !DILocation(line: 125, column: 34, scope: !16354)
!16368 = !DILocation(line: 125, column: 15, scope: !16354)
!16369 = !DILocation(line: 125, column: 40, scope: !16354)
!16370 = !DILocation(line: 125, column: 65, scope: !16354)
!16371 = !DILocation(line: 125, column: 46, scope: !16354)
!16372 = !DILocation(line: 125, column: 44, scope: !16354)
!16373 = !DILocation(line: 125, column: 3, scope: !16354)
!16374 = !DILocation(line: 125, column: 13, scope: !16354)
!16375 = !DILocation(line: 128, column: 3, scope: !16354)
!16376 = distinct !{!16376, !16375, !16377}
!16377 = !DILocation(line: 140, column: 67, scope: !16354)
!16378 = !DILocation(line: 130, column: 10, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16380, file: !492, line: 130, column: 9)
!16380 = distinct !DILexicalBlock(scope: !16354, file: !492, line: 129, column: 3)
!16381 = !DILocation(line: 130, column: 9, scope: !16379)
!16382 = !DILocation(line: 130, column: 11, scope: !16379)
!16383 = !DILocation(line: 130, column: 9, scope: !16380)
!16384 = !DILocation(line: 132, column: 29, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16379, file: !492, line: 131, column: 5)
!16386 = !DILocation(line: 132, column: 28, scope: !16385)
!16387 = !DILocation(line: 132, column: 30, scope: !16385)
!16388 = !DILocation(line: 132, column: 35, scope: !16385)
!16389 = !DILocation(line: 132, column: 27, scope: !16385)
!16390 = !DILocation(line: 132, column: 7, scope: !16385)
!16391 = !DILocation(line: 132, column: 14, scope: !16385)
!16392 = !DILocation(line: 132, column: 25, scope: !16385)
!16393 = !DILocation(line: 133, column: 29, scope: !16385)
!16394 = !DILocation(line: 133, column: 28, scope: !16385)
!16395 = !DILocation(line: 133, column: 30, scope: !16385)
!16396 = !DILocation(line: 133, column: 27, scope: !16385)
!16397 = !DILocation(line: 133, column: 7, scope: !16385)
!16398 = !DILocation(line: 133, column: 14, scope: !16385)
!16399 = !DILocation(line: 133, column: 25, scope: !16385)
!16400 = !DILocation(line: 134, column: 5, scope: !16385)
!16401 = !DILocation(line: 135, column: 15, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16379, file: !492, line: 135, column: 14)
!16403 = !DILocation(line: 135, column: 14, scope: !16402)
!16404 = !DILocation(line: 135, column: 16, scope: !16402)
!16405 = !DILocation(line: 135, column: 14, scope: !16379)
!16406 = !DILocation(line: 137, column: 29, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16402, file: !492, line: 136, column: 5)
!16408 = !DILocation(line: 137, column: 28, scope: !16407)
!16409 = !DILocation(line: 137, column: 30, scope: !16407)
!16410 = !DILocation(line: 137, column: 27, scope: !16407)
!16411 = !DILocation(line: 137, column: 7, scope: !16407)
!16412 = !DILocation(line: 137, column: 14, scope: !16407)
!16413 = !DILocation(line: 137, column: 25, scope: !16407)
!16414 = !DILocation(line: 138, column: 5, scope: !16407)
!16415 = !DILocation(line: 139, column: 3, scope: !16380)
!16416 = !DILocation(line: 140, column: 10, scope: !16354)
!16417 = !DILocation(line: 140, column: 13, scope: !16354)
!16418 = !DILocation(line: 140, column: 11, scope: !16354)
!16419 = !DILocation(line: 140, column: 37, scope: !16354)
!16420 = !DILocation(line: 140, column: 43, scope: !16354)
!16421 = !DILocation(line: 140, column: 42, scope: !16354)
!16422 = !DILocation(line: 144, column: 10, scope: !16354)
!16423 = !DILocation(line: 144, column: 3, scope: !16354)
!16424 = distinct !DISubprogram(name: "coap_option_nibble", scope: !492, file: !492, line: 102, type: !16425, isLocal: true, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16425 = !DISubroutineType(types: !16426)
!16426 = !{!107, !87}
!16427 = !DILocalVariable(name: "value", arg: 1, scope: !16424, file: !492, line: 102, type: !87)
!16428 = !DILocation(line: 102, column: 33, scope: !16424)
!16429 = !DILocation(line: 104, column: 7, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16424, file: !492, line: 104, column: 7)
!16431 = !DILocation(line: 104, column: 12, scope: !16430)
!16432 = !DILocation(line: 104, column: 7, scope: !16424)
!16433 = !DILocation(line: 106, column: 12, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16430, file: !492, line: 105, column: 3)
!16435 = !DILocation(line: 106, column: 5, scope: !16434)
!16436 = !DILocation(line: 108, column: 12, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16430, file: !492, line: 108, column: 12)
!16438 = !DILocation(line: 108, column: 17, scope: !16437)
!16439 = !DILocation(line: 108, column: 12, scope: !16430)
!16440 = !DILocation(line: 110, column: 5, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16437, file: !492, line: 109, column: 3)
!16442 = !DILocation(line: 114, column: 5, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16437, file: !492, line: 113, column: 3)
!16444 = !DILocation(line: 116, column: 1, scope: !16424)
!16445 = distinct !DISubprogram(name: "coap_parse_message", scope: !492, file: !492, line: 616, type: !16446, isLocal: false, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16446 = !DISubroutineType(types: !16447)
!16447 = !{!553, !54, !186, !79}
!16448 = !DILocalVariable(name: "packet", arg: 1, scope: !16445, file: !492, line: 616, type: !54)
!16449 = !DILocation(line: 616, column: 26, scope: !16445)
!16450 = !DILocalVariable(name: "data", arg: 2, scope: !16445, file: !492, line: 616, type: !186)
!16451 = !DILocation(line: 616, column: 43, scope: !16445)
!16452 = !DILocalVariable(name: "data_len", arg: 3, scope: !16445, file: !492, line: 616, type: !79)
!16453 = !DILocation(line: 616, column: 58, scope: !16445)
!16454 = !DILocalVariable(name: "coap_pkt", scope: !16445, file: !492, line: 618, type: !15609)
!16455 = !DILocation(line: 618, column: 24, scope: !16445)
!16456 = !DILocation(line: 618, column: 53, scope: !16445)
!16457 = !DILocation(line: 618, column: 35, scope: !16445)
!16458 = !DILocalVariable(name: "current_option", scope: !16445, file: !492, line: 619, type: !186)
!16459 = !DILocation(line: 619, column: 12, scope: !16445)
!16460 = !DILocalVariable(name: "option_number", scope: !16445, file: !492, line: 620, type: !87)
!16461 = !DILocation(line: 620, column: 16, scope: !16445)
!16462 = !DILocalVariable(name: "option_delta", scope: !16445, file: !492, line: 621, type: !87)
!16463 = !DILocation(line: 621, column: 16, scope: !16445)
!16464 = !DILocalVariable(name: "option_length", scope: !16445, file: !492, line: 622, type: !438)
!16465 = !DILocation(line: 622, column: 10, scope: !16445)
!16466 = !DILocalVariable(name: "x", scope: !16445, file: !492, line: 623, type: !547)
!16467 = !DILocation(line: 623, column: 17, scope: !16445)
!16468 = !DILocation(line: 626, column: 10, scope: !16445)
!16469 = !DILocation(line: 626, column: 3, scope: !16445)
!16470 = !DILocation(line: 629, column: 22, scope: !16445)
!16471 = !DILocation(line: 629, column: 3, scope: !16445)
!16472 = !DILocation(line: 629, column: 13, scope: !16445)
!16473 = !DILocation(line: 629, column: 20, scope: !16445)
!16474 = !DILocation(line: 632, column: 51, scope: !16445)
!16475 = !DILocation(line: 632, column: 61, scope: !16445)
!16476 = !DILocation(line: 632, column: 49, scope: !16445)
!16477 = !DILocation(line: 632, column: 71, scope: !16445)
!16478 = !DILocation(line: 632, column: 23, scope: !16445)
!16479 = !DILocation(line: 632, column: 3, scope: !16445)
!16480 = !DILocation(line: 632, column: 13, scope: !16445)
!16481 = !DILocation(line: 632, column: 21, scope: !16445)
!16482 = !DILocation(line: 633, column: 45, scope: !16445)
!16483 = !DILocation(line: 633, column: 55, scope: !16445)
!16484 = !DILocation(line: 633, column: 43, scope: !16445)
!16485 = !DILocation(line: 633, column: 65, scope: !16445)
!16486 = !DILocation(line: 633, column: 3, scope: !16445)
!16487 = !DILocation(line: 633, column: 13, scope: !16445)
!16488 = !DILocation(line: 633, column: 18, scope: !16445)
!16489 = !DILocation(line: 634, column: 25, scope: !16445)
!16490 = !DILocation(line: 634, column: 3, scope: !16445)
!16491 = !DILocation(line: 634, column: 13, scope: !16445)
!16492 = !DILocation(line: 634, column: 23, scope: !16445)
!16493 = !DILocation(line: 635, column: 20, scope: !16445)
!16494 = !DILocation(line: 635, column: 30, scope: !16445)
!16495 = !DILocation(line: 635, column: 3, scope: !16445)
!16496 = !DILocation(line: 635, column: 13, scope: !16445)
!16497 = !DILocation(line: 635, column: 18, scope: !16445)
!16498 = !DILocation(line: 636, column: 19, scope: !16445)
!16499 = !DILocation(line: 636, column: 29, scope: !16445)
!16500 = !DILocation(line: 636, column: 38, scope: !16445)
!16501 = !DILocation(line: 636, column: 44, scope: !16445)
!16502 = !DILocation(line: 636, column: 54, scope: !16445)
!16503 = !DILocation(line: 636, column: 42, scope: !16445)
!16504 = !DILocation(line: 636, column: 3, scope: !16445)
!16505 = !DILocation(line: 636, column: 13, scope: !16445)
!16506 = !DILocation(line: 636, column: 17, scope: !16445)
!16507 = !DILocation(line: 638, column: 7, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16445, file: !492, line: 638, column: 7)
!16509 = !DILocation(line: 638, column: 17, scope: !16508)
!16510 = !DILocation(line: 638, column: 25, scope: !16508)
!16511 = !DILocation(line: 638, column: 7, scope: !16445)
!16512 = !DILocation(line: 640, column: 24, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16508, file: !492, line: 639, column: 3)
!16514 = !DILocation(line: 641, column: 5, scope: !16513)
!16515 = !DILocation(line: 644, column: 20, scope: !16445)
!16516 = !DILocation(line: 644, column: 25, scope: !16445)
!16517 = !DILocation(line: 644, column: 18, scope: !16445)
!16518 = !DILocation(line: 646, column: 7, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16445, file: !492, line: 646, column: 7)
!16520 = !DILocation(line: 646, column: 17, scope: !16519)
!16521 = !DILocation(line: 646, column: 27, scope: !16519)
!16522 = !DILocation(line: 646, column: 7, scope: !16445)
!16523 = !DILocation(line: 648, column: 14, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16519, file: !492, line: 647, column: 3)
!16525 = !DILocation(line: 648, column: 24, scope: !16524)
!16526 = !DILocation(line: 648, column: 7, scope: !16524)
!16527 = !DILocation(line: 648, column: 31, scope: !16524)
!16528 = !DILocation(line: 648, column: 47, scope: !16524)
!16529 = !DILocation(line: 648, column: 57, scope: !16524)
!16530 = !DILocation(line: 649, column: 7, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16532, file: !492, line: 649, column: 7)
!16532 = distinct !DILexicalBlock(scope: !16533, file: !492, line: 649, column: 7)
!16533 = distinct !DILexicalBlock(scope: !16524, file: !492, line: 649, column: 7)
!16534 = !DILocation(line: 661, column: 3, scope: !16524)
!16535 = !DILocation(line: 664, column: 21, scope: !16445)
!16536 = !DILocation(line: 664, column: 31, scope: !16445)
!16537 = !DILocation(line: 664, column: 18, scope: !16445)
!16538 = !DILocation(line: 666, column: 3, scope: !16445)
!16539 = !DILocation(line: 666, column: 10, scope: !16445)
!16540 = !DILocation(line: 666, column: 27, scope: !16445)
!16541 = !DILocation(line: 666, column: 32, scope: !16445)
!16542 = !DILocation(line: 666, column: 31, scope: !16445)
!16543 = !DILocation(line: 666, column: 25, scope: !16445)
!16544 = !DILocation(line: 669, column: 10, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16546, file: !492, line: 669, column: 9)
!16546 = distinct !DILexicalBlock(scope: !16445, file: !492, line: 667, column: 3)
!16547 = !DILocation(line: 669, column: 28, scope: !16545)
!16548 = !DILocation(line: 669, column: 35, scope: !16545)
!16549 = !DILocation(line: 669, column: 9, scope: !16546)
!16550 = !DILocation(line: 671, column: 27, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16545, file: !492, line: 670, column: 5)
!16552 = !DILocation(line: 671, column: 7, scope: !16551)
!16553 = !DILocation(line: 671, column: 17, scope: !16551)
!16554 = !DILocation(line: 671, column: 25, scope: !16551)
!16555 = !DILocation(line: 672, column: 31, scope: !16551)
!16556 = !DILocation(line: 672, column: 43, scope: !16551)
!16557 = !DILocation(line: 672, column: 53, scope: !16551)
!16558 = !DILocation(line: 672, column: 63, scope: !16551)
!16559 = !DILocation(line: 672, column: 61, scope: !16551)
!16560 = !DILocation(line: 672, column: 40, scope: !16551)
!16561 = !DILocation(line: 672, column: 7, scope: !16551)
!16562 = !DILocation(line: 672, column: 17, scope: !16551)
!16563 = !DILocation(line: 672, column: 29, scope: !16551)
!16564 = !DILocation(line: 674, column: 7, scope: !16551)
!16565 = !DILocation(line: 677, column: 20, scope: !16546)
!16566 = !DILocation(line: 677, column: 37, scope: !16546)
!16567 = !DILocation(line: 677, column: 18, scope: !16546)
!16568 = !DILocation(line: 678, column: 21, scope: !16546)
!16569 = !DILocation(line: 678, column: 39, scope: !16546)
!16570 = !DILocation(line: 678, column: 19, scope: !16546)
!16571 = !DILocation(line: 679, column: 5, scope: !16546)
!16572 = !DILocation(line: 682, column: 7, scope: !16546)
!16573 = !DILocation(line: 683, column: 5, scope: !16546)
!16574 = distinct !{!16574, !16573, !16575}
!16575 = !DILocation(line: 699, column: 83, scope: !16546)
!16576 = !DILocation(line: 685, column: 12, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16578, file: !492, line: 685, column: 11)
!16578 = distinct !DILexicalBlock(scope: !16546, file: !492, line: 684, column: 5)
!16579 = !DILocation(line: 685, column: 11, scope: !16577)
!16580 = !DILocation(line: 685, column: 13, scope: !16577)
!16581 = !DILocation(line: 685, column: 11, scope: !16578)
!16582 = !DILocation(line: 687, column: 15, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16577, file: !492, line: 686, column: 7)
!16584 = !DILocation(line: 687, column: 10, scope: !16583)
!16585 = !DILocation(line: 687, column: 12, scope: !16583)
!16586 = !DILocation(line: 688, column: 9, scope: !16583)
!16587 = !DILocation(line: 689, column: 7, scope: !16583)
!16588 = !DILocation(line: 690, column: 17, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16577, file: !492, line: 690, column: 16)
!16590 = !DILocation(line: 690, column: 16, scope: !16589)
!16591 = !DILocation(line: 690, column: 18, scope: !16589)
!16592 = !DILocation(line: 690, column: 16, scope: !16577)
!16593 = !DILocation(line: 692, column: 10, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16589, file: !492, line: 691, column: 7)
!16595 = !DILocation(line: 692, column: 12, scope: !16594)
!16596 = !DILocation(line: 693, column: 15, scope: !16594)
!16597 = !DILocation(line: 693, column: 32, scope: !16594)
!16598 = !DILocation(line: 693, column: 10, scope: !16594)
!16599 = !DILocation(line: 693, column: 12, scope: !16594)
!16600 = !DILocation(line: 694, column: 9, scope: !16594)
!16601 = !DILocation(line: 695, column: 15, scope: !16594)
!16602 = !DILocation(line: 695, column: 10, scope: !16594)
!16603 = !DILocation(line: 695, column: 12, scope: !16594)
!16604 = !DILocation(line: 696, column: 9, scope: !16594)
!16605 = !DILocation(line: 697, column: 7, scope: !16594)
!16606 = !DILocation(line: 698, column: 5, scope: !16578)
!16607 = !DILocation(line: 699, column: 12, scope: !16546)
!16608 = !DILocation(line: 699, column: 15, scope: !16546)
!16609 = !DILocation(line: 699, column: 13, scope: !16546)
!16610 = !DILocation(line: 699, column: 46, scope: !16546)
!16611 = !DILocation(line: 699, column: 52, scope: !16546)
!16612 = !DILocation(line: 699, column: 51, scope: !16546)
!16613 = !DILocation(line: 701, column: 22, scope: !16546)
!16614 = !DILocation(line: 701, column: 19, scope: !16546)
!16615 = !DILocation(line: 703, column: 9, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16546, file: !492, line: 703, column: 9)
!16617 = !DILocation(line: 703, column: 26, scope: !16616)
!16618 = !DILocation(line: 703, column: 24, scope: !16616)
!16619 = !DILocation(line: 703, column: 42, scope: !16616)
!16620 = !DILocation(line: 703, column: 49, scope: !16616)
!16621 = !DILocation(line: 703, column: 47, scope: !16616)
!16622 = !DILocation(line: 703, column: 40, scope: !16616)
!16623 = !DILocation(line: 703, column: 9, scope: !16546)
!16624 = !DILocation(line: 706, column: 9, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16616, file: !492, line: 704, column: 5)
!16626 = !DILocation(line: 713, column: 5, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16628, file: !492, line: 713, column: 5)
!16628 = distinct !DILexicalBlock(scope: !16546, file: !492, line: 713, column: 5)
!16629 = !DILocation(line: 713, column: 5, scope: !16628)
!16630 = !DILocation(line: 713, column: 5, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16627, file: !492, line: 713, column: 5)
!16632 = !DILocation(line: 715, column: 13, scope: !16546)
!16633 = !DILocation(line: 715, column: 5, scope: !16546)
!16634 = !DILocation(line: 718, column: 56, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16546, file: !492, line: 716, column: 5)
!16636 = !DILocation(line: 718, column: 72, scope: !16635)
!16637 = !DILocation(line: 718, column: 34, scope: !16635)
!16638 = !DILocation(line: 718, column: 9, scope: !16635)
!16639 = !DILocation(line: 718, column: 19, scope: !16635)
!16640 = !DILocation(line: 718, column: 32, scope: !16635)
!16641 = !DILocation(line: 720, column: 9, scope: !16635)
!16642 = !DILocation(line: 722, column: 51, scope: !16635)
!16643 = !DILocation(line: 722, column: 67, scope: !16635)
!16644 = !DILocation(line: 722, column: 29, scope: !16635)
!16645 = !DILocation(line: 722, column: 9, scope: !16635)
!16646 = !DILocation(line: 722, column: 19, scope: !16635)
!16647 = !DILocation(line: 722, column: 27, scope: !16635)
!16648 = !DILocation(line: 724, column: 9, scope: !16635)
!16649 = !DILocation(line: 726, column: 40, scope: !16635)
!16650 = !DILocation(line: 726, column: 30, scope: !16635)
!16651 = !DILocation(line: 726, column: 9, scope: !16635)
!16652 = !DILocation(line: 726, column: 19, scope: !16635)
!16653 = !DILocation(line: 726, column: 28, scope: !16635)
!16654 = !DILocation(line: 727, column: 16, scope: !16635)
!16655 = !DILocation(line: 727, column: 26, scope: !16635)
!16656 = !DILocation(line: 727, column: 9, scope: !16635)
!16657 = !DILocation(line: 727, column: 32, scope: !16635)
!16658 = !DILocation(line: 727, column: 48, scope: !16635)
!16659 = !DILocation(line: 727, column: 58, scope: !16635)
!16660 = !DILocation(line: 738, column: 9, scope: !16635)
!16661 = !DILocation(line: 740, column: 13, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16635, file: !492, line: 740, column: 13)
!16663 = !DILocation(line: 740, column: 23, scope: !16662)
!16664 = !DILocation(line: 740, column: 34, scope: !16662)
!16665 = !DILocation(line: 740, column: 13, scope: !16635)
!16666 = !DILocation(line: 742, column: 74, scope: !16667)
!16667 = distinct !DILexicalBlock(scope: !16662, file: !492, line: 741, column: 9)
!16668 = !DILocation(line: 742, column: 90, scope: !16667)
!16669 = !DILocation(line: 742, column: 52, scope: !16667)
!16670 = !DILocation(line: 742, column: 11, scope: !16667)
!16671 = !DILocation(line: 742, column: 21, scope: !16667)
!16672 = !DILocation(line: 742, column: 28, scope: !16667)
!16673 = !DILocation(line: 742, column: 38, scope: !16667)
!16674 = !DILocation(line: 742, column: 50, scope: !16667)
!16675 = !DILocation(line: 743, column: 11, scope: !16667)
!16676 = !DILocation(line: 743, column: 21, scope: !16667)
!16677 = !DILocation(line: 743, column: 32, scope: !16667)
!16678 = !DILocation(line: 745, column: 9, scope: !16667)
!16679 = !DILocation(line: 746, column: 9, scope: !16635)
!16680 = !DILocation(line: 749, column: 44, scope: !16635)
!16681 = !DILocation(line: 749, column: 34, scope: !16635)
!16682 = !DILocation(line: 749, column: 9, scope: !16635)
!16683 = !DILocation(line: 749, column: 19, scope: !16635)
!16684 = !DILocation(line: 749, column: 32, scope: !16635)
!16685 = !DILocation(line: 750, column: 16, scope: !16635)
!16686 = !DILocation(line: 750, column: 26, scope: !16635)
!16687 = !DILocation(line: 750, column: 9, scope: !16635)
!16688 = !DILocation(line: 750, column: 36, scope: !16635)
!16689 = !DILocation(line: 750, column: 52, scope: !16635)
!16690 = !DILocation(line: 750, column: 62, scope: !16635)
!16691 = !DILocation(line: 761, column: 9, scope: !16635)
!16692 = !DILocation(line: 763, column: 9, scope: !16635)
!16693 = !DILocation(line: 763, column: 19, scope: !16635)
!16694 = !DILocation(line: 763, column: 33, scope: !16635)
!16695 = !DILocation(line: 765, column: 9, scope: !16635)
!16696 = !DILocation(line: 768, column: 30, scope: !16635)
!16697 = !DILocation(line: 768, column: 9, scope: !16635)
!16698 = !DILocation(line: 768, column: 19, scope: !16635)
!16699 = !DILocation(line: 768, column: 28, scope: !16635)
!16700 = !DILocation(line: 769, column: 34, scope: !16635)
!16701 = !DILocation(line: 769, column: 9, scope: !16635)
!16702 = !DILocation(line: 769, column: 19, scope: !16635)
!16703 = !DILocation(line: 769, column: 32, scope: !16635)
!16704 = !DILocation(line: 771, column: 9, scope: !16635)
!16705 = !DILocation(line: 773, column: 52, scope: !16635)
!16706 = !DILocation(line: 773, column: 68, scope: !16635)
!16707 = !DILocation(line: 773, column: 30, scope: !16635)
!16708 = !DILocation(line: 773, column: 9, scope: !16635)
!16709 = !DILocation(line: 773, column: 19, scope: !16635)
!16710 = !DILocation(line: 773, column: 28, scope: !16635)
!16711 = !DILocation(line: 775, column: 9, scope: !16635)
!16712 = !DILocation(line: 779, column: 34, scope: !16635)
!16713 = !DILocation(line: 779, column: 44, scope: !16635)
!16714 = !DILocation(line: 779, column: 55, scope: !16635)
!16715 = !DILocation(line: 779, column: 71, scope: !16635)
!16716 = !DILocation(line: 779, column: 9, scope: !16635)
!16717 = !DILocation(line: 781, column: 9, scope: !16635)
!16718 = !DILocation(line: 785, column: 34, scope: !16635)
!16719 = !DILocation(line: 785, column: 44, scope: !16635)
!16720 = !DILocation(line: 785, column: 56, scope: !16635)
!16721 = !DILocation(line: 785, column: 72, scope: !16635)
!16722 = !DILocation(line: 785, column: 9, scope: !16635)
!16723 = !DILocation(line: 787, column: 9, scope: !16635)
!16724 = !DILocation(line: 790, column: 34, scope: !16635)
!16725 = !DILocation(line: 790, column: 44, scope: !16635)
!16726 = !DILocation(line: 790, column: 60, scope: !16635)
!16727 = !DILocation(line: 790, column: 76, scope: !16635)
!16728 = !DILocation(line: 790, column: 9, scope: !16635)
!16729 = !DILocation(line: 791, column: 9, scope: !16635)
!16730 = !DILocation(line: 794, column: 36, scope: !16635)
!16731 = !DILocation(line: 794, column: 46, scope: !16635)
!16732 = !DILocation(line: 794, column: 65, scope: !16635)
!16733 = !DILocation(line: 794, column: 75, scope: !16635)
!16734 = !DILocation(line: 794, column: 96, scope: !16635)
!16735 = !DILocation(line: 794, column: 112, scope: !16635)
!16736 = !DILocation(line: 794, column: 9, scope: !16635)
!16737 = !DILocation(line: 796, column: 9, scope: !16635)
!16738 = !DILocation(line: 800, column: 31, scope: !16635)
!16739 = !DILocation(line: 800, column: 9, scope: !16635)
!16740 = !DILocation(line: 800, column: 19, scope: !16635)
!16741 = !DILocation(line: 800, column: 29, scope: !16635)
!16742 = !DILocation(line: 801, column: 35, scope: !16635)
!16743 = !DILocation(line: 801, column: 9, scope: !16635)
!16744 = !DILocation(line: 801, column: 19, scope: !16635)
!16745 = !DILocation(line: 801, column: 33, scope: !16635)
!16746 = !DILocation(line: 804, column: 28, scope: !16635)
!16747 = !DILocation(line: 805, column: 9, scope: !16635)
!16748 = !DILocation(line: 809, column: 51, scope: !16635)
!16749 = !DILocation(line: 809, column: 67, scope: !16635)
!16750 = !DILocation(line: 809, column: 29, scope: !16635)
!16751 = !DILocation(line: 809, column: 9, scope: !16635)
!16752 = !DILocation(line: 809, column: 19, scope: !16635)
!16753 = !DILocation(line: 809, column: 27, scope: !16635)
!16754 = !DILocation(line: 811, column: 9, scope: !16635)
!16755 = !DILocation(line: 813, column: 54, scope: !16635)
!16756 = !DILocation(line: 813, column: 70, scope: !16635)
!16757 = !DILocation(line: 813, column: 32, scope: !16635)
!16758 = !DILocation(line: 813, column: 9, scope: !16635)
!16759 = !DILocation(line: 813, column: 19, scope: !16635)
!16760 = !DILocation(line: 813, column: 30, scope: !16635)
!16761 = !DILocation(line: 814, column: 34, scope: !16635)
!16762 = !DILocation(line: 814, column: 44, scope: !16635)
!16763 = !DILocation(line: 814, column: 55, scope: !16635)
!16764 = !DILocation(line: 814, column: 62, scope: !16635)
!16765 = !DILocation(line: 814, column: 33, scope: !16635)
!16766 = !DILocation(line: 814, column: 9, scope: !16635)
!16767 = !DILocation(line: 814, column: 19, scope: !16635)
!16768 = !DILocation(line: 814, column: 31, scope: !16635)
!16769 = !DILocation(line: 815, column: 40, scope: !16635)
!16770 = !DILocation(line: 815, column: 50, scope: !16635)
!16771 = !DILocation(line: 815, column: 61, scope: !16635)
!16772 = !DILocation(line: 815, column: 36, scope: !16635)
!16773 = !DILocation(line: 815, column: 33, scope: !16635)
!16774 = !DILocation(line: 815, column: 9, scope: !16635)
!16775 = !DILocation(line: 815, column: 19, scope: !16635)
!16776 = !DILocation(line: 815, column: 31, scope: !16635)
!16777 = !DILocation(line: 816, column: 36, scope: !16635)
!16778 = !DILocation(line: 816, column: 46, scope: !16635)
!16779 = !DILocation(line: 816, column: 57, scope: !16635)
!16780 = !DILocation(line: 816, column: 74, scope: !16635)
!16781 = !DILocation(line: 816, column: 84, scope: !16635)
!16782 = !DILocation(line: 816, column: 95, scope: !16635)
!16783 = !DILocation(line: 816, column: 71, scope: !16635)
!16784 = !DILocation(line: 816, column: 9, scope: !16635)
!16785 = !DILocation(line: 816, column: 19, scope: !16635)
!16786 = !DILocation(line: 816, column: 33, scope: !16635)
!16787 = !DILocation(line: 817, column: 9, scope: !16635)
!16788 = !DILocation(line: 817, column: 19, scope: !16635)
!16789 = !DILocation(line: 817, column: 30, scope: !16635)
!16790 = !DILocation(line: 819, column: 9, scope: !16635)
!16791 = !DILocation(line: 821, column: 54, scope: !16635)
!16792 = !DILocation(line: 821, column: 70, scope: !16635)
!16793 = !DILocation(line: 821, column: 32, scope: !16635)
!16794 = !DILocation(line: 821, column: 9, scope: !16635)
!16795 = !DILocation(line: 821, column: 19, scope: !16635)
!16796 = !DILocation(line: 821, column: 30, scope: !16635)
!16797 = !DILocation(line: 822, column: 34, scope: !16635)
!16798 = !DILocation(line: 822, column: 44, scope: !16635)
!16799 = !DILocation(line: 822, column: 55, scope: !16635)
!16800 = !DILocation(line: 822, column: 62, scope: !16635)
!16801 = !DILocation(line: 822, column: 33, scope: !16635)
!16802 = !DILocation(line: 822, column: 9, scope: !16635)
!16803 = !DILocation(line: 822, column: 19, scope: !16635)
!16804 = !DILocation(line: 822, column: 31, scope: !16635)
!16805 = !DILocation(line: 823, column: 40, scope: !16635)
!16806 = !DILocation(line: 823, column: 50, scope: !16635)
!16807 = !DILocation(line: 823, column: 61, scope: !16635)
!16808 = !DILocation(line: 823, column: 36, scope: !16635)
!16809 = !DILocation(line: 823, column: 33, scope: !16635)
!16810 = !DILocation(line: 823, column: 9, scope: !16635)
!16811 = !DILocation(line: 823, column: 19, scope: !16635)
!16812 = !DILocation(line: 823, column: 31, scope: !16635)
!16813 = !DILocation(line: 824, column: 36, scope: !16635)
!16814 = !DILocation(line: 824, column: 46, scope: !16635)
!16815 = !DILocation(line: 824, column: 57, scope: !16635)
!16816 = !DILocation(line: 824, column: 74, scope: !16635)
!16817 = !DILocation(line: 824, column: 84, scope: !16635)
!16818 = !DILocation(line: 824, column: 95, scope: !16635)
!16819 = !DILocation(line: 824, column: 71, scope: !16635)
!16820 = !DILocation(line: 824, column: 9, scope: !16635)
!16821 = !DILocation(line: 824, column: 19, scope: !16635)
!16822 = !DILocation(line: 824, column: 33, scope: !16635)
!16823 = !DILocation(line: 825, column: 9, scope: !16635)
!16824 = !DILocation(line: 825, column: 19, scope: !16635)
!16825 = !DILocation(line: 825, column: 30, scope: !16635)
!16826 = !DILocation(line: 827, column: 9, scope: !16635)
!16827 = !DILocation(line: 829, column: 48, scope: !16635)
!16828 = !DILocation(line: 829, column: 64, scope: !16635)
!16829 = !DILocation(line: 829, column: 26, scope: !16635)
!16830 = !DILocation(line: 829, column: 9, scope: !16635)
!16831 = !DILocation(line: 829, column: 19, scope: !16635)
!16832 = !DILocation(line: 829, column: 24, scope: !16635)
!16833 = !DILocation(line: 831, column: 9, scope: !16635)
!16834 = !DILocation(line: 835, column: 13, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16635, file: !492, line: 835, column: 13)
!16836 = !DILocation(line: 835, column: 27, scope: !16835)
!16837 = !DILocation(line: 835, column: 13, scope: !16635)
!16838 = !DILocation(line: 837, column: 30, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16835, file: !492, line: 836, column: 9)
!16840 = !DILocation(line: 838, column: 11, scope: !16839)
!16841 = !DILocation(line: 840, column: 5, scope: !16635)
!16842 = !DILocation(line: 842, column: 23, scope: !16546)
!16843 = !DILocation(line: 842, column: 20, scope: !16546)
!16844 = distinct !{!16844, !16538, !16845}
!16845 = !DILocation(line: 843, column: 3, scope: !16445)
!16846 = !DILocation(line: 848, column: 3, scope: !16445)
!16847 = !DILocation(line: 849, column: 1, scope: !16445)
!16848 = distinct !DISubprogram(name: "coap_parse_int_option", scope: !492, file: !492, line: 88, type: !16849, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16849 = !DISubroutineType(types: !16850)
!16850 = !{!86, !186, !438}
!16851 = !DILocalVariable(name: "bytes", arg: 1, scope: !16848, file: !492, line: 88, type: !186)
!16852 = !DILocation(line: 88, column: 32, scope: !16848)
!16853 = !DILocalVariable(name: "length", arg: 2, scope: !16848, file: !492, line: 88, type: !438)
!16854 = !DILocation(line: 88, column: 46, scope: !16848)
!16855 = !DILocalVariable(name: "var", scope: !16848, file: !492, line: 90, type: !86)
!16856 = !DILocation(line: 90, column: 12, scope: !16848)
!16857 = !DILocalVariable(name: "i", scope: !16848, file: !492, line: 91, type: !438)
!16858 = !DILocation(line: 91, column: 10, scope: !16848)
!16859 = !DILocation(line: 92, column: 3, scope: !16848)
!16860 = !DILocation(line: 92, column: 10, scope: !16848)
!16861 = !DILocation(line: 92, column: 12, scope: !16848)
!16862 = !DILocation(line: 92, column: 11, scope: !16848)
!16863 = !DILocation(line: 94, column: 9, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16848, file: !492, line: 93, column: 3)
!16865 = !DILocation(line: 95, column: 12, scope: !16864)
!16866 = !DILocation(line: 95, column: 19, scope: !16864)
!16867 = !DILocation(line: 95, column: 9, scope: !16864)
!16868 = distinct !{!16868, !16859, !16869}
!16869 = !DILocation(line: 96, column: 3, scope: !16848)
!16870 = !DILocation(line: 97, column: 10, scope: !16848)
!16871 = !DILocation(line: 97, column: 3, scope: !16848)
!16872 = distinct !DISubprogram(name: "coap_merge_multi_option", scope: !492, file: !492, line: 234, type: !16873, isLocal: true, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16873 = !DISubroutineType(types: !16874)
!16874 = !{null, !5103, !3131, !186, !438, !69}
!16875 = !DILocalVariable(name: "dst", arg: 1, scope: !16872, file: !492, line: 234, type: !5103)
!16876 = !DILocation(line: 234, column: 35, scope: !16872)
!16877 = !DILocalVariable(name: "dst_len", arg: 2, scope: !16872, file: !492, line: 234, type: !3131)
!16878 = !DILocation(line: 234, column: 48, scope: !16872)
!16879 = !DILocalVariable(name: "option", arg: 3, scope: !16872, file: !492, line: 234, type: !186)
!16880 = !DILocation(line: 234, column: 66, scope: !16872)
!16881 = !DILocalVariable(name: "option_len", arg: 4, scope: !16872, file: !492, line: 234, type: !438)
!16882 = !DILocation(line: 234, column: 81, scope: !16872)
!16883 = !DILocalVariable(name: "separator", arg: 5, scope: !16872, file: !492, line: 234, type: !69)
!16884 = !DILocation(line: 234, column: 98, scope: !16872)
!16885 = !DILocation(line: 237, column: 8, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16872, file: !492, line: 237, column: 7)
!16887 = !DILocation(line: 237, column: 7, scope: !16886)
!16888 = !DILocation(line: 237, column: 16, scope: !16886)
!16889 = !DILocation(line: 237, column: 7, scope: !16872)
!16890 = !DILocation(line: 240, column: 24, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16886, file: !492, line: 238, column: 3)
!16892 = !DILocation(line: 240, column: 7, scope: !16891)
!16893 = !DILocation(line: 240, column: 6, scope: !16891)
!16894 = !DILocation(line: 240, column: 13, scope: !16891)
!16895 = !DILocation(line: 240, column: 12, scope: !16891)
!16896 = !DILocation(line: 240, column: 5, scope: !16891)
!16897 = !DILocation(line: 240, column: 22, scope: !16891)
!16898 = !DILocation(line: 241, column: 6, scope: !16891)
!16899 = !DILocation(line: 241, column: 14, scope: !16891)
!16900 = !DILocation(line: 244, column: 15, scope: !16891)
!16901 = !DILocation(line: 244, column: 14, scope: !16891)
!16902 = !DILocation(line: 244, column: 22, scope: !16891)
!16903 = !DILocation(line: 244, column: 21, scope: !16891)
!16904 = !DILocation(line: 244, column: 19, scope: !16891)
!16905 = !DILocation(line: 244, column: 32, scope: !16891)
!16906 = !DILocation(line: 244, column: 40, scope: !16891)
!16907 = !DILocation(line: 244, column: 5, scope: !16891)
!16908 = !DILocation(line: 246, column: 17, scope: !16891)
!16909 = !DILocation(line: 246, column: 6, scope: !16891)
!16910 = !DILocation(line: 246, column: 14, scope: !16891)
!16911 = !DILocation(line: 247, column: 3, scope: !16891)
!16912 = !DILocation(line: 251, column: 12, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16886, file: !492, line: 249, column: 3)
!16914 = !DILocation(line: 251, column: 6, scope: !16913)
!16915 = !DILocation(line: 251, column: 10, scope: !16913)
!16916 = !DILocation(line: 252, column: 16, scope: !16913)
!16917 = !DILocation(line: 252, column: 6, scope: !16913)
!16918 = !DILocation(line: 252, column: 14, scope: !16913)
!16919 = !DILocation(line: 254, column: 1, scope: !16872)
!16920 = distinct !DISubprogram(name: "coap_get_query_variable", scope: !492, file: !492, line: 854, type: !16921, isLocal: false, isDefinition: true, scopeLine: 855, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{!58, !54, !548, !16923}
!16923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!16924 = !DILocalVariable(name: "packet", arg: 1, scope: !16920, file: !492, line: 854, type: !54)
!16925 = !DILocation(line: 854, column: 31, scope: !16920)
!16926 = !DILocalVariable(name: "name", arg: 2, scope: !16920, file: !492, line: 854, type: !548)
!16927 = !DILocation(line: 854, column: 51, scope: !16920)
!16928 = !DILocalVariable(name: "output", arg: 3, scope: !16920, file: !492, line: 854, type: !16923)
!16929 = !DILocation(line: 854, column: 70, scope: !16920)
!16930 = !DILocation(line: 863, column: 3, scope: !16920)
!16931 = distinct !DISubprogram(name: "coap_get_post_variable", scope: !492, file: !492, line: 867, type: !16921, isLocal: false, isDefinition: true, scopeLine: 868, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16932 = !DILocalVariable(name: "packet", arg: 1, scope: !16931, file: !492, line: 867, type: !54)
!16933 = !DILocation(line: 867, column: 30, scope: !16931)
!16934 = !DILocalVariable(name: "name", arg: 2, scope: !16931, file: !492, line: 867, type: !548)
!16935 = !DILocation(line: 867, column: 50, scope: !16931)
!16936 = !DILocalVariable(name: "output", arg: 3, scope: !16931, file: !492, line: 867, type: !16923)
!16937 = !DILocation(line: 867, column: 69, scope: !16931)
!16938 = !DILocalVariable(name: "coap_pkt", scope: !16931, file: !492, line: 869, type: !15609)
!16939 = !DILocation(line: 869, column: 24, scope: !16931)
!16940 = !DILocation(line: 869, column: 53, scope: !16931)
!16941 = !DILocation(line: 869, column: 35, scope: !16931)
!16942 = !DILocation(line: 871, column: 7, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16931, file: !492, line: 871, column: 7)
!16944 = !DILocation(line: 871, column: 17, scope: !16943)
!16945 = !DILocation(line: 871, column: 7, scope: !16931)
!16946 = !DILocation(line: 872, column: 30, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16943, file: !492, line: 871, column: 30)
!16948 = !DILocation(line: 872, column: 40, scope: !16947)
!16949 = !DILocation(line: 872, column: 49, scope: !16947)
!16950 = !DILocation(line: 872, column: 59, scope: !16947)
!16951 = !DILocation(line: 872, column: 72, scope: !16947)
!16952 = !DILocation(line: 872, column: 78, scope: !16947)
!16953 = !DILocation(line: 872, column: 12, scope: !16947)
!16954 = !DILocation(line: 872, column: 5, scope: !16947)
!16955 = !DILocation(line: 874, column: 3, scope: !16931)
!16956 = !DILocation(line: 875, column: 1, scope: !16931)
!16957 = distinct !DISubprogram(name: "coap_get_variable", scope: !492, file: !492, line: 347, type: !16958, isLocal: true, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!16958 = !DISubroutineType(types: !16959)
!16959 = !{!58, !442, !438, !548, !16923}
!16960 = !DILocalVariable(name: "buffer", arg: 1, scope: !16957, file: !492, line: 347, type: !442)
!16961 = !DILocation(line: 347, column: 34, scope: !16957)
!16962 = !DILocalVariable(name: "length", arg: 2, scope: !16957, file: !492, line: 347, type: !438)
!16963 = !DILocation(line: 347, column: 49, scope: !16957)
!16964 = !DILocalVariable(name: "name", arg: 3, scope: !16957, file: !492, line: 347, type: !548)
!16965 = !DILocation(line: 347, column: 69, scope: !16957)
!16966 = !DILocalVariable(name: "output", arg: 4, scope: !16957, file: !492, line: 347, type: !16923)
!16967 = !DILocation(line: 347, column: 88, scope: !16957)
!16968 = !DILocalVariable(name: "start", scope: !16957, file: !492, line: 349, type: !442)
!16969 = !DILocation(line: 349, column: 18, scope: !16957)
!16970 = !DILocalVariable(name: "end", scope: !16957, file: !492, line: 350, type: !442)
!16971 = !DILocation(line: 350, column: 18, scope: !16957)
!16972 = !DILocalVariable(name: "value_end", scope: !16957, file: !492, line: 351, type: !442)
!16973 = !DILocation(line: 351, column: 18, scope: !16957)
!16974 = !DILocalVariable(name: "name_len", scope: !16957, file: !492, line: 352, type: !438)
!16975 = !DILocation(line: 352, column: 10, scope: !16957)
!16976 = !DILocation(line: 355, column: 4, scope: !16957)
!16977 = !DILocation(line: 355, column: 11, scope: !16957)
!16978 = !DILocation(line: 357, column: 21, scope: !16957)
!16979 = !DILocation(line: 357, column: 14, scope: !16957)
!16980 = !DILocation(line: 357, column: 12, scope: !16957)
!16981 = !DILocation(line: 358, column: 9, scope: !16957)
!16982 = !DILocation(line: 358, column: 18, scope: !16957)
!16983 = !DILocation(line: 358, column: 16, scope: !16957)
!16984 = !DILocation(line: 358, column: 7, scope: !16957)
!16985 = !DILocation(line: 360, column: 16, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16957, file: !492, line: 360, column: 3)
!16987 = !DILocation(line: 360, column: 14, scope: !16986)
!16988 = !DILocation(line: 360, column: 8, scope: !16986)
!16989 = !DILocation(line: 360, column: 24, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16986, file: !492, line: 360, column: 3)
!16991 = !DILocation(line: 360, column: 32, scope: !16990)
!16992 = !DILocation(line: 360, column: 30, scope: !16990)
!16993 = !DILocation(line: 360, column: 43, scope: !16990)
!16994 = !DILocation(line: 360, column: 41, scope: !16990)
!16995 = !DILocation(line: 360, column: 3, scope: !16986)
!16996 = !DILocation(line: 361, column: 10, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16998, file: !492, line: 361, column: 9)
!16998 = distinct !DILexicalBlock(scope: !16990, file: !492, line: 360, column: 56)
!16999 = !DILocation(line: 361, column: 19, scope: !16997)
!17000 = !DILocation(line: 361, column: 16, scope: !16997)
!17001 = !DILocation(line: 361, column: 26, scope: !16997)
!17002 = !DILocation(line: 361, column: 29, scope: !16997)
!17003 = !DILocation(line: 361, column: 39, scope: !16997)
!17004 = !DILocation(line: 361, column: 47, scope: !16997)
!17005 = !DILocation(line: 361, column: 50, scope: !16997)
!17006 = !DILocation(line: 361, column: 56, scope: !16997)
!17007 = !DILocation(line: 361, column: 66, scope: !16997)
!17008 = !DILocation(line: 361, column: 73, scope: !16997)
!17009 = !DILocation(line: 362, column: 17, scope: !16997)
!17010 = !DILocation(line: 362, column: 31, scope: !16997)
!17011 = !DILocation(line: 362, column: 38, scope: !16997)
!17012 = !DILocation(line: 362, column: 9, scope: !16997)
!17013 = !DILocation(line: 362, column: 47, scope: !16997)
!17014 = !DILocation(line: 361, column: 9, scope: !16998)
!17015 = !DILocation(line: 365, column: 16, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !16997, file: !492, line: 362, column: 52)
!17017 = !DILocation(line: 365, column: 25, scope: !17016)
!17018 = !DILocation(line: 365, column: 13, scope: !17016)
!17019 = !DILocation(line: 368, column: 44, scope: !17016)
!17020 = !DILocation(line: 368, column: 56, scope: !17016)
!17021 = !DILocation(line: 368, column: 62, scope: !17016)
!17022 = !DILocation(line: 368, column: 60, scope: !17016)
!17023 = !DILocation(line: 368, column: 37, scope: !17016)
!17024 = !DILocation(line: 368, column: 17, scope: !17016)
!17025 = !DILocation(line: 369, column: 11, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !17016, file: !492, line: 369, column: 11)
!17027 = !DILocation(line: 369, column: 21, scope: !17026)
!17028 = !DILocation(line: 369, column: 11, scope: !17016)
!17029 = !DILocation(line: 370, column: 21, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17026, file: !492, line: 369, column: 30)
!17031 = !DILocation(line: 370, column: 19, scope: !17030)
!17032 = !DILocation(line: 371, column: 7, scope: !17030)
!17033 = !DILocation(line: 373, column: 25, scope: !17016)
!17034 = !DILocation(line: 373, column: 8, scope: !17016)
!17035 = !DILocation(line: 373, column: 15, scope: !17016)
!17036 = !DILocation(line: 375, column: 15, scope: !17016)
!17037 = !DILocation(line: 375, column: 27, scope: !17016)
!17038 = !DILocation(line: 375, column: 25, scope: !17016)
!17039 = !DILocation(line: 375, column: 14, scope: !17016)
!17040 = !DILocation(line: 375, column: 7, scope: !17016)
!17041 = !DILocation(line: 377, column: 3, scope: !16998)
!17042 = !DILocation(line: 360, column: 48, scope: !16990)
!17043 = !DILocation(line: 360, column: 3, scope: !16990)
!17044 = distinct !{!17044, !16995, !17045}
!17045 = !DILocation(line: 377, column: 3, scope: !16986)
!17046 = !DILocation(line: 379, column: 3, scope: !16957)
!17047 = !DILocation(line: 380, column: 1, scope: !16957)
!17048 = distinct !DISubprogram(name: "coap_set_status_code", scope: !492, file: !492, line: 878, type: !17049, isLocal: false, isDefinition: true, scopeLine: 879, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17049 = !DISubroutineType(types: !17050)
!17050 = !{!58, !54, !87}
!17051 = !DILocalVariable(name: "packet", arg: 1, scope: !17048, file: !492, line: 878, type: !54)
!17052 = !DILocation(line: 878, column: 28, scope: !17048)
!17053 = !DILocalVariable(name: "code", arg: 2, scope: !17048, file: !492, line: 878, type: !87)
!17054 = !DILocation(line: 878, column: 49, scope: !17048)
!17055 = !DILocation(line: 880, column: 7, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17048, file: !492, line: 880, column: 7)
!17057 = !DILocation(line: 880, column: 12, scope: !17056)
!17058 = !DILocation(line: 880, column: 7, scope: !17048)
!17059 = !DILocation(line: 882, column: 49, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17056, file: !492, line: 881, column: 3)
!17061 = !DILocation(line: 882, column: 39, scope: !17060)
!17062 = !DILocation(line: 882, column: 23, scope: !17060)
!17063 = !DILocation(line: 882, column: 6, scope: !17060)
!17064 = !DILocation(line: 882, column: 32, scope: !17060)
!17065 = !DILocation(line: 882, column: 37, scope: !17060)
!17066 = !DILocation(line: 883, column: 5, scope: !17060)
!17067 = !DILocation(line: 887, column: 5, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17056, file: !492, line: 886, column: 3)
!17069 = !DILocation(line: 889, column: 1, scope: !17048)
!17070 = distinct !DISubprogram(name: "coap_get_header_content_type", scope: !492, file: !492, line: 894, type: !17071, isLocal: false, isDefinition: true, scopeLine: 895, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17071 = !DISubroutineType(types: !17072)
!17072 = !{!87, !54}
!17073 = !DILocalVariable(name: "packet", arg: 1, scope: !17070, file: !492, line: 894, type: !54)
!17074 = !DILocation(line: 894, column: 36, scope: !17070)
!17075 = !DILocalVariable(name: "coap_pkt", scope: !17070, file: !492, line: 896, type: !15609)
!17076 = !DILocation(line: 896, column: 24, scope: !17070)
!17077 = !DILocation(line: 896, column: 53, scope: !17070)
!17078 = !DILocation(line: 896, column: 35, scope: !17070)
!17079 = !DILocation(line: 898, column: 7, scope: !17070)
!17080 = !DILocation(line: 898, column: 8, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17070, file: !492, line: 898, column: 7)
!17082 = !DILocation(line: 898, column: 55, scope: !17081)
!17083 = !DILocation(line: 900, column: 10, scope: !17070)
!17084 = !DILocation(line: 900, column: 20, scope: !17070)
!17085 = !DILocation(line: 900, column: 3, scope: !17070)
!17086 = !DILocation(line: 901, column: 1, scope: !17070)
!17087 = distinct !DISubprogram(name: "coap_set_header_content_type", scope: !492, file: !492, line: 904, type: !17049, isLocal: false, isDefinition: true, scopeLine: 905, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17088 = !DILocalVariable(name: "packet", arg: 1, scope: !17087, file: !492, line: 904, type: !54)
!17089 = !DILocation(line: 904, column: 36, scope: !17087)
!17090 = !DILocalVariable(name: "content_type", arg: 2, scope: !17087, file: !492, line: 904, type: !87)
!17091 = !DILocation(line: 904, column: 57, scope: !17087)
!17092 = !DILocalVariable(name: "coap_pkt", scope: !17087, file: !492, line: 906, type: !15609)
!17093 = !DILocation(line: 906, column: 24, scope: !17087)
!17094 = !DILocation(line: 906, column: 53, scope: !17087)
!17095 = !DILocation(line: 906, column: 35, scope: !17087)
!17096 = !DILocation(line: 908, column: 50, scope: !17087)
!17097 = !DILocation(line: 908, column: 3, scope: !17087)
!17098 = !DILocation(line: 908, column: 13, scope: !17087)
!17099 = !DILocation(line: 908, column: 26, scope: !17087)
!17100 = !DILocation(line: 909, column: 3, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17102, file: !492, line: 909, column: 3)
!17102 = distinct !DILexicalBlock(scope: !17103, file: !492, line: 909, column: 3)
!17103 = distinct !DILexicalBlock(scope: !17087, file: !492, line: 909, column: 3)
!17104 = !DILocation(line: 910, column: 3, scope: !17087)
!17105 = distinct !DISubprogram(name: "coap_get_header_accept", scope: !492, file: !492, line: 914, type: !17106, isLocal: false, isDefinition: true, scopeLine: 915, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17106 = !DISubroutineType(types: !17107)
!17107 = !{!58, !54, !17108}
!17108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17109, size: 64)
!17109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17110, size: 64)
!17110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!17111 = !DILocalVariable(name: "packet", arg: 1, scope: !17105, file: !492, line: 914, type: !54)
!17112 = !DILocation(line: 914, column: 30, scope: !17105)
!17113 = !DILocalVariable(name: "accept", arg: 2, scope: !17105, file: !492, line: 914, type: !17108)
!17114 = !DILocation(line: 914, column: 55, scope: !17105)
!17115 = !DILocalVariable(name: "coap_pkt", scope: !17105, file: !492, line: 916, type: !15609)
!17116 = !DILocation(line: 916, column: 24, scope: !17105)
!17117 = !DILocation(line: 916, column: 53, scope: !17105)
!17118 = !DILocation(line: 916, column: 35, scope: !17105)
!17119 = !DILocation(line: 918, column: 7, scope: !17105)
!17120 = !DILocation(line: 918, column: 8, scope: !17121)
!17121 = distinct !DILexicalBlock(scope: !17105, file: !492, line: 918, column: 7)
!17122 = !DILocation(line: 918, column: 49, scope: !17121)
!17123 = !DILocation(line: 920, column: 13, scope: !17105)
!17124 = !DILocation(line: 920, column: 23, scope: !17105)
!17125 = !DILocation(line: 920, column: 4, scope: !17105)
!17126 = !DILocation(line: 920, column: 11, scope: !17105)
!17127 = !DILocation(line: 921, column: 10, scope: !17105)
!17128 = !DILocation(line: 921, column: 20, scope: !17105)
!17129 = !DILocation(line: 921, column: 3, scope: !17105)
!17130 = !DILocation(line: 922, column: 1, scope: !17105)
!17131 = distinct !DISubprogram(name: "coap_set_header_accept", scope: !492, file: !492, line: 925, type: !17132, isLocal: false, isDefinition: true, scopeLine: 926, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17132 = !DISubroutineType(types: !17133)
!17133 = !{!58, !54, !79}
!17134 = !DILocalVariable(name: "packet", arg: 1, scope: !17131, file: !492, line: 925, type: !54)
!17135 = !DILocation(line: 925, column: 30, scope: !17131)
!17136 = !DILocalVariable(name: "accept", arg: 2, scope: !17131, file: !492, line: 925, type: !79)
!17137 = !DILocation(line: 925, column: 47, scope: !17131)
!17138 = !DILocalVariable(name: "coap_pkt", scope: !17131, file: !492, line: 927, type: !15609)
!17139 = !DILocation(line: 927, column: 24, scope: !17131)
!17140 = !DILocation(line: 927, column: 53, scope: !17131)
!17141 = !DILocation(line: 927, column: 35, scope: !17131)
!17142 = !DILocation(line: 929, column: 7, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17131, file: !492, line: 929, column: 7)
!17144 = !DILocation(line: 929, column: 17, scope: !17143)
!17145 = !DILocation(line: 929, column: 28, scope: !17143)
!17146 = !DILocation(line: 929, column: 7, scope: !17131)
!17147 = !DILocation(line: 931, column: 46, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17143, file: !492, line: 930, column: 3)
!17149 = !DILocation(line: 931, column: 5, scope: !17148)
!17150 = !DILocation(line: 931, column: 15, scope: !17148)
!17151 = !DILocation(line: 931, column: 22, scope: !17148)
!17152 = !DILocation(line: 931, column: 32, scope: !17148)
!17153 = !DILocation(line: 931, column: 44, scope: !17148)
!17154 = !DILocation(line: 932, column: 5, scope: !17148)
!17155 = !DILocation(line: 932, column: 15, scope: !17148)
!17156 = !DILocation(line: 932, column: 26, scope: !17148)
!17157 = !DILocation(line: 934, column: 5, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17159, file: !492, line: 934, column: 5)
!17159 = distinct !DILexicalBlock(scope: !17160, file: !492, line: 934, column: 5)
!17160 = distinct !DILexicalBlock(scope: !17148, file: !492, line: 934, column: 5)
!17161 = !DILocation(line: 935, column: 3, scope: !17148)
!17162 = !DILocation(line: 936, column: 10, scope: !17131)
!17163 = !DILocation(line: 936, column: 20, scope: !17131)
!17164 = !DILocation(line: 936, column: 3, scope: !17131)
!17165 = distinct !DISubprogram(name: "coap_get_header_max_age", scope: !492, file: !492, line: 940, type: !17166, isLocal: false, isDefinition: true, scopeLine: 941, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17166 = !DISubroutineType(types: !17167)
!17167 = !{!58, !54, !9257}
!17168 = !DILocalVariable(name: "packet", arg: 1, scope: !17165, file: !492, line: 940, type: !54)
!17169 = !DILocation(line: 940, column: 31, scope: !17165)
!17170 = !DILocalVariable(name: "age", arg: 2, scope: !17165, file: !492, line: 940, type: !9257)
!17171 = !DILocation(line: 940, column: 49, scope: !17165)
!17172 = !DILocalVariable(name: "coap_pkt", scope: !17165, file: !492, line: 942, type: !15609)
!17173 = !DILocation(line: 942, column: 24, scope: !17165)
!17174 = !DILocation(line: 942, column: 53, scope: !17165)
!17175 = !DILocation(line: 942, column: 35, scope: !17165)
!17176 = !DILocation(line: 944, column: 7, scope: !17165)
!17177 = !DILocation(line: 944, column: 8, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17165, file: !492, line: 944, column: 7)
!17179 = !DILocation(line: 945, column: 6, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17178, file: !492, line: 944, column: 50)
!17181 = !DILocation(line: 945, column: 10, scope: !17180)
!17182 = !DILocation(line: 946, column: 3, scope: !17180)
!17183 = !DILocation(line: 947, column: 12, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17178, file: !492, line: 946, column: 10)
!17185 = !DILocation(line: 947, column: 22, scope: !17184)
!17186 = !DILocation(line: 947, column: 6, scope: !17184)
!17187 = !DILocation(line: 947, column: 10, scope: !17184)
!17188 = !DILocation(line: 949, column: 3, scope: !17165)
!17189 = distinct !DISubprogram(name: "coap_set_header_max_age", scope: !492, file: !492, line: 953, type: !17190, isLocal: false, isDefinition: true, scopeLine: 954, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17190 = !DISubroutineType(types: !17191)
!17191 = !{!58, !54, !86}
!17192 = !DILocalVariable(name: "packet", arg: 1, scope: !17189, file: !492, line: 953, type: !54)
!17193 = !DILocation(line: 953, column: 31, scope: !17189)
!17194 = !DILocalVariable(name: "age", arg: 2, scope: !17189, file: !492, line: 953, type: !86)
!17195 = !DILocation(line: 953, column: 48, scope: !17189)
!17196 = !DILocalVariable(name: "coap_pkt", scope: !17189, file: !492, line: 955, type: !15609)
!17197 = !DILocation(line: 955, column: 24, scope: !17189)
!17198 = !DILocation(line: 955, column: 53, scope: !17189)
!17199 = !DILocation(line: 955, column: 35, scope: !17189)
!17200 = !DILocation(line: 957, column: 23, scope: !17189)
!17201 = !DILocation(line: 957, column: 3, scope: !17189)
!17202 = !DILocation(line: 957, column: 13, scope: !17189)
!17203 = !DILocation(line: 957, column: 21, scope: !17189)
!17204 = !DILocation(line: 958, column: 3, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17206, file: !492, line: 958, column: 3)
!17206 = distinct !DILexicalBlock(scope: !17207, file: !492, line: 958, column: 3)
!17207 = distinct !DILexicalBlock(scope: !17189, file: !492, line: 958, column: 3)
!17208 = !DILocation(line: 959, column: 3, scope: !17189)
!17209 = distinct !DISubprogram(name: "coap_get_header_etag", scope: !492, file: !492, line: 963, type: !17210, isLocal: false, isDefinition: true, scopeLine: 964, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17210 = !DISubroutineType(types: !17211)
!17211 = !{!58, !54, !1039}
!17212 = !DILocalVariable(name: "packet", arg: 1, scope: !17209, file: !492, line: 963, type: !54)
!17213 = !DILocation(line: 963, column: 28, scope: !17209)
!17214 = !DILocalVariable(name: "etag", arg: 2, scope: !17209, file: !492, line: 963, type: !1039)
!17215 = !DILocation(line: 963, column: 52, scope: !17209)
!17216 = !DILocalVariable(name: "coap_pkt", scope: !17209, file: !492, line: 965, type: !15609)
!17217 = !DILocation(line: 965, column: 24, scope: !17209)
!17218 = !DILocation(line: 965, column: 53, scope: !17209)
!17219 = !DILocation(line: 965, column: 35, scope: !17209)
!17220 = !DILocation(line: 967, column: 7, scope: !17209)
!17221 = !DILocation(line: 967, column: 8, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17209, file: !492, line: 967, column: 7)
!17223 = !DILocation(line: 967, column: 47, scope: !17222)
!17224 = !DILocation(line: 969, column: 11, scope: !17209)
!17225 = !DILocation(line: 969, column: 21, scope: !17209)
!17226 = !DILocation(line: 969, column: 4, scope: !17209)
!17227 = !DILocation(line: 969, column: 9, scope: !17209)
!17228 = !DILocation(line: 970, column: 10, scope: !17209)
!17229 = !DILocation(line: 970, column: 20, scope: !17209)
!17230 = !DILocation(line: 970, column: 3, scope: !17209)
!17231 = !DILocation(line: 971, column: 1, scope: !17209)
!17232 = distinct !DISubprogram(name: "coap_set_header_etag", scope: !492, file: !492, line: 974, type: !17233, isLocal: false, isDefinition: true, scopeLine: 975, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17233 = !DISubroutineType(types: !17234)
!17234 = !{!58, !54, !442, !438}
!17235 = !DILocalVariable(name: "packet", arg: 1, scope: !17232, file: !492, line: 974, type: !54)
!17236 = !DILocation(line: 974, column: 28, scope: !17232)
!17237 = !DILocalVariable(name: "etag", arg: 2, scope: !17232, file: !492, line: 974, type: !442)
!17238 = !DILocation(line: 974, column: 51, scope: !17232)
!17239 = !DILocalVariable(name: "etag_len", arg: 3, scope: !17232, file: !492, line: 974, type: !438)
!17240 = !DILocation(line: 974, column: 64, scope: !17232)
!17241 = !DILocalVariable(name: "coap_pkt", scope: !17232, file: !492, line: 976, type: !15609)
!17242 = !DILocation(line: 976, column: 24, scope: !17232)
!17243 = !DILocation(line: 976, column: 53, scope: !17232)
!17244 = !DILocation(line: 976, column: 35, scope: !17232)
!17245 = !DILocation(line: 978, column: 34, scope: !17232)
!17246 = !DILocation(line: 978, column: 24, scope: !17232)
!17247 = !DILocation(line: 978, column: 3, scope: !17232)
!17248 = !DILocation(line: 978, column: 13, scope: !17232)
!17249 = !DILocation(line: 978, column: 22, scope: !17232)
!17250 = !DILocation(line: 979, column: 10, scope: !17232)
!17251 = !DILocation(line: 979, column: 20, scope: !17232)
!17252 = !DILocation(line: 979, column: 3, scope: !17232)
!17253 = !DILocation(line: 979, column: 26, scope: !17232)
!17254 = !DILocation(line: 979, column: 32, scope: !17232)
!17255 = !DILocation(line: 979, column: 42, scope: !17232)
!17256 = !DILocation(line: 981, column: 3, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17258, file: !492, line: 981, column: 3)
!17258 = distinct !DILexicalBlock(scope: !17259, file: !492, line: 981, column: 3)
!17259 = distinct !DILexicalBlock(scope: !17232, file: !492, line: 981, column: 3)
!17260 = !DILocation(line: 982, column: 10, scope: !17232)
!17261 = !DILocation(line: 982, column: 20, scope: !17232)
!17262 = !DILocation(line: 982, column: 3, scope: !17232)
!17263 = distinct !DISubprogram(name: "coap_get_header_if_match", scope: !492, file: !492, line: 987, type: !17210, isLocal: false, isDefinition: true, scopeLine: 988, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17264 = !DILocalVariable(name: "packet", arg: 1, scope: !17263, file: !492, line: 987, type: !54)
!17265 = !DILocation(line: 987, column: 32, scope: !17263)
!17266 = !DILocalVariable(name: "etag", arg: 2, scope: !17263, file: !492, line: 987, type: !1039)
!17267 = !DILocation(line: 987, column: 56, scope: !17263)
!17268 = !DILocalVariable(name: "coap_pkt", scope: !17263, file: !492, line: 989, type: !15609)
!17269 = !DILocation(line: 989, column: 24, scope: !17263)
!17270 = !DILocation(line: 989, column: 53, scope: !17263)
!17271 = !DILocation(line: 989, column: 35, scope: !17263)
!17272 = !DILocation(line: 991, column: 7, scope: !17263)
!17273 = !DILocation(line: 991, column: 8, scope: !17274)
!17274 = distinct !DILexicalBlock(scope: !17263, file: !492, line: 991, column: 7)
!17275 = !DILocation(line: 991, column: 51, scope: !17274)
!17276 = !DILocation(line: 993, column: 11, scope: !17263)
!17277 = !DILocation(line: 993, column: 21, scope: !17263)
!17278 = !DILocation(line: 993, column: 4, scope: !17263)
!17279 = !DILocation(line: 993, column: 9, scope: !17263)
!17280 = !DILocation(line: 994, column: 10, scope: !17263)
!17281 = !DILocation(line: 994, column: 20, scope: !17263)
!17282 = !DILocation(line: 994, column: 3, scope: !17263)
!17283 = !DILocation(line: 995, column: 1, scope: !17263)
!17284 = distinct !DISubprogram(name: "coap_set_header_if_match", scope: !492, file: !492, line: 998, type: !17233, isLocal: false, isDefinition: true, scopeLine: 999, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17285 = !DILocalVariable(name: "packet", arg: 1, scope: !17284, file: !492, line: 998, type: !54)
!17286 = !DILocation(line: 998, column: 32, scope: !17284)
!17287 = !DILocalVariable(name: "etag", arg: 2, scope: !17284, file: !492, line: 998, type: !442)
!17288 = !DILocation(line: 998, column: 55, scope: !17284)
!17289 = !DILocalVariable(name: "etag_len", arg: 3, scope: !17284, file: !492, line: 998, type: !438)
!17290 = !DILocation(line: 998, column: 68, scope: !17284)
!17291 = !DILocalVariable(name: "coap_pkt", scope: !17284, file: !492, line: 1000, type: !15609)
!17292 = !DILocation(line: 1000, column: 24, scope: !17284)
!17293 = !DILocation(line: 1000, column: 53, scope: !17284)
!17294 = !DILocation(line: 1000, column: 35, scope: !17284)
!17295 = !DILocation(line: 1002, column: 38, scope: !17284)
!17296 = !DILocation(line: 1002, column: 28, scope: !17284)
!17297 = !DILocation(line: 1002, column: 3, scope: !17284)
!17298 = !DILocation(line: 1002, column: 13, scope: !17284)
!17299 = !DILocation(line: 1002, column: 26, scope: !17284)
!17300 = !DILocation(line: 1003, column: 10, scope: !17284)
!17301 = !DILocation(line: 1003, column: 20, scope: !17284)
!17302 = !DILocation(line: 1003, column: 3, scope: !17284)
!17303 = !DILocation(line: 1003, column: 30, scope: !17284)
!17304 = !DILocation(line: 1003, column: 36, scope: !17284)
!17305 = !DILocation(line: 1003, column: 46, scope: !17284)
!17306 = !DILocation(line: 1005, column: 3, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17308, file: !492, line: 1005, column: 3)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !492, line: 1005, column: 3)
!17309 = distinct !DILexicalBlock(scope: !17284, file: !492, line: 1005, column: 3)
!17310 = !DILocation(line: 1006, column: 10, scope: !17284)
!17311 = !DILocation(line: 1006, column: 20, scope: !17284)
!17312 = !DILocation(line: 1006, column: 3, scope: !17284)
!17313 = distinct !DISubprogram(name: "coap_get_header_if_none_match", scope: !492, file: !492, line: 1010, type: !17314, isLocal: false, isDefinition: true, scopeLine: 1011, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17314 = !DISubroutineType(types: !17315)
!17315 = !{!58, !54}
!17316 = !DILocalVariable(name: "packet", arg: 1, scope: !17313, file: !492, line: 1010, type: !54)
!17317 = !DILocation(line: 1010, column: 37, scope: !17313)
!17318 = !DILocation(line: 1012, column: 10, scope: !17313)
!17319 = !DILocation(line: 1012, column: 3, scope: !17313)
!17320 = distinct !DISubprogram(name: "coap_set_header_if_none_match", scope: !492, file: !492, line: 1016, type: !17314, isLocal: false, isDefinition: true, scopeLine: 1017, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17321 = !DILocalVariable(name: "packet", arg: 1, scope: !17320, file: !492, line: 1016, type: !54)
!17322 = !DILocation(line: 1016, column: 37, scope: !17320)
!17323 = !DILocation(line: 1018, column: 3, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !492, line: 1018, column: 3)
!17325 = distinct !DILexicalBlock(scope: !17326, file: !492, line: 1018, column: 3)
!17326 = distinct !DILexicalBlock(scope: !17320, file: !492, line: 1018, column: 3)
!17327 = !DILocation(line: 1019, column: 3, scope: !17320)
!17328 = distinct !DISubprogram(name: "coap_get_header_token", scope: !492, file: !492, line: 1023, type: !17210, isLocal: false, isDefinition: true, scopeLine: 1024, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17329 = !DILocalVariable(name: "packet", arg: 1, scope: !17328, file: !492, line: 1023, type: !54)
!17330 = !DILocation(line: 1023, column: 29, scope: !17328)
!17331 = !DILocalVariable(name: "token", arg: 2, scope: !17328, file: !492, line: 1023, type: !1039)
!17332 = !DILocation(line: 1023, column: 53, scope: !17328)
!17333 = !DILocalVariable(name: "coap_pkt", scope: !17328, file: !492, line: 1025, type: !15609)
!17334 = !DILocation(line: 1025, column: 24, scope: !17328)
!17335 = !DILocation(line: 1025, column: 53, scope: !17328)
!17336 = !DILocation(line: 1025, column: 35, scope: !17328)
!17337 = !DILocation(line: 1027, column: 7, scope: !17328)
!17338 = !DILocation(line: 1027, column: 8, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17328, file: !492, line: 1027, column: 7)
!17340 = !DILocation(line: 1027, column: 48, scope: !17339)
!17341 = !DILocation(line: 1029, column: 12, scope: !17328)
!17342 = !DILocation(line: 1029, column: 22, scope: !17328)
!17343 = !DILocation(line: 1029, column: 4, scope: !17328)
!17344 = !DILocation(line: 1029, column: 10, scope: !17328)
!17345 = !DILocation(line: 1030, column: 10, scope: !17328)
!17346 = !DILocation(line: 1030, column: 20, scope: !17328)
!17347 = !DILocation(line: 1030, column: 3, scope: !17328)
!17348 = !DILocation(line: 1031, column: 1, scope: !17328)
!17349 = distinct !DISubprogram(name: "coap_set_header_token", scope: !492, file: !492, line: 1034, type: !17233, isLocal: false, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17350 = !DILocalVariable(name: "packet", arg: 1, scope: !17349, file: !492, line: 1034, type: !54)
!17351 = !DILocation(line: 1034, column: 29, scope: !17349)
!17352 = !DILocalVariable(name: "token", arg: 2, scope: !17349, file: !492, line: 1034, type: !442)
!17353 = !DILocation(line: 1034, column: 52, scope: !17349)
!17354 = !DILocalVariable(name: "token_len", arg: 3, scope: !17349, file: !492, line: 1034, type: !438)
!17355 = !DILocation(line: 1034, column: 66, scope: !17349)
!17356 = !DILocalVariable(name: "coap_pkt", scope: !17349, file: !492, line: 1036, type: !15609)
!17357 = !DILocation(line: 1036, column: 24, scope: !17349)
!17358 = !DILocation(line: 1036, column: 53, scope: !17349)
!17359 = !DILocation(line: 1036, column: 35, scope: !17349)
!17360 = !DILocation(line: 1038, column: 35, scope: !17349)
!17361 = !DILocation(line: 1038, column: 25, scope: !17349)
!17362 = !DILocation(line: 1038, column: 3, scope: !17349)
!17363 = !DILocation(line: 1038, column: 13, scope: !17349)
!17364 = !DILocation(line: 1038, column: 23, scope: !17349)
!17365 = !DILocation(line: 1039, column: 10, scope: !17349)
!17366 = !DILocation(line: 1039, column: 20, scope: !17349)
!17367 = !DILocation(line: 1039, column: 3, scope: !17349)
!17368 = !DILocation(line: 1039, column: 27, scope: !17349)
!17369 = !DILocation(line: 1039, column: 34, scope: !17349)
!17370 = !DILocation(line: 1039, column: 44, scope: !17349)
!17371 = !DILocation(line: 1041, column: 3, scope: !17372)
!17372 = distinct !DILexicalBlock(scope: !17373, file: !492, line: 1041, column: 3)
!17373 = distinct !DILexicalBlock(scope: !17374, file: !492, line: 1041, column: 3)
!17374 = distinct !DILexicalBlock(scope: !17349, file: !492, line: 1041, column: 3)
!17375 = !DILocation(line: 1042, column: 10, scope: !17349)
!17376 = !DILocation(line: 1042, column: 20, scope: !17349)
!17377 = !DILocation(line: 1042, column: 3, scope: !17349)
!17378 = distinct !DISubprogram(name: "coap_get_header_proxy_uri", scope: !492, file: !492, line: 1046, type: !17379, isLocal: false, isDefinition: true, scopeLine: 1047, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17379 = !DISubroutineType(types: !17380)
!17380 = !{!58, !54, !16923}
!17381 = !DILocalVariable(name: "packet", arg: 1, scope: !17378, file: !492, line: 1046, type: !54)
!17382 = !DILocation(line: 1046, column: 33, scope: !17378)
!17383 = !DILocalVariable(name: "uri", arg: 2, scope: !17378, file: !492, line: 1046, type: !16923)
!17384 = !DILocation(line: 1046, column: 54, scope: !17378)
!17385 = !DILocalVariable(name: "coap_pkt", scope: !17378, file: !492, line: 1048, type: !15609)
!17386 = !DILocation(line: 1048, column: 24, scope: !17378)
!17387 = !DILocation(line: 1048, column: 53, scope: !17378)
!17388 = !DILocation(line: 1048, column: 35, scope: !17378)
!17389 = !DILocation(line: 1050, column: 7, scope: !17378)
!17390 = !DILocation(line: 1050, column: 8, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17378, file: !492, line: 1050, column: 7)
!17392 = !DILocation(line: 1050, column: 52, scope: !17391)
!17393 = !DILocation(line: 1052, column: 24, scope: !17378)
!17394 = !DILocation(line: 1052, column: 34, scope: !17378)
!17395 = !DILocation(line: 1052, column: 4, scope: !17378)
!17396 = !DILocation(line: 1052, column: 8, scope: !17378)
!17397 = !DILocation(line: 1053, column: 10, scope: !17378)
!17398 = !DILocation(line: 1053, column: 20, scope: !17378)
!17399 = !DILocation(line: 1053, column: 3, scope: !17378)
!17400 = !DILocation(line: 1054, column: 1, scope: !17378)
!17401 = distinct !DISubprogram(name: "coap_set_header_proxy_uri", scope: !492, file: !492, line: 1057, type: !17402, isLocal: false, isDefinition: true, scopeLine: 1058, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17402 = !DISubroutineType(types: !17403)
!17403 = !{!58, !54, !548}
!17404 = !DILocalVariable(name: "packet", arg: 1, scope: !17401, file: !492, line: 1057, type: !54)
!17405 = !DILocation(line: 1057, column: 33, scope: !17401)
!17406 = !DILocalVariable(name: "uri", arg: 2, scope: !17401, file: !492, line: 1057, type: !548)
!17407 = !DILocation(line: 1057, column: 53, scope: !17401)
!17408 = !DILocalVariable(name: "coap_pkt", scope: !17401, file: !492, line: 1059, type: !15609)
!17409 = !DILocation(line: 1059, column: 24, scope: !17401)
!17410 = !DILocation(line: 1059, column: 53, scope: !17401)
!17411 = !DILocation(line: 1059, column: 35, scope: !17401)
!17412 = !DILocation(line: 1061, column: 36, scope: !17401)
!17413 = !DILocation(line: 1061, column: 3, scope: !17401)
!17414 = !DILocation(line: 1061, column: 13, scope: !17401)
!17415 = !DILocation(line: 1061, column: 23, scope: !17401)
!17416 = !DILocation(line: 1062, column: 36, scope: !17401)
!17417 = !DILocation(line: 1062, column: 29, scope: !17401)
!17418 = !DILocation(line: 1062, column: 3, scope: !17401)
!17419 = !DILocation(line: 1062, column: 13, scope: !17401)
!17420 = !DILocation(line: 1062, column: 27, scope: !17401)
!17421 = !DILocation(line: 1064, column: 3, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !492, line: 1064, column: 3)
!17423 = distinct !DILexicalBlock(scope: !17424, file: !492, line: 1064, column: 3)
!17424 = distinct !DILexicalBlock(scope: !17401, file: !492, line: 1064, column: 3)
!17425 = !DILocation(line: 1065, column: 10, scope: !17401)
!17426 = !DILocation(line: 1065, column: 20, scope: !17401)
!17427 = !DILocation(line: 1065, column: 3, scope: !17401)
!17428 = distinct !DISubprogram(name: "coap_get_header_uri_host", scope: !492, file: !492, line: 1069, type: !17379, isLocal: false, isDefinition: true, scopeLine: 1070, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17429 = !DILocalVariable(name: "packet", arg: 1, scope: !17428, file: !492, line: 1069, type: !54)
!17430 = !DILocation(line: 1069, column: 32, scope: !17428)
!17431 = !DILocalVariable(name: "host", arg: 2, scope: !17428, file: !492, line: 1069, type: !16923)
!17432 = !DILocation(line: 1069, column: 53, scope: !17428)
!17433 = !DILocalVariable(name: "coap_pkt", scope: !17428, file: !492, line: 1071, type: !15609)
!17434 = !DILocation(line: 1071, column: 24, scope: !17428)
!17435 = !DILocation(line: 1071, column: 53, scope: !17428)
!17436 = !DILocation(line: 1071, column: 35, scope: !17428)
!17437 = !DILocation(line: 1073, column: 7, scope: !17428)
!17438 = !DILocation(line: 1073, column: 8, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17428, file: !492, line: 1073, column: 7)
!17440 = !DILocation(line: 1073, column: 51, scope: !17439)
!17441 = !DILocation(line: 1075, column: 19, scope: !17428)
!17442 = !DILocation(line: 1075, column: 29, scope: !17428)
!17443 = !DILocation(line: 1075, column: 4, scope: !17428)
!17444 = !DILocation(line: 1075, column: 9, scope: !17428)
!17445 = !DILocation(line: 1076, column: 10, scope: !17428)
!17446 = !DILocation(line: 1076, column: 20, scope: !17428)
!17447 = !DILocation(line: 1076, column: 3, scope: !17428)
!17448 = !DILocation(line: 1077, column: 1, scope: !17428)
!17449 = distinct !DISubprogram(name: "coap_set_header_uri_host", scope: !492, file: !492, line: 1080, type: !17402, isLocal: false, isDefinition: true, scopeLine: 1081, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17450 = !DILocalVariable(name: "packet", arg: 1, scope: !17449, file: !492, line: 1080, type: !54)
!17451 = !DILocation(line: 1080, column: 32, scope: !17449)
!17452 = !DILocalVariable(name: "host", arg: 2, scope: !17449, file: !492, line: 1080, type: !548)
!17453 = !DILocation(line: 1080, column: 52, scope: !17449)
!17454 = !DILocalVariable(name: "coap_pkt", scope: !17449, file: !492, line: 1082, type: !15609)
!17455 = !DILocation(line: 1082, column: 24, scope: !17449)
!17456 = !DILocation(line: 1082, column: 53, scope: !17449)
!17457 = !DILocation(line: 1082, column: 35, scope: !17449)
!17458 = !DILocation(line: 1084, column: 35, scope: !17449)
!17459 = !DILocation(line: 1084, column: 3, scope: !17449)
!17460 = !DILocation(line: 1084, column: 13, scope: !17449)
!17461 = !DILocation(line: 1084, column: 22, scope: !17449)
!17462 = !DILocation(line: 1085, column: 35, scope: !17449)
!17463 = !DILocation(line: 1085, column: 28, scope: !17449)
!17464 = !DILocation(line: 1085, column: 3, scope: !17449)
!17465 = !DILocation(line: 1085, column: 13, scope: !17449)
!17466 = !DILocation(line: 1085, column: 26, scope: !17449)
!17467 = !DILocation(line: 1087, column: 3, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17469, file: !492, line: 1087, column: 3)
!17469 = distinct !DILexicalBlock(scope: !17470, file: !492, line: 1087, column: 3)
!17470 = distinct !DILexicalBlock(scope: !17449, file: !492, line: 1087, column: 3)
!17471 = !DILocation(line: 1088, column: 10, scope: !17449)
!17472 = !DILocation(line: 1088, column: 20, scope: !17449)
!17473 = !DILocation(line: 1088, column: 3, scope: !17449)
!17474 = distinct !DISubprogram(name: "coap_get_header_uri_path", scope: !492, file: !492, line: 1092, type: !17379, isLocal: false, isDefinition: true, scopeLine: 1093, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17475 = !DILocalVariable(name: "packet", arg: 1, scope: !17474, file: !492, line: 1092, type: !54)
!17476 = !DILocation(line: 1092, column: 32, scope: !17474)
!17477 = !DILocalVariable(name: "path", arg: 2, scope: !17474, file: !492, line: 1092, type: !16923)
!17478 = !DILocation(line: 1092, column: 53, scope: !17474)
!17479 = !DILocalVariable(name: "coap_pkt", scope: !17474, file: !492, line: 1094, type: !15609)
!17480 = !DILocation(line: 1094, column: 24, scope: !17474)
!17481 = !DILocation(line: 1094, column: 53, scope: !17474)
!17482 = !DILocation(line: 1094, column: 35, scope: !17474)
!17483 = !DILocation(line: 1096, column: 7, scope: !17474)
!17484 = !DILocation(line: 1096, column: 8, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17474, file: !492, line: 1096, column: 7)
!17486 = !DILocation(line: 1096, column: 51, scope: !17485)
!17487 = !DILocation(line: 1098, column: 4, scope: !17474)
!17488 = !DILocation(line: 1098, column: 9, scope: !17474)
!17489 = !DILocation(line: 1099, column: 3, scope: !17474)
!17490 = !DILocation(line: 1100, column: 1, scope: !17474)
!17491 = distinct !DISubprogram(name: "coap_set_header_uri_path", scope: !492, file: !492, line: 1103, type: !17402, isLocal: false, isDefinition: true, scopeLine: 1104, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17492 = !DILocalVariable(name: "packet", arg: 1, scope: !17491, file: !492, line: 1103, type: !54)
!17493 = !DILocation(line: 1103, column: 32, scope: !17491)
!17494 = !DILocalVariable(name: "path", arg: 2, scope: !17491, file: !492, line: 1103, type: !548)
!17495 = !DILocation(line: 1103, column: 52, scope: !17491)
!17496 = !DILocalVariable(name: "coap_pkt", scope: !17491, file: !492, line: 1105, type: !504)
!17497 = !DILocation(line: 1105, column: 18, scope: !17491)
!17498 = !DILocation(line: 1105, column: 47, scope: !17491)
!17499 = !DILocation(line: 1105, column: 29, scope: !17491)
!17500 = !DILocalVariable(name: "length", scope: !17491, file: !492, line: 1106, type: !58)
!17501 = !DILocation(line: 1106, column: 7, scope: !17491)
!17502 = !DILocation(line: 1108, column: 21, scope: !17491)
!17503 = !DILocation(line: 1108, column: 31, scope: !17491)
!17504 = !DILocation(line: 1108, column: 3, scope: !17491)
!17505 = !DILocation(line: 1109, column: 3, scope: !17491)
!17506 = !DILocation(line: 1109, column: 13, scope: !17491)
!17507 = !DILocation(line: 1109, column: 22, scope: !17491)
!17508 = !DILocation(line: 1111, column: 7, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17491, file: !492, line: 1111, column: 7)
!17510 = !DILocation(line: 1111, column: 14, scope: !17509)
!17511 = !DILocation(line: 1111, column: 7, scope: !17491)
!17512 = !DILocation(line: 1111, column: 21, scope: !17509)
!17513 = !DILocation(line: 1113, column: 3, scope: !17491)
!17514 = distinct !{!17514, !17513, !17515}
!17515 = !DILocation(line: 1123, column: 24, scope: !17491)
!17516 = !DILocalVariable(name: "i", scope: !17517, file: !492, line: 1115, type: !58)
!17517 = distinct !DILexicalBlock(scope: !17491, file: !492, line: 1114, column: 3)
!17518 = !DILocation(line: 1115, column: 11, scope: !17517)
!17519 = !DILocation(line: 1117, column: 7, scope: !17517)
!17520 = !DILocation(line: 1117, column: 14, scope: !17517)
!17521 = !DILocation(line: 1117, column: 19, scope: !17517)
!17522 = !DILocation(line: 1117, column: 22, scope: !17517)
!17523 = !DILocation(line: 1117, column: 27, scope: !17517)
!17524 = !DILocation(line: 1117, column: 30, scope: !17517)
!17525 = !DILocation(line: 1117, column: 35, scope: !17517)
!17526 = !DILocation(line: 1117, column: 38, scope: !17517)
!17527 = !DILocation(line: 1117, column: 47, scope: !17517)
!17528 = distinct !{!17528, !17519, !17527}
!17529 = !DILocation(line: 1118, column: 31, scope: !17517)
!17530 = !DILocation(line: 1118, column: 41, scope: !17517)
!17531 = !DILocation(line: 1118, column: 63, scope: !17517)
!17532 = !DILocation(line: 1118, column: 69, scope: !17517)
!17533 = !DILocation(line: 1118, column: 7, scope: !17517)
!17534 = !DILocation(line: 1120, column: 11, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17517, file: !492, line: 1120, column: 11)
!17536 = !DILocation(line: 1120, column: 16, scope: !17535)
!17537 = !DILocation(line: 1120, column: 19, scope: !17535)
!17538 = !DILocation(line: 1120, column: 11, scope: !17517)
!17539 = !DILocation(line: 1120, column: 28, scope: !17535)
!17540 = !DILocation(line: 1120, column: 27, scope: !17535)
!17541 = !DILocation(line: 1121, column: 15, scope: !17517)
!17542 = !DILocation(line: 1121, column: 12, scope: !17517)
!17543 = !DILocation(line: 1122, column: 17, scope: !17517)
!17544 = !DILocation(line: 1122, column: 14, scope: !17517)
!17545 = !DILocation(line: 1123, column: 3, scope: !17517)
!17546 = !DILocation(line: 1123, column: 12, scope: !17491)
!17547 = !DILocation(line: 1123, column: 20, scope: !17491)
!17548 = !DILocation(line: 1125, column: 3, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17550, file: !492, line: 1125, column: 3)
!17550 = distinct !DILexicalBlock(scope: !17551, file: !492, line: 1125, column: 3)
!17551 = distinct !DILexicalBlock(scope: !17491, file: !492, line: 1125, column: 3)
!17552 = !DILocation(line: 1126, column: 10, scope: !17491)
!17553 = !DILocation(line: 1126, column: 3, scope: !17491)
!17554 = distinct !DISubprogram(name: "coap_set_header_uri_path_segment", scope: !492, file: !492, line: 1130, type: !17402, isLocal: false, isDefinition: true, scopeLine: 1131, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17555 = !DILocalVariable(name: "packet", arg: 1, scope: !17554, file: !492, line: 1130, type: !54)
!17556 = !DILocation(line: 1130, column: 40, scope: !17554)
!17557 = !DILocalVariable(name: "segment", arg: 2, scope: !17554, file: !492, line: 1130, type: !548)
!17558 = !DILocation(line: 1130, column: 60, scope: !17554)
!17559 = !DILocalVariable(name: "coap_pkt", scope: !17554, file: !492, line: 1132, type: !504)
!17560 = !DILocation(line: 1132, column: 18, scope: !17554)
!17561 = !DILocation(line: 1132, column: 47, scope: !17554)
!17562 = !DILocation(line: 1132, column: 29, scope: !17554)
!17563 = !DILocalVariable(name: "length", scope: !17554, file: !492, line: 1133, type: !58)
!17564 = !DILocation(line: 1133, column: 7, scope: !17554)
!17565 = !DILocation(line: 1135, column: 7, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17554, file: !492, line: 1135, column: 7)
!17567 = !DILocation(line: 1135, column: 15, scope: !17566)
!17568 = !DILocation(line: 1135, column: 23, scope: !17566)
!17569 = !DILocation(line: 1135, column: 26, scope: !17566)
!17570 = !DILocation(line: 1135, column: 37, scope: !17566)
!17571 = !DILocation(line: 1135, column: 7, scope: !17554)
!17572 = !DILocation(line: 1137, column: 31, scope: !17573)
!17573 = distinct !DILexicalBlock(scope: !17566, file: !492, line: 1136, column: 3)
!17574 = !DILocation(line: 1137, column: 41, scope: !17573)
!17575 = !DILocation(line: 1137, column: 7, scope: !17573)
!17576 = !DILocation(line: 1138, column: 14, scope: !17573)
!17577 = !DILocation(line: 1139, column: 3, scope: !17573)
!17578 = !DILocation(line: 1142, column: 23, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17566, file: !492, line: 1141, column: 3)
!17580 = !DILocation(line: 1142, column: 16, scope: !17579)
!17581 = !DILocation(line: 1142, column: 14, scope: !17579)
!17582 = !DILocation(line: 1143, column: 31, scope: !17579)
!17583 = !DILocation(line: 1143, column: 41, scope: !17579)
!17584 = !DILocation(line: 1143, column: 63, scope: !17579)
!17585 = !DILocation(line: 1143, column: 72, scope: !17579)
!17586 = !DILocation(line: 1143, column: 7, scope: !17579)
!17587 = !DILocation(line: 1146, column: 3, scope: !17588)
!17588 = distinct !DILexicalBlock(scope: !17589, file: !492, line: 1146, column: 3)
!17589 = distinct !DILexicalBlock(scope: !17590, file: !492, line: 1146, column: 3)
!17590 = distinct !DILexicalBlock(scope: !17554, file: !492, line: 1146, column: 3)
!17591 = !DILocation(line: 1147, column: 10, scope: !17554)
!17592 = !DILocation(line: 1147, column: 3, scope: !17554)
!17593 = distinct !DISubprogram(name: "coap_get_header_uri_query", scope: !492, file: !492, line: 1151, type: !17379, isLocal: false, isDefinition: true, scopeLine: 1152, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17594 = !DILocalVariable(name: "packet", arg: 1, scope: !17593, file: !492, line: 1151, type: !54)
!17595 = !DILocation(line: 1151, column: 33, scope: !17593)
!17596 = !DILocalVariable(name: "query", arg: 2, scope: !17593, file: !492, line: 1151, type: !16923)
!17597 = !DILocation(line: 1151, column: 54, scope: !17593)
!17598 = !DILocalVariable(name: "coap_pkt", scope: !17593, file: !492, line: 1153, type: !15609)
!17599 = !DILocation(line: 1153, column: 24, scope: !17593)
!17600 = !DILocation(line: 1153, column: 53, scope: !17593)
!17601 = !DILocation(line: 1153, column: 35, scope: !17593)
!17602 = !DILocation(line: 1155, column: 7, scope: !17593)
!17603 = !DILocation(line: 1155, column: 8, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17593, file: !492, line: 1155, column: 7)
!17605 = !DILocation(line: 1155, column: 52, scope: !17604)
!17606 = !DILocation(line: 1157, column: 4, scope: !17593)
!17607 = !DILocation(line: 1157, column: 10, scope: !17593)
!17608 = !DILocation(line: 1158, column: 3, scope: !17593)
!17609 = !DILocation(line: 1159, column: 1, scope: !17593)
!17610 = distinct !DISubprogram(name: "coap_set_header_uri_query", scope: !492, file: !492, line: 1162, type: !17402, isLocal: false, isDefinition: true, scopeLine: 1163, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17611 = !DILocalVariable(name: "packet", arg: 1, scope: !17610, file: !492, line: 1162, type: !54)
!17612 = !DILocation(line: 1162, column: 33, scope: !17610)
!17613 = !DILocalVariable(name: "query", arg: 2, scope: !17610, file: !492, line: 1162, type: !548)
!17614 = !DILocation(line: 1162, column: 53, scope: !17610)
!17615 = !DILocalVariable(name: "length", scope: !17610, file: !492, line: 1164, type: !58)
!17616 = !DILocation(line: 1164, column: 9, scope: !17610)
!17617 = !DILocalVariable(name: "coap_pkt", scope: !17610, file: !492, line: 1165, type: !15609)
!17618 = !DILocation(line: 1165, column: 26, scope: !17610)
!17619 = !DILocation(line: 1165, column: 55, scope: !17610)
!17620 = !DILocation(line: 1165, column: 37, scope: !17610)
!17621 = !DILocation(line: 1167, column: 23, scope: !17610)
!17622 = !DILocation(line: 1167, column: 33, scope: !17610)
!17623 = !DILocation(line: 1167, column: 5, scope: !17610)
!17624 = !DILocation(line: 1168, column: 5, scope: !17610)
!17625 = !DILocation(line: 1168, column: 15, scope: !17610)
!17626 = !DILocation(line: 1168, column: 25, scope: !17610)
!17627 = !DILocation(line: 1170, column: 9, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17610, file: !492, line: 1170, column: 9)
!17629 = !DILocation(line: 1170, column: 17, scope: !17628)
!17630 = !DILocation(line: 1170, column: 9, scope: !17610)
!17631 = !DILocation(line: 1170, column: 24, scope: !17628)
!17632 = !DILocation(line: 1172, column: 5, scope: !17610)
!17633 = distinct !{!17633, !17632, !17634}
!17634 = !DILocation(line: 1182, column: 27, scope: !17610)
!17635 = !DILocalVariable(name: "i", scope: !17636, file: !492, line: 1174, type: !58)
!17636 = distinct !DILexicalBlock(scope: !17610, file: !492, line: 1173, column: 5)
!17637 = !DILocation(line: 1174, column: 13, scope: !17636)
!17638 = !DILocation(line: 1176, column: 9, scope: !17636)
!17639 = !DILocation(line: 1176, column: 16, scope: !17636)
!17640 = !DILocation(line: 1176, column: 22, scope: !17636)
!17641 = !DILocation(line: 1176, column: 25, scope: !17636)
!17642 = !DILocation(line: 1176, column: 30, scope: !17636)
!17643 = !DILocation(line: 1176, column: 33, scope: !17636)
!17644 = !DILocation(line: 1176, column: 39, scope: !17636)
!17645 = !DILocation(line: 1176, column: 42, scope: !17636)
!17646 = !DILocation(line: 1176, column: 51, scope: !17636)
!17647 = distinct !{!17647, !17638, !17646}
!17648 = !DILocation(line: 1177, column: 33, scope: !17636)
!17649 = !DILocation(line: 1177, column: 43, scope: !17636)
!17650 = !DILocation(line: 1177, column: 66, scope: !17636)
!17651 = !DILocation(line: 1177, column: 73, scope: !17636)
!17652 = !DILocation(line: 1177, column: 9, scope: !17636)
!17653 = !DILocation(line: 1179, column: 13, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17636, file: !492, line: 1179, column: 13)
!17655 = !DILocation(line: 1179, column: 19, scope: !17654)
!17656 = !DILocation(line: 1179, column: 22, scope: !17654)
!17657 = !DILocation(line: 1179, column: 13, scope: !17636)
!17658 = !DILocation(line: 1179, column: 31, scope: !17654)
!17659 = !DILocation(line: 1179, column: 30, scope: !17654)
!17660 = !DILocation(line: 1180, column: 18, scope: !17636)
!17661 = !DILocation(line: 1180, column: 15, scope: !17636)
!17662 = !DILocation(line: 1181, column: 19, scope: !17636)
!17663 = !DILocation(line: 1181, column: 16, scope: !17636)
!17664 = !DILocation(line: 1182, column: 5, scope: !17636)
!17665 = !DILocation(line: 1182, column: 14, scope: !17610)
!17666 = !DILocation(line: 1182, column: 23, scope: !17610)
!17667 = !DILocation(line: 1184, column: 5, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17669, file: !492, line: 1184, column: 5)
!17669 = distinct !DILexicalBlock(scope: !17670, file: !492, line: 1184, column: 5)
!17670 = distinct !DILexicalBlock(scope: !17610, file: !492, line: 1184, column: 5)
!17671 = !DILocation(line: 1185, column: 12, scope: !17610)
!17672 = !DILocation(line: 1185, column: 5, scope: !17610)
!17673 = distinct !DISubprogram(name: "coap_get_header_location_path", scope: !492, file: !492, line: 1189, type: !17379, isLocal: false, isDefinition: true, scopeLine: 1190, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17674 = !DILocalVariable(name: "packet", arg: 1, scope: !17673, file: !492, line: 1189, type: !54)
!17675 = !DILocation(line: 1189, column: 37, scope: !17673)
!17676 = !DILocalVariable(name: "path", arg: 2, scope: !17673, file: !492, line: 1189, type: !16923)
!17677 = !DILocation(line: 1189, column: 58, scope: !17673)
!17678 = !DILocalVariable(name: "coap_pkt", scope: !17673, file: !492, line: 1191, type: !15609)
!17679 = !DILocation(line: 1191, column: 24, scope: !17673)
!17680 = !DILocation(line: 1191, column: 53, scope: !17673)
!17681 = !DILocation(line: 1191, column: 35, scope: !17673)
!17682 = !DILocation(line: 1193, column: 7, scope: !17673)
!17683 = !DILocation(line: 1193, column: 8, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17673, file: !492, line: 1193, column: 7)
!17685 = !DILocation(line: 1193, column: 56, scope: !17684)
!17686 = !DILocation(line: 1195, column: 4, scope: !17673)
!17687 = !DILocation(line: 1195, column: 9, scope: !17673)
!17688 = !DILocation(line: 1196, column: 3, scope: !17673)
!17689 = !DILocation(line: 1197, column: 1, scope: !17673)
!17690 = distinct !DISubprogram(name: "coap_set_header_location_path", scope: !492, file: !492, line: 1200, type: !17402, isLocal: false, isDefinition: true, scopeLine: 1201, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17691 = !DILocalVariable(name: "packet", arg: 1, scope: !17690, file: !492, line: 1200, type: !54)
!17692 = !DILocation(line: 1200, column: 37, scope: !17690)
!17693 = !DILocalVariable(name: "path", arg: 2, scope: !17690, file: !492, line: 1200, type: !548)
!17694 = !DILocation(line: 1200, column: 57, scope: !17690)
!17695 = !DILocalVariable(name: "coap_pkt", scope: !17690, file: !492, line: 1202, type: !504)
!17696 = !DILocation(line: 1202, column: 20, scope: !17690)
!17697 = !DILocation(line: 1202, column: 49, scope: !17690)
!17698 = !DILocation(line: 1202, column: 31, scope: !17690)
!17699 = !DILocalVariable(name: "length", scope: !17690, file: !492, line: 1203, type: !58)
!17700 = !DILocation(line: 1203, column: 9, scope: !17690)
!17701 = !DILocation(line: 1205, column: 23, scope: !17690)
!17702 = !DILocation(line: 1205, column: 33, scope: !17690)
!17703 = !DILocation(line: 1205, column: 5, scope: !17690)
!17704 = !DILocation(line: 1206, column: 5, scope: !17690)
!17705 = !DILocation(line: 1206, column: 15, scope: !17690)
!17706 = !DILocation(line: 1206, column: 29, scope: !17690)
!17707 = !DILocation(line: 1208, column: 9, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17690, file: !492, line: 1208, column: 9)
!17709 = !DILocation(line: 1208, column: 16, scope: !17708)
!17710 = !DILocation(line: 1208, column: 9, scope: !17690)
!17711 = !DILocation(line: 1208, column: 23, scope: !17708)
!17712 = !DILocation(line: 1210, column: 5, scope: !17690)
!17713 = distinct !{!17713, !17712, !17714}
!17714 = !DILocation(line: 1220, column: 26, scope: !17690)
!17715 = !DILocalVariable(name: "i", scope: !17716, file: !492, line: 1212, type: !58)
!17716 = distinct !DILexicalBlock(scope: !17690, file: !492, line: 1211, column: 5)
!17717 = !DILocation(line: 1212, column: 13, scope: !17716)
!17718 = !DILocation(line: 1214, column: 9, scope: !17716)
!17719 = !DILocation(line: 1214, column: 16, scope: !17716)
!17720 = !DILocation(line: 1214, column: 21, scope: !17716)
!17721 = !DILocation(line: 1214, column: 24, scope: !17716)
!17722 = !DILocation(line: 1214, column: 29, scope: !17716)
!17723 = !DILocation(line: 1214, column: 32, scope: !17716)
!17724 = !DILocation(line: 1214, column: 37, scope: !17716)
!17725 = !DILocation(line: 1214, column: 40, scope: !17716)
!17726 = !DILocation(line: 1214, column: 49, scope: !17716)
!17727 = distinct !{!17727, !17718, !17726}
!17728 = !DILocation(line: 1215, column: 33, scope: !17716)
!17729 = !DILocation(line: 1215, column: 43, scope: !17716)
!17730 = !DILocation(line: 1215, column: 70, scope: !17716)
!17731 = !DILocation(line: 1215, column: 76, scope: !17716)
!17732 = !DILocation(line: 1215, column: 9, scope: !17716)
!17733 = !DILocation(line: 1217, column: 13, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17716, file: !492, line: 1217, column: 13)
!17735 = !DILocation(line: 1217, column: 18, scope: !17734)
!17736 = !DILocation(line: 1217, column: 21, scope: !17734)
!17737 = !DILocation(line: 1217, column: 13, scope: !17716)
!17738 = !DILocation(line: 1217, column: 30, scope: !17734)
!17739 = !DILocation(line: 1217, column: 29, scope: !17734)
!17740 = !DILocation(line: 1218, column: 17, scope: !17716)
!17741 = !DILocation(line: 1218, column: 14, scope: !17716)
!17742 = !DILocation(line: 1219, column: 19, scope: !17716)
!17743 = !DILocation(line: 1219, column: 16, scope: !17716)
!17744 = !DILocation(line: 1220, column: 5, scope: !17716)
!17745 = !DILocation(line: 1220, column: 14, scope: !17690)
!17746 = !DILocation(line: 1220, column: 22, scope: !17690)
!17747 = !DILocation(line: 1222, column: 5, scope: !17748)
!17748 = distinct !DILexicalBlock(scope: !17749, file: !492, line: 1222, column: 5)
!17749 = distinct !DILexicalBlock(scope: !17750, file: !492, line: 1222, column: 5)
!17750 = distinct !DILexicalBlock(scope: !17690, file: !492, line: 1222, column: 5)
!17751 = !DILocation(line: 1223, column: 12, scope: !17690)
!17752 = !DILocation(line: 1223, column: 5, scope: !17690)
!17753 = distinct !DISubprogram(name: "coap_get_header_location_query", scope: !492, file: !492, line: 1227, type: !17379, isLocal: false, isDefinition: true, scopeLine: 1228, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17754 = !DILocalVariable(name: "packet", arg: 1, scope: !17753, file: !492, line: 1227, type: !54)
!17755 = !DILocation(line: 1227, column: 38, scope: !17753)
!17756 = !DILocalVariable(name: "query", arg: 2, scope: !17753, file: !492, line: 1227, type: !16923)
!17757 = !DILocation(line: 1227, column: 59, scope: !17753)
!17758 = !DILocalVariable(name: "coap_pkt", scope: !17753, file: !492, line: 1229, type: !15609)
!17759 = !DILocation(line: 1229, column: 24, scope: !17753)
!17760 = !DILocation(line: 1229, column: 53, scope: !17753)
!17761 = !DILocation(line: 1229, column: 35, scope: !17753)
!17762 = !DILocation(line: 1231, column: 7, scope: !17753)
!17763 = !DILocation(line: 1231, column: 8, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17753, file: !492, line: 1231, column: 7)
!17765 = !DILocation(line: 1231, column: 57, scope: !17764)
!17766 = !DILocation(line: 1233, column: 25, scope: !17753)
!17767 = !DILocation(line: 1233, column: 35, scope: !17753)
!17768 = !DILocation(line: 1233, column: 4, scope: !17753)
!17769 = !DILocation(line: 1233, column: 10, scope: !17753)
!17770 = !DILocation(line: 1234, column: 10, scope: !17753)
!17771 = !DILocation(line: 1234, column: 20, scope: !17753)
!17772 = !DILocation(line: 1234, column: 3, scope: !17753)
!17773 = !DILocation(line: 1235, column: 1, scope: !17753)
!17774 = distinct !DISubprogram(name: "coap_set_header_location_query", scope: !492, file: !492, line: 1238, type: !17775, isLocal: false, isDefinition: true, scopeLine: 1239, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17775 = !DISubroutineType(types: !17776)
!17776 = !{!58, !54, !117}
!17777 = !DILocalVariable(name: "packet", arg: 1, scope: !17774, file: !492, line: 1238, type: !54)
!17778 = !DILocation(line: 1238, column: 38, scope: !17774)
!17779 = !DILocalVariable(name: "query", arg: 2, scope: !17774, file: !492, line: 1238, type: !117)
!17780 = !DILocation(line: 1238, column: 52, scope: !17774)
!17781 = !DILocalVariable(name: "coap_pkt", scope: !17774, file: !492, line: 1240, type: !15609)
!17782 = !DILocation(line: 1240, column: 24, scope: !17774)
!17783 = !DILocation(line: 1240, column: 53, scope: !17774)
!17784 = !DILocation(line: 1240, column: 35, scope: !17774)
!17785 = !DILocation(line: 1242, column: 3, scope: !17774)
!17786 = !DILocation(line: 1242, column: 10, scope: !17774)
!17787 = !DILocation(line: 1242, column: 18, scope: !17774)
!17788 = !DILocation(line: 1242, column: 25, scope: !17774)
!17789 = distinct !{!17789, !17785, !17790}
!17790 = !DILocation(line: 1242, column: 27, scope: !17774)
!17791 = !DILocation(line: 1244, column: 41, scope: !17774)
!17792 = !DILocation(line: 1244, column: 3, scope: !17774)
!17793 = !DILocation(line: 1244, column: 13, scope: !17774)
!17794 = !DILocation(line: 1244, column: 28, scope: !17774)
!17795 = !DILocation(line: 1245, column: 41, scope: !17774)
!17796 = !DILocation(line: 1245, column: 34, scope: !17774)
!17797 = !DILocation(line: 1245, column: 3, scope: !17774)
!17798 = !DILocation(line: 1245, column: 13, scope: !17774)
!17799 = !DILocation(line: 1245, column: 32, scope: !17774)
!17800 = !DILocation(line: 1247, column: 3, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !17802, file: !492, line: 1247, column: 3)
!17802 = distinct !DILexicalBlock(scope: !17803, file: !492, line: 1247, column: 3)
!17803 = distinct !DILexicalBlock(scope: !17774, file: !492, line: 1247, column: 3)
!17804 = !DILocation(line: 1248, column: 10, scope: !17774)
!17805 = !DILocation(line: 1248, column: 20, scope: !17774)
!17806 = !DILocation(line: 1248, column: 3, scope: !17774)
!17807 = distinct !DISubprogram(name: "coap_get_header_observe", scope: !492, file: !492, line: 1252, type: !17166, isLocal: false, isDefinition: true, scopeLine: 1253, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17808 = !DILocalVariable(name: "packet", arg: 1, scope: !17807, file: !492, line: 1252, type: !54)
!17809 = !DILocation(line: 1252, column: 31, scope: !17807)
!17810 = !DILocalVariable(name: "observe", arg: 2, scope: !17807, file: !492, line: 1252, type: !9257)
!17811 = !DILocation(line: 1252, column: 49, scope: !17807)
!17812 = !DILocalVariable(name: "coap_pkt", scope: !17807, file: !492, line: 1254, type: !15609)
!17813 = !DILocation(line: 1254, column: 24, scope: !17807)
!17814 = !DILocation(line: 1254, column: 53, scope: !17807)
!17815 = !DILocation(line: 1254, column: 35, scope: !17807)
!17816 = !DILocation(line: 1256, column: 7, scope: !17807)
!17817 = !DILocation(line: 1256, column: 8, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17807, file: !492, line: 1256, column: 7)
!17819 = !DILocation(line: 1256, column: 50, scope: !17818)
!17820 = !DILocation(line: 1258, column: 14, scope: !17807)
!17821 = !DILocation(line: 1258, column: 24, scope: !17807)
!17822 = !DILocation(line: 1258, column: 4, scope: !17807)
!17823 = !DILocation(line: 1258, column: 12, scope: !17807)
!17824 = !DILocation(line: 1259, column: 3, scope: !17807)
!17825 = !DILocation(line: 1260, column: 1, scope: !17807)
!17826 = distinct !DISubprogram(name: "coap_set_header_observe", scope: !492, file: !492, line: 1263, type: !17190, isLocal: false, isDefinition: true, scopeLine: 1264, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17827 = !DILocalVariable(name: "packet", arg: 1, scope: !17826, file: !492, line: 1263, type: !54)
!17828 = !DILocation(line: 1263, column: 31, scope: !17826)
!17829 = !DILocalVariable(name: "observe", arg: 2, scope: !17826, file: !492, line: 1263, type: !86)
!17830 = !DILocation(line: 1263, column: 48, scope: !17826)
!17831 = !DILocalVariable(name: "coap_pkt", scope: !17826, file: !492, line: 1265, type: !15609)
!17832 = !DILocation(line: 1265, column: 24, scope: !17826)
!17833 = !DILocation(line: 1265, column: 53, scope: !17826)
!17834 = !DILocation(line: 1265, column: 35, scope: !17826)
!17835 = !DILocation(line: 1267, column: 36, scope: !17826)
!17836 = !DILocation(line: 1267, column: 34, scope: !17826)
!17837 = !DILocation(line: 1267, column: 3, scope: !17826)
!17838 = !DILocation(line: 1267, column: 13, scope: !17826)
!17839 = !DILocation(line: 1267, column: 21, scope: !17826)
!17840 = !DILocation(line: 1268, column: 3, scope: !17841)
!17841 = distinct !DILexicalBlock(scope: !17842, file: !492, line: 1268, column: 3)
!17842 = distinct !DILexicalBlock(scope: !17843, file: !492, line: 1268, column: 3)
!17843 = distinct !DILexicalBlock(scope: !17826, file: !492, line: 1268, column: 3)
!17844 = !DILocation(line: 1269, column: 3, scope: !17826)
!17845 = distinct !DISubprogram(name: "coap_get_header_block2", scope: !492, file: !492, line: 1273, type: !17846, isLocal: false, isDefinition: true, scopeLine: 1274, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17846 = !DISubroutineType(types: !17847)
!17847 = !{!58, !54, !9257, !186, !2846, !9257}
!17848 = !DILocalVariable(name: "packet", arg: 1, scope: !17845, file: !492, line: 1273, type: !54)
!17849 = !DILocation(line: 1273, column: 30, scope: !17845)
!17850 = !DILocalVariable(name: "num", arg: 2, scope: !17845, file: !492, line: 1273, type: !9257)
!17851 = !DILocation(line: 1273, column: 48, scope: !17845)
!17852 = !DILocalVariable(name: "more", arg: 3, scope: !17845, file: !492, line: 1273, type: !186)
!17853 = !DILocation(line: 1273, column: 62, scope: !17845)
!17854 = !DILocalVariable(name: "size", arg: 4, scope: !17845, file: !492, line: 1273, type: !2846)
!17855 = !DILocation(line: 1273, column: 78, scope: !17845)
!17856 = !DILocalVariable(name: "offset", arg: 5, scope: !17845, file: !492, line: 1273, type: !9257)
!17857 = !DILocation(line: 1273, column: 94, scope: !17845)
!17858 = !DILocalVariable(name: "coap_pkt", scope: !17845, file: !492, line: 1275, type: !15609)
!17859 = !DILocation(line: 1275, column: 24, scope: !17845)
!17860 = !DILocation(line: 1275, column: 53, scope: !17845)
!17861 = !DILocation(line: 1275, column: 35, scope: !17845)
!17862 = !DILocation(line: 1277, column: 7, scope: !17845)
!17863 = !DILocation(line: 1277, column: 8, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !17845, file: !492, line: 1277, column: 7)
!17865 = !DILocation(line: 1277, column: 49, scope: !17864)
!17866 = !DILocation(line: 1280, column: 7, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17845, file: !492, line: 1280, column: 7)
!17868 = !DILocation(line: 1280, column: 10, scope: !17867)
!17869 = !DILocation(line: 1280, column: 7, scope: !17845)
!17870 = !DILocation(line: 1280, column: 25, scope: !17867)
!17871 = !DILocation(line: 1280, column: 35, scope: !17867)
!17872 = !DILocation(line: 1280, column: 19, scope: !17867)
!17873 = !DILocation(line: 1280, column: 23, scope: !17867)
!17874 = !DILocation(line: 1280, column: 18, scope: !17867)
!17875 = !DILocation(line: 1281, column: 7, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17845, file: !492, line: 1281, column: 7)
!17877 = !DILocation(line: 1281, column: 11, scope: !17876)
!17878 = !DILocation(line: 1281, column: 7, scope: !17845)
!17879 = !DILocation(line: 1281, column: 27, scope: !17876)
!17880 = !DILocation(line: 1281, column: 37, scope: !17876)
!17881 = !DILocation(line: 1281, column: 20, scope: !17876)
!17882 = !DILocation(line: 1281, column: 25, scope: !17876)
!17883 = !DILocation(line: 1281, column: 19, scope: !17876)
!17884 = !DILocation(line: 1282, column: 7, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17845, file: !492, line: 1282, column: 7)
!17886 = !DILocation(line: 1282, column: 11, scope: !17885)
!17887 = !DILocation(line: 1282, column: 7, scope: !17845)
!17888 = !DILocation(line: 1282, column: 27, scope: !17885)
!17889 = !DILocation(line: 1282, column: 37, scope: !17885)
!17890 = !DILocation(line: 1282, column: 20, scope: !17885)
!17891 = !DILocation(line: 1282, column: 25, scope: !17885)
!17892 = !DILocation(line: 1282, column: 19, scope: !17885)
!17893 = !DILocation(line: 1283, column: 7, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17845, file: !492, line: 1283, column: 7)
!17895 = !DILocation(line: 1283, column: 13, scope: !17894)
!17896 = !DILocation(line: 1283, column: 7, scope: !17845)
!17897 = !DILocation(line: 1283, column: 31, scope: !17894)
!17898 = !DILocation(line: 1283, column: 41, scope: !17894)
!17899 = !DILocation(line: 1283, column: 22, scope: !17894)
!17900 = !DILocation(line: 1283, column: 29, scope: !17894)
!17901 = !DILocation(line: 1283, column: 21, scope: !17894)
!17902 = !DILocation(line: 1285, column: 3, scope: !17845)
!17903 = !DILocation(line: 1286, column: 1, scope: !17845)
!17904 = distinct !DISubprogram(name: "coap_set_header_block2", scope: !492, file: !492, line: 1289, type: !17905, isLocal: false, isDefinition: true, scopeLine: 1290, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17905 = !DISubroutineType(types: !17906)
!17906 = !{!58, !54, !86, !107, !79}
!17907 = !DILocalVariable(name: "packet", arg: 1, scope: !17904, file: !492, line: 1289, type: !54)
!17908 = !DILocation(line: 1289, column: 30, scope: !17904)
!17909 = !DILocalVariable(name: "num", arg: 2, scope: !17904, file: !492, line: 1289, type: !86)
!17910 = !DILocation(line: 1289, column: 47, scope: !17904)
!17911 = !DILocalVariable(name: "more", arg: 3, scope: !17904, file: !492, line: 1289, type: !107)
!17912 = !DILocation(line: 1289, column: 60, scope: !17904)
!17913 = !DILocalVariable(name: "size", arg: 4, scope: !17904, file: !492, line: 1289, type: !79)
!17914 = !DILocation(line: 1289, column: 75, scope: !17904)
!17915 = !DILocalVariable(name: "coap_pkt", scope: !17904, file: !492, line: 1291, type: !15609)
!17916 = !DILocation(line: 1291, column: 24, scope: !17904)
!17917 = !DILocation(line: 1291, column: 53, scope: !17904)
!17918 = !DILocation(line: 1291, column: 35, scope: !17904)
!17919 = !DILocation(line: 1293, column: 7, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17904, file: !492, line: 1293, column: 7)
!17921 = !DILocation(line: 1293, column: 11, scope: !17920)
!17922 = !DILocation(line: 1293, column: 7, scope: !17904)
!17923 = !DILocation(line: 1293, column: 16, scope: !17920)
!17924 = !DILocation(line: 1294, column: 7, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17904, file: !492, line: 1294, column: 7)
!17926 = !DILocation(line: 1294, column: 11, scope: !17925)
!17927 = !DILocation(line: 1294, column: 7, scope: !17904)
!17928 = !DILocation(line: 1294, column: 18, scope: !17925)
!17929 = !DILocation(line: 1295, column: 7, scope: !17930)
!17930 = distinct !DILexicalBlock(scope: !17904, file: !492, line: 1295, column: 7)
!17931 = !DILocation(line: 1295, column: 10, scope: !17930)
!17932 = !DILocation(line: 1295, column: 7, scope: !17904)
!17933 = !DILocation(line: 1295, column: 21, scope: !17930)
!17934 = !DILocation(line: 1297, column: 26, scope: !17904)
!17935 = !DILocation(line: 1297, column: 3, scope: !17904)
!17936 = !DILocation(line: 1297, column: 13, scope: !17904)
!17937 = !DILocation(line: 1297, column: 24, scope: !17904)
!17938 = !DILocation(line: 1298, column: 27, scope: !17904)
!17939 = !DILocation(line: 1298, column: 3, scope: !17904)
!17940 = !DILocation(line: 1298, column: 13, scope: !17904)
!17941 = !DILocation(line: 1298, column: 25, scope: !17904)
!17942 = !DILocation(line: 1299, column: 27, scope: !17904)
!17943 = !DILocation(line: 1299, column: 3, scope: !17904)
!17944 = !DILocation(line: 1299, column: 13, scope: !17904)
!17945 = !DILocation(line: 1299, column: 25, scope: !17904)
!17946 = !DILocation(line: 1301, column: 3, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17948, file: !492, line: 1301, column: 3)
!17948 = distinct !DILexicalBlock(scope: !17949, file: !492, line: 1301, column: 3)
!17949 = distinct !DILexicalBlock(scope: !17904, file: !492, line: 1301, column: 3)
!17950 = !DILocation(line: 1302, column: 3, scope: !17904)
!17951 = !DILocation(line: 1303, column: 1, scope: !17904)
!17952 = distinct !DISubprogram(name: "coap_get_header_block1", scope: !492, file: !492, line: 1306, type: !17846, isLocal: false, isDefinition: true, scopeLine: 1307, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!17953 = !DILocalVariable(name: "packet", arg: 1, scope: !17952, file: !492, line: 1306, type: !54)
!17954 = !DILocation(line: 1306, column: 30, scope: !17952)
!17955 = !DILocalVariable(name: "num", arg: 2, scope: !17952, file: !492, line: 1306, type: !9257)
!17956 = !DILocation(line: 1306, column: 48, scope: !17952)
!17957 = !DILocalVariable(name: "more", arg: 3, scope: !17952, file: !492, line: 1306, type: !186)
!17958 = !DILocation(line: 1306, column: 62, scope: !17952)
!17959 = !DILocalVariable(name: "size", arg: 4, scope: !17952, file: !492, line: 1306, type: !2846)
!17960 = !DILocation(line: 1306, column: 78, scope: !17952)
!17961 = !DILocalVariable(name: "offset", arg: 5, scope: !17952, file: !492, line: 1306, type: !9257)
!17962 = !DILocation(line: 1306, column: 94, scope: !17952)
!17963 = !DILocalVariable(name: "coap_pkt", scope: !17952, file: !492, line: 1308, type: !15609)
!17964 = !DILocation(line: 1308, column: 24, scope: !17952)
!17965 = !DILocation(line: 1308, column: 53, scope: !17952)
!17966 = !DILocation(line: 1308, column: 35, scope: !17952)
!17967 = !DILocation(line: 1310, column: 7, scope: !17952)
!17968 = !DILocation(line: 1310, column: 8, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17952, file: !492, line: 1310, column: 7)
!17970 = !DILocation(line: 1310, column: 49, scope: !17969)
!17971 = !DILocation(line: 1313, column: 7, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17952, file: !492, line: 1313, column: 7)
!17973 = !DILocation(line: 1313, column: 10, scope: !17972)
!17974 = !DILocation(line: 1313, column: 7, scope: !17952)
!17975 = !DILocation(line: 1313, column: 25, scope: !17972)
!17976 = !DILocation(line: 1313, column: 35, scope: !17972)
!17977 = !DILocation(line: 1313, column: 19, scope: !17972)
!17978 = !DILocation(line: 1313, column: 23, scope: !17972)
!17979 = !DILocation(line: 1313, column: 18, scope: !17972)
!17980 = !DILocation(line: 1314, column: 7, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17952, file: !492, line: 1314, column: 7)
!17982 = !DILocation(line: 1314, column: 11, scope: !17981)
!17983 = !DILocation(line: 1314, column: 7, scope: !17952)
!17984 = !DILocation(line: 1314, column: 27, scope: !17981)
!17985 = !DILocation(line: 1314, column: 37, scope: !17981)
!17986 = !DILocation(line: 1314, column: 20, scope: !17981)
!17987 = !DILocation(line: 1314, column: 25, scope: !17981)
!17988 = !DILocation(line: 1314, column: 19, scope: !17981)
!17989 = !DILocation(line: 1315, column: 7, scope: !17990)
!17990 = distinct !DILexicalBlock(scope: !17952, file: !492, line: 1315, column: 7)
!17991 = !DILocation(line: 1315, column: 11, scope: !17990)
!17992 = !DILocation(line: 1315, column: 7, scope: !17952)
!17993 = !DILocation(line: 1315, column: 27, scope: !17990)
!17994 = !DILocation(line: 1315, column: 37, scope: !17990)
!17995 = !DILocation(line: 1315, column: 20, scope: !17990)
!17996 = !DILocation(line: 1315, column: 25, scope: !17990)
!17997 = !DILocation(line: 1315, column: 19, scope: !17990)
!17998 = !DILocation(line: 1316, column: 7, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17952, file: !492, line: 1316, column: 7)
!18000 = !DILocation(line: 1316, column: 13, scope: !17999)
!18001 = !DILocation(line: 1316, column: 7, scope: !17952)
!18002 = !DILocation(line: 1316, column: 31, scope: !17999)
!18003 = !DILocation(line: 1316, column: 41, scope: !17999)
!18004 = !DILocation(line: 1316, column: 22, scope: !17999)
!18005 = !DILocation(line: 1316, column: 29, scope: !17999)
!18006 = !DILocation(line: 1316, column: 21, scope: !17999)
!18007 = !DILocation(line: 1318, column: 3, scope: !17952)
!18008 = !DILocation(line: 1319, column: 1, scope: !17952)
!18009 = distinct !DISubprogram(name: "coap_set_header_block1", scope: !492, file: !492, line: 1322, type: !17905, isLocal: false, isDefinition: true, scopeLine: 1323, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!18010 = !DILocalVariable(name: "packet", arg: 1, scope: !18009, file: !492, line: 1322, type: !54)
!18011 = !DILocation(line: 1322, column: 30, scope: !18009)
!18012 = !DILocalVariable(name: "num", arg: 2, scope: !18009, file: !492, line: 1322, type: !86)
!18013 = !DILocation(line: 1322, column: 47, scope: !18009)
!18014 = !DILocalVariable(name: "more", arg: 3, scope: !18009, file: !492, line: 1322, type: !107)
!18015 = !DILocation(line: 1322, column: 60, scope: !18009)
!18016 = !DILocalVariable(name: "size", arg: 4, scope: !18009, file: !492, line: 1322, type: !79)
!18017 = !DILocation(line: 1322, column: 75, scope: !18009)
!18018 = !DILocalVariable(name: "coap_pkt", scope: !18009, file: !492, line: 1324, type: !15609)
!18019 = !DILocation(line: 1324, column: 24, scope: !18009)
!18020 = !DILocation(line: 1324, column: 53, scope: !18009)
!18021 = !DILocation(line: 1324, column: 35, scope: !18009)
!18022 = !DILocation(line: 1326, column: 7, scope: !18023)
!18023 = distinct !DILexicalBlock(scope: !18009, file: !492, line: 1326, column: 7)
!18024 = !DILocation(line: 1326, column: 11, scope: !18023)
!18025 = !DILocation(line: 1326, column: 7, scope: !18009)
!18026 = !DILocation(line: 1326, column: 16, scope: !18023)
!18027 = !DILocation(line: 1327, column: 7, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !18009, file: !492, line: 1327, column: 7)
!18029 = !DILocation(line: 1327, column: 11, scope: !18028)
!18030 = !DILocation(line: 1327, column: 7, scope: !18009)
!18031 = !DILocation(line: 1327, column: 18, scope: !18028)
!18032 = !DILocation(line: 1328, column: 7, scope: !18033)
!18033 = distinct !DILexicalBlock(scope: !18009, file: !492, line: 1328, column: 7)
!18034 = !DILocation(line: 1328, column: 10, scope: !18033)
!18035 = !DILocation(line: 1328, column: 7, scope: !18009)
!18036 = !DILocation(line: 1328, column: 21, scope: !18033)
!18037 = !DILocation(line: 1330, column: 26, scope: !18009)
!18038 = !DILocation(line: 1330, column: 3, scope: !18009)
!18039 = !DILocation(line: 1330, column: 13, scope: !18009)
!18040 = !DILocation(line: 1330, column: 24, scope: !18009)
!18041 = !DILocation(line: 1331, column: 27, scope: !18009)
!18042 = !DILocation(line: 1331, column: 3, scope: !18009)
!18043 = !DILocation(line: 1331, column: 13, scope: !18009)
!18044 = !DILocation(line: 1331, column: 25, scope: !18009)
!18045 = !DILocation(line: 1332, column: 27, scope: !18009)
!18046 = !DILocation(line: 1332, column: 3, scope: !18009)
!18047 = !DILocation(line: 1332, column: 13, scope: !18009)
!18048 = !DILocation(line: 1332, column: 25, scope: !18009)
!18049 = !DILocation(line: 1334, column: 3, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18051, file: !492, line: 1334, column: 3)
!18051 = distinct !DILexicalBlock(scope: !18052, file: !492, line: 1334, column: 3)
!18052 = distinct !DILexicalBlock(scope: !18009, file: !492, line: 1334, column: 3)
!18053 = !DILocation(line: 1335, column: 3, scope: !18009)
!18054 = !DILocation(line: 1336, column: 1, scope: !18009)
!18055 = distinct !DISubprogram(name: "coap_get_header_size", scope: !492, file: !492, line: 1339, type: !17166, isLocal: false, isDefinition: true, scopeLine: 1340, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!18056 = !DILocalVariable(name: "packet", arg: 1, scope: !18055, file: !492, line: 1339, type: !54)
!18057 = !DILocation(line: 1339, column: 28, scope: !18055)
!18058 = !DILocalVariable(name: "size", arg: 2, scope: !18055, file: !492, line: 1339, type: !9257)
!18059 = !DILocation(line: 1339, column: 46, scope: !18055)
!18060 = !DILocalVariable(name: "coap_pkt", scope: !18055, file: !492, line: 1341, type: !15609)
!18061 = !DILocation(line: 1341, column: 24, scope: !18055)
!18062 = !DILocation(line: 1341, column: 53, scope: !18055)
!18063 = !DILocation(line: 1341, column: 35, scope: !18055)
!18064 = !DILocation(line: 1343, column: 7, scope: !18055)
!18065 = !DILocation(line: 1343, column: 8, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18055, file: !492, line: 1343, column: 7)
!18067 = !DILocation(line: 1343, column: 47, scope: !18066)
!18068 = !DILocation(line: 1345, column: 11, scope: !18055)
!18069 = !DILocation(line: 1345, column: 21, scope: !18055)
!18070 = !DILocation(line: 1345, column: 4, scope: !18055)
!18071 = !DILocation(line: 1345, column: 9, scope: !18055)
!18072 = !DILocation(line: 1346, column: 3, scope: !18055)
!18073 = !DILocation(line: 1347, column: 1, scope: !18055)
!18074 = distinct !DISubprogram(name: "coap_set_header_size", scope: !492, file: !492, line: 1350, type: !17190, isLocal: false, isDefinition: true, scopeLine: 1351, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!18075 = !DILocalVariable(name: "packet", arg: 1, scope: !18074, file: !492, line: 1350, type: !54)
!18076 = !DILocation(line: 1350, column: 28, scope: !18074)
!18077 = !DILocalVariable(name: "size", arg: 2, scope: !18074, file: !492, line: 1350, type: !86)
!18078 = !DILocation(line: 1350, column: 45, scope: !18074)
!18079 = !DILocalVariable(name: "coap_pkt", scope: !18074, file: !492, line: 1352, type: !15609)
!18080 = !DILocation(line: 1352, column: 24, scope: !18074)
!18081 = !DILocation(line: 1352, column: 53, scope: !18074)
!18082 = !DILocation(line: 1352, column: 35, scope: !18074)
!18083 = !DILocation(line: 1354, column: 20, scope: !18074)
!18084 = !DILocation(line: 1354, column: 3, scope: !18074)
!18085 = !DILocation(line: 1354, column: 13, scope: !18074)
!18086 = !DILocation(line: 1354, column: 18, scope: !18074)
!18087 = !DILocation(line: 1355, column: 3, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !18089, file: !492, line: 1355, column: 3)
!18089 = distinct !DILexicalBlock(scope: !18090, file: !492, line: 1355, column: 3)
!18090 = distinct !DILexicalBlock(scope: !18074, file: !492, line: 1355, column: 3)
!18091 = !DILocation(line: 1356, column: 3, scope: !18074)
!18092 = distinct !DISubprogram(name: "coap_get_payload", scope: !492, file: !492, line: 1362, type: !17210, isLocal: false, isDefinition: true, scopeLine: 1363, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!18093 = !DILocalVariable(name: "packet", arg: 1, scope: !18092, file: !492, line: 1362, type: !54)
!18094 = !DILocation(line: 1362, column: 24, scope: !18092)
!18095 = !DILocalVariable(name: "payload", arg: 2, scope: !18092, file: !492, line: 1362, type: !1039)
!18096 = !DILocation(line: 1362, column: 48, scope: !18092)
!18097 = !DILocalVariable(name: "coap_pkt", scope: !18092, file: !492, line: 1364, type: !15609)
!18098 = !DILocation(line: 1364, column: 24, scope: !18092)
!18099 = !DILocation(line: 1364, column: 53, scope: !18092)
!18100 = !DILocation(line: 1364, column: 35, scope: !18092)
!18101 = !DILocation(line: 1366, column: 7, scope: !18102)
!18102 = distinct !DILexicalBlock(scope: !18092, file: !492, line: 1366, column: 7)
!18103 = !DILocation(line: 1366, column: 17, scope: !18102)
!18104 = !DILocation(line: 1366, column: 7, scope: !18092)
!18105 = !DILocation(line: 1367, column: 16, scope: !18106)
!18106 = distinct !DILexicalBlock(scope: !18102, file: !492, line: 1366, column: 26)
!18107 = !DILocation(line: 1367, column: 26, scope: !18106)
!18108 = !DILocation(line: 1367, column: 6, scope: !18106)
!18109 = !DILocation(line: 1367, column: 14, scope: !18106)
!18110 = !DILocation(line: 1368, column: 12, scope: !18106)
!18111 = !DILocation(line: 1368, column: 22, scope: !18106)
!18112 = !DILocation(line: 1368, column: 5, scope: !18106)
!18113 = !DILocation(line: 1370, column: 6, scope: !18114)
!18114 = distinct !DILexicalBlock(scope: !18102, file: !492, line: 1369, column: 10)
!18115 = !DILocation(line: 1370, column: 14, scope: !18114)
!18116 = !DILocation(line: 1371, column: 5, scope: !18114)
!18117 = !DILocation(line: 1373, column: 1, scope: !18092)
!18118 = distinct !DISubprogram(name: "coap_set_payload", scope: !492, file: !492, line: 1376, type: !18119, isLocal: false, isDefinition: true, scopeLine: 1377, flags: DIFlagPrototyped, isOptimized: false, unit: !491, variables: !488)
!18119 = !DISubroutineType(types: !18120)
!18120 = !{!58, !54, !4539, !438}
!18121 = !DILocalVariable(name: "packet", arg: 1, scope: !18118, file: !492, line: 1376, type: !54)
!18122 = !DILocation(line: 1376, column: 24, scope: !18118)
!18123 = !DILocalVariable(name: "payload", arg: 2, scope: !18118, file: !492, line: 1376, type: !4539)
!18124 = !DILocation(line: 1376, column: 44, scope: !18118)
!18125 = !DILocalVariable(name: "length", arg: 3, scope: !18118, file: !492, line: 1376, type: !438)
!18126 = !DILocation(line: 1376, column: 60, scope: !18118)
!18127 = !DILocalVariable(name: "coap_pkt", scope: !18118, file: !492, line: 1378, type: !15609)
!18128 = !DILocation(line: 1378, column: 24, scope: !18118)
!18129 = !DILocation(line: 1378, column: 53, scope: !18118)
!18130 = !DILocation(line: 1378, column: 35, scope: !18118)
!18131 = !DILocation(line: 1380, column: 35, scope: !18118)
!18132 = !DILocation(line: 1380, column: 3, scope: !18118)
!18133 = !DILocation(line: 1380, column: 13, scope: !18118)
!18134 = !DILocation(line: 1380, column: 21, scope: !18118)
!18135 = !DILocation(line: 1381, column: 38, scope: !18118)
!18136 = !DILocation(line: 1381, column: 27, scope: !18118)
!18137 = !DILocation(line: 1381, column: 3, scope: !18118)
!18138 = !DILocation(line: 1381, column: 13, scope: !18118)
!18139 = !DILocation(line: 1381, column: 25, scope: !18118)
!18140 = !DILocation(line: 1383, column: 10, scope: !18118)
!18141 = !DILocation(line: 1383, column: 20, scope: !18118)
!18142 = !DILocation(line: 1383, column: 3, scope: !18118)
!18143 = distinct !DISubprogram(name: "handle_command", scope: !1129, file: !1129, line: 90, type: !18144, isLocal: false, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18144 = !DISubroutineType(types: !18145)
!18145 = !{null, !18146, !117}
!18146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18147, size: 64)
!18147 = !DIDerivedType(tag: DW_TAG_typedef, name: "command_desc_t", file: !1261, line: 31, baseType: !18148)
!18148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1261, line: 24, size: 320, elements: !18149)
!18149 = !{!18150, !18151, !18152, !18153, !18154}
!18150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !18148, file: !1261, line: 26, baseType: !117, size: 64)
!18151 = !DIDerivedType(tag: DW_TAG_member, name: "shortDesc", scope: !18148, file: !1261, line: 27, baseType: !117, size: 64, offset: 64)
!18152 = !DIDerivedType(tag: DW_TAG_member, name: "longDesc", scope: !18148, file: !1261, line: 28, baseType: !117, size: 64, offset: 128)
!18153 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !18148, file: !1261, line: 29, baseType: !1268, size: 64, offset: 192)
!18154 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !18148, file: !1261, line: 30, baseType: !54, size: 64, offset: 256)
!18155 = !DILocalVariable(name: "commandArray", arg: 1, scope: !18143, file: !1129, line: 90, type: !18146)
!18156 = !DILocation(line: 90, column: 38, scope: !18143)
!18157 = !DILocalVariable(name: "buffer", arg: 2, scope: !18143, file: !1129, line: 91, type: !117)
!18158 = !DILocation(line: 91, column: 28, scope: !18143)
!18159 = !DILocalVariable(name: "cmdP", scope: !18143, file: !1129, line: 93, type: !18146)
!18160 = !DILocation(line: 93, column: 22, scope: !18143)
!18161 = !DILocalVariable(name: "length", scope: !18143, file: !1129, line: 94, type: !58)
!18162 = !DILocation(line: 94, column: 9, scope: !18143)
!18163 = !DILocation(line: 97, column: 12, scope: !18143)
!18164 = !DILocation(line: 98, column: 5, scope: !18143)
!18165 = !DILocation(line: 98, column: 12, scope: !18143)
!18166 = !DILocation(line: 98, column: 19, scope: !18143)
!18167 = !DILocation(line: 98, column: 27, scope: !18143)
!18168 = !DILocation(line: 98, column: 32, scope: !18143)
!18169 = !DILocation(line: 98, column: 36, scope: !18143)
!18170 = !DILocation(line: 98, column: 35, scope: !18143)
!18171 = !DILocation(line: 99, column: 15, scope: !18143)
!18172 = distinct !{!18172, !18164, !18171}
!18173 = !DILocation(line: 101, column: 29, scope: !18143)
!18174 = !DILocation(line: 101, column: 43, scope: !18143)
!18175 = !DILocation(line: 101, column: 51, scope: !18143)
!18176 = !DILocation(line: 101, column: 12, scope: !18143)
!18177 = !DILocation(line: 101, column: 10, scope: !18143)
!18178 = !DILocation(line: 102, column: 9, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18143, file: !1129, line: 102, column: 9)
!18180 = !DILocation(line: 102, column: 14, scope: !18179)
!18181 = !DILocation(line: 102, column: 9, scope: !18143)
!18182 = !DILocation(line: 104, column: 9, scope: !18183)
!18183 = distinct !DILexicalBlock(scope: !18179, file: !1129, line: 103, column: 5)
!18184 = !DILocation(line: 104, column: 16, scope: !18183)
!18185 = !DILocation(line: 104, column: 23, scope: !18183)
!18186 = !DILocation(line: 104, column: 31, scope: !18183)
!18187 = !DILocation(line: 104, column: 36, scope: !18183)
!18188 = !DILocation(line: 104, column: 39, scope: !18183)
!18189 = !DILocation(line: 105, column: 19, scope: !18183)
!18190 = distinct !{!18190, !18182, !18189}
!18191 = !DILocation(line: 106, column: 9, scope: !18183)
!18192 = !DILocation(line: 106, column: 15, scope: !18183)
!18193 = !DILocation(line: 106, column: 24, scope: !18183)
!18194 = !DILocation(line: 106, column: 33, scope: !18183)
!18195 = !DILocation(line: 106, column: 31, scope: !18183)
!18196 = !DILocation(line: 106, column: 41, scope: !18183)
!18197 = !DILocation(line: 106, column: 47, scope: !18183)
!18198 = !DILocation(line: 107, column: 5, scope: !18183)
!18199 = !DILocation(line: 110, column: 22, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18201, file: !1129, line: 110, column: 13)
!18201 = distinct !DILexicalBlock(scope: !18179, file: !1129, line: 109, column: 5)
!18202 = !DILocation(line: 110, column: 44, scope: !18200)
!18203 = !DILocation(line: 110, column: 14, scope: !18200)
!18204 = !DILocation(line: 110, column: 13, scope: !18201)
!18205 = !DILocation(line: 112, column: 13, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18200, file: !1129, line: 111, column: 9)
!18207 = !DILocation(line: 112, column: 20, scope: !18206)
!18208 = !DILocation(line: 112, column: 27, scope: !18206)
!18209 = !DILocation(line: 112, column: 35, scope: !18206)
!18210 = !DILocation(line: 112, column: 40, scope: !18206)
!18211 = !DILocation(line: 112, column: 43, scope: !18206)
!18212 = !DILocation(line: 113, column: 23, scope: !18206)
!18213 = distinct !{!18213, !18205, !18212}
!18214 = !DILocation(line: 114, column: 29, scope: !18206)
!18215 = !DILocation(line: 114, column: 43, scope: !18206)
!18216 = !DILocation(line: 114, column: 52, scope: !18206)
!18217 = !DILocation(line: 114, column: 50, scope: !18206)
!18218 = !DILocation(line: 114, column: 13, scope: !18206)
!18219 = !DILocation(line: 115, column: 9, scope: !18206)
!18220 = !DILocation(line: 118, column: 21, scope: !18221)
!18221 = distinct !DILexicalBlock(scope: !18200, file: !1129, line: 117, column: 9)
!18222 = !DILocation(line: 118, column: 13, scope: !18221)
!18223 = !DILocation(line: 121, column: 1, scope: !18143)
!18224 = distinct !DISubprogram(name: "prv_find_command", scope: !1129, file: !1129, line: 34, type: !18225, isLocal: true, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18225 = !DISubroutineType(types: !18226)
!18226 = !{!18146, !18146, !117, !438}
!18227 = !DILocalVariable(name: "commandArray", arg: 1, scope: !18224, file: !1129, line: 34, type: !18146)
!18228 = !DILocation(line: 34, column: 59, scope: !18224)
!18229 = !DILocalVariable(name: "buffer", arg: 2, scope: !18224, file: !1129, line: 35, type: !117)
!18230 = !DILocation(line: 35, column: 49, scope: !18224)
!18231 = !DILocalVariable(name: "length", arg: 3, scope: !18224, file: !1129, line: 36, type: !438)
!18232 = !DILocation(line: 36, column: 49, scope: !18224)
!18233 = !DILocalVariable(name: "i", scope: !18224, file: !1129, line: 38, type: !58)
!18234 = !DILocation(line: 38, column: 9, scope: !18224)
!18235 = !DILocation(line: 40, column: 9, scope: !18236)
!18236 = distinct !DILexicalBlock(scope: !18224, file: !1129, line: 40, column: 9)
!18237 = !DILocation(line: 40, column: 16, scope: !18236)
!18238 = !DILocation(line: 40, column: 9, scope: !18224)
!18239 = !DILocation(line: 40, column: 22, scope: !18236)
!18240 = !DILocation(line: 42, column: 7, scope: !18224)
!18241 = !DILocation(line: 43, column: 5, scope: !18224)
!18242 = !DILocation(line: 43, column: 12, scope: !18224)
!18243 = !DILocation(line: 43, column: 25, scope: !18224)
!18244 = !DILocation(line: 43, column: 28, scope: !18224)
!18245 = !DILocation(line: 43, column: 33, scope: !18224)
!18246 = !DILocation(line: 44, column: 9, scope: !18224)
!18247 = !DILocation(line: 44, column: 20, scope: !18224)
!18248 = !DILocation(line: 44, column: 33, scope: !18224)
!18249 = !DILocation(line: 44, column: 36, scope: !18224)
!18250 = !DILocation(line: 44, column: 13, scope: !18224)
!18251 = !DILocation(line: 44, column: 45, scope: !18224)
!18252 = !DILocation(line: 44, column: 42, scope: !18224)
!18253 = !DILocation(line: 44, column: 52, scope: !18224)
!18254 = !DILocation(line: 44, column: 63, scope: !18224)
!18255 = !DILocation(line: 44, column: 71, scope: !18224)
!18256 = !DILocation(line: 44, column: 84, scope: !18224)
!18257 = !DILocation(line: 44, column: 87, scope: !18224)
!18258 = !DILocation(line: 44, column: 93, scope: !18224)
!18259 = !DILocation(line: 44, column: 55, scope: !18224)
!18260 = !DILocation(line: 46, column: 10, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18224, file: !1129, line: 45, column: 5)
!18262 = distinct !{!18262, !18241, !18263}
!18263 = !DILocation(line: 47, column: 5, scope: !18224)
!18264 = !DILocation(line: 49, column: 9, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18224, file: !1129, line: 49, column: 9)
!18266 = !DILocation(line: 49, column: 22, scope: !18265)
!18267 = !DILocation(line: 49, column: 25, scope: !18265)
!18268 = !DILocation(line: 49, column: 30, scope: !18265)
!18269 = !DILocation(line: 49, column: 9, scope: !18224)
!18270 = !DILocation(line: 51, column: 9, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !18265, file: !1129, line: 50, column: 5)
!18272 = !DILocation(line: 55, column: 17, scope: !18273)
!18273 = distinct !DILexicalBlock(scope: !18265, file: !1129, line: 54, column: 5)
!18274 = !DILocation(line: 55, column: 30, scope: !18273)
!18275 = !DILocation(line: 55, column: 9, scope: !18273)
!18276 = !DILocation(line: 57, column: 1, scope: !18224)
!18277 = distinct !DISubprogram(name: "prv_displayHelp", scope: !1129, file: !1129, line: 59, type: !18144, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18278 = !DILocalVariable(name: "commandArray", arg: 1, scope: !18277, file: !1129, line: 59, type: !18146)
!18279 = !DILocation(line: 59, column: 46, scope: !18277)
!18280 = !DILocalVariable(name: "buffer", arg: 2, scope: !18277, file: !1129, line: 60, type: !117)
!18281 = !DILocation(line: 60, column: 36, scope: !18277)
!18282 = !DILocalVariable(name: "cmdP", scope: !18277, file: !1129, line: 62, type: !18146)
!18283 = !DILocation(line: 62, column: 22, scope: !18277)
!18284 = !DILocalVariable(name: "length", scope: !18277, file: !1129, line: 63, type: !58)
!18285 = !DILocation(line: 63, column: 9, scope: !18277)
!18286 = !DILocation(line: 66, column: 12, scope: !18277)
!18287 = !DILocation(line: 67, column: 5, scope: !18277)
!18288 = !DILocation(line: 67, column: 12, scope: !18277)
!18289 = !DILocation(line: 67, column: 19, scope: !18277)
!18290 = !DILocation(line: 67, column: 27, scope: !18277)
!18291 = !DILocation(line: 67, column: 32, scope: !18277)
!18292 = !DILocation(line: 67, column: 36, scope: !18277)
!18293 = !DILocation(line: 67, column: 35, scope: !18277)
!18294 = !DILocation(line: 68, column: 15, scope: !18277)
!18295 = distinct !{!18295, !18287, !18294}
!18296 = !DILocation(line: 70, column: 29, scope: !18277)
!18297 = !DILocation(line: 70, column: 43, scope: !18277)
!18298 = !DILocation(line: 70, column: 51, scope: !18277)
!18299 = !DILocation(line: 70, column: 12, scope: !18277)
!18300 = !DILocation(line: 70, column: 10, scope: !18277)
!18301 = !DILocation(line: 72, column: 9, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18277, file: !1129, line: 72, column: 9)
!18303 = !DILocation(line: 72, column: 14, scope: !18302)
!18304 = !DILocation(line: 72, column: 9, scope: !18277)
!18305 = !DILocalVariable(name: "i", scope: !18306, file: !1129, line: 74, type: !58)
!18306 = distinct !DILexicalBlock(scope: !18302, file: !1129, line: 73, column: 5)
!18307 = !DILocation(line: 74, column: 13, scope: !18306)
!18308 = !DILocation(line: 76, column: 17, scope: !18306)
!18309 = !DILocation(line: 76, column: 9, scope: !18306)
!18310 = !DILocation(line: 78, column: 16, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18306, file: !1129, line: 78, column: 9)
!18312 = !DILocation(line: 78, column: 14, scope: !18311)
!18313 = !DILocation(line: 78, column: 22, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18311, file: !1129, line: 78, column: 9)
!18315 = !DILocation(line: 78, column: 35, scope: !18314)
!18316 = !DILocation(line: 78, column: 38, scope: !18314)
!18317 = !DILocation(line: 78, column: 43, scope: !18314)
!18318 = !DILocation(line: 78, column: 9, scope: !18311)
!18319 = !DILocation(line: 80, column: 21, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18314, file: !1129, line: 79, column: 9)
!18321 = !DILocation(line: 80, column: 43, scope: !18320)
!18322 = !DILocation(line: 80, column: 56, scope: !18320)
!18323 = !DILocation(line: 80, column: 59, scope: !18320)
!18324 = !DILocation(line: 80, column: 65, scope: !18320)
!18325 = !DILocation(line: 80, column: 78, scope: !18320)
!18326 = !DILocation(line: 80, column: 81, scope: !18320)
!18327 = !DILocation(line: 80, column: 13, scope: !18320)
!18328 = !DILocation(line: 81, column: 9, scope: !18320)
!18329 = !DILocation(line: 78, column: 54, scope: !18314)
!18330 = !DILocation(line: 78, column: 9, scope: !18314)
!18331 = distinct !{!18331, !18318, !18332}
!18332 = !DILocation(line: 81, column: 9, scope: !18311)
!18333 = !DILocation(line: 82, column: 5, scope: !18306)
!18334 = !DILocation(line: 85, column: 17, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18302, file: !1129, line: 84, column: 5)
!18336 = !DILocation(line: 85, column: 35, scope: !18335)
!18337 = !DILocation(line: 85, column: 41, scope: !18335)
!18338 = !DILocation(line: 85, column: 50, scope: !18335)
!18339 = !DILocation(line: 85, column: 56, scope: !18335)
!18340 = !DILocation(line: 85, column: 65, scope: !18335)
!18341 = !DILocation(line: 85, column: 71, scope: !18335)
!18342 = !DILocation(line: 85, column: 9, scope: !18335)
!18343 = !DILocation(line: 87, column: 1, scope: !18277)
!18344 = distinct !DISubprogram(name: "get_end_of_arg", scope: !1129, file: !1129, line: 132, type: !18345, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18345 = !DISubroutineType(types: !18346)
!18346 = !{!117, !117}
!18347 = !DILocalVariable(name: "buffer", arg: 1, scope: !18344, file: !1129, line: 132, type: !117)
!18348 = !DILocation(line: 132, column: 28, scope: !18344)
!18349 = !DILocation(line: 134, column: 5, scope: !18344)
!18350 = !DILocation(line: 134, column: 12, scope: !18344)
!18351 = !DILocation(line: 134, column: 22, scope: !18344)
!18352 = !DILocation(line: 134, column: 27, scope: !18344)
!18353 = !DILocation(line: 134, column: 31, scope: !18344)
!18354 = !DILocation(line: 134, column: 30, scope: !18344)
!18355 = !DILocation(line: 136, column: 15, scope: !18356)
!18356 = distinct !DILexicalBlock(scope: !18344, file: !1129, line: 135, column: 5)
!18357 = distinct !{!18357, !18349, !18358}
!18358 = !DILocation(line: 137, column: 5, scope: !18344)
!18359 = !DILocation(line: 138, column: 12, scope: !18344)
!18360 = !DILocation(line: 138, column: 5, scope: !18344)
!18361 = distinct !DISubprogram(name: "get_next_arg", scope: !1129, file: !1129, line: 141, type: !18362, isLocal: false, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18362 = !DISubroutineType(types: !18363)
!18363 = !{!117, !117, !1213}
!18364 = !DILocalVariable(name: "buffer", arg: 1, scope: !18361, file: !1129, line: 141, type: !117)
!18365 = !DILocation(line: 141, column: 28, scope: !18361)
!18366 = !DILocalVariable(name: "end", arg: 2, scope: !18361, file: !1129, line: 141, type: !1213)
!18367 = !DILocation(line: 141, column: 43, scope: !18361)
!18368 = !DILocation(line: 144, column: 29, scope: !18361)
!18369 = !DILocation(line: 144, column: 14, scope: !18361)
!18370 = !DILocation(line: 144, column: 12, scope: !18361)
!18371 = !DILocation(line: 146, column: 31, scope: !18361)
!18372 = !DILocation(line: 146, column: 14, scope: !18361)
!18373 = !DILocation(line: 146, column: 12, scope: !18361)
!18374 = !DILocation(line: 147, column: 17, scope: !18375)
!18375 = distinct !DILexicalBlock(scope: !18361, file: !1129, line: 147, column: 9)
!18376 = !DILocation(line: 147, column: 14, scope: !18375)
!18377 = !DILocation(line: 147, column: 9, scope: !18361)
!18378 = !DILocation(line: 149, column: 31, scope: !18379)
!18379 = distinct !DILexicalBlock(scope: !18375, file: !1129, line: 148, column: 5)
!18380 = !DILocation(line: 149, column: 16, scope: !18379)
!18381 = !DILocation(line: 149, column: 10, scope: !18379)
!18382 = !DILocation(line: 149, column: 14, scope: !18379)
!18383 = !DILocation(line: 150, column: 5, scope: !18379)
!18384 = !DILocation(line: 152, column: 12, scope: !18361)
!18385 = !DILocation(line: 152, column: 5, scope: !18361)
!18386 = distinct !DISubprogram(name: "prv_end_of_space", scope: !1129, file: !1129, line: 123, type: !18345, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18387 = !DILocalVariable(name: "buffer", arg: 1, scope: !18386, file: !1129, line: 123, type: !117)
!18388 = !DILocation(line: 123, column: 37, scope: !18386)
!18389 = !DILocation(line: 125, column: 5, scope: !18386)
!18390 = !DILocation(line: 125, column: 12, scope: !18386)
!18391 = !DILocation(line: 127, column: 15, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18386, file: !1129, line: 126, column: 5)
!18393 = distinct !{!18393, !18389, !18394}
!18394 = !DILocation(line: 128, column: 5, scope: !18386)
!18395 = !DILocation(line: 129, column: 12, scope: !18386)
!18396 = !DILocation(line: 129, column: 5, scope: !18386)
!18397 = distinct !DISubprogram(name: "check_end_of_args", scope: !1129, file: !1129, line: 155, type: !18398, isLocal: false, isDefinition: true, scopeLine: 156, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18398 = !DISubroutineType(types: !18399)
!18399 = !{!58, !117}
!18400 = !DILocalVariable(name: "buffer", arg: 1, scope: !18397, file: !1129, line: 155, type: !117)
!18401 = !DILocation(line: 155, column: 29, scope: !18397)
!18402 = !DILocation(line: 157, column: 31, scope: !18397)
!18403 = !DILocation(line: 157, column: 14, scope: !18397)
!18404 = !DILocation(line: 157, column: 12, scope: !18397)
!18405 = !DILocation(line: 159, column: 18, scope: !18397)
!18406 = !DILocation(line: 159, column: 15, scope: !18397)
!18407 = !DILocation(line: 159, column: 5, scope: !18397)
!18408 = distinct !DISubprogram(name: "output_buffer", scope: !1129, file: !1129, line: 175, type: !18409, isLocal: false, isDefinition: true, scopeLine: 179, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18409 = !DISubroutineType(types: !18410)
!18410 = !{null, !18411, !186, !58, !58}
!18411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18412, size: 64)
!18412 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !18413, line: 48, baseType: !18414)
!18413 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!18414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !18415, line: 241, size: 1728, elements: !18416)
!18415 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!18416 = !{!18417, !18418, !18419, !18420, !18421, !18422, !18423, !18424, !18425, !18426, !18427, !18428, !18429, !18437, !18438, !18439, !18440, !18442, !18443, !18444, !18446, !18449, !18451, !18452, !18453, !18454, !18455, !18456, !18457}
!18417 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !18414, file: !18415, line: 242, baseType: !58, size: 32)
!18418 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !18414, file: !18415, line: 247, baseType: !117, size: 64, offset: 64)
!18419 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !18414, file: !18415, line: 248, baseType: !117, size: 64, offset: 128)
!18420 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !18414, file: !18415, line: 249, baseType: !117, size: 64, offset: 192)
!18421 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !18414, file: !18415, line: 250, baseType: !117, size: 64, offset: 256)
!18422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !18414, file: !18415, line: 251, baseType: !117, size: 64, offset: 320)
!18423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !18414, file: !18415, line: 252, baseType: !117, size: 64, offset: 384)
!18424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !18414, file: !18415, line: 253, baseType: !117, size: 64, offset: 448)
!18425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !18414, file: !18415, line: 254, baseType: !117, size: 64, offset: 512)
!18426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !18414, file: !18415, line: 256, baseType: !117, size: 64, offset: 576)
!18427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !18414, file: !18415, line: 257, baseType: !117, size: 64, offset: 640)
!18428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !18414, file: !18415, line: 258, baseType: !117, size: 64, offset: 704)
!18429 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !18414, file: !18415, line: 260, baseType: !18430, size: 64, offset: 768)
!18430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18431, size: 64)
!18431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !18415, line: 156, size: 192, elements: !18432)
!18432 = !{!18433, !18434, !18436}
!18433 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !18431, file: !18415, line: 157, baseType: !18430, size: 64)
!18434 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !18431, file: !18415, line: 158, baseType: !18435, size: 64, offset: 64)
!18435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18414, size: 64)
!18436 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !18431, file: !18415, line: 162, baseType: !58, size: 32, offset: 128)
!18437 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !18414, file: !18415, line: 262, baseType: !18435, size: 64, offset: 832)
!18438 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !18414, file: !18415, line: 264, baseType: !58, size: 32, offset: 896)
!18439 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !18414, file: !18415, line: 268, baseType: !58, size: 32, offset: 928)
!18440 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !18414, file: !18415, line: 270, baseType: !18441, size: 64, offset: 960)
!18441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !142, line: 131, baseType: !57)
!18442 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !18414, file: !18415, line: 274, baseType: !66, size: 16, offset: 1024)
!18443 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !18414, file: !18415, line: 275, baseType: !713, size: 8, offset: 1040)
!18444 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !18414, file: !18415, line: 276, baseType: !18445, size: 8, offset: 1048)
!18445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 8, elements: !486)
!18446 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !18414, file: !18415, line: 280, baseType: !18447, size: 64, offset: 1088)
!18447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18448, size: 64)
!18448 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !18415, line: 150, baseType: null)
!18449 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !18414, file: !18415, line: 289, baseType: !18450, size: 64, offset: 1152)
!18450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !142, line: 132, baseType: !57)
!18451 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !18414, file: !18415, line: 297, baseType: !54, size: 64, offset: 1216)
!18452 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !18414, file: !18415, line: 298, baseType: !54, size: 64, offset: 1280)
!18453 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !18414, file: !18415, line: 299, baseType: !54, size: 64, offset: 1344)
!18454 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !18414, file: !18415, line: 300, baseType: !54, size: 64, offset: 1408)
!18455 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !18414, file: !18415, line: 302, baseType: !438, size: 64, offset: 1472)
!18456 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !18414, file: !18415, line: 303, baseType: !58, size: 32, offset: 1536)
!18457 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !18414, file: !18415, line: 305, baseType: !18458, size: 160, offset: 1568)
!18458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 160, elements: !18459)
!18459 = !{!18460}
!18460 = !DISubrange(count: 20)
!18461 = !DILocalVariable(name: "stream", arg: 1, scope: !18408, file: !1129, line: 175, type: !18411)
!18462 = !DILocation(line: 175, column: 27, scope: !18408)
!18463 = !DILocalVariable(name: "buffer", arg: 2, scope: !18408, file: !1129, line: 176, type: !186)
!18464 = !DILocation(line: 176, column: 30, scope: !18408)
!18465 = !DILocalVariable(name: "length", arg: 3, scope: !18408, file: !1129, line: 177, type: !58)
!18466 = !DILocation(line: 177, column: 24, scope: !18408)
!18467 = !DILocalVariable(name: "indent", arg: 4, scope: !18408, file: !1129, line: 178, type: !58)
!18468 = !DILocation(line: 178, column: 24, scope: !18408)
!18469 = !DILocalVariable(name: "i", scope: !18408, file: !1129, line: 180, type: !58)
!18470 = !DILocation(line: 180, column: 9, scope: !18408)
!18471 = !DILocation(line: 182, column: 9, scope: !18472)
!18472 = distinct !DILexicalBlock(scope: !18408, file: !1129, line: 182, column: 9)
!18473 = !DILocation(line: 182, column: 16, scope: !18472)
!18474 = !DILocation(line: 182, column: 9, scope: !18408)
!18475 = !DILocation(line: 182, column: 30, scope: !18472)
!18476 = !DILocation(line: 182, column: 22, scope: !18472)
!18477 = !DILocation(line: 184, column: 9, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18408, file: !1129, line: 184, column: 9)
!18479 = !DILocation(line: 184, column: 16, scope: !18478)
!18480 = !DILocation(line: 184, column: 9, scope: !18408)
!18481 = !DILocation(line: 184, column: 25, scope: !18478)
!18482 = !DILocation(line: 186, column: 7, scope: !18408)
!18483 = !DILocation(line: 187, column: 5, scope: !18408)
!18484 = !DILocation(line: 187, column: 12, scope: !18408)
!18485 = !DILocation(line: 187, column: 16, scope: !18408)
!18486 = !DILocation(line: 187, column: 14, scope: !18408)
!18487 = !DILocalVariable(name: "array", scope: !18488, file: !1129, line: 189, type: !106)
!18488 = distinct !DILexicalBlock(scope: !18408, file: !1129, line: 188, column: 5)
!18489 = !DILocation(line: 189, column: 17, scope: !18488)
!18490 = !DILocalVariable(name: "j", scope: !18488, file: !1129, line: 190, type: !58)
!18491 = !DILocation(line: 190, column: 13, scope: !18488)
!18492 = !DILocation(line: 192, column: 22, scope: !18488)
!18493 = !DILocation(line: 192, column: 30, scope: !18488)
!18494 = !DILocation(line: 192, column: 9, scope: !18488)
!18495 = !DILocation(line: 193, column: 9, scope: !18488)
!18496 = !DILocation(line: 193, column: 23, scope: !18488)
!18497 = !DILocation(line: 193, column: 30, scope: !18488)
!18498 = !DILocation(line: 193, column: 29, scope: !18488)
!18499 = !DILocation(line: 194, column: 16, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18488, file: !1129, line: 194, column: 9)
!18501 = !DILocation(line: 194, column: 14, scope: !18500)
!18502 = !DILocation(line: 194, column: 22, scope: !18503)
!18503 = distinct !DILexicalBlock(scope: !18500, file: !1129, line: 194, column: 9)
!18504 = !DILocation(line: 194, column: 24, scope: !18503)
!18505 = !DILocation(line: 194, column: 29, scope: !18503)
!18506 = !DILocation(line: 194, column: 32, scope: !18503)
!18507 = !DILocation(line: 194, column: 34, scope: !18503)
!18508 = !DILocation(line: 194, column: 33, scope: !18503)
!18509 = !DILocation(line: 194, column: 38, scope: !18503)
!18510 = !DILocation(line: 194, column: 36, scope: !18503)
!18511 = !DILocation(line: 194, column: 9, scope: !18500)
!18512 = !DILocation(line: 196, column: 21, scope: !18513)
!18513 = distinct !DILexicalBlock(scope: !18503, file: !1129, line: 195, column: 9)
!18514 = !DILocation(line: 196, column: 44, scope: !18513)
!18515 = !DILocation(line: 196, column: 38, scope: !18513)
!18516 = !DILocation(line: 196, column: 13, scope: !18513)
!18517 = !DILocation(line: 197, column: 17, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !18513, file: !1129, line: 197, column: 17)
!18519 = !DILocation(line: 197, column: 18, scope: !18518)
!18520 = !DILocation(line: 197, column: 21, scope: !18518)
!18521 = !DILocation(line: 197, column: 17, scope: !18513)
!18522 = !DILocation(line: 197, column: 35, scope: !18518)
!18523 = !DILocation(line: 197, column: 27, scope: !18518)
!18524 = !DILocation(line: 198, column: 9, scope: !18513)
!18525 = !DILocation(line: 194, column: 47, scope: !18503)
!18526 = !DILocation(line: 194, column: 9, scope: !18503)
!18527 = distinct !{!18527, !18511, !18528}
!18528 = !DILocation(line: 198, column: 9, scope: !18500)
!18529 = !DILocation(line: 199, column: 13, scope: !18530)
!18530 = distinct !DILexicalBlock(scope: !18488, file: !1129, line: 199, column: 13)
!18531 = !DILocation(line: 199, column: 20, scope: !18530)
!18532 = !DILocation(line: 199, column: 13, scope: !18488)
!18533 = !DILocation(line: 201, column: 13, scope: !18534)
!18534 = distinct !DILexicalBlock(scope: !18530, file: !1129, line: 200, column: 9)
!18535 = !DILocation(line: 201, column: 20, scope: !18534)
!18536 = !DILocation(line: 201, column: 22, scope: !18534)
!18537 = !DILocation(line: 203, column: 25, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18534, file: !1129, line: 202, column: 13)
!18539 = !DILocation(line: 203, column: 17, scope: !18538)
!18540 = !DILocation(line: 204, column: 21, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !18538, file: !1129, line: 204, column: 21)
!18542 = !DILocation(line: 204, column: 22, scope: !18541)
!18543 = !DILocation(line: 204, column: 25, scope: !18541)
!18544 = !DILocation(line: 204, column: 21, scope: !18538)
!18545 = !DILocation(line: 204, column: 39, scope: !18541)
!18546 = !DILocation(line: 204, column: 31, scope: !18541)
!18547 = !DILocation(line: 205, column: 18, scope: !18538)
!18548 = distinct !{!18548, !18533, !18549}
!18549 = !DILocation(line: 206, column: 13, scope: !18534)
!18550 = !DILocation(line: 207, column: 9, scope: !18534)
!18551 = !DILocation(line: 208, column: 17, scope: !18488)
!18552 = !DILocation(line: 208, column: 9, scope: !18488)
!18553 = !DILocation(line: 209, column: 16, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !18488, file: !1129, line: 209, column: 9)
!18555 = !DILocation(line: 209, column: 14, scope: !18554)
!18556 = !DILocation(line: 209, column: 22, scope: !18557)
!18557 = distinct !DILexicalBlock(scope: !18554, file: !1129, line: 209, column: 9)
!18558 = !DILocation(line: 209, column: 24, scope: !18557)
!18559 = !DILocation(line: 209, column: 29, scope: !18557)
!18560 = !DILocation(line: 209, column: 32, scope: !18557)
!18561 = !DILocation(line: 209, column: 34, scope: !18557)
!18562 = !DILocation(line: 209, column: 33, scope: !18557)
!18563 = !DILocation(line: 209, column: 38, scope: !18557)
!18564 = !DILocation(line: 209, column: 36, scope: !18557)
!18565 = !DILocation(line: 209, column: 9, scope: !18554)
!18566 = !DILocation(line: 211, column: 17, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !18568, file: !1129, line: 211, column: 17)
!18568 = distinct !DILexicalBlock(scope: !18557, file: !1129, line: 210, column: 9)
!18569 = !DILocation(line: 211, column: 17, scope: !18568)
!18570 = !DILocation(line: 212, column: 25, scope: !18567)
!18571 = !DILocation(line: 212, column: 45, scope: !18567)
!18572 = !DILocation(line: 212, column: 39, scope: !18567)
!18573 = !DILocation(line: 212, column: 17, scope: !18567)
!18574 = !DILocation(line: 214, column: 25, scope: !18567)
!18575 = !DILocation(line: 214, column: 17, scope: !18567)
!18576 = !DILocation(line: 215, column: 9, scope: !18568)
!18577 = !DILocation(line: 209, column: 47, scope: !18557)
!18578 = !DILocation(line: 209, column: 9, scope: !18557)
!18579 = distinct !{!18579, !18565, !18580}
!18580 = !DILocation(line: 215, column: 9, scope: !18554)
!18581 = !DILocation(line: 216, column: 17, scope: !18488)
!18582 = !DILocation(line: 216, column: 9, scope: !18488)
!18583 = !DILocation(line: 217, column: 11, scope: !18488)
!18584 = distinct !{!18584, !18483, !18585}
!18585 = !DILocation(line: 218, column: 5, scope: !18408)
!18586 = !DILocation(line: 219, column: 1, scope: !18408)
!18587 = distinct !DISubprogram(name: "print_indent", scope: !1129, file: !1129, line: 166, type: !18588, isLocal: true, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18588 = !DISubroutineType(types: !18589)
!18589 = !{null, !18411, !58}
!18590 = !DILocalVariable(name: "stream", arg: 1, scope: !18587, file: !1129, line: 166, type: !18411)
!18591 = !DILocation(line: 166, column: 33, scope: !18587)
!18592 = !DILocalVariable(name: "num", arg: 2, scope: !18587, file: !1129, line: 167, type: !58)
!18593 = !DILocation(line: 167, column: 30, scope: !18587)
!18594 = !DILocalVariable(name: "i", scope: !18587, file: !1129, line: 169, type: !58)
!18595 = !DILocation(line: 169, column: 9, scope: !18587)
!18596 = !DILocation(line: 171, column: 13, scope: !18597)
!18597 = distinct !DILexicalBlock(scope: !18587, file: !1129, line: 171, column: 5)
!18598 = !DILocation(line: 171, column: 11, scope: !18597)
!18599 = !DILocation(line: 171, column: 19, scope: !18600)
!18600 = distinct !DILexicalBlock(scope: !18597, file: !1129, line: 171, column: 5)
!18601 = !DILocation(line: 171, column: 23, scope: !18600)
!18602 = !DILocation(line: 171, column: 21, scope: !18600)
!18603 = !DILocation(line: 171, column: 5, scope: !18597)
!18604 = !DILocation(line: 172, column: 17, scope: !18600)
!18605 = !DILocation(line: 172, column: 9, scope: !18600)
!18606 = !DILocation(line: 171, column: 30, scope: !18600)
!18607 = !DILocation(line: 171, column: 5, scope: !18600)
!18608 = distinct !{!18608, !18603, !18609}
!18609 = !DILocation(line: 172, column: 31, scope: !18597)
!18610 = !DILocation(line: 173, column: 1, scope: !18587)
!18611 = distinct !DISubprogram(name: "output_tlv", scope: !1129, file: !1129, line: 221, type: !18612, isLocal: false, isDefinition: true, scopeLine: 225, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18612 = !DISubroutineType(types: !18613)
!18613 = !{null, !18411, !186, !438, !58}
!18614 = !DILocalVariable(name: "stream", arg: 1, scope: !18611, file: !1129, line: 221, type: !18411)
!18615 = !DILocation(line: 221, column: 24, scope: !18611)
!18616 = !DILocalVariable(name: "buffer", arg: 2, scope: !18611, file: !1129, line: 222, type: !186)
!18617 = !DILocation(line: 222, column: 27, scope: !18611)
!18618 = !DILocalVariable(name: "buffer_len", arg: 3, scope: !18611, file: !1129, line: 223, type: !438)
!18619 = !DILocation(line: 223, column: 24, scope: !18611)
!18620 = !DILocalVariable(name: "indent", arg: 4, scope: !18611, file: !1129, line: 224, type: !58)
!18621 = !DILocation(line: 224, column: 21, scope: !18611)
!18622 = !DILocalVariable(name: "type", scope: !18611, file: !1129, line: 226, type: !689)
!18623 = !DILocation(line: 226, column: 23, scope: !18611)
!18624 = !DILocalVariable(name: "id", scope: !18611, file: !1129, line: 227, type: !79)
!18625 = !DILocation(line: 227, column: 14, scope: !18611)
!18626 = !DILocalVariable(name: "dataIndex", scope: !18611, file: !1129, line: 228, type: !438)
!18627 = !DILocation(line: 228, column: 12, scope: !18611)
!18628 = !DILocalVariable(name: "dataLen", scope: !18611, file: !1129, line: 229, type: !438)
!18629 = !DILocation(line: 229, column: 12, scope: !18611)
!18630 = !DILocalVariable(name: "length", scope: !18611, file: !1129, line: 230, type: !58)
!18631 = !DILocation(line: 230, column: 9, scope: !18611)
!18632 = !DILocalVariable(name: "result", scope: !18611, file: !1129, line: 231, type: !58)
!18633 = !DILocation(line: 231, column: 9, scope: !18611)
!18634 = !DILocation(line: 233, column: 5, scope: !18611)
!18635 = !DILocation(line: 233, column: 54, scope: !18611)
!18636 = !DILocation(line: 233, column: 63, scope: !18611)
!18637 = !DILocation(line: 233, column: 61, scope: !18611)
!18638 = !DILocation(line: 233, column: 71, scope: !18611)
!18639 = !DILocation(line: 233, column: 84, scope: !18611)
!18640 = !DILocation(line: 233, column: 82, scope: !18611)
!18641 = !DILocation(line: 233, column: 27, scope: !18611)
!18642 = !DILocation(line: 233, column: 25, scope: !18611)
!18643 = !DILocation(line: 233, column: 14, scope: !18611)
!18644 = !DILocation(line: 235, column: 22, scope: !18645)
!18645 = distinct !DILexicalBlock(scope: !18611, file: !1129, line: 234, column: 5)
!18646 = !DILocation(line: 235, column: 30, scope: !18645)
!18647 = !DILocation(line: 235, column: 9, scope: !18645)
!18648 = !DILocation(line: 236, column: 17, scope: !18645)
!18649 = !DILocation(line: 236, column: 9, scope: !18645)
!18650 = !DILocation(line: 237, column: 22, scope: !18645)
!18651 = !DILocation(line: 237, column: 30, scope: !18645)
!18652 = !DILocation(line: 237, column: 36, scope: !18645)
!18653 = !DILocation(line: 237, column: 9, scope: !18645)
!18654 = !DILocation(line: 238, column: 17, scope: !18645)
!18655 = !DILocation(line: 238, column: 35, scope: !18645)
!18656 = !DILocation(line: 238, column: 9, scope: !18645)
!18657 = !DILocation(line: 240, column: 17, scope: !18645)
!18658 = !DILocation(line: 240, column: 9, scope: !18645)
!18659 = !DILocation(line: 241, column: 17, scope: !18645)
!18660 = !DILocation(line: 241, column: 9, scope: !18645)
!18661 = !DILocation(line: 244, column: 21, scope: !18662)
!18662 = distinct !DILexicalBlock(scope: !18645, file: !1129, line: 242, column: 9)
!18663 = !DILocation(line: 244, column: 13, scope: !18662)
!18664 = !DILocation(line: 245, column: 13, scope: !18662)
!18665 = !DILocation(line: 247, column: 21, scope: !18662)
!18666 = !DILocation(line: 247, column: 13, scope: !18662)
!18667 = !DILocation(line: 248, column: 13, scope: !18662)
!18668 = !DILocation(line: 250, column: 21, scope: !18662)
!18669 = !DILocation(line: 250, column: 13, scope: !18662)
!18670 = !DILocation(line: 251, column: 13, scope: !18662)
!18671 = !DILocation(line: 253, column: 41, scope: !18662)
!18672 = !DILocation(line: 253, column: 13, scope: !18662)
!18673 = !DILocation(line: 254, column: 13, scope: !18662)
!18674 = !DILocation(line: 256, column: 17, scope: !18645)
!18675 = !DILocation(line: 256, column: 9, scope: !18645)
!18676 = !DILocation(line: 258, column: 22, scope: !18645)
!18677 = !DILocation(line: 258, column: 30, scope: !18645)
!18678 = !DILocation(line: 258, column: 36, scope: !18645)
!18679 = !DILocation(line: 258, column: 9, scope: !18645)
!18680 = !DILocation(line: 259, column: 17, scope: !18645)
!18681 = !DILocation(line: 259, column: 9, scope: !18645)
!18682 = !DILocation(line: 260, column: 13, scope: !18683)
!18683 = distinct !DILexicalBlock(scope: !18645, file: !1129, line: 260, column: 13)
!18684 = !DILocation(line: 260, column: 18, scope: !18683)
!18685 = !DILocation(line: 260, column: 48, scope: !18683)
!18686 = !DILocation(line: 260, column: 51, scope: !18683)
!18687 = !DILocation(line: 260, column: 56, scope: !18683)
!18688 = !DILocation(line: 260, column: 13, scope: !18645)
!18689 = !DILocation(line: 262, column: 24, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18683, file: !1129, line: 261, column: 9)
!18691 = !DILocation(line: 262, column: 32, scope: !18690)
!18692 = !DILocation(line: 262, column: 41, scope: !18690)
!18693 = !DILocation(line: 262, column: 39, scope: !18690)
!18694 = !DILocation(line: 262, column: 50, scope: !18690)
!18695 = !DILocation(line: 262, column: 48, scope: !18690)
!18696 = !DILocation(line: 262, column: 61, scope: !18690)
!18697 = !DILocation(line: 262, column: 70, scope: !18690)
!18698 = !DILocation(line: 262, column: 76, scope: !18690)
!18699 = !DILocation(line: 262, column: 13, scope: !18690)
!18700 = !DILocation(line: 263, column: 9, scope: !18690)
!18701 = !DILocalVariable(name: "intValue", scope: !18702, file: !1129, line: 266, type: !18703)
!18702 = distinct !DILexicalBlock(scope: !18683, file: !1129, line: 265, column: 9)
!18703 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !18704, line: 197, baseType: !57)
!18704 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!18705 = !DILocation(line: 266, column: 21, scope: !18702)
!18706 = !DILocalVariable(name: "floatValue", scope: !18702, file: !1129, line: 267, type: !253)
!18707 = !DILocation(line: 267, column: 20, scope: !18702)
!18708 = !DILocalVariable(name: "tmp", scope: !18702, file: !1129, line: 268, type: !107)
!18709 = !DILocation(line: 268, column: 21, scope: !18702)
!18710 = !DILocation(line: 270, column: 26, scope: !18702)
!18711 = !DILocation(line: 270, column: 34, scope: !18702)
!18712 = !DILocation(line: 270, column: 40, scope: !18702)
!18713 = !DILocation(line: 270, column: 13, scope: !18702)
!18714 = !DILocation(line: 271, column: 21, scope: !18702)
!18715 = !DILocation(line: 271, column: 54, scope: !18702)
!18716 = !DILocation(line: 271, column: 13, scope: !18702)
!18717 = !DILocation(line: 272, column: 27, scope: !18702)
!18718 = !DILocation(line: 272, column: 45, scope: !18702)
!18719 = !DILocation(line: 272, column: 54, scope: !18702)
!18720 = !DILocation(line: 272, column: 52, scope: !18702)
!18721 = !DILocation(line: 272, column: 63, scope: !18702)
!18722 = !DILocation(line: 272, column: 61, scope: !18702)
!18723 = !DILocation(line: 272, column: 74, scope: !18702)
!18724 = !DILocation(line: 272, column: 83, scope: !18702)
!18725 = !DILocation(line: 272, column: 89, scope: !18702)
!18726 = !DILocation(line: 272, column: 13, scope: !18702)
!18727 = !DILocation(line: 274, column: 19, scope: !18702)
!18728 = !DILocation(line: 274, column: 26, scope: !18702)
!18729 = !DILocation(line: 274, column: 35, scope: !18702)
!18730 = !DILocation(line: 274, column: 33, scope: !18702)
!18731 = !DILocation(line: 274, column: 47, scope: !18702)
!18732 = !DILocation(line: 274, column: 45, scope: !18702)
!18733 = !DILocation(line: 274, column: 17, scope: !18702)
!18734 = !DILocation(line: 275, column: 13, scope: !18702)
!18735 = !DILocation(line: 275, column: 20, scope: !18702)
!18736 = !DILocation(line: 275, column: 29, scope: !18702)
!18737 = !DILocation(line: 275, column: 27, scope: !18702)
!18738 = !DILocation(line: 275, column: 41, scope: !18702)
!18739 = !DILocation(line: 275, column: 39, scope: !18702)
!18740 = !DILocation(line: 275, column: 50, scope: !18702)
!18741 = !DILocation(line: 276, column: 42, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18702, file: !1129, line: 276, column: 17)
!18743 = !DILocation(line: 276, column: 51, scope: !18742)
!18744 = !DILocation(line: 276, column: 49, scope: !18742)
!18745 = !DILocation(line: 276, column: 60, scope: !18742)
!18746 = !DILocation(line: 276, column: 58, scope: !18742)
!18747 = !DILocation(line: 276, column: 21, scope: !18742)
!18748 = !DILocation(line: 276, column: 19, scope: !18742)
!18749 = !DILocation(line: 276, column: 17, scope: !18702)
!18750 = !DILocation(line: 278, column: 30, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18742, file: !1129, line: 277, column: 13)
!18752 = !DILocation(line: 278, column: 38, scope: !18751)
!18753 = !DILocation(line: 278, column: 44, scope: !18751)
!18754 = !DILocation(line: 278, column: 17, scope: !18751)
!18755 = !DILocation(line: 279, column: 25, scope: !18751)
!18756 = !DILocation(line: 279, column: 69, scope: !18751)
!18757 = !DILocation(line: 279, column: 17, scope: !18751)
!18758 = !DILocation(line: 280, column: 13, scope: !18751)
!18759 = !DILocation(line: 281, column: 41, scope: !18760)
!18760 = distinct !DILexicalBlock(scope: !18702, file: !1129, line: 281, column: 17)
!18761 = !DILocation(line: 281, column: 50, scope: !18760)
!18762 = !DILocation(line: 281, column: 48, scope: !18760)
!18763 = !DILocation(line: 281, column: 59, scope: !18760)
!18764 = !DILocation(line: 281, column: 57, scope: !18760)
!18765 = !DILocation(line: 281, column: 21, scope: !18760)
!18766 = !DILocation(line: 281, column: 19, scope: !18760)
!18767 = !DILocation(line: 281, column: 17, scope: !18702)
!18768 = !DILocation(line: 283, column: 30, scope: !18769)
!18769 = distinct !DILexicalBlock(scope: !18760, file: !1129, line: 282, column: 13)
!18770 = !DILocation(line: 283, column: 38, scope: !18769)
!18771 = !DILocation(line: 283, column: 44, scope: !18769)
!18772 = !DILocation(line: 283, column: 17, scope: !18769)
!18773 = !DILocation(line: 284, column: 25, scope: !18769)
!18774 = !DILocation(line: 284, column: 61, scope: !18769)
!18775 = !DILocation(line: 284, column: 17, scope: !18769)
!18776 = !DILocation(line: 285, column: 13, scope: !18769)
!18777 = !DILocation(line: 286, column: 52, scope: !18702)
!18778 = !DILocation(line: 286, column: 13, scope: !18702)
!18779 = !DILocation(line: 286, column: 20, scope: !18702)
!18780 = !DILocation(line: 286, column: 29, scope: !18702)
!18781 = !DILocation(line: 286, column: 27, scope: !18702)
!18782 = !DILocation(line: 286, column: 41, scope: !18702)
!18783 = !DILocation(line: 286, column: 39, scope: !18702)
!18784 = !DILocation(line: 286, column: 50, scope: !18702)
!18785 = !DILocation(line: 288, column: 22, scope: !18645)
!18786 = !DILocation(line: 288, column: 30, scope: !18645)
!18787 = !DILocation(line: 288, column: 36, scope: !18645)
!18788 = !DILocation(line: 288, column: 9, scope: !18645)
!18789 = !DILocation(line: 289, column: 17, scope: !18645)
!18790 = !DILocation(line: 289, column: 9, scope: !18645)
!18791 = !DILocation(line: 290, column: 19, scope: !18645)
!18792 = !DILocation(line: 290, column: 16, scope: !18645)
!18793 = !DILocation(line: 291, column: 22, scope: !18645)
!18794 = !DILocation(line: 291, column: 30, scope: !18645)
!18795 = !DILocation(line: 291, column: 9, scope: !18645)
!18796 = !DILocation(line: 292, column: 17, scope: !18645)
!18797 = !DILocation(line: 292, column: 9, scope: !18645)
!18798 = distinct !{!18798, !18634, !18799}
!18799 = !DILocation(line: 293, column: 5, scope: !18611)
!18800 = !DILocation(line: 294, column: 1, scope: !18611)
!18801 = distinct !DISubprogram(name: "output_data", scope: !1129, file: !1129, line: 296, type: !18802, isLocal: false, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18802 = !DISubroutineType(types: !18803)
!18803 = !{null, !18411, !185, !186, !58, !58}
!18804 = !DILocalVariable(name: "stream", arg: 1, scope: !18801, file: !1129, line: 296, type: !18411)
!18805 = !DILocation(line: 296, column: 25, scope: !18801)
!18806 = !DILocalVariable(name: "format", arg: 2, scope: !18801, file: !1129, line: 297, type: !185)
!18807 = !DILocation(line: 297, column: 37, scope: !18801)
!18808 = !DILocalVariable(name: "data", arg: 3, scope: !18801, file: !1129, line: 298, type: !186)
!18809 = !DILocation(line: 298, column: 28, scope: !18801)
!18810 = !DILocalVariable(name: "dataLength", arg: 4, scope: !18801, file: !1129, line: 299, type: !58)
!18811 = !DILocation(line: 299, column: 22, scope: !18801)
!18812 = !DILocalVariable(name: "indent", arg: 5, scope: !18801, file: !1129, line: 300, type: !58)
!18813 = !DILocation(line: 300, column: 22, scope: !18801)
!18814 = !DILocalVariable(name: "i", scope: !18801, file: !1129, line: 302, type: !58)
!18815 = !DILocation(line: 302, column: 9, scope: !18801)
!18816 = !DILocation(line: 304, column: 18, scope: !18801)
!18817 = !DILocation(line: 304, column: 26, scope: !18801)
!18818 = !DILocation(line: 304, column: 5, scope: !18801)
!18819 = !DILocation(line: 305, column: 13, scope: !18801)
!18820 = !DILocation(line: 305, column: 51, scope: !18801)
!18821 = !DILocation(line: 305, column: 5, scope: !18801)
!18822 = !DILocation(line: 307, column: 13, scope: !18801)
!18823 = !DILocation(line: 307, column: 5, scope: !18801)
!18824 = !DILocation(line: 310, column: 17, scope: !18825)
!18825 = distinct !DILexicalBlock(scope: !18801, file: !1129, line: 308, column: 5)
!18826 = !DILocation(line: 310, column: 9, scope: !18825)
!18827 = !DILocation(line: 311, column: 23, scope: !18825)
!18828 = !DILocation(line: 311, column: 31, scope: !18825)
!18829 = !DILocation(line: 311, column: 37, scope: !18825)
!18830 = !DILocation(line: 311, column: 49, scope: !18825)
!18831 = !DILocation(line: 311, column: 9, scope: !18825)
!18832 = !DILocation(line: 312, column: 9, scope: !18825)
!18833 = !DILocation(line: 315, column: 17, scope: !18825)
!18834 = !DILocation(line: 315, column: 9, scope: !18825)
!18835 = !DILocation(line: 316, column: 23, scope: !18825)
!18836 = !DILocation(line: 316, column: 31, scope: !18825)
!18837 = !DILocation(line: 316, column: 37, scope: !18825)
!18838 = !DILocation(line: 316, column: 49, scope: !18825)
!18839 = !DILocation(line: 316, column: 9, scope: !18825)
!18840 = !DILocation(line: 317, column: 9, scope: !18825)
!18841 = !DILocation(line: 320, column: 17, scope: !18825)
!18842 = !DILocation(line: 320, column: 9, scope: !18825)
!18843 = !DILocation(line: 321, column: 20, scope: !18825)
!18844 = !DILocation(line: 321, column: 28, scope: !18825)
!18845 = !DILocation(line: 321, column: 34, scope: !18825)
!18846 = !DILocation(line: 321, column: 46, scope: !18825)
!18847 = !DILocation(line: 321, column: 9, scope: !18825)
!18848 = !DILocation(line: 322, column: 9, scope: !18825)
!18849 = !DILocation(line: 325, column: 17, scope: !18825)
!18850 = !DILocation(line: 325, column: 9, scope: !18825)
!18851 = !DILocation(line: 326, column: 22, scope: !18825)
!18852 = !DILocation(line: 326, column: 30, scope: !18825)
!18853 = !DILocation(line: 326, column: 9, scope: !18825)
!18854 = !DILocation(line: 327, column: 16, scope: !18855)
!18855 = distinct !DILexicalBlock(scope: !18825, file: !1129, line: 327, column: 9)
!18856 = !DILocation(line: 327, column: 14, scope: !18855)
!18857 = !DILocation(line: 327, column: 22, scope: !18858)
!18858 = distinct !DILexicalBlock(scope: !18855, file: !1129, line: 327, column: 9)
!18859 = !DILocation(line: 327, column: 26, scope: !18858)
!18860 = !DILocation(line: 327, column: 24, scope: !18858)
!18861 = !DILocation(line: 327, column: 9, scope: !18855)
!18862 = !DILocation(line: 329, column: 21, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18858, file: !1129, line: 328, column: 9)
!18864 = !DILocation(line: 329, column: 35, scope: !18863)
!18865 = !DILocation(line: 329, column: 40, scope: !18863)
!18866 = !DILocation(line: 329, column: 13, scope: !18863)
!18867 = !DILocation(line: 330, column: 9, scope: !18863)
!18868 = !DILocation(line: 327, column: 40, scope: !18858)
!18869 = !DILocation(line: 327, column: 9, scope: !18858)
!18870 = distinct !{!18870, !18861, !18871}
!18871 = !DILocation(line: 330, column: 9, scope: !18855)
!18872 = !DILocation(line: 331, column: 17, scope: !18825)
!18873 = !DILocation(line: 331, column: 9, scope: !18825)
!18874 = !DILocation(line: 332, column: 9, scope: !18825)
!18875 = !DILocation(line: 335, column: 17, scope: !18825)
!18876 = !DILocation(line: 335, column: 9, scope: !18825)
!18877 = !DILocation(line: 336, column: 22, scope: !18825)
!18878 = !DILocation(line: 336, column: 30, scope: !18825)
!18879 = !DILocation(line: 336, column: 9, scope: !18825)
!18880 = !DILocation(line: 337, column: 16, scope: !18881)
!18881 = distinct !DILexicalBlock(scope: !18825, file: !1129, line: 337, column: 9)
!18882 = !DILocation(line: 337, column: 14, scope: !18881)
!18883 = !DILocation(line: 337, column: 22, scope: !18884)
!18884 = distinct !DILexicalBlock(scope: !18881, file: !1129, line: 337, column: 9)
!18885 = !DILocation(line: 337, column: 26, scope: !18884)
!18886 = !DILocation(line: 337, column: 24, scope: !18884)
!18887 = !DILocation(line: 337, column: 9, scope: !18881)
!18888 = !DILocation(line: 339, column: 21, scope: !18889)
!18889 = distinct !DILexicalBlock(scope: !18884, file: !1129, line: 338, column: 9)
!18890 = !DILocation(line: 339, column: 35, scope: !18889)
!18891 = !DILocation(line: 339, column: 40, scope: !18889)
!18892 = !DILocation(line: 339, column: 13, scope: !18889)
!18893 = !DILocation(line: 340, column: 9, scope: !18889)
!18894 = !DILocation(line: 337, column: 40, scope: !18884)
!18895 = !DILocation(line: 337, column: 9, scope: !18884)
!18896 = distinct !{!18896, !18887, !18897}
!18897 = !DILocation(line: 340, column: 9, scope: !18881)
!18898 = !DILocation(line: 341, column: 17, scope: !18825)
!18899 = !DILocation(line: 341, column: 9, scope: !18825)
!18900 = !DILocation(line: 342, column: 9, scope: !18825)
!18901 = !DILocation(line: 345, column: 17, scope: !18825)
!18902 = !DILocation(line: 345, column: 46, scope: !18825)
!18903 = !DILocation(line: 345, column: 9, scope: !18825)
!18904 = !DILocation(line: 346, column: 23, scope: !18825)
!18905 = !DILocation(line: 346, column: 31, scope: !18825)
!18906 = !DILocation(line: 346, column: 37, scope: !18825)
!18907 = !DILocation(line: 346, column: 49, scope: !18825)
!18908 = !DILocation(line: 346, column: 9, scope: !18825)
!18909 = !DILocation(line: 347, column: 9, scope: !18825)
!18910 = !DILocation(line: 349, column: 1, scope: !18801)
!18911 = distinct !DISubprogram(name: "dump_tlv", scope: !1129, file: !1129, line: 351, type: !18912, isLocal: false, isDefinition: true, scopeLine: 355, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!18912 = !DISubroutineType(types: !18913)
!18913 = !{null, !18411, !58, !18914, !58}
!18914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18915, size: 64)
!18915 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwm2m_data_t", file: !6, line: 298, baseType: !18916)
!18916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_lwm2m_data_t", file: !6, line: 300, size: 192, elements: !18917)
!18917 = !{!18918, !18919, !18920}
!18918 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !18916, file: !6, line: 302, baseType: !689, size: 32)
!18919 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !18916, file: !6, line: 303, baseType: !79, size: 16, offset: 32)
!18920 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !18916, file: !6, line: 324, baseType: !18921, size: 128, offset: 64)
!18921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18916, file: !6, line: 304, size: 128, elements: !18922)
!18922 = !{!18923, !18924, !18925, !18926, !18931, !18936}
!18923 = !DIDerivedType(tag: DW_TAG_member, name: "asBoolean", scope: !18921, file: !6, line: 306, baseType: !136, size: 8)
!18924 = !DIDerivedType(tag: DW_TAG_member, name: "asInteger", scope: !18921, file: !6, line: 307, baseType: !18703, size: 64)
!18925 = !DIDerivedType(tag: DW_TAG_member, name: "asFloat", scope: !18921, file: !6, line: 308, baseType: !253, size: 64)
!18926 = !DIDerivedType(tag: DW_TAG_member, name: "asBuffer", scope: !18921, file: !6, line: 313, baseType: !18927, size: 128)
!18927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18921, file: !6, line: 309, size: 128, elements: !18928)
!18928 = !{!18929, !18930}
!18929 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !18927, file: !6, line: 311, baseType: !438, size: 64)
!18930 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !18927, file: !6, line: 312, baseType: !186, size: 64, offset: 64)
!18931 = !DIDerivedType(tag: DW_TAG_member, name: "asChildren", scope: !18921, file: !6, line: 318, baseType: !18932, size: 128)
!18932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18921, file: !6, line: 314, size: 128, elements: !18933)
!18933 = !{!18934, !18935}
!18934 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !18932, file: !6, line: 316, baseType: !438, size: 64)
!18935 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !18932, file: !6, line: 317, baseType: !18914, size: 64, offset: 64)
!18936 = !DIDerivedType(tag: DW_TAG_member, name: "asObjLink", scope: !18921, file: !6, line: 323, baseType: !18937, size: 32)
!18937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18921, file: !6, line: 319, size: 32, elements: !18938)
!18938 = !{!18939, !18940}
!18939 = !DIDerivedType(tag: DW_TAG_member, name: "objectId", scope: !18937, file: !6, line: 321, baseType: !79, size: 16)
!18940 = !DIDerivedType(tag: DW_TAG_member, name: "objectInstanceId", scope: !18937, file: !6, line: 322, baseType: !79, size: 16, offset: 16)
!18941 = !DILocalVariable(name: "stream", arg: 1, scope: !18911, file: !1129, line: 351, type: !18411)
!18942 = !DILocation(line: 351, column: 22, scope: !18911)
!18943 = !DILocalVariable(name: "size", arg: 2, scope: !18911, file: !1129, line: 352, type: !58)
!18944 = !DILocation(line: 352, column: 19, scope: !18911)
!18945 = !DILocalVariable(name: "dataP", arg: 3, scope: !18911, file: !1129, line: 353, type: !18914)
!18946 = !DILocation(line: 353, column: 30, scope: !18911)
!18947 = !DILocalVariable(name: "indent", arg: 4, scope: !18911, file: !1129, line: 354, type: !58)
!18948 = !DILocation(line: 354, column: 19, scope: !18911)
!18949 = !DILocalVariable(name: "i", scope: !18911, file: !1129, line: 356, type: !58)
!18950 = !DILocation(line: 356, column: 9, scope: !18911)
!18951 = !DILocation(line: 358, column: 10, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18911, file: !1129, line: 358, column: 5)
!18953 = !DILocation(line: 358, column: 9, scope: !18952)
!18954 = !DILocation(line: 358, column: 16, scope: !18955)
!18955 = distinct !DILexicalBlock(scope: !18952, file: !1129, line: 358, column: 5)
!18956 = !DILocation(line: 358, column: 20, scope: !18955)
!18957 = !DILocation(line: 358, column: 18, scope: !18955)
!18958 = !DILocation(line: 358, column: 5, scope: !18952)
!18959 = !DILocation(line: 360, column: 22, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18955, file: !1129, line: 359, column: 5)
!18961 = !DILocation(line: 360, column: 30, scope: !18960)
!18962 = !DILocation(line: 360, column: 9, scope: !18960)
!18963 = !DILocation(line: 361, column: 17, scope: !18960)
!18964 = !DILocation(line: 361, column: 9, scope: !18960)
!18965 = !DILocation(line: 362, column: 22, scope: !18960)
!18966 = !DILocation(line: 362, column: 30, scope: !18960)
!18967 = !DILocation(line: 362, column: 36, scope: !18960)
!18968 = !DILocation(line: 362, column: 9, scope: !18960)
!18969 = !DILocation(line: 363, column: 17, scope: !18960)
!18970 = !DILocation(line: 363, column: 39, scope: !18960)
!18971 = !DILocation(line: 363, column: 45, scope: !18960)
!18972 = !DILocation(line: 363, column: 48, scope: !18960)
!18973 = !DILocation(line: 363, column: 9, scope: !18960)
!18974 = !DILocation(line: 365, column: 22, scope: !18960)
!18975 = !DILocation(line: 365, column: 30, scope: !18960)
!18976 = !DILocation(line: 365, column: 36, scope: !18960)
!18977 = !DILocation(line: 365, column: 9, scope: !18960)
!18978 = !DILocation(line: 366, column: 17, scope: !18960)
!18979 = !DILocation(line: 366, column: 9, scope: !18960)
!18980 = !DILocation(line: 367, column: 17, scope: !18960)
!18981 = !DILocation(line: 367, column: 23, scope: !18960)
!18982 = !DILocation(line: 367, column: 26, scope: !18960)
!18983 = !DILocation(line: 367, column: 9, scope: !18960)
!18984 = !DILocation(line: 370, column: 21, scope: !18985)
!18985 = distinct !DILexicalBlock(scope: !18960, file: !1129, line: 368, column: 9)
!18986 = !DILocation(line: 370, column: 13, scope: !18985)
!18987 = !DILocation(line: 371, column: 22, scope: !18985)
!18988 = !DILocation(line: 371, column: 30, scope: !18985)
!18989 = !DILocation(line: 371, column: 36, scope: !18985)
!18990 = !DILocation(line: 371, column: 39, scope: !18985)
!18991 = !DILocation(line: 371, column: 45, scope: !18985)
!18992 = !DILocation(line: 371, column: 56, scope: !18985)
!18993 = !DILocation(line: 371, column: 63, scope: !18985)
!18994 = !DILocation(line: 371, column: 69, scope: !18985)
!18995 = !DILocation(line: 371, column: 72, scope: !18985)
!18996 = !DILocation(line: 371, column: 78, scope: !18985)
!18997 = !DILocation(line: 371, column: 89, scope: !18985)
!18998 = !DILocation(line: 371, column: 96, scope: !18985)
!18999 = !DILocation(line: 371, column: 103, scope: !18985)
!19000 = !DILocation(line: 371, column: 13, scope: !18985)
!19001 = !DILocation(line: 372, column: 13, scope: !18985)
!19002 = !DILocation(line: 374, column: 21, scope: !18985)
!19003 = !DILocation(line: 374, column: 13, scope: !18985)
!19004 = !DILocation(line: 375, column: 22, scope: !18985)
!19005 = !DILocation(line: 375, column: 30, scope: !18985)
!19006 = !DILocation(line: 375, column: 36, scope: !18985)
!19007 = !DILocation(line: 375, column: 39, scope: !18985)
!19008 = !DILocation(line: 375, column: 45, scope: !18985)
!19009 = !DILocation(line: 375, column: 56, scope: !18985)
!19010 = !DILocation(line: 375, column: 63, scope: !18985)
!19011 = !DILocation(line: 375, column: 69, scope: !18985)
!19012 = !DILocation(line: 375, column: 72, scope: !18985)
!19013 = !DILocation(line: 375, column: 78, scope: !18985)
!19014 = !DILocation(line: 375, column: 89, scope: !18985)
!19015 = !DILocation(line: 375, column: 96, scope: !18985)
!19016 = !DILocation(line: 375, column: 103, scope: !18985)
!19017 = !DILocation(line: 375, column: 13, scope: !18985)
!19018 = !DILocation(line: 376, column: 13, scope: !18985)
!19019 = !DILocation(line: 378, column: 21, scope: !18985)
!19020 = !DILocation(line: 378, column: 13, scope: !18985)
!19021 = !DILocation(line: 379, column: 22, scope: !18985)
!19022 = !DILocation(line: 379, column: 30, scope: !18985)
!19023 = !DILocation(line: 379, column: 36, scope: !18985)
!19024 = !DILocation(line: 379, column: 39, scope: !18985)
!19025 = !DILocation(line: 379, column: 45, scope: !18985)
!19026 = !DILocation(line: 379, column: 56, scope: !18985)
!19027 = !DILocation(line: 379, column: 63, scope: !18985)
!19028 = !DILocation(line: 379, column: 69, scope: !18985)
!19029 = !DILocation(line: 379, column: 72, scope: !18985)
!19030 = !DILocation(line: 379, column: 78, scope: !18985)
!19031 = !DILocation(line: 379, column: 89, scope: !18985)
!19032 = !DILocation(line: 379, column: 96, scope: !18985)
!19033 = !DILocation(line: 379, column: 103, scope: !18985)
!19034 = !DILocation(line: 379, column: 13, scope: !18985)
!19035 = !DILocation(line: 380, column: 13, scope: !18985)
!19036 = !DILocation(line: 382, column: 21, scope: !18985)
!19037 = !DILocation(line: 382, column: 13, scope: !18985)
!19038 = !DILocation(line: 383, column: 13, scope: !18985)
!19039 = !DILocation(line: 385, column: 21, scope: !18985)
!19040 = !DILocation(line: 385, column: 13, scope: !18985)
!19041 = !DILocation(line: 386, column: 26, scope: !18985)
!19042 = !DILocation(line: 386, column: 34, scope: !18985)
!19043 = !DILocation(line: 386, column: 41, scope: !18985)
!19044 = !DILocation(line: 386, column: 13, scope: !18985)
!19045 = !DILocation(line: 387, column: 21, scope: !18985)
!19046 = !DILocation(line: 387, column: 50, scope: !18985)
!19047 = !DILocation(line: 387, column: 56, scope: !18985)
!19048 = !DILocation(line: 387, column: 59, scope: !18985)
!19049 = !DILocation(line: 387, column: 65, scope: !18985)
!19050 = !DILocation(line: 387, column: 74, scope: !18985)
!19051 = !DILocation(line: 387, column: 45, scope: !18985)
!19052 = !DILocation(line: 387, column: 82, scope: !18985)
!19053 = !DILocation(line: 387, column: 88, scope: !18985)
!19054 = !DILocation(line: 387, column: 91, scope: !18985)
!19055 = !DILocation(line: 387, column: 97, scope: !18985)
!19056 = !DILocation(line: 387, column: 106, scope: !18985)
!19057 = !DILocation(line: 387, column: 13, scope: !18985)
!19058 = !DILocation(line: 388, column: 13, scope: !18985)
!19059 = !DILocation(line: 390, column: 21, scope: !18985)
!19060 = !DILocation(line: 390, column: 13, scope: !18985)
!19061 = !DILocation(line: 391, column: 27, scope: !18985)
!19062 = !DILocation(line: 391, column: 35, scope: !18985)
!19063 = !DILocation(line: 391, column: 41, scope: !18985)
!19064 = !DILocation(line: 391, column: 44, scope: !18985)
!19065 = !DILocation(line: 391, column: 50, scope: !18985)
!19066 = !DILocation(line: 391, column: 59, scope: !18985)
!19067 = !DILocation(line: 391, column: 67, scope: !18985)
!19068 = !DILocation(line: 391, column: 73, scope: !18985)
!19069 = !DILocation(line: 391, column: 76, scope: !18985)
!19070 = !DILocation(line: 391, column: 82, scope: !18985)
!19071 = !DILocation(line: 391, column: 91, scope: !18985)
!19072 = !DILocation(line: 391, column: 99, scope: !18985)
!19073 = !DILocation(line: 391, column: 106, scope: !18985)
!19074 = !DILocation(line: 391, column: 13, scope: !18985)
!19075 = !DILocation(line: 392, column: 13, scope: !18985)
!19076 = !DILocation(line: 394, column: 21, scope: !18985)
!19077 = !DILocation(line: 394, column: 13, scope: !18985)
!19078 = !DILocation(line: 395, column: 26, scope: !18985)
!19079 = !DILocation(line: 395, column: 34, scope: !18985)
!19080 = !DILocation(line: 395, column: 41, scope: !18985)
!19081 = !DILocation(line: 395, column: 13, scope: !18985)
!19082 = !DILocation(line: 396, column: 21, scope: !18985)
!19083 = !DILocation(line: 396, column: 41, scope: !18985)
!19084 = !DILocation(line: 396, column: 47, scope: !18985)
!19085 = !DILocation(line: 396, column: 50, scope: !18985)
!19086 = !DILocation(line: 396, column: 56, scope: !18985)
!19087 = !DILocation(line: 396, column: 13, scope: !18985)
!19088 = !DILocation(line: 397, column: 21, scope: !18985)
!19089 = !DILocation(line: 397, column: 13, scope: !18985)
!19090 = !DILocation(line: 398, column: 13, scope: !18985)
!19091 = !DILocation(line: 400, column: 21, scope: !18985)
!19092 = !DILocation(line: 400, column: 13, scope: !18985)
!19093 = !DILocation(line: 401, column: 26, scope: !18985)
!19094 = !DILocation(line: 401, column: 34, scope: !18985)
!19095 = !DILocation(line: 401, column: 41, scope: !18985)
!19096 = !DILocation(line: 401, column: 13, scope: !18985)
!19097 = !DILocation(line: 402, column: 21, scope: !18985)
!19098 = !DILocation(line: 402, column: 41, scope: !18985)
!19099 = !DILocation(line: 402, column: 47, scope: !18985)
!19100 = !DILocation(line: 402, column: 50, scope: !18985)
!19101 = !DILocation(line: 402, column: 56, scope: !18985)
!19102 = !DILocation(line: 402, column: 13, scope: !18985)
!19103 = !DILocation(line: 403, column: 21, scope: !18985)
!19104 = !DILocation(line: 403, column: 13, scope: !18985)
!19105 = !DILocation(line: 404, column: 13, scope: !18985)
!19106 = !DILocation(line: 406, column: 21, scope: !18985)
!19107 = !DILocation(line: 406, column: 13, scope: !18985)
!19108 = !DILocation(line: 407, column: 21, scope: !18985)
!19109 = !DILocation(line: 407, column: 35, scope: !18985)
!19110 = !DILocation(line: 407, column: 41, scope: !18985)
!19111 = !DILocation(line: 407, column: 44, scope: !18985)
!19112 = !DILocation(line: 407, column: 50, scope: !18985)
!19113 = !DILocation(line: 407, column: 13, scope: !18985)
!19114 = !DILocation(line: 408, column: 21, scope: !18985)
!19115 = !DILocation(line: 408, column: 13, scope: !18985)
!19116 = !DILocation(line: 409, column: 13, scope: !18985)
!19117 = !DILocation(line: 411, column: 21, scope: !18985)
!19118 = !DILocation(line: 411, column: 13, scope: !18985)
!19119 = !DILocation(line: 412, column: 13, scope: !18985)
!19120 = !DILocation(line: 414, column: 21, scope: !18985)
!19121 = !DILocation(line: 414, column: 54, scope: !18985)
!19122 = !DILocation(line: 414, column: 60, scope: !18985)
!19123 = !DILocation(line: 414, column: 63, scope: !18985)
!19124 = !DILocation(line: 414, column: 13, scope: !18985)
!19125 = !DILocation(line: 415, column: 13, scope: !18985)
!19126 = !DILocation(line: 417, column: 22, scope: !18960)
!19127 = !DILocation(line: 417, column: 30, scope: !18960)
!19128 = !DILocation(line: 417, column: 9, scope: !18960)
!19129 = !DILocation(line: 418, column: 17, scope: !18960)
!19130 = !DILocation(line: 418, column: 9, scope: !18960)
!19131 = !DILocation(line: 419, column: 5, scope: !18960)
!19132 = !DILocation(line: 358, column: 28, scope: !18955)
!19133 = !DILocation(line: 358, column: 5, scope: !18955)
!19134 = distinct !{!19134, !18958, !19135}
!19135 = !DILocation(line: 419, column: 5, scope: !18952)
!19136 = !DILocation(line: 420, column: 1, scope: !18911)
!19137 = distinct !DISubprogram(name: "print_status", scope: !1129, file: !1129, line: 446, type: !19138, isLocal: false, isDefinition: true, scopeLine: 448, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!19138 = !DISubroutineType(types: !19139)
!19139 = !{null, !18411, !107}
!19140 = !DILocalVariable(name: "stream", arg: 1, scope: !19137, file: !1129, line: 446, type: !18411)
!19141 = !DILocation(line: 446, column: 26, scope: !19137)
!19142 = !DILocalVariable(name: "status", arg: 2, scope: !19137, file: !1129, line: 447, type: !107)
!19143 = !DILocation(line: 447, column: 27, scope: !19137)
!19144 = !DILocation(line: 449, column: 13, scope: !19137)
!19145 = !DILocation(line: 449, column: 38, scope: !19137)
!19146 = !DILocation(line: 449, column: 44, scope: !19137)
!19147 = !DILocation(line: 449, column: 50, scope: !19137)
!19148 = !DILocation(line: 449, column: 55, scope: !19137)
!19149 = !DILocation(line: 449, column: 61, scope: !19137)
!19150 = !DILocation(line: 449, column: 89, scope: !19137)
!19151 = !DILocation(line: 449, column: 68, scope: !19137)
!19152 = !DILocation(line: 449, column: 5, scope: !19137)
!19153 = !DILocation(line: 450, column: 1, scope: !19137)
!19154 = distinct !DISubprogram(name: "prv_status_to_string", scope: !1129, file: !1129, line: 424, type: !19155, isLocal: true, isDefinition: true, scopeLine: 425, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!19155 = !DISubroutineType(types: !19156)
!19156 = !{!548, !58}
!19157 = !DILocalVariable(name: "status", arg: 1, scope: !19154, file: !1129, line: 424, type: !58)
!19158 = !DILocation(line: 424, column: 45, scope: !19154)
!19159 = !DILocation(line: 426, column: 12, scope: !19154)
!19160 = !DILocation(line: 426, column: 5, scope: !19154)
!19161 = !DILocation(line: 428, column: 5, scope: !19162)
!19162 = distinct !DILexicalBlock(scope: !19154, file: !1129, line: 427, column: 5)
!19163 = !DILocation(line: 429, column: 5, scope: !19162)
!19164 = !DILocation(line: 430, column: 5, scope: !19162)
!19165 = !DILocation(line: 431, column: 5, scope: !19162)
!19166 = !DILocation(line: 432, column: 5, scope: !19162)
!19167 = !DILocation(line: 433, column: 5, scope: !19162)
!19168 = !DILocation(line: 434, column: 5, scope: !19162)
!19169 = !DILocation(line: 435, column: 5, scope: !19162)
!19170 = !DILocation(line: 436, column: 5, scope: !19162)
!19171 = !DILocation(line: 437, column: 5, scope: !19162)
!19172 = !DILocation(line: 438, column: 5, scope: !19162)
!19173 = !DILocation(line: 439, column: 5, scope: !19162)
!19174 = !DILocation(line: 440, column: 5, scope: !19162)
!19175 = !DILocation(line: 441, column: 5, scope: !19162)
!19176 = !DILocation(line: 442, column: 14, scope: !19162)
!19177 = !DILocation(line: 444, column: 1, scope: !19154)
!19178 = distinct !DISubprogram(name: "base64_decode", scope: !1129, file: !1129, line: 504, type: !19179, isLocal: false, isDefinition: true, scopeLine: 507, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!19179 = !DISubroutineType(types: !19180)
!19180 = !{!438, !186, !438, !5103}
!19181 = !DILocalVariable(name: "dataP", arg: 1, scope: !19178, file: !1129, line: 504, type: !186)
!19182 = !DILocation(line: 504, column: 32, scope: !19178)
!19183 = !DILocalVariable(name: "dataLen", arg: 2, scope: !19178, file: !1129, line: 505, type: !438)
!19184 = !DILocation(line: 505, column: 29, scope: !19178)
!19185 = !DILocalVariable(name: "bufferP", arg: 3, scope: !19178, file: !1129, line: 506, type: !5103)
!19186 = !DILocation(line: 506, column: 33, scope: !19178)
!19187 = !DILocalVariable(name: "data_index", scope: !19178, file: !1129, line: 508, type: !438)
!19188 = !DILocation(line: 508, column: 12, scope: !19178)
!19189 = !DILocalVariable(name: "result_index", scope: !19178, file: !1129, line: 509, type: !438)
!19190 = !DILocation(line: 509, column: 12, scope: !19178)
!19191 = !DILocalVariable(name: "result_len", scope: !19178, file: !1129, line: 510, type: !438)
!19192 = !DILocation(line: 510, column: 12, scope: !19178)
!19193 = !DILocation(line: 512, column: 9, scope: !19194)
!19194 = distinct !DILexicalBlock(scope: !19178, file: !1129, line: 512, column: 9)
!19195 = !DILocation(line: 512, column: 17, scope: !19194)
!19196 = !DILocation(line: 512, column: 9, scope: !19178)
!19197 = !DILocation(line: 512, column: 22, scope: !19194)
!19198 = !DILocation(line: 514, column: 19, scope: !19178)
!19199 = !DILocation(line: 514, column: 27, scope: !19178)
!19200 = !DILocation(line: 514, column: 33, scope: !19178)
!19201 = !DILocation(line: 514, column: 16, scope: !19178)
!19202 = !DILocation(line: 515, column: 40, scope: !19178)
!19203 = !DILocation(line: 515, column: 27, scope: !19178)
!19204 = !DILocation(line: 515, column: 6, scope: !19178)
!19205 = !DILocation(line: 515, column: 14, scope: !19178)
!19206 = !DILocation(line: 516, column: 18, scope: !19207)
!19207 = distinct !DILexicalBlock(scope: !19178, file: !1129, line: 516, column: 9)
!19208 = !DILocation(line: 516, column: 17, scope: !19207)
!19209 = !DILocation(line: 516, column: 14, scope: !19207)
!19210 = !DILocation(line: 516, column: 9, scope: !19178)
!19211 = !DILocation(line: 516, column: 27, scope: !19207)
!19212 = !DILocation(line: 517, column: 13, scope: !19178)
!19213 = !DILocation(line: 517, column: 12, scope: !19178)
!19214 = !DILocation(line: 517, column: 25, scope: !19178)
!19215 = !DILocation(line: 517, column: 5, scope: !19178)
!19216 = !DILocation(line: 520, column: 5, scope: !19178)
!19217 = !DILocation(line: 520, column: 12, scope: !19178)
!19218 = !DILocation(line: 520, column: 18, scope: !19178)
!19219 = !DILocation(line: 520, column: 26, scope: !19178)
!19220 = !DILocation(line: 520, column: 31, scope: !19178)
!19221 = !DILocation(line: 522, column: 16, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19178, file: !1129, line: 521, column: 5)
!19223 = distinct !{!19223, !19216, !19224}
!19224 = !DILocation(line: 523, column: 5, scope: !19178)
!19225 = !DILocation(line: 525, column: 16, scope: !19178)
!19226 = !DILocation(line: 526, column: 18, scope: !19178)
!19227 = !DILocation(line: 527, column: 5, scope: !19178)
!19228 = !DILocation(line: 527, column: 12, scope: !19178)
!19229 = !DILocation(line: 527, column: 25, scope: !19178)
!19230 = !DILocation(line: 527, column: 23, scope: !19178)
!19231 = !DILocation(line: 529, column: 25, scope: !19232)
!19232 = distinct !DILexicalBlock(scope: !19178, file: !1129, line: 528, column: 5)
!19233 = !DILocation(line: 529, column: 33, scope: !19232)
!19234 = !DILocation(line: 529, column: 31, scope: !19232)
!19235 = !DILocation(line: 529, column: 46, scope: !19232)
!19236 = !DILocation(line: 529, column: 45, scope: !19232)
!19237 = !DILocation(line: 529, column: 56, scope: !19232)
!19238 = !DILocation(line: 529, column: 54, scope: !19232)
!19239 = !DILocation(line: 529, column: 9, scope: !19232)
!19240 = !DILocation(line: 530, column: 20, scope: !19232)
!19241 = !DILocation(line: 531, column: 22, scope: !19232)
!19242 = distinct !{!19242, !19227, !19243}
!19243 = !DILocation(line: 532, column: 5, scope: !19178)
!19244 = !DILocation(line: 533, column: 13, scope: !19178)
!19245 = !DILocation(line: 533, column: 26, scope: !19178)
!19246 = !DILocation(line: 533, column: 24, scope: !19178)
!19247 = !DILocation(line: 533, column: 5, scope: !19178)
!19248 = !DILocation(line: 536, column: 9, scope: !19249)
!19249 = distinct !DILexicalBlock(scope: !19178, file: !1129, line: 534, column: 5)
!19250 = !DILocalVariable(name: "tmp", scope: !19251, file: !1129, line: 539, type: !19252)
!19251 = distinct !DILexicalBlock(scope: !19249, file: !1129, line: 538, column: 5)
!19252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 16, elements: !469)
!19253 = !DILocation(line: 539, column: 17, scope: !19251)
!19254 = !DILocation(line: 541, column: 32, scope: !19251)
!19255 = !DILocation(line: 541, column: 38, scope: !19251)
!19256 = !DILocation(line: 541, column: 46, scope: !19251)
!19257 = !DILocation(line: 541, column: 18, scope: !19251)
!19258 = !DILocation(line: 541, column: 9, scope: !19251)
!19259 = !DILocation(line: 541, column: 16, scope: !19251)
!19260 = !DILocation(line: 542, column: 32, scope: !19251)
!19261 = !DILocation(line: 542, column: 38, scope: !19251)
!19262 = !DILocation(line: 542, column: 46, scope: !19251)
!19263 = !DILocation(line: 542, column: 18, scope: !19251)
!19264 = !DILocation(line: 542, column: 9, scope: !19251)
!19265 = !DILocation(line: 542, column: 16, scope: !19251)
!19266 = !DILocation(line: 544, column: 39, scope: !19251)
!19267 = !DILocation(line: 544, column: 46, scope: !19251)
!19268 = !DILocation(line: 544, column: 55, scope: !19251)
!19269 = !DILocation(line: 544, column: 62, scope: !19251)
!19270 = !DILocation(line: 544, column: 52, scope: !19251)
!19271 = !DILocation(line: 544, column: 38, scope: !19251)
!19272 = !DILocation(line: 544, column: 10, scope: !19251)
!19273 = !DILocation(line: 544, column: 18, scope: !19251)
!19274 = !DILocation(line: 544, column: 31, scope: !19251)
!19275 = !DILocation(line: 544, column: 36, scope: !19251)
!19276 = !DILocation(line: 545, column: 39, scope: !19251)
!19277 = !DILocation(line: 545, column: 46, scope: !19251)
!19278 = !DILocation(line: 545, column: 38, scope: !19251)
!19279 = !DILocation(line: 545, column: 10, scope: !19251)
!19280 = !DILocation(line: 545, column: 18, scope: !19251)
!19281 = !DILocation(line: 545, column: 31, scope: !19251)
!19282 = !DILocation(line: 545, column: 36, scope: !19251)
!19283 = !DILocation(line: 546, column: 20, scope: !19251)
!19284 = !DILocation(line: 548, column: 5, scope: !19249)
!19285 = !DILocalVariable(name: "tmp", scope: !19286, file: !1129, line: 551, type: !19287)
!19286 = distinct !DILexicalBlock(scope: !19249, file: !1129, line: 550, column: 5)
!19287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 24, elements: !19288)
!19288 = !{!19289}
!19289 = !DISubrange(count: 3)
!19290 = !DILocation(line: 551, column: 17, scope: !19286)
!19291 = !DILocation(line: 553, column: 32, scope: !19286)
!19292 = !DILocation(line: 553, column: 38, scope: !19286)
!19293 = !DILocation(line: 553, column: 46, scope: !19286)
!19294 = !DILocation(line: 553, column: 18, scope: !19286)
!19295 = !DILocation(line: 553, column: 9, scope: !19286)
!19296 = !DILocation(line: 553, column: 16, scope: !19286)
!19297 = !DILocation(line: 554, column: 32, scope: !19286)
!19298 = !DILocation(line: 554, column: 38, scope: !19286)
!19299 = !DILocation(line: 554, column: 46, scope: !19286)
!19300 = !DILocation(line: 554, column: 18, scope: !19286)
!19301 = !DILocation(line: 554, column: 9, scope: !19286)
!19302 = !DILocation(line: 554, column: 16, scope: !19286)
!19303 = !DILocation(line: 555, column: 32, scope: !19286)
!19304 = !DILocation(line: 555, column: 38, scope: !19286)
!19305 = !DILocation(line: 555, column: 46, scope: !19286)
!19306 = !DILocation(line: 555, column: 18, scope: !19286)
!19307 = !DILocation(line: 555, column: 9, scope: !19286)
!19308 = !DILocation(line: 555, column: 16, scope: !19286)
!19309 = !DILocation(line: 557, column: 39, scope: !19286)
!19310 = !DILocation(line: 557, column: 46, scope: !19286)
!19311 = !DILocation(line: 557, column: 55, scope: !19286)
!19312 = !DILocation(line: 557, column: 62, scope: !19286)
!19313 = !DILocation(line: 557, column: 52, scope: !19286)
!19314 = !DILocation(line: 557, column: 38, scope: !19286)
!19315 = !DILocation(line: 557, column: 10, scope: !19286)
!19316 = !DILocation(line: 557, column: 18, scope: !19286)
!19317 = !DILocation(line: 557, column: 31, scope: !19286)
!19318 = !DILocation(line: 557, column: 36, scope: !19286)
!19319 = !DILocation(line: 558, column: 39, scope: !19286)
!19320 = !DILocation(line: 558, column: 46, scope: !19286)
!19321 = !DILocation(line: 558, column: 55, scope: !19286)
!19322 = !DILocation(line: 558, column: 62, scope: !19286)
!19323 = !DILocation(line: 558, column: 52, scope: !19286)
!19324 = !DILocation(line: 558, column: 38, scope: !19286)
!19325 = !DILocation(line: 558, column: 10, scope: !19286)
!19326 = !DILocation(line: 558, column: 18, scope: !19286)
!19327 = !DILocation(line: 558, column: 31, scope: !19286)
!19328 = !DILocation(line: 558, column: 36, scope: !19286)
!19329 = !DILocation(line: 559, column: 39, scope: !19286)
!19330 = !DILocation(line: 559, column: 46, scope: !19286)
!19331 = !DILocation(line: 559, column: 38, scope: !19286)
!19332 = !DILocation(line: 559, column: 10, scope: !19286)
!19333 = !DILocation(line: 559, column: 18, scope: !19286)
!19334 = !DILocation(line: 559, column: 31, scope: !19286)
!19335 = !DILocation(line: 559, column: 36, scope: !19286)
!19336 = !DILocation(line: 560, column: 20, scope: !19286)
!19337 = !DILocation(line: 562, column: 5, scope: !19249)
!19338 = !DILocation(line: 565, column: 21, scope: !19249)
!19339 = !DILocation(line: 565, column: 20, scope: !19249)
!19340 = !DILocation(line: 565, column: 9, scope: !19249)
!19341 = !DILocation(line: 566, column: 10, scope: !19249)
!19342 = !DILocation(line: 566, column: 18, scope: !19249)
!19343 = !DILocation(line: 567, column: 20, scope: !19249)
!19344 = !DILocation(line: 568, column: 9, scope: !19249)
!19345 = !DILocation(line: 571, column: 12, scope: !19178)
!19346 = !DILocation(line: 571, column: 5, scope: !19178)
!19347 = !DILocation(line: 572, column: 1, scope: !19178)
!19348 = distinct !DISubprogram(name: "prv_decodeBlock", scope: !1129, file: !1129, line: 486, type: !4709, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!19349 = !DILocalVariable(name: "input", arg: 1, scope: !19348, file: !1129, line: 486, type: !186)
!19350 = !DILocation(line: 486, column: 37, scope: !19348)
!19351 = !DILocalVariable(name: "output", arg: 2, scope: !19348, file: !1129, line: 487, type: !186)
!19352 = !DILocation(line: 487, column: 37, scope: !19348)
!19353 = !DILocalVariable(name: "tmp", scope: !19348, file: !1129, line: 489, type: !5234)
!19354 = !DILocation(line: 489, column: 13, scope: !19348)
!19355 = !DILocalVariable(name: "i", scope: !19348, file: !1129, line: 490, type: !58)
!19356 = !DILocation(line: 490, column: 9, scope: !19348)
!19357 = !DILocation(line: 492, column: 12, scope: !19348)
!19358 = !DILocation(line: 492, column: 5, scope: !19348)
!19359 = !DILocation(line: 494, column: 12, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19348, file: !1129, line: 494, column: 5)
!19361 = !DILocation(line: 494, column: 10, scope: !19360)
!19362 = !DILocation(line: 494, column: 17, scope: !19363)
!19363 = distinct !DILexicalBlock(scope: !19360, file: !1129, line: 494, column: 5)
!19364 = !DILocation(line: 494, column: 19, scope: !19363)
!19365 = !DILocation(line: 494, column: 5, scope: !19360)
!19366 = !DILocation(line: 496, column: 32, scope: !19367)
!19367 = distinct !DILexicalBlock(scope: !19363, file: !1129, line: 495, column: 5)
!19368 = !DILocation(line: 496, column: 38, scope: !19367)
!19369 = !DILocation(line: 496, column: 18, scope: !19367)
!19370 = !DILocation(line: 496, column: 13, scope: !19367)
!19371 = !DILocation(line: 496, column: 9, scope: !19367)
!19372 = !DILocation(line: 496, column: 16, scope: !19367)
!19373 = !DILocation(line: 497, column: 5, scope: !19367)
!19374 = !DILocation(line: 494, column: 25, scope: !19363)
!19375 = !DILocation(line: 494, column: 5, scope: !19363)
!19376 = distinct !{!19376, !19365, !19377}
!19377 = !DILocation(line: 497, column: 5, scope: !19360)
!19378 = !DILocation(line: 499, column: 18, scope: !19348)
!19379 = !DILocation(line: 499, column: 25, scope: !19348)
!19380 = !DILocation(line: 499, column: 34, scope: !19348)
!19381 = !DILocation(line: 499, column: 41, scope: !19348)
!19382 = !DILocation(line: 499, column: 31, scope: !19348)
!19383 = !DILocation(line: 499, column: 17, scope: !19348)
!19384 = !DILocation(line: 499, column: 5, scope: !19348)
!19385 = !DILocation(line: 499, column: 15, scope: !19348)
!19386 = !DILocation(line: 500, column: 18, scope: !19348)
!19387 = !DILocation(line: 500, column: 25, scope: !19348)
!19388 = !DILocation(line: 500, column: 34, scope: !19348)
!19389 = !DILocation(line: 500, column: 41, scope: !19348)
!19390 = !DILocation(line: 500, column: 31, scope: !19348)
!19391 = !DILocation(line: 500, column: 17, scope: !19348)
!19392 = !DILocation(line: 500, column: 5, scope: !19348)
!19393 = !DILocation(line: 500, column: 15, scope: !19348)
!19394 = !DILocation(line: 501, column: 18, scope: !19348)
!19395 = !DILocation(line: 501, column: 25, scope: !19348)
!19396 = !DILocation(line: 501, column: 33, scope: !19348)
!19397 = !DILocation(line: 501, column: 31, scope: !19348)
!19398 = !DILocation(line: 501, column: 17, scope: !19348)
!19399 = !DILocation(line: 501, column: 5, scope: !19348)
!19400 = !DILocation(line: 501, column: 15, scope: !19348)
!19401 = !DILocation(line: 502, column: 1, scope: !19348)
!19402 = distinct !DISubprogram(name: "prv_b64Revert", scope: !1129, file: !1129, line: 461, type: !19403, isLocal: true, isDefinition: true, scopeLine: 462, flags: DIFlagPrototyped, isOptimized: false, unit: !1128, variables: !488)
!19403 = !DISubroutineType(types: !19404)
!19404 = !{!107, !107}
!19405 = !DILocalVariable(name: "value", arg: 1, scope: !19402, file: !1129, line: 461, type: !107)
!19406 = !DILocation(line: 461, column: 38, scope: !19402)
!19407 = !DILocation(line: 463, column: 9, scope: !19408)
!19408 = distinct !DILexicalBlock(scope: !19402, file: !1129, line: 463, column: 9)
!19409 = !DILocation(line: 463, column: 15, scope: !19408)
!19410 = !DILocation(line: 463, column: 22, scope: !19408)
!19411 = !DILocation(line: 463, column: 25, scope: !19408)
!19412 = !DILocation(line: 463, column: 31, scope: !19408)
!19413 = !DILocation(line: 463, column: 9, scope: !19402)
!19414 = !DILocation(line: 465, column: 17, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19408, file: !1129, line: 464, column: 5)
!19416 = !DILocation(line: 465, column: 23, scope: !19415)
!19417 = !DILocation(line: 465, column: 16, scope: !19415)
!19418 = !DILocation(line: 465, column: 9, scope: !19415)
!19419 = !DILocation(line: 467, column: 9, scope: !19420)
!19420 = distinct !DILexicalBlock(scope: !19402, file: !1129, line: 467, column: 9)
!19421 = !DILocation(line: 467, column: 15, scope: !19420)
!19422 = !DILocation(line: 467, column: 22, scope: !19420)
!19423 = !DILocation(line: 467, column: 25, scope: !19420)
!19424 = !DILocation(line: 467, column: 31, scope: !19420)
!19425 = !DILocation(line: 467, column: 9, scope: !19402)
!19426 = !DILocation(line: 469, column: 22, scope: !19427)
!19427 = distinct !DILexicalBlock(scope: !19420, file: !1129, line: 468, column: 5)
!19428 = !DILocation(line: 469, column: 20, scope: !19427)
!19429 = !DILocation(line: 469, column: 28, scope: !19427)
!19430 = !DILocation(line: 469, column: 16, scope: !19427)
!19431 = !DILocation(line: 469, column: 9, scope: !19427)
!19432 = !DILocation(line: 471, column: 9, scope: !19433)
!19433 = distinct !DILexicalBlock(scope: !19402, file: !1129, line: 471, column: 9)
!19434 = !DILocation(line: 471, column: 15, scope: !19433)
!19435 = !DILocation(line: 471, column: 22, scope: !19433)
!19436 = !DILocation(line: 471, column: 25, scope: !19433)
!19437 = !DILocation(line: 471, column: 31, scope: !19433)
!19438 = !DILocation(line: 471, column: 9, scope: !19402)
!19439 = !DILocation(line: 473, column: 22, scope: !19440)
!19440 = distinct !DILexicalBlock(scope: !19433, file: !1129, line: 472, column: 5)
!19441 = !DILocation(line: 473, column: 20, scope: !19440)
!19442 = !DILocation(line: 473, column: 28, scope: !19440)
!19443 = !DILocation(line: 473, column: 16, scope: !19440)
!19444 = !DILocation(line: 473, column: 9, scope: !19440)
!19445 = !DILocation(line: 475, column: 13, scope: !19402)
!19446 = !DILocation(line: 475, column: 5, scope: !19402)
!19447 = !DILocation(line: 478, column: 9, scope: !19448)
!19448 = distinct !DILexicalBlock(scope: !19402, file: !1129, line: 476, column: 5)
!19449 = !DILocation(line: 480, column: 9, scope: !19448)
!19450 = !DILocation(line: 482, column: 9, scope: !19448)
!19451 = !DILocation(line: 484, column: 1, scope: !19402)
!19452 = distinct !DISubprogram(name: "lwm2m_malloc", scope: !1133, file: !1133, line: 26, type: !19453, isLocal: false, isDefinition: true, scopeLine: 27, flags: DIFlagPrototyped, isOptimized: false, unit: !1132, variables: !488)
!19453 = !DISubroutineType(types: !19454)
!19454 = !{!54, !438}
!19455 = !DILocalVariable(name: "s", arg: 1, scope: !19452, file: !1133, line: 26, type: !438)
!19456 = !DILocation(line: 26, column: 28, scope: !19452)
!19457 = !DILocation(line: 28, column: 19, scope: !19452)
!19458 = !DILocation(line: 28, column: 12, scope: !19452)
!19459 = !DILocation(line: 28, column: 5, scope: !19452)
!19460 = distinct !DISubprogram(name: "lwm2m_free", scope: !1133, file: !1133, line: 31, type: !15629, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, unit: !1132, variables: !488)
!19461 = !DILocalVariable(name: "p", arg: 1, scope: !19460, file: !1133, line: 31, type: !54)
!19462 = !DILocation(line: 31, column: 24, scope: !19460)
!19463 = !DILocation(line: 33, column: 17, scope: !19460)
!19464 = !DILocation(line: 33, column: 12, scope: !19460)
!19465 = !DILocation(line: 33, column: 5, scope: !19460)
!19466 = distinct !DISubprogram(name: "lwm2m_strdup", scope: !1133, file: !1133, line: 36, type: !19467, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, unit: !1132, variables: !488)
!19467 = !DISubroutineType(types: !19468)
!19468 = !{!117, !548}
!19469 = !DILocalVariable(name: "str", arg: 1, scope: !19466, file: !1133, line: 36, type: !548)
!19470 = !DILocation(line: 36, column: 34, scope: !19466)
!19471 = !DILocation(line: 38, column: 19, scope: !19466)
!19472 = !DILocation(line: 38, column: 12, scope: !19466)
!19473 = !DILocation(line: 38, column: 5, scope: !19466)
!19474 = distinct !DISubprogram(name: "lwm2m_strncmp", scope: !1133, file: !1133, line: 43, type: !19475, isLocal: false, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !1132, variables: !488)
!19475 = !DISubroutineType(types: !19476)
!19476 = !{!58, !548, !548, !438}
!19477 = !DILocalVariable(name: "s1", arg: 1, scope: !19474, file: !1133, line: 43, type: !548)
!19478 = !DILocation(line: 43, column: 32, scope: !19474)
!19479 = !DILocalVariable(name: "s2", arg: 2, scope: !19474, file: !1133, line: 44, type: !548)
!19480 = !DILocation(line: 44, column: 35, scope: !19474)
!19481 = !DILocalVariable(name: "n", arg: 3, scope: !19474, file: !1133, line: 45, type: !438)
!19482 = !DILocation(line: 45, column: 29, scope: !19474)
!19483 = !DILocation(line: 47, column: 20, scope: !19474)
!19484 = !DILocation(line: 47, column: 24, scope: !19474)
!19485 = !DILocation(line: 47, column: 28, scope: !19474)
!19486 = !DILocation(line: 47, column: 12, scope: !19474)
!19487 = !DILocation(line: 47, column: 5, scope: !19474)
!19488 = distinct !DISubprogram(name: "lwm2m_gettime", scope: !1133, file: !1133, line: 50, type: !19489, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !1132, variables: !488)
!19489 = !DISubroutineType(types: !19490)
!19490 = !{!139}
!19491 = !DILocalVariable(name: "tv", scope: !19488, file: !1133, line: 52, type: !19492)
!19492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1229, line: 30, size: 128, elements: !19493)
!19493 = !{!19494, !19495}
!19494 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !19492, file: !1229, line: 32, baseType: !141, size: 64)
!19495 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !19492, file: !1229, line: 33, baseType: !1233, size: 64, offset: 64)
!19496 = !DILocation(line: 52, column: 20, scope: !19488)
!19497 = !DILocation(line: 54, column: 14, scope: !19498)
!19498 = distinct !DILexicalBlock(scope: !19488, file: !1133, line: 54, column: 9)
!19499 = !DILocation(line: 54, column: 11, scope: !19498)
!19500 = !DILocation(line: 54, column: 9, scope: !19488)
!19501 = !DILocation(line: 56, column: 9, scope: !19502)
!19502 = distinct !DILexicalBlock(scope: !19498, file: !1133, line: 55, column: 5)
!19503 = !DILocation(line: 59, column: 15, scope: !19488)
!19504 = !DILocation(line: 59, column: 5, scope: !19488)
!19505 = !DILocation(line: 60, column: 1, scope: !19488)
!19506 = distinct !DISubprogram(name: "lwm2m_printf", scope: !1133, file: !1133, line: 62, type: !19507, isLocal: false, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: false, unit: !1132, variables: !488)
!19507 = !DISubroutineType(types: !19508)
!19508 = !{null, !548, null}
!19509 = !DILocalVariable(name: "format", arg: 1, scope: !19506, file: !1133, line: 62, type: !548)
!19510 = !DILocation(line: 62, column: 32, scope: !19506)
!19511 = !DILocalVariable(name: "ap", scope: !19506, file: !1133, line: 64, type: !19512)
!19512 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !18413, line: 79, baseType: !19513)
!19513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !19514, line: 48, baseType: !19515)
!19514 = !DIFile(filename: "/home/stly/Documents/binutils-gdb/build/installed/lib/clang/5.0.0/include/stdarg.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!19515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1133, line: 64, baseType: !19516)
!19516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19517, size: 192, elements: !486)
!19517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1133, line: 64, size: 192, elements: !19518)
!19518 = !{!19519, !19520, !19521, !19522}
!19519 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !19517, file: !1133, line: 64, baseType: !87, size: 32)
!19520 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !19517, file: !1133, line: 64, baseType: !87, size: 32, offset: 32)
!19521 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !19517, file: !1133, line: 64, baseType: !54, size: 64, offset: 64)
!19522 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !19517, file: !1133, line: 64, baseType: !54, size: 64, offset: 128)
!19523 = !DILocation(line: 64, column: 13, scope: !19506)
!19524 = !DILocation(line: 66, column: 5, scope: !19506)
!19525 = !DILocation(line: 68, column: 14, scope: !19506)
!19526 = !DILocation(line: 68, column: 22, scope: !19506)
!19527 = !DILocation(line: 68, column: 30, scope: !19506)
!19528 = !DILocation(line: 68, column: 5, scope: !19506)
!19529 = !DILocation(line: 70, column: 5, scope: !19506)
!19530 = !DILocation(line: 71, column: 1, scope: !19506)
!19531 = distinct !DISubprogram(name: "create_socket", scope: !1137, file: !1137, line: 27, type: !19532, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19532 = !DISubroutineType(types: !19533)
!19533 = !{!58, !548, !58}
!19534 = !DILocalVariable(name: "portStr", arg: 1, scope: !19531, file: !1137, line: 27, type: !548)
!19535 = !DILocation(line: 27, column: 32, scope: !19531)
!19536 = !DILocalVariable(name: "addressFamily", arg: 2, scope: !19531, file: !1137, line: 27, type: !58)
!19537 = !DILocation(line: 27, column: 45, scope: !19531)
!19538 = !DILocalVariable(name: "s", scope: !19531, file: !1137, line: 29, type: !58)
!19539 = !DILocation(line: 29, column: 9, scope: !19531)
!19540 = !DILocalVariable(name: "hints", scope: !19531, file: !1137, line: 30, type: !19541)
!19541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !19542, line: 567, size: 384, elements: !19543)
!19542 = !DIFile(filename: "/usr/include/netdb.h", directory: "/home/stly/Documents/ProtocolEx/stubs/wakaama-LWM2M/server-build")
!19543 = !{!19544, !19545, !19546, !19547, !19548, !19549, !19550, !19551}
!19544 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !19541, file: !19542, line: 569, baseType: !58, size: 32)
!19545 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !19541, file: !19542, line: 570, baseType: !58, size: 32, offset: 32)
!19546 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !19541, file: !19542, line: 571, baseType: !58, size: 32, offset: 64)
!19547 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !19541, file: !19542, line: 572, baseType: !58, size: 32, offset: 96)
!19548 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !19541, file: !19542, line: 573, baseType: !1446, size: 32, offset: 128)
!19549 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !19541, file: !19542, line: 574, baseType: !1177, size: 64, offset: 192)
!19550 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !19541, file: !19542, line: 575, baseType: !117, size: 64, offset: 256)
!19551 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !19541, file: !19542, line: 576, baseType: !19552, size: 64, offset: 320)
!19552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19541, size: 64)
!19553 = !DILocation(line: 30, column: 21, scope: !19531)
!19554 = !DILocalVariable(name: "res", scope: !19531, file: !1137, line: 31, type: !19552)
!19555 = !DILocation(line: 31, column: 22, scope: !19531)
!19556 = !DILocalVariable(name: "p", scope: !19531, file: !1137, line: 32, type: !19552)
!19557 = !DILocation(line: 32, column: 22, scope: !19531)
!19558 = !DILocation(line: 34, column: 5, scope: !19531)
!19559 = !DILocation(line: 35, column: 23, scope: !19531)
!19560 = !DILocation(line: 35, column: 11, scope: !19531)
!19561 = !DILocation(line: 35, column: 21, scope: !19531)
!19562 = !DILocation(line: 36, column: 11, scope: !19531)
!19563 = !DILocation(line: 36, column: 23, scope: !19531)
!19564 = !DILocation(line: 37, column: 11, scope: !19531)
!19565 = !DILocation(line: 37, column: 20, scope: !19531)
!19566 = !DILocation(line: 39, column: 32, scope: !19567)
!19567 = distinct !DILexicalBlock(scope: !19531, file: !1137, line: 39, column: 9)
!19568 = !DILocation(line: 39, column: 14, scope: !19567)
!19569 = !DILocation(line: 39, column: 11, scope: !19567)
!19570 = !DILocation(line: 39, column: 9, scope: !19531)
!19571 = !DILocation(line: 41, column: 9, scope: !19572)
!19572 = distinct !DILexicalBlock(scope: !19567, file: !1137, line: 40, column: 5)
!19573 = !DILocation(line: 44, column: 13, scope: !19574)
!19574 = distinct !DILexicalBlock(scope: !19531, file: !1137, line: 44, column: 5)
!19575 = !DILocation(line: 44, column: 11, scope: !19574)
!19576 = !DILocation(line: 44, column: 9, scope: !19574)
!19577 = !DILocation(line: 44, column: 19, scope: !19578)
!19578 = distinct !DILexicalBlock(scope: !19574, file: !1137, line: 44, column: 5)
!19579 = !DILocation(line: 44, column: 21, scope: !19578)
!19580 = !DILocation(line: 44, column: 29, scope: !19578)
!19581 = !DILocation(line: 44, column: 32, scope: !19578)
!19582 = !DILocation(line: 44, column: 34, scope: !19578)
!19583 = !DILocation(line: 44, column: 5, scope: !19574)
!19584 = !DILocation(line: 46, column: 20, scope: !19585)
!19585 = distinct !DILexicalBlock(scope: !19578, file: !1137, line: 45, column: 5)
!19586 = !DILocation(line: 46, column: 23, scope: !19585)
!19587 = !DILocation(line: 46, column: 34, scope: !19585)
!19588 = !DILocation(line: 46, column: 37, scope: !19585)
!19589 = !DILocation(line: 46, column: 50, scope: !19585)
!19590 = !DILocation(line: 46, column: 53, scope: !19585)
!19591 = !DILocation(line: 46, column: 13, scope: !19585)
!19592 = !DILocation(line: 46, column: 11, scope: !19585)
!19593 = !DILocation(line: 47, column: 13, scope: !19594)
!19594 = distinct !DILexicalBlock(scope: !19585, file: !1137, line: 47, column: 13)
!19595 = !DILocation(line: 47, column: 15, scope: !19594)
!19596 = !DILocation(line: 47, column: 13, scope: !19585)
!19597 = !DILocation(line: 49, column: 28, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19599, file: !1137, line: 49, column: 17)
!19599 = distinct !DILexicalBlock(scope: !19594, file: !1137, line: 48, column: 9)
!19600 = !DILocation(line: 49, column: 31, scope: !19598)
!19601 = !DILocation(line: 49, column: 34, scope: !19598)
!19602 = !DILocation(line: 49, column: 43, scope: !19598)
!19603 = !DILocation(line: 49, column: 46, scope: !19598)
!19604 = !DILocation(line: 49, column: 23, scope: !19598)
!19605 = !DILocation(line: 49, column: 20, scope: !19598)
!19606 = !DILocation(line: 49, column: 17, scope: !19599)
!19607 = !DILocation(line: 51, column: 23, scope: !19608)
!19608 = distinct !DILexicalBlock(scope: !19598, file: !1137, line: 50, column: 13)
!19609 = !DILocation(line: 51, column: 17, scope: !19608)
!19610 = !DILocation(line: 52, column: 19, scope: !19608)
!19611 = !DILocation(line: 53, column: 13, scope: !19608)
!19612 = !DILocation(line: 54, column: 9, scope: !19599)
!19613 = !DILocation(line: 55, column: 5, scope: !19585)
!19614 = !DILocation(line: 44, column: 46, scope: !19578)
!19615 = !DILocation(line: 44, column: 49, scope: !19578)
!19616 = !DILocation(line: 44, column: 44, scope: !19578)
!19617 = !DILocation(line: 44, column: 5, scope: !19578)
!19618 = distinct !{!19618, !19583, !19619}
!19619 = !DILocation(line: 55, column: 5, scope: !19574)
!19620 = !DILocation(line: 57, column: 18, scope: !19531)
!19621 = !DILocation(line: 57, column: 5, scope: !19531)
!19622 = !DILocation(line: 59, column: 12, scope: !19531)
!19623 = !DILocation(line: 59, column: 5, scope: !19531)
!19624 = !DILocation(line: 60, column: 1, scope: !19531)
!19625 = distinct !DISubprogram(name: "connection_find", scope: !1137, file: !1137, line: 62, type: !19626, isLocal: false, isDefinition: true, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19626 = !DISubroutineType(types: !19627)
!19627 = !{!1152, !1152, !19628, !438}
!19628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19629, size: 64)
!19629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !61, line: 166, size: 1024, elements: !19630)
!19630 = !{!19631, !19632, !19633}
!19631 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !19629, file: !61, line: 168, baseType: !64, size: 16)
!19632 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !19629, file: !61, line: 169, baseType: !1440, size: 944, offset: 16)
!19633 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !19629, file: !61, line: 170, baseType: !440, size: 64, offset: 960)
!19634 = !DILocalVariable(name: "connList", arg: 1, scope: !19625, file: !1137, line: 62, type: !1152)
!19635 = !DILocation(line: 62, column: 47, scope: !19625)
!19636 = !DILocalVariable(name: "addr", arg: 2, scope: !19625, file: !1137, line: 63, type: !19628)
!19637 = !DILocation(line: 63, column: 58, scope: !19625)
!19638 = !DILocalVariable(name: "addrLen", arg: 3, scope: !19625, file: !1137, line: 64, type: !438)
!19639 = !DILocation(line: 64, column: 39, scope: !19625)
!19640 = !DILocalVariable(name: "connP", scope: !19625, file: !1137, line: 66, type: !1152)
!19641 = !DILocation(line: 66, column: 20, scope: !19625)
!19642 = !DILocation(line: 68, column: 13, scope: !19625)
!19643 = !DILocation(line: 68, column: 11, scope: !19625)
!19644 = !DILocation(line: 69, column: 5, scope: !19625)
!19645 = !DILocation(line: 69, column: 12, scope: !19625)
!19646 = !DILocation(line: 69, column: 18, scope: !19625)
!19647 = !DILocation(line: 71, column: 14, scope: !19648)
!19648 = distinct !DILexicalBlock(scope: !19649, file: !1137, line: 71, column: 13)
!19649 = distinct !DILexicalBlock(scope: !19625, file: !1137, line: 70, column: 5)
!19650 = !DILocation(line: 71, column: 21, scope: !19648)
!19651 = !DILocation(line: 71, column: 32, scope: !19648)
!19652 = !DILocation(line: 71, column: 29, scope: !19648)
!19653 = !DILocation(line: 72, column: 10, scope: !19648)
!19654 = !DILocation(line: 72, column: 23, scope: !19648)
!19655 = !DILocation(line: 72, column: 30, scope: !19648)
!19656 = !DILocation(line: 72, column: 21, scope: !19648)
!19657 = !DILocation(line: 72, column: 37, scope: !19648)
!19658 = !DILocation(line: 72, column: 43, scope: !19648)
!19659 = !DILocation(line: 72, column: 14, scope: !19648)
!19660 = !DILocation(line: 72, column: 52, scope: !19648)
!19661 = !DILocation(line: 71, column: 13, scope: !19649)
!19662 = !DILocation(line: 74, column: 20, scope: !19663)
!19663 = distinct !DILexicalBlock(scope: !19648, file: !1137, line: 73, column: 9)
!19664 = !DILocation(line: 74, column: 13, scope: !19663)
!19665 = !DILocation(line: 76, column: 17, scope: !19649)
!19666 = !DILocation(line: 76, column: 24, scope: !19649)
!19667 = !DILocation(line: 76, column: 15, scope: !19649)
!19668 = distinct !{!19668, !19644, !19669}
!19669 = !DILocation(line: 77, column: 5, scope: !19625)
!19670 = !DILocation(line: 79, column: 12, scope: !19625)
!19671 = !DILocation(line: 79, column: 5, scope: !19625)
!19672 = !DILocation(line: 80, column: 1, scope: !19625)
!19673 = distinct !DISubprogram(name: "connection_new_incoming", scope: !1137, file: !1137, line: 82, type: !19674, isLocal: false, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19674 = !DISubroutineType(types: !19675)
!19675 = !{!1152, !1152, !58, !1177, !438}
!19676 = !DILocalVariable(name: "connList", arg: 1, scope: !19673, file: !1137, line: 82, type: !1152)
!19677 = !DILocation(line: 82, column: 55, scope: !19673)
!19678 = !DILocalVariable(name: "sock", arg: 2, scope: !19673, file: !1137, line: 83, type: !58)
!19679 = !DILocation(line: 83, column: 44, scope: !19673)
!19680 = !DILocalVariable(name: "addr", arg: 3, scope: !19673, file: !1137, line: 84, type: !1177)
!19681 = !DILocation(line: 84, column: 58, scope: !19673)
!19682 = !DILocalVariable(name: "addrLen", arg: 4, scope: !19673, file: !1137, line: 85, type: !438)
!19683 = !DILocation(line: 85, column: 47, scope: !19673)
!19684 = !DILocalVariable(name: "connP", scope: !19673, file: !1137, line: 87, type: !1152)
!19685 = !DILocation(line: 87, column: 20, scope: !19673)
!19686 = !DILocation(line: 89, column: 29, scope: !19673)
!19687 = !DILocation(line: 89, column: 13, scope: !19673)
!19688 = !DILocation(line: 89, column: 11, scope: !19673)
!19689 = !DILocation(line: 90, column: 9, scope: !19690)
!19690 = distinct !DILexicalBlock(scope: !19673, file: !1137, line: 90, column: 9)
!19691 = !DILocation(line: 90, column: 15, scope: !19690)
!19692 = !DILocation(line: 90, column: 9, scope: !19673)
!19693 = !DILocation(line: 92, column: 23, scope: !19694)
!19694 = distinct !DILexicalBlock(scope: !19690, file: !1137, line: 91, column: 5)
!19695 = !DILocation(line: 92, column: 9, scope: !19694)
!19696 = !DILocation(line: 92, column: 16, scope: !19694)
!19697 = !DILocation(line: 92, column: 21, scope: !19694)
!19698 = !DILocation(line: 93, column: 18, scope: !19694)
!19699 = !DILocation(line: 93, column: 25, scope: !19694)
!19700 = !DILocation(line: 93, column: 9, scope: !19694)
!19701 = !DILocation(line: 93, column: 32, scope: !19694)
!19702 = !DILocation(line: 93, column: 38, scope: !19694)
!19703 = !DILocation(line: 94, column: 26, scope: !19694)
!19704 = !DILocation(line: 94, column: 9, scope: !19694)
!19705 = !DILocation(line: 94, column: 16, scope: !19694)
!19706 = !DILocation(line: 94, column: 24, scope: !19694)
!19707 = !DILocation(line: 95, column: 23, scope: !19694)
!19708 = !DILocation(line: 95, column: 9, scope: !19694)
!19709 = !DILocation(line: 95, column: 16, scope: !19694)
!19710 = !DILocation(line: 95, column: 21, scope: !19694)
!19711 = !DILocation(line: 96, column: 5, scope: !19694)
!19712 = !DILocation(line: 98, column: 12, scope: !19673)
!19713 = !DILocation(line: 98, column: 5, scope: !19673)
!19714 = distinct !DISubprogram(name: "connection_create", scope: !1137, file: !1137, line: 101, type: !19715, isLocal: false, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19715 = !DISubroutineType(types: !19716)
!19716 = !{!1152, !1152, !58, !117, !117, !58}
!19717 = !DILocalVariable(name: "connList", arg: 1, scope: !19714, file: !1137, line: 101, type: !1152)
!19718 = !DILocation(line: 101, column: 49, scope: !19714)
!19719 = !DILocalVariable(name: "sock", arg: 2, scope: !19714, file: !1137, line: 102, type: !58)
!19720 = !DILocation(line: 102, column: 38, scope: !19714)
!19721 = !DILocalVariable(name: "host", arg: 3, scope: !19714, file: !1137, line: 103, type: !117)
!19722 = !DILocation(line: 103, column: 41, scope: !19714)
!19723 = !DILocalVariable(name: "port", arg: 4, scope: !19714, file: !1137, line: 104, type: !117)
!19724 = !DILocation(line: 104, column: 41, scope: !19714)
!19725 = !DILocalVariable(name: "addressFamily", arg: 5, scope: !19714, file: !1137, line: 105, type: !58)
!19726 = !DILocation(line: 105, column: 38, scope: !19714)
!19727 = !DILocalVariable(name: "hints", scope: !19714, file: !1137, line: 107, type: !19541)
!19728 = !DILocation(line: 107, column: 21, scope: !19714)
!19729 = !DILocalVariable(name: "servinfo", scope: !19714, file: !1137, line: 108, type: !19552)
!19730 = !DILocation(line: 108, column: 22, scope: !19714)
!19731 = !DILocalVariable(name: "p", scope: !19714, file: !1137, line: 109, type: !19552)
!19732 = !DILocation(line: 109, column: 22, scope: !19714)
!19733 = !DILocalVariable(name: "s", scope: !19714, file: !1137, line: 110, type: !58)
!19734 = !DILocation(line: 110, column: 9, scope: !19714)
!19735 = !DILocalVariable(name: "sa", scope: !19714, file: !1137, line: 111, type: !1177)
!19736 = !DILocation(line: 111, column: 22, scope: !19714)
!19737 = !DILocalVariable(name: "sl", scope: !19714, file: !1137, line: 112, type: !1446)
!19738 = !DILocation(line: 112, column: 15, scope: !19714)
!19739 = !DILocalVariable(name: "connP", scope: !19714, file: !1137, line: 113, type: !1152)
!19740 = !DILocation(line: 113, column: 20, scope: !19714)
!19741 = !DILocation(line: 115, column: 5, scope: !19714)
!19742 = !DILocation(line: 116, column: 23, scope: !19714)
!19743 = !DILocation(line: 116, column: 11, scope: !19714)
!19744 = !DILocation(line: 116, column: 21, scope: !19714)
!19745 = !DILocation(line: 117, column: 11, scope: !19714)
!19746 = !DILocation(line: 117, column: 23, scope: !19714)
!19747 = !DILocation(line: 119, column: 26, scope: !19748)
!19748 = distinct !DILexicalBlock(scope: !19714, file: !1137, line: 119, column: 9)
!19749 = !DILocation(line: 119, column: 32, scope: !19748)
!19750 = !DILocation(line: 119, column: 14, scope: !19748)
!19751 = !DILocation(line: 119, column: 11, scope: !19748)
!19752 = !DILocation(line: 119, column: 57, scope: !19748)
!19753 = !DILocation(line: 119, column: 60, scope: !19748)
!19754 = !DILocation(line: 119, column: 69, scope: !19748)
!19755 = !DILocation(line: 119, column: 9, scope: !19714)
!19756 = !DILocation(line: 119, column: 78, scope: !19748)
!19757 = !DILocation(line: 122, column: 7, scope: !19714)
!19758 = !DILocation(line: 123, column: 13, scope: !19759)
!19759 = distinct !DILexicalBlock(scope: !19714, file: !1137, line: 123, column: 5)
!19760 = !DILocation(line: 123, column: 11, scope: !19759)
!19761 = !DILocation(line: 123, column: 9, scope: !19759)
!19762 = !DILocation(line: 123, column: 24, scope: !19763)
!19763 = distinct !DILexicalBlock(scope: !19759, file: !1137, line: 123, column: 5)
!19764 = !DILocation(line: 123, column: 26, scope: !19763)
!19765 = !DILocation(line: 123, column: 34, scope: !19763)
!19766 = !DILocation(line: 123, column: 37, scope: !19763)
!19767 = !DILocation(line: 123, column: 39, scope: !19763)
!19768 = !DILocation(line: 123, column: 5, scope: !19759)
!19769 = !DILocation(line: 125, column: 20, scope: !19770)
!19770 = distinct !DILexicalBlock(scope: !19763, file: !1137, line: 124, column: 5)
!19771 = !DILocation(line: 125, column: 23, scope: !19770)
!19772 = !DILocation(line: 125, column: 34, scope: !19770)
!19773 = !DILocation(line: 125, column: 37, scope: !19770)
!19774 = !DILocation(line: 125, column: 50, scope: !19770)
!19775 = !DILocation(line: 125, column: 53, scope: !19770)
!19776 = !DILocation(line: 125, column: 13, scope: !19770)
!19777 = !DILocation(line: 125, column: 11, scope: !19770)
!19778 = !DILocation(line: 126, column: 13, scope: !19779)
!19779 = distinct !DILexicalBlock(scope: !19770, file: !1137, line: 126, column: 13)
!19780 = !DILocation(line: 126, column: 15, scope: !19779)
!19781 = !DILocation(line: 126, column: 13, scope: !19770)
!19782 = !DILocation(line: 128, column: 18, scope: !19783)
!19783 = distinct !DILexicalBlock(scope: !19779, file: !1137, line: 127, column: 9)
!19784 = !DILocation(line: 128, column: 21, scope: !19783)
!19785 = !DILocation(line: 128, column: 16, scope: !19783)
!19786 = !DILocation(line: 129, column: 18, scope: !19783)
!19787 = !DILocation(line: 129, column: 21, scope: !19783)
!19788 = !DILocation(line: 129, column: 16, scope: !19783)
!19789 = !DILocation(line: 130, column: 31, scope: !19790)
!19790 = distinct !DILexicalBlock(scope: !19783, file: !1137, line: 130, column: 17)
!19791 = !DILocation(line: 130, column: 34, scope: !19790)
!19792 = !DILocation(line: 130, column: 37, scope: !19790)
!19793 = !DILocation(line: 130, column: 46, scope: !19790)
!19794 = !DILocation(line: 130, column: 49, scope: !19790)
!19795 = !DILocation(line: 130, column: 23, scope: !19790)
!19796 = !DILocation(line: 130, column: 20, scope: !19790)
!19797 = !DILocation(line: 130, column: 17, scope: !19783)
!19798 = !DILocation(line: 132, column: 23, scope: !19799)
!19799 = distinct !DILexicalBlock(scope: !19790, file: !1137, line: 131, column: 13)
!19800 = !DILocation(line: 132, column: 17, scope: !19799)
!19801 = !DILocation(line: 133, column: 19, scope: !19799)
!19802 = !DILocation(line: 134, column: 13, scope: !19799)
!19803 = !DILocation(line: 135, column: 9, scope: !19783)
!19804 = !DILocation(line: 136, column: 5, scope: !19770)
!19805 = !DILocation(line: 123, column: 51, scope: !19763)
!19806 = !DILocation(line: 123, column: 54, scope: !19763)
!19807 = !DILocation(line: 123, column: 49, scope: !19763)
!19808 = !DILocation(line: 123, column: 5, scope: !19763)
!19809 = distinct !{!19809, !19768, !19810}
!19810 = !DILocation(line: 136, column: 5, scope: !19759)
!19811 = !DILocation(line: 137, column: 9, scope: !19812)
!19812 = distinct !DILexicalBlock(scope: !19714, file: !1137, line: 137, column: 9)
!19813 = !DILocation(line: 137, column: 11, scope: !19812)
!19814 = !DILocation(line: 137, column: 9, scope: !19714)
!19815 = !DILocation(line: 139, column: 41, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19812, file: !1137, line: 138, column: 5)
!19817 = !DILocation(line: 139, column: 51, scope: !19816)
!19818 = !DILocation(line: 139, column: 57, scope: !19816)
!19819 = !DILocation(line: 139, column: 61, scope: !19816)
!19820 = !DILocation(line: 139, column: 17, scope: !19816)
!19821 = !DILocation(line: 139, column: 15, scope: !19816)
!19822 = !DILocation(line: 140, column: 15, scope: !19816)
!19823 = !DILocation(line: 140, column: 9, scope: !19816)
!19824 = !DILocation(line: 141, column: 5, scope: !19816)
!19825 = !DILocation(line: 142, column: 17, scope: !19826)
!19826 = distinct !DILexicalBlock(scope: !19714, file: !1137, line: 142, column: 9)
!19827 = !DILocation(line: 142, column: 14, scope: !19826)
!19828 = !DILocation(line: 142, column: 9, scope: !19714)
!19829 = !DILocation(line: 143, column: 14, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19826, file: !1137, line: 142, column: 27)
!19831 = !DILocation(line: 143, column: 9, scope: !19830)
!19832 = !DILocation(line: 144, column: 5, scope: !19830)
!19833 = !DILocation(line: 146, column: 12, scope: !19714)
!19834 = !DILocation(line: 146, column: 5, scope: !19714)
!19835 = !DILocation(line: 147, column: 1, scope: !19714)
!19836 = distinct !DISubprogram(name: "connection_free", scope: !1137, file: !1137, line: 149, type: !19837, isLocal: false, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19837 = !DISubroutineType(types: !19838)
!19838 = !{null, !1152}
!19839 = !DILocalVariable(name: "connList", arg: 1, scope: !19836, file: !1137, line: 149, type: !1152)
!19840 = !DILocation(line: 149, column: 37, scope: !19836)
!19841 = !DILocation(line: 151, column: 5, scope: !19836)
!19842 = !DILocation(line: 151, column: 12, scope: !19836)
!19843 = !DILocation(line: 151, column: 21, scope: !19836)
!19844 = !DILocalVariable(name: "nextP", scope: !19845, file: !1137, line: 153, type: !1152)
!19845 = distinct !DILexicalBlock(scope: !19836, file: !1137, line: 152, column: 5)
!19846 = !DILocation(line: 153, column: 24, scope: !19845)
!19847 = !DILocation(line: 155, column: 17, scope: !19845)
!19848 = !DILocation(line: 155, column: 27, scope: !19845)
!19849 = !DILocation(line: 155, column: 15, scope: !19845)
!19850 = !DILocation(line: 156, column: 14, scope: !19845)
!19851 = !DILocation(line: 156, column: 9, scope: !19845)
!19852 = !DILocation(line: 158, column: 20, scope: !19845)
!19853 = !DILocation(line: 158, column: 18, scope: !19845)
!19854 = distinct !{!19854, !19841, !19855}
!19855 = !DILocation(line: 159, column: 5, scope: !19836)
!19856 = !DILocation(line: 160, column: 1, scope: !19836)
!19857 = distinct !DISubprogram(name: "connection_send", scope: !1137, file: !1137, line: 162, type: !19858, isLocal: false, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19858 = !DISubroutineType(types: !19859)
!19859 = !{!58, !1152, !186, !438}
!19860 = !DILocalVariable(name: "connP", arg: 1, scope: !19857, file: !1137, line: 162, type: !1152)
!19861 = !DILocation(line: 162, column: 35, scope: !19857)
!19862 = !DILocalVariable(name: "buffer", arg: 2, scope: !19857, file: !1137, line: 163, type: !186)
!19863 = !DILocation(line: 163, column: 31, scope: !19857)
!19864 = !DILocalVariable(name: "length", arg: 3, scope: !19857, file: !1137, line: 164, type: !438)
!19865 = !DILocation(line: 164, column: 28, scope: !19857)
!19866 = !DILocalVariable(name: "nbSent", scope: !19857, file: !1137, line: 166, type: !58)
!19867 = !DILocation(line: 166, column: 9, scope: !19857)
!19868 = !DILocalVariable(name: "offset", scope: !19857, file: !1137, line: 167, type: !438)
!19869 = !DILocation(line: 167, column: 12, scope: !19857)
!19870 = !DILocation(line: 193, column: 12, scope: !19857)
!19871 = !DILocation(line: 194, column: 5, scope: !19857)
!19872 = !DILocation(line: 194, column: 12, scope: !19857)
!19873 = !DILocation(line: 194, column: 22, scope: !19857)
!19874 = !DILocation(line: 194, column: 19, scope: !19857)
!19875 = !DILocation(line: 196, column: 25, scope: !19876)
!19876 = distinct !DILexicalBlock(scope: !19857, file: !1137, line: 195, column: 5)
!19877 = !DILocation(line: 196, column: 32, scope: !19876)
!19878 = !DILocation(line: 196, column: 38, scope: !19876)
!19879 = !DILocation(line: 196, column: 47, scope: !19876)
!19880 = !DILocation(line: 196, column: 45, scope: !19876)
!19881 = !DILocation(line: 196, column: 55, scope: !19876)
!19882 = !DILocation(line: 196, column: 64, scope: !19876)
!19883 = !DILocation(line: 196, column: 62, scope: !19876)
!19884 = !DILocation(line: 196, column: 96, scope: !19876)
!19885 = !DILocation(line: 196, column: 103, scope: !19876)
!19886 = !DILocation(line: 196, column: 75, scope: !19876)
!19887 = !DILocation(line: 196, column: 110, scope: !19876)
!19888 = !DILocation(line: 196, column: 117, scope: !19876)
!19889 = !DILocation(line: 196, column: 18, scope: !19876)
!19890 = !DILocation(line: 196, column: 16, scope: !19876)
!19891 = !DILocation(line: 197, column: 13, scope: !19892)
!19892 = distinct !DILexicalBlock(scope: !19876, file: !1137, line: 197, column: 13)
!19893 = !DILocation(line: 197, column: 20, scope: !19892)
!19894 = !DILocation(line: 197, column: 13, scope: !19876)
!19895 = !DILocation(line: 197, column: 27, scope: !19892)
!19896 = !DILocation(line: 198, column: 19, scope: !19876)
!19897 = !DILocation(line: 198, column: 16, scope: !19876)
!19898 = distinct !{!19898, !19871, !19899}
!19899 = !DILocation(line: 199, column: 5, scope: !19857)
!19900 = !DILocation(line: 200, column: 5, scope: !19857)
!19901 = !DILocation(line: 201, column: 1, scope: !19857)
!19902 = distinct !DISubprogram(name: "lwm2m_buffer_send", scope: !1137, file: !1137, line: 203, type: !19903, isLocal: false, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19903 = !DISubroutineType(types: !19904)
!19904 = !{!107, !54, !186, !438, !54}
!19905 = !DILocalVariable(name: "sessionH", arg: 1, scope: !19902, file: !1137, line: 203, type: !54)
!19906 = !DILocation(line: 203, column: 34, scope: !19902)
!19907 = !DILocalVariable(name: "buffer", arg: 2, scope: !19902, file: !1137, line: 204, type: !186)
!19908 = !DILocation(line: 204, column: 37, scope: !19902)
!19909 = !DILocalVariable(name: "length", arg: 3, scope: !19902, file: !1137, line: 205, type: !438)
!19910 = !DILocation(line: 205, column: 34, scope: !19902)
!19911 = !DILocalVariable(name: "userdata", arg: 4, scope: !19902, file: !1137, line: 206, type: !54)
!19912 = !DILocation(line: 206, column: 34, scope: !19902)
!19913 = !DILocalVariable(name: "connP", scope: !19902, file: !1137, line: 208, type: !1152)
!19914 = !DILocation(line: 208, column: 20, scope: !19902)
!19915 = !DILocation(line: 208, column: 44, scope: !19902)
!19916 = !DILocation(line: 208, column: 28, scope: !19902)
!19917 = !DILocation(line: 210, column: 9, scope: !19918)
!19918 = distinct !DILexicalBlock(scope: !19902, file: !1137, line: 210, column: 9)
!19919 = !DILocation(line: 210, column: 15, scope: !19918)
!19920 = !DILocation(line: 210, column: 9, scope: !19902)
!19921 = !DILocation(line: 212, column: 17, scope: !19922)
!19922 = distinct !DILexicalBlock(scope: !19918, file: !1137, line: 211, column: 5)
!19923 = !DILocation(line: 212, column: 80, scope: !19922)
!19924 = !DILocation(line: 212, column: 9, scope: !19922)
!19925 = !DILocation(line: 213, column: 9, scope: !19922)
!19926 = !DILocation(line: 216, column: 31, scope: !19927)
!19927 = distinct !DILexicalBlock(scope: !19902, file: !1137, line: 216, column: 9)
!19928 = !DILocation(line: 216, column: 38, scope: !19927)
!19929 = !DILocation(line: 216, column: 46, scope: !19927)
!19930 = !DILocation(line: 216, column: 15, scope: !19927)
!19931 = !DILocation(line: 216, column: 12, scope: !19927)
!19932 = !DILocation(line: 216, column: 9, scope: !19902)
!19933 = !DILocation(line: 218, column: 17, scope: !19934)
!19934 = distinct !DILexicalBlock(scope: !19927, file: !1137, line: 217, column: 5)
!19935 = !DILocation(line: 218, column: 60, scope: !19934)
!19936 = !DILocation(line: 218, column: 9, scope: !19934)
!19937 = !DILocation(line: 219, column: 9, scope: !19934)
!19938 = !DILocation(line: 222, column: 5, scope: !19902)
!19939 = !DILocation(line: 223, column: 1, scope: !19902)
!19940 = distinct !DISubprogram(name: "lwm2m_session_is_equal", scope: !1137, file: !1137, line: 225, type: !19941, isLocal: false, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !1136, variables: !488)
!19941 = !DISubroutineType(types: !19942)
!19942 = !{!136, !54, !54, !54}
!19943 = !DILocalVariable(name: "session1", arg: 1, scope: !19940, file: !1137, line: 225, type: !54)
!19944 = !DILocation(line: 225, column: 36, scope: !19940)
!19945 = !DILocalVariable(name: "session2", arg: 2, scope: !19940, file: !1137, line: 226, type: !54)
!19946 = !DILocation(line: 226, column: 36, scope: !19940)
!19947 = !DILocalVariable(name: "userData", arg: 3, scope: !19940, file: !1137, line: 227, type: !54)
!19948 = !DILocation(line: 227, column: 36, scope: !19940)
!19949 = !DILocation(line: 229, column: 13, scope: !19940)
!19950 = !DILocation(line: 229, column: 25, scope: !19940)
!19951 = !DILocation(line: 229, column: 22, scope: !19940)
!19952 = !DILocation(line: 229, column: 5, scope: !19940)
